

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar  2 13:45:04 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F913
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	dabs	1,0x7E,2
    56     0000                     
    57                           ; Version 2.40
    58                           ; Generated 17/11/2021 GMT
    59                           ; 
    60                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F913 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92     0000                     	;# 
    93     0001                     	;# 
    94     0002                     	;# 
    95     0003                     	;# 
    96     0004                     	;# 
    97     0005                     	;# 
    98     0006                     	;# 
    99     0007                     	;# 
   100     0009                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000D                     	;# 
   105     000E                     	;# 
   106     000E                     	;# 
   107     000F                     	;# 
   108     0010                     	;# 
   109     0011                     	;# 
   110     0012                     	;# 
   111     0013                     	;# 
   112     0014                     	;# 
   113     0015                     	;# 
   114     0015                     	;# 
   115     0016                     	;# 
   116     0017                     	;# 
   117     0018                     	;# 
   118     0019                     	;# 
   119     001A                     	;# 
   120     001E                     	;# 
   121     001F                     	;# 
   122     0081                     	;# 
   123     0085                     	;# 
   124     0086                     	;# 
   125     0087                     	;# 
   126     0089                     	;# 
   127     008C                     	;# 
   128     008D                     	;# 
   129     008E                     	;# 
   130     008F                     	;# 
   131     0090                     	;# 
   132     0091                     	;# 
   133     0092                     	;# 
   134     0093                     	;# 
   135     0094                     	;# 
   136     0095                     	;# 
   137     0095                     	;# 
   138     0096                     	;# 
   139     0096                     	;# 
   140     0097                     	;# 
   141     0098                     	;# 
   142     0099                     	;# 
   143     009C                     	;# 
   144     009D                     	;# 
   145     009E                     	;# 
   146     009F                     	;# 
   147     0105                     	;# 
   148     0107                     	;# 
   149     0108                     	;# 
   150     0109                     	;# 
   151     010C                     	;# 
   152     010C                     	;# 
   153     010D                     	;# 
   154     010D                     	;# 
   155     010E                     	;# 
   156     010F                     	;# 
   157     0110                     	;# 
   158     0111                     	;# 
   159     0113                     	;# 
   160     0114                     	;# 
   161     0116                     	;# 
   162     0117                     	;# 
   163     0119                     	;# 
   164     011A                     	;# 
   165     011C                     	;# 
   166     011D                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0000                     	;# 
   170     0001                     	;# 
   171     0002                     	;# 
   172     0003                     	;# 
   173     0004                     	;# 
   174     0005                     	;# 
   175     0006                     	;# 
   176     0007                     	;# 
   177     0009                     	;# 
   178     000A                     	;# 
   179     000B                     	;# 
   180     000C                     	;# 
   181     000D                     	;# 
   182     000E                     	;# 
   183     000E                     	;# 
   184     000F                     	;# 
   185     0010                     	;# 
   186     0011                     	;# 
   187     0012                     	;# 
   188     0013                     	;# 
   189     0014                     	;# 
   190     0015                     	;# 
   191     0015                     	;# 
   192     0016                     	;# 
   193     0017                     	;# 
   194     0018                     	;# 
   195     0019                     	;# 
   196     001A                     	;# 
   197     001E                     	;# 
   198     001F                     	;# 
   199     0081                     	;# 
   200     0085                     	;# 
   201     0086                     	;# 
   202     0087                     	;# 
   203     0089                     	;# 
   204     008C                     	;# 
   205     008D                     	;# 
   206     008E                     	;# 
   207     008F                     	;# 
   208     0090                     	;# 
   209     0091                     	;# 
   210     0092                     	;# 
   211     0093                     	;# 
   212     0094                     	;# 
   213     0095                     	;# 
   214     0095                     	;# 
   215     0096                     	;# 
   216     0096                     	;# 
   217     0097                     	;# 
   218     0098                     	;# 
   219     0099                     	;# 
   220     009C                     	;# 
   221     009D                     	;# 
   222     009E                     	;# 
   223     009F                     	;# 
   224     0105                     	;# 
   225     0107                     	;# 
   226     0108                     	;# 
   227     0109                     	;# 
   228     010C                     	;# 
   229     010C                     	;# 
   230     010D                     	;# 
   231     010D                     	;# 
   232     010E                     	;# 
   233     010F                     	;# 
   234     0110                     	;# 
   235     0111                     	;# 
   236     0113                     	;# 
   237     0114                     	;# 
   238     0116                     	;# 
   239     0117                     	;# 
   240     0119                     	;# 
   241     011A                     	;# 
   242     011C                     	;# 
   243     011D                     	;# 
   244     018C                     	;# 
   245     018D                     	;# 
   246                           
   247                           	psect	idataBANK0
   248     097D                     __pidataBANK0:
   249                           
   250                           ;initializer for _ball_y_direction
   251     097D  34FF               	retlw	255
   252     097E  34FF               	retlw	255
   253                           
   254                           ;initializer for _ball_x_direction
   255     097F  3401               	retlw	1
   256     0980  3400               	retlw	0
   257                           
   258                           ;initializer for _paddle_top_left_position
   259     0981  3432               	retlw	50
   260                           
   261                           ;initializer for _ball_y_position
   262     0982  3437               	retlw	55
   263                           
   264                           ;initializer for _ball_x_position
   265     0983  343C               	retlw	60
   266                           
   267                           	psect	idataBANK1
   268     09ED                     __pidataBANK1:
   269                           
   270                           ;initializer for _dy
   271     09ED  349A               	retlw	154
   272     09EE  3499               	retlw	153
   273     09EF  3459               	retlw	89
   274     09F0  343F               	retlw	63
   275                           
   276                           ;initializer for _dx
   277     09F1  34CD               	retlw	205
   278     09F2  34CC               	retlw	204
   279     09F3  348C               	retlw	140
   280     09F4  343F               	retlw	63
   281                           
   282                           ;initializer for _f_y_position
   283     09F5  3400               	retlw	0
   284     09F6  3400               	retlw	0
   285     09F7  3448               	retlw	72
   286     09F8  3442               	retlw	66
   287                           
   288                           ;initializer for _f_x_position
   289     09F9  3400               	retlw	0
   290     09FA  3400               	retlw	0
   291     09FB  3470               	retlw	112
   292     09FC  3442               	retlw	66
   293                           
   294                           ;initializer for _paddle_left_side_vertical_position
   295     09FD  3410               	retlw	16
   296                           
   297                           ;initializer for _paddle_width
   298     09FE  3403               	retlw	3
   299                           
   300                           ;initializer for _paddle_length
   301     09FF  340D               	retlw	13
   302                           
   303                           ;initializer for _old_paddle_top_left_position
   304     0A00  3432               	retlw	50
   305     0013                     _SSPBUF	set	19
   306     0014                     _SSPCONbits	set	20
   307     003D                     _RC5	set	61
   308     0035                     _RB5	set	53
   309     003F                     _RC7	set	63
   310     0034                     _RB4	set	52
   311     0031                     _RB1	set	49
   312     003E                     _RC6	set	62
   313     003C                     _RC4	set	60
   314     0032                     _RB2	set	50
   315     0030                     _RB0	set	48
   316     0094                     _SSPSTATbits	set	148
   317     0435                     _TRISB5	set	1077
   318     043D                     _TRISC5	set	1085
   319     043F                     _TRISC7	set	1087
   320     0434                     _TRISB4	set	1076
   321     0431                     _TRISB1	set	1073
   322     043C                     _TRISC4	set	1084
   323     043E                     _TRISC6	set	1086
   324     0432                     _TRISB2	set	1074
   325     0430                     _TRISB0	set	1072
   326                           
   327                           	psect	cinit
   328     07DD                     start_initialization:	
   329                           ; #config settings
   330                           
   331     07DD                     __initialization:
   332                           
   333                           ; Initialize objects allocated to BANK1
   334     07DD  1383               	bcf	3,7	;select IRP bank0
   335     07DE  30B4               	movlw	low (__pdataBANK1+20)
   336     07DF  00FD               	movwf	btemp+-1
   337     07E0  3009               	movlw	high __pidataBANK1
   338     07E1  00FE               	movwf	btemp
   339     07E2  30ED               	movlw	low __pidataBANK1
   340     07E3  00FF               	movwf	btemp+1
   341     07E4  30A0               	movlw	low __pdataBANK1
   342     07E5  0084               	movwf	4
   343     07E6  158A  21BC  118A   	fcall	init_ram0
   344                           
   345                           ; Initialize objects allocated to BANK0
   346     07E9  3070               	movlw	low (__pdataBANK0+7)
   347     07EA  00FD               	movwf	btemp+-1
   348     07EB  3009               	movlw	high __pidataBANK0
   349     07EC  00FE               	movwf	btemp
   350     07ED  307D               	movlw	low __pidataBANK0
   351     07EE  00FF               	movwf	btemp+1
   352     07EF  3069               	movlw	low __pdataBANK0
   353     07F0  0084               	movwf	4
   354     07F1  158A  21BC  118A   	fcall	init_ram0
   355                           
   356                           ; Clear objects allocated to BANK1
   357     07F4  1683               	bsf	3,5	;RP0=1, select bank1
   358     07F5  1303               	bcf	3,6	;RP1=0, select bank1
   359     07F6  01B4               	clrf	__pbssBANK1& (0+127)
   360     07F7  01B5               	clrf	(__pbssBANK1+1)& (0+127)
   361     07F8  01B6               	clrf	(__pbssBANK1+2)& (0+127)
   362     07F9  01B7               	clrf	(__pbssBANK1+3)& (0+127)
   363     07FA  01B8               	clrf	(__pbssBANK1+4)& (0+127)
   364     07FB  01B9               	clrf	(__pbssBANK1+5)& (0+127)
   365     07FC  01BA               	clrf	(__pbssBANK1+6)& (0+127)
   366     07FD                     end_of_initialization:	
   367                           ;End of C runtime variable initialization code
   368                           
   369     07FD                     __end_of__initialization:
   370     07FD  0183               	clrf	3
   371     07FE  158A  2AC1         	ljmp	_main	;jump to C main() function
   372                           
   373                           	psect	dataBANK0
   374     0069                     __pdataBANK0:
   375     0069                     _ball_y_direction:
   376     0069                     	ds	2
   377     006B                     _ball_x_direction:
   378     006B                     	ds	2
   379     006D                     _paddle_top_left_position:
   380     006D                     	ds	1
   381     006E                     _ball_y_position:
   382     006E                     	ds	1
   383     006F                     _ball_x_position:
   384     006F                     	ds	1
   385                           
   386                           	psect	bssBANK1
   387     00B4                     __pbssBANK1:
   388     00B4                     _errno:
   389     00B4                     	ds	2
   390     00B6                     _state_of_paddles_changes:
   391     00B6                     	ds	1
   392     00B7                     _paddle_position_has_changed:
   393     00B7                     	ds	1
   394     00B8                     _mode:
   395     00B8                     	ds	1
   396     00B9                     _old_y_position:
   397     00B9                     	ds	1
   398     00BA                     _old_x_position:
   399     00BA                     	ds	1
   400                           
   401                           	psect	dataBANK1
   402     00A0                     __pdataBANK1:
   403     00A0                     _dy:
   404     00A0                     	ds	4
   405     00A4                     _dx:
   406     00A4                     	ds	4
   407     00A8                     _f_y_position:
   408     00A8                     	ds	4
   409     00AC                     _f_x_position:
   410     00AC                     	ds	4
   411     00B0                     _paddle_left_side_vertical_position:
   412     00B0                     	ds	1
   413     00B1                     _paddle_width:
   414     00B1                     	ds	1
   415     00B2                     _paddle_length:
   416     00B2                     	ds	1
   417     00B3                     _old_paddle_top_left_position:
   418     00B3                     	ds	1
   419                           
   420                           	psect	inittext
   421     09B8                     init_fetch0:	
   422                           ;	Called with low address in FSR and high address in W
   423                           
   424     09B8  087E               	movf	btemp,w
   425     09B9  008A               	movwf	10
   426     09BA  087F               	movf	btemp+1,w
   427     09BB  0082               	movwf	2
   428     09BC                     init_ram0:	
   429                           ;Called with:
   430                           ;	high address of idata address in btemp 
   431                           ;	low address of idata address in btemp+1 
   432                           ;	low address of data in FSR
   433                           ;	high address + 1 of data in btemp-1
   434                           
   435     09BC  158A  21B8  158A   	fcall	init_fetch0
   436     09BF  0080               	movwf	0
   437     09C0  0A84               	incf	4,f
   438     09C1  0804               	movf	4,w
   439     09C2  067D               	xorwf	btemp+-1,w
   440     09C3  1903               	btfsc	3,2
   441     09C4  3400               	retlw	0
   442     09C5  0AFF               	incf	btemp+1,f
   443     09C6  1903               	btfsc	3,2
   444     09C7  0AFE               	incf	btemp,f
   445     09C8  29BC               	goto	init_ram0
   446                           
   447                           	psect	cstackCOMMON
   448     0070                     __pcstackCOMMON:
   449     0070                     ?_SPI_CS_LOW:
   450     0070                     ??_SPI_CS_LOW:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ?_SPI_CS_HIGH:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ??_SPI_CS_HIGH:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     ?_spiWrite:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     ??_spiWrite:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0070                     ?_spi_send_recv:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0070                     ??_spi_send_recv:	
   469                           ; 1 bytes @ 0x0
   470                           
   471     0070                     ?_update_ball_direction:	
   472                           ; 1 bytes @ 0x0
   473                           
   474     0070                     ??_update_ball_direction:	
   475                           ; 1 bytes @ 0x0
   476                           
   477     0070                     ?_updateANDset_ball_position:	
   478                           ; 1 bytes @ 0x0
   479                           
   480     0070                     ?_SPI_DC_LOW:	
   481                           ; 1 bytes @ 0x0
   482                           
   483     0070                     ??_SPI_DC_LOW:	
   484                           ; 1 bytes @ 0x0
   485                           
   486     0070                     ?_SPI_DC_HIGH:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0070                     ??_SPI_DC_HIGH:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0070                     ?_SPI_MOSI_LOW:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0070                     ??_SPI_MOSI_LOW:	
   496                           ; 1 bytes @ 0x0
   497                           
   498     0070                     ?_SPI_MOSI_HIGH:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     ??_SPI_MOSI_HIGH:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     ?_SPI_SCK_LOW:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0070                     ??_SPI_SCK_LOW:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     ?_SPI_SCK_HIGH:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ??_SPI_SCK_HIGH:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ?_init_Softwear_SPI:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ??_init_Softwear_SPI:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ?_sendCommand:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_setDisplayFillingMode:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ?_init_Hardwear_SPI:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ??_init_Hardwear_SPI:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_sendCommand_Hard:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?_writeCommand_Hard:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_die:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ??_die:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?_display_init:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?_pong_field_init:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_paddle_init:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_update_ball_direction_if_touches_paddle:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ??_update_ball_direction_if_touches_paddle:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_update_game_state:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_draw_game_state:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?_main:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?___bmul:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?_sqrt:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?___fltol:	
   577                           ; 4 bytes @ 0x0
   578                           
   579     0070                     spiWrite@b:	
   580                           ; 4 bytes @ 0x0
   581                           
   582     0070                     spi_send_recv@data:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ___bmul@multiplicand:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ___fltol@f1:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     sqrt@a:	
   592                           ; 4 bytes @ 0x0
   593                           
   594                           
   595                           ; 4 bytes @ 0x0
   596     0070                     	ds	1
   597     0071                     ??_sendCommand_Hard:
   598     0071                     ??_writeCommand_Hard:	
   599                           ; 1 bytes @ 0x1
   600                           
   601     0071                     ?_SPI_WRITE16_Hard:	
   602                           ; 1 bytes @ 0x1
   603                           
   604     0071                     ??___bmul:	
   605                           ; 1 bytes @ 0x1
   606                           
   607     0071                     sendCommand_Hard@commandByte:	
   608                           ; 1 bytes @ 0x1
   609                           
   610     0071                     writeCommand_Hard@cmd:	
   611                           ; 1 bytes @ 0x1
   612                           
   613     0071                     spiWrite@bit:	
   614                           ; 1 bytes @ 0x1
   615                           
   616     0071                     SPI_WRITE16_Hard@w:	
   617                           ; 2 bytes @ 0x1
   618                           
   619                           
   620                           ; 2 bytes @ 0x1
   621     0071                     	ds	1
   622     0072                     ?_my_setAddrWindow_Hard:
   623     0072                     ___bmul@product:	
   624                           ; 1 bytes @ 0x2
   625                           
   626     0072                     my_setAddrWindow_Hard@x_start:	
   627                           ; 1 bytes @ 0x2
   628                           
   629                           
   630                           ; 2 bytes @ 0x2
   631     0072                     	ds	1
   632     0073                     ??_sendCommand:
   633     0073                     ?_sendCommand_and_8bit_Data:	
   634                           ; 1 bytes @ 0x3
   635                           
   636     0073                     ??_SPI_WRITE16_Hard:	
   637                           ; 1 bytes @ 0x3
   638                           
   639     0073                     sendCommand@commandByte:	
   640                           ; 1 bytes @ 0x3
   641                           
   642     0073                     sendCommand_and_8bit_Data@first_byte:	
   643                           ; 1 bytes @ 0x3
   644                           
   645     0073                     SPI_WRITE16_Hard@first_B:	
   646                           ; 1 bytes @ 0x3
   647                           
   648     0073                     ___bmul@multiplier:	
   649                           ; 1 bytes @ 0x3
   650                           
   651                           
   652                           ; 1 bytes @ 0x3
   653     0073                     	ds	1
   654     0074                     ??_sqrt:
   655     0074                     ??_sendCommand_and_8bit_Data:	
   656                           ; 1 bytes @ 0x4
   657                           
   658     0074                     ??___fltol:	
   659                           ; 1 bytes @ 0x4
   660                           
   661     0074                     sendCommand_and_8bit_Data@commandByte:	
   662                           ; 1 bytes @ 0x4
   663                           
   664     0074                     SPI_WRITE16_Hard@second_B:	
   665                           ; 1 bytes @ 0x4
   666                           
   667     0074                     my_setAddrWindow_Hard@y_start:	
   668                           ; 1 bytes @ 0x4
   669                           
   670                           
   671                           ; 2 bytes @ 0x4
   672     0074                     	ds	1
   673     0075                     ??_setDisplayFillingMode:
   674                           
   675                           ; 1 bytes @ 0x5
   676     0075                     	ds	1
   677     0076                     my_setAddrWindow_Hard@x_finish:
   678                           
   679                           ; 2 bytes @ 0x6
   680     0076                     	ds	1
   681     0077                     setDisplayFillingMode@hORv:
   682                           
   683                           ; 1 bytes @ 0x7
   684     0077                     	ds	1
   685     0078                     ??___fldiv:
   686     0078                     setDisplayFillingMode@madctl:	
   687                           ; 1 bytes @ 0x8
   688                           
   689     0078                     ___fltol@sign1:	
   690                           ; 1 bytes @ 0x8
   691                           
   692     0078                     my_setAddrWindow_Hard@y_finish:	
   693                           ; 1 bytes @ 0x8
   694                           
   695                           
   696                           ; 2 bytes @ 0x8
   697     0078                     	ds	1
   698     0079                     ___fltol@exp1:
   699                           
   700                           ; 1 bytes @ 0x9
   701     0079                     	ds	1
   702     007A                     ??_my_setAddrWindow_Hard:
   703     007A                     ?_setAllDisplayPixels_Hard:	
   704                           ; 1 bytes @ 0xA
   705                           
   706     007A                     ?_drawFastHLine_Hard:	
   707                           ; 1 bytes @ 0xA
   708                           
   709     007A                     ?_drawFastVLine_Hard:	
   710                           ; 1 bytes @ 0xA
   711                           
   712     007A                     ?_drawSquareLine_Hard:	
   713                           ; 1 bytes @ 0xA
   714                           
   715     007A                     ??_drawVerticalLeftPaddle_Hard:	
   716                           ; 1 bytes @ 0xA
   717                           
   718     007A                     drawFastHLine_Hard@length:	
   719                           ; 1 bytes @ 0xA
   720                           
   721     007A                     drawFastVLine_Hard@length:	
   722                           ; 1 bytes @ 0xA
   723                           
   724     007A                     drawSquareLine_Hard@side_length:	
   725                           ; 1 bytes @ 0xA
   726                           
   727     007A                     setAllDisplayPixels_Hard@color:	
   728                           ; 1 bytes @ 0xA
   729                           
   730                           
   731                           ; 2 bytes @ 0xA
   732     007A                     	ds	1
   733     007B                     drawFastHLine_Hard@in_HLine_y:
   734     007B                     drawFastVLine_Hard@in_VLine_x:	
   735                           ; 1 bytes @ 0xB
   736                           
   737     007B                     drawSquareLine_Hard@start_y_top_left:	
   738                           ; 1 bytes @ 0xB
   739                           
   740                           
   741                           ; 1 bytes @ 0xB
   742     007B                     	ds	1
   743     007C                     ??_setAllDisplayPixels_Hard:
   744     007C                     drawFastHLine_Hard@color:	
   745                           ; 1 bytes @ 0xC
   746                           
   747     007C                     drawFastVLine_Hard@color:	
   748                           ; 2 bytes @ 0xC
   749                           
   750     007C                     drawSquareLine_Hard@color:	
   751                           ; 2 bytes @ 0xC
   752                           
   753                           
   754                           ; 2 bytes @ 0xC
   755     007C                     	ds	1
   756     007D                     ??_updateANDset_ball_position:
   757     007D                     ??___flsub:	
   758                           ; 1 bytes @ 0xD
   759                           
   760                           
   761                           ; 1 bytes @ 0xD
   762     007D                     	ds	1
   763     007E                     ??_pong_field_init:
   764     007E                     ??_paddle_init:	
   765                           ; 1 bytes @ 0xE
   766                           
   767     007E                     ??_draw_game_state:	
   768                           ; 1 bytes @ 0xE
   769                           
   770                           
   771                           	psect	cstackBANK0
   772     0020                     __pcstackBANK0:	
   773                           ; 1 bytes @ 0xE
   774                           
   775     0020                     ??_drawFastHLine_Hard:
   776     0020                     ??_drawFastVLine_Hard:	
   777                           ; 1 bytes @ 0x0
   778                           
   779     0020                     ??_drawSquareLine_Hard:	
   780                           ; 1 bytes @ 0x0
   781                           
   782     0020                     ?_drawVerticalLeftPaddle_Hard:	
   783                           ; 1 bytes @ 0x0
   784                           
   785     0020                     drawVerticalLeftPaddle_Hard@length:	
   786                           ; 1 bytes @ 0x0
   787                           
   788     0020                     sqrt@sign:	
   789                           ; 1 bytes @ 0x0
   790                           
   791     0020                     setAllDisplayPixels_Hard@x:	
   792                           ; 1 bytes @ 0x0
   793                           
   794                           
   795                           ; 2 bytes @ 0x0
   796     0020                     	ds	1
   797     0021                     drawVerticalLeftPaddle_Hard@in_VLine_x:
   798     0021                     sqrt@i:	
   799                           ; 1 bytes @ 0x1
   800                           
   801                           
   802                           ; 1 bytes @ 0x1
   803     0021                     	ds	1
   804     0022                     drawVerticalLeftPaddle_Hard@width:
   805     0022                     setAllDisplayPixels_Hard@y:	
   806                           ; 1 bytes @ 0x2
   807                           
   808     0022                     sqrt@tfrac:	
   809                           ; 2 bytes @ 0x2
   810                           
   811                           
   812                           ; 4 bytes @ 0x2
   813     0022                     	ds	1
   814     0023                     drawFastHLine_Hard@x2:
   815     0023                     drawFastVLine_Hard@y2:	
   816                           ; 1 bytes @ 0x3
   817                           
   818     0023                     drawVerticalLeftPaddle_Hard@color:	
   819                           ; 1 bytes @ 0x3
   820                           
   821                           
   822                           ; 2 bytes @ 0x3
   823     0023                     	ds	1
   824     0024                     ??_display_init:
   825     0024                     drawSquareLine_Hard@x2:	
   826                           ; 1 bytes @ 0x4
   827                           
   828     0024                     drawFastHLine_Hard@x_colum_horizontal:	
   829                           ; 1 bytes @ 0x4
   830                           
   831     0024                     drawFastVLine_Hard@y_row_vertical:	
   832                           ; 2 bytes @ 0x4
   833                           
   834                           
   835                           ; 2 bytes @ 0x4
   836     0024                     	ds	1
   837     0025                     drawSquareLine_Hard@y2:
   838     0025                     drawVerticalLeftPaddle_Hard@y2:	
   839                           ; 1 bytes @ 0x5
   840                           
   841                           
   842                           ; 1 bytes @ 0x5
   843     0025                     	ds	1
   844     0026                     drawFastHLine_Hard@start_x:
   845     0026                     drawFastVLine_Hard@start_y:	
   846                           ; 1 bytes @ 0x6
   847                           
   848     0026                     drawVerticalLeftPaddle_Hard@x2:	
   849                           ; 1 bytes @ 0x6
   850                           
   851     0026                     sqrt@p:	
   852                           ; 1 bytes @ 0x6
   853                           
   854     0026                     drawSquareLine_Hard@x_colum_horizontal:	
   855                           ; 1 bytes @ 0x6
   856                           
   857                           
   858                           ; 2 bytes @ 0x6
   859     0026                     	ds	1
   860     0027                     drawVerticalLeftPaddle_Hard@total:
   861     0027                     sqrt@grs:	
   862                           ; 1 bytes @ 0x7
   863                           
   864                           
   865                           ; 4 bytes @ 0x7
   866     0027                     	ds	1
   867     0028                     drawSquareLine_Hard@y_row_vertical:
   868     0028                     drawVerticalLeftPaddle_Hard@y_row_vertical:	
   869                           ; 2 bytes @ 0x8
   870                           
   871                           
   872                           ; 2 bytes @ 0x8
   873     0028                     	ds	2
   874     002A                     drawSquareLine_Hard@start_x_top_left:
   875     002A                     drawVerticalLeftPaddle_Hard@start_y:	
   876                           ; 1 bytes @ 0xA
   877                           
   878                           
   879                           ; 1 bytes @ 0xA
   880     002A                     	ds	1
   881     002B                     sqrt@exp:
   882                           
   883                           ; 2 bytes @ 0xB
   884     002B                     	ds	2
   885     002D                     sqrt@root:
   886                           
   887                           ; 4 bytes @ 0xD
   888     002D                     	ds	4
   889     0031                     sqrt@frac:
   890                           
   891                           ; 4 bytes @ 0x11
   892     0031                     	ds	4
   893     0035                     ?___fldiv:
   894     0035                     ___fldiv@a:	
   895                           ; 4 bytes @ 0x15
   896                           
   897                           
   898                           ; 4 bytes @ 0x15
   899     0035                     	ds	4
   900     0039                     ___fldiv@b:
   901                           
   902                           ; 4 bytes @ 0x19
   903     0039                     	ds	4
   904     003D                     ___fldiv@rem:
   905                           
   906                           ; 4 bytes @ 0x1D
   907     003D                     	ds	4
   908     0041                     ___fldiv@sign:
   909                           
   910                           ; 1 bytes @ 0x21
   911     0041                     	ds	1
   912     0042                     ___fldiv@new_exp:
   913                           
   914                           ; 2 bytes @ 0x22
   915     0042                     	ds	2
   916     0044                     ___fldiv@grs:
   917                           
   918                           ; 4 bytes @ 0x24
   919     0044                     	ds	4
   920     0048                     ___fldiv@bexp:
   921                           
   922                           ; 1 bytes @ 0x28
   923     0048                     	ds	1
   924     0049                     ___fldiv@aexp:
   925                           
   926                           ; 1 bytes @ 0x29
   927     0049                     	ds	1
   928     004A                     ?___fladd:
   929     004A                     ___fladd@b:	
   930                           ; 4 bytes @ 0x2A
   931                           
   932                           
   933                           ; 4 bytes @ 0x2A
   934     004A                     	ds	4
   935     004E                     ___fladd@a:
   936                           
   937                           ; 4 bytes @ 0x2E
   938     004E                     	ds	4
   939     0052                     ??___fladd:
   940                           
   941                           ; 1 bytes @ 0x32
   942     0052                     	ds	8
   943     005A                     ___fladd@signs:
   944                           
   945                           ; 1 bytes @ 0x3A
   946     005A                     	ds	1
   947     005B                     ___fladd@aexp:
   948                           
   949                           ; 1 bytes @ 0x3B
   950     005B                     	ds	1
   951     005C                     ___fladd@bexp:
   952                           
   953                           ; 1 bytes @ 0x3C
   954     005C                     	ds	1
   955     005D                     ___fladd@grs:
   956                           
   957                           ; 1 bytes @ 0x3D
   958     005D                     	ds	1
   959     005E                     ?___flsub:
   960     005E                     ___flsub@a:	
   961                           ; 4 bytes @ 0x3E
   962                           
   963                           
   964                           ; 4 bytes @ 0x3E
   965     005E                     	ds	4
   966     0062                     ___flsub@b:
   967                           
   968                           ; 4 bytes @ 0x42
   969     0062                     	ds	4
   970     0066                     ??_update_game_state:
   971                           
   972                           ; 1 bytes @ 0x46
   973     0066                     	ds	2
   974     0068                     ??_main:
   975                           
   976                           ; 1 bytes @ 0x48
   977     0068                     	ds	1
   978                           
   979                           	psect	maintext
   980     0AC1                     __pmaintext:	
   981 ;;
   982 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   983 ;;
   984 ;; *************** function _main *****************
   985 ;; Defined at:
   986 ;;		line 778 in file "main.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : B00/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1000 ;;      Params:         0       0       0       0
  1001 ;;      Locals:         0       0       0       0
  1002 ;;      Temps:          0       1       0       0
  1003 ;;      Totals:         0       1       0       0
  1004 ;;Total ram usage:        1 bytes
  1005 ;; Hardware stack levels required when called: 5
  1006 ;; This function calls:
  1007 ;;		_die
  1008 ;;		_display_init
  1009 ;;		_draw_game_state
  1010 ;;		_paddle_init
  1011 ;;		_pong_field_init
  1012 ;;		_sendCommand_Hard
  1013 ;;		_update_game_state
  1014 ;; This function is called by:
  1015 ;;		Startup code after reset
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019     0AC1                     _main:	
  1020                           ;psect for function _main
  1021                           
  1022     0AC1                     l3083:	
  1023                           ;incstack = 0
  1024                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1025                           
  1026                           
  1027                           ;main.c: 780:     display_init();
  1028     0AC1  158A  229B  158A   	fcall	_display_init
  1029     0AC4                     l3085:
  1030                           
  1031                           ;main.c: 781:     pong_field_init();
  1032     0AC4  158A  2316  158A   	fcall	_pong_field_init
  1033     0AC7                     l3087:
  1034                           
  1035                           ;main.c: 782:     paddle_init();
  1036     0AC7  158A  2216  158A   	fcall	_paddle_init
  1037     0ACA                     l3089:
  1038                           
  1039                           ;main.c: 786:         if(RC5 == 1) {
  1040     0ACA  1283               	bcf	3,5	;RP0=0, select bank0
  1041     0ACB  1303               	bcf	3,6	;RP1=0, select bank0
  1042     0ACC  1E87               	btfss	7,5	;volatile
  1043     0ACD  2ACF               	goto	u3901
  1044     0ACE  2AD0               	goto	u3900
  1045     0ACF                     u3901:
  1046     0ACF  2ADB               	goto	l3093
  1047     0AD0                     u3900:
  1048     0AD0                     l3091:
  1049                           
  1050                           ;main.c: 787:             sendCommand_Hard(0xAE);
  1051     0AD0  30AE               	movlw	174
  1052     0AD1  158A  21DB  158A   	fcall	_sendCommand_Hard
  1053                           
  1054                           ;main.c: 788:             die();
  1055     0AD4  158A  2241  158A   	fcall	_die
  1056                           
  1057                           ;main.c: 789:             sendCommand_Hard(0xAF);
  1058     0AD7  30AF               	movlw	175
  1059     0AD8  158A  21DB  158A   	fcall	_sendCommand_Hard
  1060     0ADB                     l3093:
  1061                           
  1062                           ;main.c: 793:         update_game_state();
  1063     0ADB  118A  2005  158A   	fcall	_update_game_state
  1064     0ADE                     l3095:
  1065                           
  1066                           ;main.c: 794:         _delay((unsigned long)((100)*(20000000/4000000.0)));
  1067     0ADE  30A6               	movlw	166
  1068     0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  1069     0AE0  1303               	bcf	3,6	;RP1=0, select bank0
  1070     0AE1  00E8               	movwf	??_main
  1071     0AE2                     u4317:
  1072     0AE2  0BE8               	decfsz	??_main,f
  1073     0AE3  2AE2               	goto	u4317
  1074     0AE4                     l3097:
  1075                           
  1076                           ;main.c: 795:         draw_game_state();
  1077     0AE4  158A  23C0  158A   	fcall	_draw_game_state
  1078     0AE7  2ACA               	goto	l3089
  1079     0AE8  118A  2800         	ljmp	start
  1080     0AEA                     __end_of_main:
  1081                           
  1082                           	psect	text1
  1083     0005                     __ptext1:	
  1084 ;; *************** function _update_game_state *****************
  1085 ;; Defined at:
  1086 ;;		line 742 in file "main.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1100 ;;      Params:         0       0       0       0
  1101 ;;      Locals:         0       0       0       0
  1102 ;;      Temps:          0       2       0       0
  1103 ;;      Totals:         0       2       0       0
  1104 ;;Total ram usage:        2 bytes
  1105 ;; Hardware stack levels used: 1
  1106 ;; Hardware stack levels required when called: 3
  1107 ;; This function calls:
  1108 ;;		_updateANDset_ball_position
  1109 ;;		_update_ball_direction
  1110 ;;		_update_ball_direction_if_touches_paddle
  1111 ;; This function is called by:
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116     0005                     _update_game_state:	
  1117                           ;psect for function _update_game_state
  1118                           
  1119     0005                     l2953:	
  1120                           ;incstack = 0
  1121                           ; Regs used in _update_game_state: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1122                           
  1123                           
  1124                           ;main.c: 743:     if(RB5 == 1) {
  1125     0005  1283               	bcf	3,5	;RP0=0, select bank0
  1126     0006  1303               	bcf	3,6	;RP1=0, select bank0
  1127     0007  1E86               	btfss	6,5	;volatile
  1128     0008  280A               	goto	u3691
  1129     0009  280B               	goto	u3690
  1130     000A                     u3691:
  1131     000A  281D               	goto	l2963
  1132     000B                     u3690:
  1133     000B                     l2955:
  1134                           
  1135                           ;main.c: 744:         if(paddle_top_left_position > 1) {
  1136     000B  3002               	movlw	2
  1137     000C  026D               	subwf	_paddle_top_left_position,w
  1138     000D  1C03               	skipc
  1139     000E  2810               	goto	u3701
  1140     000F  2811               	goto	u3700
  1141     0010                     u3701:
  1142     0010  281D               	goto	l2963
  1143     0011                     u3700:
  1144     0011                     l2957:
  1145                           
  1146                           ;main.c: 745:             old_paddle_top_left_position = paddle_top_left_position;
  1147     0011  086D               	movf	_paddle_top_left_position,w
  1148     0012  1683               	bsf	3,5	;RP0=1, select bank1
  1149     0013  1303               	bcf	3,6	;RP1=0, select bank1
  1150     0014  00B3               	movwf	_old_paddle_top_left_position^(0+128)
  1151     0015                     l2959:
  1152                           
  1153                           ;main.c: 746:             paddle_top_left_position--;
  1154     0015  3001               	movlw	1
  1155     0016  1283               	bcf	3,5	;RP0=0, select bank0
  1156     0017  1303               	bcf	3,6	;RP1=0, select bank0
  1157     0018  02ED               	subwf	_paddle_top_left_position,f
  1158     0019                     l2961:
  1159                           
  1160                           ;main.c: 748:             paddle_position_has_changed = 1;
  1161     0019  1683               	bsf	3,5	;RP0=1, select bank1
  1162     001A  1303               	bcf	3,6	;RP1=0, select bank1
  1163     001B  01B7               	clrf	_paddle_position_has_changed^(0+128)
  1164     001C  0AB7               	incf	_paddle_position_has_changed^(0+128),f
  1165     001D                     l2963:
  1166                           
  1167                           ;main.c: 751:     if(RB4 == 1) {
  1168     001D  1283               	bcf	3,5	;RP0=0, select bank0
  1169     001E  1E06               	btfss	6,4	;volatile
  1170     001F  2821               	goto	u3711
  1171     0020  2822               	goto	u3710
  1172     0021                     u3711:
  1173     0021  2846               	goto	l2973
  1174     0022                     u3710:
  1175     0022                     l2965:
  1176                           
  1177                           ;main.c: 752:         if((paddle_top_left_position + (paddle_length - 1)) < 94) {
  1178     0022  086D               	movf	_paddle_top_left_position,w
  1179     0023  3E0C               	addlw	12
  1180     0024  00E6               	movwf	??_update_game_state
  1181     0025  3000               	movlw	0
  1182     0026  1803               	skipnc
  1183     0027  3001               	movlw	1
  1184     0028  00E7               	movwf	??_update_game_state+1
  1185     0029  0867               	movf	??_update_game_state+1,w
  1186     002A  3A80               	xorlw	128
  1187     002B  00FF               	movwf	btemp+1
  1188     002C  3080               	movlw	128
  1189     002D  027F               	subwf	btemp+1,w
  1190     002E  1D03               	skipz
  1191     002F  2832               	goto	u3725
  1192     0030  305E               	movlw	94
  1193     0031  0266               	subwf	??_update_game_state,w
  1194     0032                     u3725:
  1195     0032  1803               	skipnc
  1196     0033  2835               	goto	u3721
  1197     0034  2836               	goto	u3720
  1198     0035                     u3721:
  1199     0035  2846               	goto	l2973
  1200     0036                     u3720:
  1201     0036                     l2967:
  1202                           
  1203                           ;main.c: 753:             old_paddle_top_left_position = paddle_top_left_position;
  1204     0036  1283               	bcf	3,5	;RP0=0, select bank0
  1205     0037  1303               	bcf	3,6	;RP1=0, select bank0
  1206     0038  086D               	movf	_paddle_top_left_position,w
  1207     0039  1683               	bsf	3,5	;RP0=1, select bank1
  1208     003A  1303               	bcf	3,6	;RP1=0, select bank1
  1209     003B  00B3               	movwf	_old_paddle_top_left_position^(0+128)
  1210     003C                     l2969:
  1211                           
  1212                           ;main.c: 754:             paddle_top_left_position++;
  1213     003C  3001               	movlw	1
  1214     003D  1283               	bcf	3,5	;RP0=0, select bank0
  1215     003E  1303               	bcf	3,6	;RP1=0, select bank0
  1216     003F  00E6               	movwf	??_update_game_state
  1217     0040  0866               	movf	??_update_game_state,w
  1218     0041  07ED               	addwf	_paddle_top_left_position,f
  1219     0042                     l2971:
  1220                           
  1221                           ;main.c: 756:             paddle_position_has_changed = 1;
  1222     0042  1683               	bsf	3,5	;RP0=1, select bank1
  1223     0043  1303               	bcf	3,6	;RP1=0, select bank1
  1224     0044  01B7               	clrf	_paddle_position_has_changed^(0+128)
  1225     0045  0AB7               	incf	_paddle_position_has_changed^(0+128),f
  1226     0046                     l2973:
  1227                           
  1228                           ;main.c: 760:     update_ball_direction();
  1229     0046  158A  2407  118A   	fcall	_update_ball_direction
  1230     0049                     l2975:
  1231                           
  1232                           ;main.c: 761:     updateANDset_ball_position();
  1233     0049  118A  237E  118A   	fcall	_updateANDset_ball_position
  1234     004C                     l2977:
  1235                           
  1236                           ;main.c: 763:     update_ball_direction_if_touches_paddle();
  1237     004C  118A  20FA  118A   	fcall	_update_ball_direction_if_touches_paddle
  1238     004F                     l296:
  1239     004F  0008               	return
  1240     0050                     __end_of_update_game_state:
  1241                           
  1242                           	psect	text2
  1243     00FA                     __ptext2:	
  1244 ;; *************** function _update_ball_direction_if_touches_paddle *****************
  1245 ;; Defined at:
  1246 ;;		line 725 in file "main.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0, btemp+1
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1260 ;;      Params:         0       0       0       0
  1261 ;;      Locals:         0       0       0       0
  1262 ;;      Temps:          5       0       0       0
  1263 ;;      Totals:         5       0       0       0
  1264 ;;Total ram usage:        5 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_update_game_state
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273     00FA                     _update_ball_direction_if_touches_paddle:	
  1274                           ;psect for function _update_ball_direction_if_touches_paddle
  1275                           
  1276     00FA                     l2885:	
  1277                           ;incstack = 0
  1278                           ; Regs used in _update_ball_direction_if_touches_paddle: [wreg+status,2+status,0+btemp+1
      +                          ]
  1279                           
  1280                           
  1281                           ;main.c: 727:      if(ball_x_direction == -1 && (ball_x_position-1 == (paddle_left_side_
      +                          vertical_position + paddle_width-1)) && (ball_y_position+1 >= paddle_top_left_position) 
      +                          && (ball_y_position-1 <= paddle_top_left_position+paddle_length-1)) {
  1282     00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1283     00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1284     00FC  0A6B               	incf	_ball_x_direction,w
  1285     00FD  1D03               	skipz
  1286     00FE  2903               	goto	u3551
  1287     00FF  0A6C               	incf	_ball_x_direction+1,w
  1288     0100  1D03               	btfss	3,2
  1289     0101  2903               	goto	u3551
  1290     0102  2904               	goto	u3550
  1291     0103                     u3551:
  1292     0103  294A               	goto	l2895
  1293     0104                     u3550:
  1294     0104                     l2887:
  1295     0104  086F               	movf	_ball_x_position,w
  1296     0105  3EFF               	addlw	255
  1297     0106  00F0               	movwf	??_update_ball_direction_if_touches_paddle
  1298     0107  30FF               	movlw	255
  1299     0108  1803               	skipnc
  1300     0109  3000               	movlw	0
  1301     010A  00F1               	movwf	??_update_ball_direction_if_touches_paddle+1
  1302     010B  3012               	movlw	18
  1303     010C  0670               	xorwf	??_update_ball_direction_if_touches_paddle,w
  1304     010D  0471               	iorwf	??_update_ball_direction_if_touches_paddle+1,w
  1305     010E  1D03               	btfss	3,2
  1306     010F  2911               	goto	u3561
  1307     0110  2912               	goto	u3560
  1308     0111                     u3561:
  1309     0111  294A               	goto	l2895
  1310     0112                     u3560:
  1311     0112                     l2889:
  1312     0112  086E               	movf	_ball_y_position,w
  1313     0113  3E01               	addlw	1
  1314     0114  00F0               	movwf	??_update_ball_direction_if_touches_paddle
  1315     0115  3000               	movlw	0
  1316     0116  1803               	skipnc
  1317     0117  3001               	movlw	1
  1318     0118  00F1               	movwf	??_update_ball_direction_if_touches_paddle+1
  1319     0119  0871               	movf	??_update_ball_direction_if_touches_paddle+1,w
  1320     011A  3A80               	xorlw	128
  1321     011B  00F2               	movwf	??_update_ball_direction_if_touches_paddle+2
  1322     011C  3080               	movlw	128
  1323     011D  0272               	subwf	??_update_ball_direction_if_touches_paddle+2,w
  1324     011E  1D03               	skipz
  1325     011F  2922               	goto	u3575
  1326     0120  086D               	movf	_paddle_top_left_position,w
  1327     0121  0270               	subwf	??_update_ball_direction_if_touches_paddle,w
  1328     0122                     u3575:
  1329     0122  1C03               	skipc
  1330     0123  2925               	goto	u3571
  1331     0124  2926               	goto	u3570
  1332     0125                     u3571:
  1333     0125  294A               	goto	l2895
  1334     0126                     u3570:
  1335     0126                     l2891:
  1336     0126  1283               	bcf	3,5	;RP0=0, select bank0
  1337     0127  1303               	bcf	3,6	;RP1=0, select bank0
  1338     0128  086E               	movf	_ball_y_position,w
  1339     0129  3EFF               	addlw	255
  1340     012A  00F0               	movwf	??_update_ball_direction_if_touches_paddle
  1341     012B  30FF               	movlw	255
  1342     012C  1803               	skipnc
  1343     012D  3000               	movlw	0
  1344     012E  00F1               	movwf	??_update_ball_direction_if_touches_paddle+1
  1345     012F  086D               	movf	_paddle_top_left_position,w
  1346     0130  3E0C               	addlw	12
  1347     0131  00F2               	movwf	??_update_ball_direction_if_touches_paddle+2
  1348     0132  3000               	movlw	0
  1349     0133  1803               	skipnc
  1350     0134  3001               	movlw	1
  1351     0135  00F3               	movwf	??_update_ball_direction_if_touches_paddle+3
  1352     0136  0873               	movf	??_update_ball_direction_if_touches_paddle+3,w
  1353     0137  3A80               	xorlw	128
  1354     0138  00F4               	movwf	??_update_ball_direction_if_touches_paddle+4
  1355     0139  0871               	movf	??_update_ball_direction_if_touches_paddle+1,w
  1356     013A  3A80               	xorlw	128
  1357     013B  0274               	subwf	??_update_ball_direction_if_touches_paddle+4,w
  1358     013C  1D03               	skipz
  1359     013D  2940               	goto	u3585
  1360     013E  0870               	movf	??_update_ball_direction_if_touches_paddle,w
  1361     013F  0272               	subwf	??_update_ball_direction_if_touches_paddle+2,w
  1362     0140                     u3585:
  1363     0140  1C03               	skipc
  1364     0141  2943               	goto	u3581
  1365     0142  2944               	goto	u3580
  1366     0143                     u3581:
  1367     0143  294A               	goto	l2895
  1368     0144                     u3580:
  1369     0144                     l2893:
  1370                           
  1371                           ;main.c: 728:         ball_x_direction = 1;
  1372     0144  3001               	movlw	1
  1373     0145  1283               	bcf	3,5	;RP0=0, select bank0
  1374     0146  1303               	bcf	3,6	;RP1=0, select bank0
  1375     0147  00EB               	movwf	_ball_x_direction
  1376     0148  3000               	movlw	0
  1377     0149  00EC               	movwf	_ball_x_direction+1
  1378     014A                     l2895:
  1379                           
  1380                           ;main.c: 732:     if(ball_x_direction == -1 && (((ball_x_position+1 >= paddle_left_side_
      +                          vertical_position) && (ball_x_position-1 <= paddle_left_side_vertical_position+paddle_wi
      +                          dth-1)) && ((ball_y_position == paddle_top_left_position + paddle_length) || (ball_y_pos
      +                          ition == paddle_top_left_position)))) {
  1381     014A  1283               	bcf	3,5	;RP0=0, select bank0
  1382     014B  1303               	bcf	3,6	;RP1=0, select bank0
  1383     014C  0A6B               	incf	_ball_x_direction,w
  1384     014D  1D03               	skipz
  1385     014E  2953               	goto	u3591
  1386     014F  0A6C               	incf	_ball_x_direction+1,w
  1387     0150  1D03               	btfss	3,2
  1388     0151  2953               	goto	u3591
  1389     0152  2954               	goto	u3590
  1390     0153                     u3591:
  1391     0153  29A7               	goto	l287
  1392     0154                     u3590:
  1393     0154                     l2897:
  1394     0154  086F               	movf	_ball_x_position,w
  1395     0155  3E01               	addlw	1
  1396     0156  00F0               	movwf	??_update_ball_direction_if_touches_paddle
  1397     0157  3000               	movlw	0
  1398     0158  1803               	skipnc
  1399     0159  3001               	movlw	1
  1400     015A  00F1               	movwf	??_update_ball_direction_if_touches_paddle+1
  1401     015B  0871               	movf	??_update_ball_direction_if_touches_paddle+1,w
  1402     015C  3A80               	xorlw	128
  1403     015D  00FF               	movwf	btemp+1
  1404     015E  3080               	movlw	128
  1405     015F  027F               	subwf	btemp+1,w
  1406     0160  1D03               	skipz
  1407     0161  2964               	goto	u3605
  1408     0162  3010               	movlw	16
  1409     0163  0270               	subwf	??_update_ball_direction_if_touches_paddle,w
  1410     0164                     u3605:
  1411     0164  1C03               	skipc
  1412     0165  2967               	goto	u3601
  1413     0166  2968               	goto	u3600
  1414     0167                     u3601:
  1415     0167  29A7               	goto	l287
  1416     0168                     u3600:
  1417     0168                     l2899:
  1418     0168  1283               	bcf	3,5	;RP0=0, select bank0
  1419     0169  1303               	bcf	3,6	;RP1=0, select bank0
  1420     016A  086F               	movf	_ball_x_position,w
  1421     016B  3EFF               	addlw	255
  1422     016C  00F0               	movwf	??_update_ball_direction_if_touches_paddle
  1423     016D  30FF               	movlw	255
  1424     016E  1803               	skipnc
  1425     016F  3000               	movlw	0
  1426     0170  00F1               	movwf	??_update_ball_direction_if_touches_paddle+1
  1427     0171  0871               	movf	??_update_ball_direction_if_touches_paddle+1,w
  1428     0172  3A80               	xorlw	128
  1429     0173  00FF               	movwf	btemp+1
  1430     0174  3080               	movlw	128
  1431     0175  027F               	subwf	btemp+1,w
  1432     0176  1D03               	skipz
  1433     0177  297A               	goto	u3615
  1434     0178  3013               	movlw	19
  1435     0179  0270               	subwf	??_update_ball_direction_if_touches_paddle,w
  1436     017A                     u3615:
  1437     017A  1803               	skipnc
  1438     017B  297D               	goto	u3611
  1439     017C  297E               	goto	u3610
  1440     017D                     u3611:
  1441     017D  29A7               	goto	l287
  1442     017E                     u3610:
  1443     017E                     l2901:
  1444     017E  1283               	bcf	3,5	;RP0=0, select bank0
  1445     017F  1303               	bcf	3,6	;RP1=0, select bank0
  1446     0180  086D               	movf	_paddle_top_left_position,w
  1447     0181  3E0D               	addlw	13
  1448     0182  00F0               	movwf	??_update_ball_direction_if_touches_paddle
  1449     0183  3000               	movlw	0
  1450     0184  1803               	skipnc
  1451     0185  3001               	movlw	1
  1452     0186  00F1               	movwf	??_update_ball_direction_if_touches_paddle+1
  1453     0187  086E               	movf	_ball_y_position,w
  1454     0188  0670               	xorwf	??_update_ball_direction_if_touches_paddle,w
  1455     0189  0471               	iorwf	??_update_ball_direction_if_touches_paddle+1,w
  1456     018A  1903               	skipnz
  1457     018B  298D               	goto	u3621
  1458     018C  298E               	goto	u3620
  1459     018D                     u3621:
  1460     018D  2994               	goto	l2905
  1461     018E                     u3620:
  1462     018E                     l2903:
  1463     018E  086E               	movf	_ball_y_position,w
  1464     018F  066D               	xorwf	_paddle_top_left_position,w
  1465     0190  1D03               	skipz
  1466     0191  2993               	goto	u3631
  1467     0192  2994               	goto	u3630
  1468     0193                     u3631:
  1469     0193  29A7               	goto	l287
  1470     0194                     u3630:
  1471     0194                     l2905:
  1472                           
  1473                           ;main.c: 733:         ball_y_direction = (ball_y_direction == 1) ? -1 : 1;
  1474     0194  0369               	decf	_ball_y_direction,w
  1475     0195  046A               	iorwf	_ball_y_direction+1,w
  1476     0196  1903               	btfsc	3,2
  1477     0197  2999               	goto	u3641
  1478     0198  299A               	goto	u3640
  1479     0199                     u3641:
  1480     0199  299F               	goto	l2909
  1481     019A                     u3640:
  1482     019A                     l2907:
  1483     019A  3001               	movlw	1
  1484     019B  00E9               	movwf	_ball_y_direction
  1485     019C  3000               	movlw	0
  1486     019D  00EA               	movwf	_ball_y_direction+1
  1487     019E  29A3               	goto	l286
  1488     019F                     l2909:
  1489     019F  30FF               	movlw	255
  1490     01A0  00E9               	movwf	_ball_y_direction
  1491     01A1  30FF               	movlw	255
  1492     01A2  00EA               	movwf	_ball_y_direction+1
  1493     01A3                     l286:
  1494                           
  1495                           ;main.c: 734:         ball_x_direction = 1;
  1496     01A3  3001               	movlw	1
  1497     01A4  00EB               	movwf	_ball_x_direction
  1498     01A5  3000               	movlw	0
  1499     01A6  00EC               	movwf	_ball_x_direction+1
  1500     01A7                     l287:
  1501     01A7  0008               	return
  1502     01A8                     __end_of_update_ball_direction_if_touches_paddle:
  1503                           
  1504                           	psect	text3
  1505     0C07                     __ptext3:	
  1506 ;; *************** function _update_ball_direction *****************
  1507 ;; Defined at:
  1508 ;;		line 74 in file "main.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1522 ;;      Params:         0       0       0       0
  1523 ;;      Locals:         0       0       0       0
  1524 ;;      Temps:          0       0       0       0
  1525 ;;      Totals:         0       0       0       0
  1526 ;;Total ram usage:        0 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_update_game_state
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535     0C07                     _update_ball_direction:	
  1536                           ;psect for function _update_ball_direction
  1537                           
  1538     0C07                     l2647:	
  1539                           ;incstack = 0
  1540                           ; Regs used in _update_ball_direction: [wreg+status,2+status,0]
  1541                           
  1542                           
  1543                           ;main.c: 75:     if(ball_x_direction == 1 && ball_x_position >= 124) {
  1544     0C07  1283               	bcf	3,5	;RP0=0, select bank0
  1545     0C08  1303               	bcf	3,6	;RP1=0, select bank0
  1546     0C09  036B               	decf	_ball_x_direction,w
  1547     0C0A  046C               	iorwf	_ball_x_direction+1,w
  1548     0C0B  1D03               	btfss	3,2
  1549     0C0C  2C0E               	goto	u3261
  1550     0C0D  2C0F               	goto	u3260
  1551     0C0E                     u3261:
  1552     0C0E  2C1A               	goto	l2653
  1553     0C0F                     u3260:
  1554     0C0F                     l2649:
  1555     0C0F  307C               	movlw	124
  1556     0C10  026F               	subwf	_ball_x_position,w
  1557     0C11  1C03               	skipc
  1558     0C12  2C14               	goto	u3271
  1559     0C13  2C15               	goto	u3270
  1560     0C14                     u3271:
  1561     0C14  2C1A               	goto	l2653
  1562     0C15                     u3270:
  1563     0C15                     l2651:
  1564                           
  1565                           ;main.c: 76:         ball_x_direction = -1;
  1566     0C15  30FF               	movlw	255
  1567     0C16  00EB               	movwf	_ball_x_direction
  1568     0C17  30FF               	movlw	255
  1569     0C18  00EC               	movwf	_ball_x_direction+1
  1570                           
  1571                           ;main.c: 77:     } else if(ball_x_direction == -1 && ball_x_position <= 3) {
  1572     0C19  2C2C               	goto	l2659
  1573     0C1A                     l2653:
  1574     0C1A  0A6B               	incf	_ball_x_direction,w
  1575     0C1B  1D03               	skipz
  1576     0C1C  2C21               	goto	u3281
  1577     0C1D  0A6C               	incf	_ball_x_direction+1,w
  1578     0C1E  1D03               	btfss	3,2
  1579     0C1F  2C21               	goto	u3281
  1580     0C20  2C22               	goto	u3280
  1581     0C21                     u3281:
  1582     0C21  2C2C               	goto	l2659
  1583     0C22                     u3280:
  1584     0C22                     l2655:
  1585     0C22  3004               	movlw	4
  1586     0C23  026F               	subwf	_ball_x_position,w
  1587     0C24  1803               	skipnc
  1588     0C25  2C27               	goto	u3291
  1589     0C26  2C28               	goto	u3290
  1590     0C27                     u3291:
  1591     0C27  2C2C               	goto	l2659
  1592     0C28                     u3290:
  1593     0C28                     l2657:
  1594                           
  1595                           ;main.c: 78:         ball_x_direction = 1;
  1596     0C28  3001               	movlw	1
  1597     0C29  00EB               	movwf	_ball_x_direction
  1598     0C2A  3000               	movlw	0
  1599     0C2B  00EC               	movwf	_ball_x_direction+1
  1600     0C2C                     l2659:
  1601                           
  1602                           ;main.c: 81:     if(ball_y_direction == 1 && ball_y_position >= 92) {
  1603     0C2C  0369               	decf	_ball_y_direction,w
  1604     0C2D  046A               	iorwf	_ball_y_direction+1,w
  1605     0C2E  1D03               	btfss	3,2
  1606     0C2F  2C31               	goto	u3301
  1607     0C30  2C32               	goto	u3300
  1608     0C31                     u3301:
  1609     0C31  2C3D               	goto	l2665
  1610     0C32                     u3300:
  1611     0C32                     l2661:
  1612     0C32  305C               	movlw	92
  1613     0C33  026E               	subwf	_ball_y_position,w
  1614     0C34  1C03               	skipc
  1615     0C35  2C37               	goto	u3311
  1616     0C36  2C38               	goto	u3310
  1617     0C37                     u3311:
  1618     0C37  2C3D               	goto	l2665
  1619     0C38                     u3310:
  1620     0C38                     l2663:
  1621                           
  1622                           ;main.c: 82:         ball_y_direction = -1;
  1623     0C38  30FF               	movlw	255
  1624     0C39  00E9               	movwf	_ball_y_direction
  1625     0C3A  30FF               	movlw	255
  1626     0C3B  00EA               	movwf	_ball_y_direction+1
  1627                           
  1628                           ;main.c: 83:     } else if(ball_y_direction == -1 && ball_y_position <= 2) {
  1629     0C3C  2C4F               	goto	l89
  1630     0C3D                     l2665:
  1631     0C3D  0A69               	incf	_ball_y_direction,w
  1632     0C3E  1D03               	skipz
  1633     0C3F  2C44               	goto	u3321
  1634     0C40  0A6A               	incf	_ball_y_direction+1,w
  1635     0C41  1D03               	btfss	3,2
  1636     0C42  2C44               	goto	u3321
  1637     0C43  2C45               	goto	u3320
  1638     0C44                     u3321:
  1639     0C44  2C4F               	goto	l89
  1640     0C45                     u3320:
  1641     0C45                     l2667:
  1642     0C45  3003               	movlw	3
  1643     0C46  026E               	subwf	_ball_y_position,w
  1644     0C47  1803               	skipnc
  1645     0C48  2C4A               	goto	u3331
  1646     0C49  2C4B               	goto	u3330
  1647     0C4A                     u3331:
  1648     0C4A  2C4F               	goto	l89
  1649     0C4B                     u3330:
  1650     0C4B                     l2669:
  1651                           
  1652                           ;main.c: 84:         ball_y_direction = 1;
  1653     0C4B  3001               	movlw	1
  1654     0C4C  00E9               	movwf	_ball_y_direction
  1655     0C4D  3000               	movlw	0
  1656     0C4E  00EA               	movwf	_ball_y_direction+1
  1657     0C4F                     l89:
  1658     0C4F  0008               	return
  1659     0C50                     __end_of_update_ball_direction:
  1660                           
  1661                           	psect	text4
  1662     037E                     __ptext4:	
  1663 ;; *************** function _updateANDset_ball_position *****************
  1664 ;; Defined at:
  1665 ;;		line 87 in file "main.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1679 ;;      Params:         0       0       0       0
  1680 ;;      Locals:         0       0       0       0
  1681 ;;      Temps:          0       0       0       0
  1682 ;;      Totals:         0       0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 2
  1686 ;; This function calls:
  1687 ;;		___fladd
  1688 ;;		___fldiv
  1689 ;;		___flsub
  1690 ;;		___fltol
  1691 ;;		_sqrt
  1692 ;; This function is called by:
  1693 ;;		_update_game_state
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697     037E                     _updateANDset_ball_position:	
  1698                           ;psect for function _updateANDset_ball_position
  1699                           
  1700     037E                     l2671:	
  1701                           ;incstack = 0
  1702                           ; Regs used in _updateANDset_ball_position: [wreg+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1703                           
  1704                           
  1705                           ;main.c: 90:     if(ball_x_direction == 1) {
  1706     037E  1283               	bcf	3,5	;RP0=0, select bank0
  1707     037F  1303               	bcf	3,6	;RP1=0, select bank0
  1708     0380  036B               	decf	_ball_x_direction,w
  1709     0381  046C               	iorwf	_ball_x_direction+1,w
  1710     0382  1D03               	btfss	3,2
  1711     0383  2B85               	goto	u3341
  1712     0384  2B86               	goto	u3340
  1713     0385                     u3341:
  1714     0385  2C00               	goto	l2683
  1715     0386                     u3340:
  1716     0386                     l2673:
  1717                           
  1718                           ;main.c: 91:         old_x_position = ball_x_position;
  1719     0386  086F               	movf	_ball_x_position,w
  1720     0387  1683               	bsf	3,5	;RP0=1, select bank1
  1721     0388  1303               	bcf	3,6	;RP1=0, select bank1
  1722     0389  00BA               	movwf	_old_x_position^(0+128)
  1723     038A                     l2675:
  1724                           
  1725                           ;main.c: 92:         f_x_position += dx/sqrt(dx*dx + dy*dy * 1.0);
  1726     038A  303F               	movlw	63
  1727     038B  1283               	bcf	3,5	;RP0=0, select bank0
  1728     038C  1303               	bcf	3,6	;RP1=0, select bank0
  1729     038D  00BC               	movwf	___fldiv@b+3
  1730     038E  308C               	movlw	140
  1731     038F  00BB               	movwf	___fldiv@b+2
  1732     0390  30CC               	movlw	204
  1733     0391  00BA               	movwf	___fldiv@b+1
  1734     0392  30CD               	movlw	205
  1735     0393  00B9               	movwf	___fldiv@b
  1736     0394  303F               	movlw	63
  1737     0395  00F3               	movwf	sqrt@a+3
  1738     0396  30F7               	movlw	247
  1739     0397  00F2               	movwf	sqrt@a+2
  1740     0398  305C               	movlw	92
  1741     0399  00F1               	movwf	sqrt@a+1
  1742     039A  3029               	movlw	41
  1743     039B  00F0               	movwf	sqrt@a
  1744     039C  118A  21A8  118A   	fcall	_sqrt
  1745     039F  0873               	movf	?_sqrt+3,w
  1746     03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1747     03A1  1303               	bcf	3,6	;RP1=0, select bank0
  1748     03A2  00B8               	movwf	___fldiv@a+3
  1749     03A3  0872               	movf	?_sqrt+2,w
  1750     03A4  00B7               	movwf	___fldiv@a+2
  1751     03A5  0871               	movf	?_sqrt+1,w
  1752     03A6  00B6               	movwf	___fldiv@a+1
  1753     03A7  0870               	movf	?_sqrt,w
  1754     03A8  00B5               	movwf	___fldiv@a
  1755     03A9  158A  262D  118A   	fcall	___fldiv
  1756     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1757     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1758     03AE  0838               	movf	?___fldiv+3,w
  1759     03AF  00CD               	movwf	___fladd@b+3
  1760     03B0  0837               	movf	?___fldiv+2,w
  1761     03B1  00CC               	movwf	___fladd@b+2
  1762     03B2  0836               	movf	?___fldiv+1,w
  1763     03B3  00CB               	movwf	___fladd@b+1
  1764     03B4  0835               	movf	?___fldiv,w
  1765     03B5  00CA               	movwf	___fladd@b
  1766     03B6  1683               	bsf	3,5	;RP0=1, select bank1
  1767     03B7  1303               	bcf	3,6	;RP1=0, select bank1
  1768     03B8  082F               	movf	(_f_x_position+3)^(0+128),w
  1769     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1770     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1771     03BB  00D1               	movwf	___fladd@a+3
  1772     03BC  1683               	bsf	3,5	;RP0=1, select bank1
  1773     03BD  1303               	bcf	3,6	;RP1=0, select bank1
  1774     03BE  082E               	movf	(_f_x_position+2)^(0+128),w
  1775     03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1776     03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1777     03C1  00D0               	movwf	___fladd@a+2
  1778     03C2  1683               	bsf	3,5	;RP0=1, select bank1
  1779     03C3  1303               	bcf	3,6	;RP1=0, select bank1
  1780     03C4  082D               	movf	(_f_x_position+1)^(0+128),w
  1781     03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1782     03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1783     03C7  00CF               	movwf	___fladd@a+1
  1784     03C8  1683               	bsf	3,5	;RP0=1, select bank1
  1785     03C9  1303               	bcf	3,6	;RP1=0, select bank1
  1786     03CA  082C               	movf	_f_x_position^(0+128),w
  1787     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1788     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1789     03CD  00CE               	movwf	___fladd@a
  1790     03CE  118A  2585  118A   	fcall	___fladd
  1791     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1792     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1793     03D3  084D               	movf	?___fladd+3,w
  1794     03D4  1683               	bsf	3,5	;RP0=1, select bank1
  1795     03D5  1303               	bcf	3,6	;RP1=0, select bank1
  1796     03D6  00AF               	movwf	(_f_x_position+3)^(0+128)
  1797     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1798     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1799     03D9  084C               	movf	?___fladd+2,w
  1800     03DA  1683               	bsf	3,5	;RP0=1, select bank1
  1801     03DB  1303               	bcf	3,6	;RP1=0, select bank1
  1802     03DC  00AE               	movwf	(_f_x_position+2)^(0+128)
  1803     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1804     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1805     03DF  084B               	movf	?___fladd+1,w
  1806     03E0  1683               	bsf	3,5	;RP0=1, select bank1
  1807     03E1  1303               	bcf	3,6	;RP1=0, select bank1
  1808     03E2  00AD               	movwf	(_f_x_position+1)^(0+128)
  1809     03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1810     03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1811     03E5  084A               	movf	?___fladd,w
  1812     03E6  1683               	bsf	3,5	;RP0=1, select bank1
  1813     03E7  1303               	bcf	3,6	;RP1=0, select bank1
  1814     03E8  00AC               	movwf	_f_x_position^(0+128)
  1815     03E9                     l2677:
  1816                           
  1817                           ;main.c: 93:         ball_x_position = (uint8_t)f_x_position;
  1818     03E9  082F               	movf	(_f_x_position+3)^(0+128),w
  1819     03EA  00F3               	movwf	___fltol@f1+3
  1820     03EB  082E               	movf	(_f_x_position+2)^(0+128),w
  1821     03EC  00F2               	movwf	___fltol@f1+2
  1822     03ED  082D               	movf	(_f_x_position+1)^(0+128),w
  1823     03EE  00F1               	movwf	___fltol@f1+1
  1824     03EF  082C               	movf	_f_x_position^(0+128),w
  1825     03F0  00F0               	movwf	___fltol@f1
  1826     03F1  158A  25B7  118A   	fcall	___fltol
  1827     03F4  0870               	movf	?___fltol,w
  1828     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1829     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1830     03F7  00EF               	movwf	_ball_x_position
  1831     03F8                     l2679:
  1832                           
  1833                           ;main.c: 94:         if(ball_x_position >= 124) {
  1834     03F8  307C               	movlw	124
  1835     03F9  026F               	subwf	_ball_x_position,w
  1836     03FA  1C03               	skipc
  1837     03FB  2BFD               	goto	u3351
  1838     03FC  2BFE               	goto	u3350
  1839     03FD                     u3351:
  1840     03FD  2C00               	goto	l2683
  1841     03FE                     u3350:
  1842     03FE                     l2681:
  1843                           
  1844                           ;main.c: 95:             ball_x_position = 124;
  1845     03FE  307C               	movlw	124
  1846     03FF  00EF               	movwf	_ball_x_position
  1847     0400                     l2683:
  1848                           
  1849                           ;main.c: 98:     if(ball_x_direction == -1) {
  1850     0400  0A6B               	incf	_ball_x_direction,w
  1851     0401  1D03               	skipz
  1852     0402  2C07               	goto	u3361
  1853     0403  0A6C               	incf	_ball_x_direction+1,w
  1854     0404  1D03               	btfss	3,2
  1855     0405  2C07               	goto	u3361
  1856     0406  2C08               	goto	u3360
  1857     0407                     u3361:
  1858     0407  2C82               	goto	l2695
  1859     0408                     u3360:
  1860     0408                     l2685:
  1861                           
  1862                           ;main.c: 99:         old_x_position = ball_x_position;
  1863     0408  086F               	movf	_ball_x_position,w
  1864     0409  1683               	bsf	3,5	;RP0=1, select bank1
  1865     040A  1303               	bcf	3,6	;RP1=0, select bank1
  1866     040B  00BA               	movwf	_old_x_position^(0+128)
  1867     040C                     l2687:
  1868                           
  1869                           ;main.c: 100:         f_x_position -= dx/sqrt(dx*dx + dy*dy * 1.0);
  1870     040C  303F               	movlw	63
  1871     040D  1283               	bcf	3,5	;RP0=0, select bank0
  1872     040E  1303               	bcf	3,6	;RP1=0, select bank0
  1873     040F  00BC               	movwf	___fldiv@b+3
  1874     0410  308C               	movlw	140
  1875     0411  00BB               	movwf	___fldiv@b+2
  1876     0412  30CC               	movlw	204
  1877     0413  00BA               	movwf	___fldiv@b+1
  1878     0414  30CD               	movlw	205
  1879     0415  00B9               	movwf	___fldiv@b
  1880     0416  303F               	movlw	63
  1881     0417  00F3               	movwf	sqrt@a+3
  1882     0418  30F7               	movlw	247
  1883     0419  00F2               	movwf	sqrt@a+2
  1884     041A  305C               	movlw	92
  1885     041B  00F1               	movwf	sqrt@a+1
  1886     041C  3029               	movlw	41
  1887     041D  00F0               	movwf	sqrt@a
  1888     041E  118A  21A8  118A   	fcall	_sqrt
  1889     0421  0873               	movf	?_sqrt+3,w
  1890     0422  1283               	bcf	3,5	;RP0=0, select bank0
  1891     0423  1303               	bcf	3,6	;RP1=0, select bank0
  1892     0424  00B8               	movwf	___fldiv@a+3
  1893     0425  0872               	movf	?_sqrt+2,w
  1894     0426  00B7               	movwf	___fldiv@a+2
  1895     0427  0871               	movf	?_sqrt+1,w
  1896     0428  00B6               	movwf	___fldiv@a+1
  1897     0429  0870               	movf	?_sqrt,w
  1898     042A  00B5               	movwf	___fldiv@a
  1899     042B  158A  262D  118A   	fcall	___fldiv
  1900     042E  1283               	bcf	3,5	;RP0=0, select bank0
  1901     042F  1303               	bcf	3,6	;RP1=0, select bank0
  1902     0430  0838               	movf	?___fldiv+3,w
  1903     0431  00E1               	movwf	___flsub@a+3
  1904     0432  0837               	movf	?___fldiv+2,w
  1905     0433  00E0               	movwf	___flsub@a+2
  1906     0434  0836               	movf	?___fldiv+1,w
  1907     0435  00DF               	movwf	___flsub@a+1
  1908     0436  0835               	movf	?___fldiv,w
  1909     0437  00DE               	movwf	___flsub@a
  1910     0438  1683               	bsf	3,5	;RP0=1, select bank1
  1911     0439  1303               	bcf	3,6	;RP1=0, select bank1
  1912     043A  082F               	movf	(_f_x_position+3)^(0+128),w
  1913     043B  1283               	bcf	3,5	;RP0=0, select bank0
  1914     043C  1303               	bcf	3,6	;RP1=0, select bank0
  1915     043D  00E5               	movwf	___flsub@b+3
  1916     043E  1683               	bsf	3,5	;RP0=1, select bank1
  1917     043F  1303               	bcf	3,6	;RP1=0, select bank1
  1918     0440  082E               	movf	(_f_x_position+2)^(0+128),w
  1919     0441  1283               	bcf	3,5	;RP0=0, select bank0
  1920     0442  1303               	bcf	3,6	;RP1=0, select bank0
  1921     0443  00E4               	movwf	___flsub@b+2
  1922     0444  1683               	bsf	3,5	;RP0=1, select bank1
  1923     0445  1303               	bcf	3,6	;RP1=0, select bank1
  1924     0446  082D               	movf	(_f_x_position+1)^(0+128),w
  1925     0447  1283               	bcf	3,5	;RP0=0, select bank0
  1926     0448  1303               	bcf	3,6	;RP1=0, select bank0
  1927     0449  00E3               	movwf	___flsub@b+1
  1928     044A  1683               	bsf	3,5	;RP0=1, select bank1
  1929     044B  1303               	bcf	3,6	;RP1=0, select bank1
  1930     044C  082C               	movf	_f_x_position^(0+128),w
  1931     044D  1283               	bcf	3,5	;RP0=0, select bank0
  1932     044E  1303               	bcf	3,6	;RP1=0, select bank0
  1933     044F  00E2               	movwf	___flsub@b
  1934     0450  158A  2279  118A   	fcall	___flsub
  1935     0453  1283               	bcf	3,5	;RP0=0, select bank0
  1936     0454  1303               	bcf	3,6	;RP1=0, select bank0
  1937     0455  0861               	movf	?___flsub+3,w
  1938     0456  1683               	bsf	3,5	;RP0=1, select bank1
  1939     0457  1303               	bcf	3,6	;RP1=0, select bank1
  1940     0458  00AF               	movwf	(_f_x_position+3)^(0+128)
  1941     0459  1283               	bcf	3,5	;RP0=0, select bank0
  1942     045A  1303               	bcf	3,6	;RP1=0, select bank0
  1943     045B  0860               	movf	?___flsub+2,w
  1944     045C  1683               	bsf	3,5	;RP0=1, select bank1
  1945     045D  1303               	bcf	3,6	;RP1=0, select bank1
  1946     045E  00AE               	movwf	(_f_x_position+2)^(0+128)
  1947     045F  1283               	bcf	3,5	;RP0=0, select bank0
  1948     0460  1303               	bcf	3,6	;RP1=0, select bank0
  1949     0461  085F               	movf	?___flsub+1,w
  1950     0462  1683               	bsf	3,5	;RP0=1, select bank1
  1951     0463  1303               	bcf	3,6	;RP1=0, select bank1
  1952     0464  00AD               	movwf	(_f_x_position+1)^(0+128)
  1953     0465  1283               	bcf	3,5	;RP0=0, select bank0
  1954     0466  1303               	bcf	3,6	;RP1=0, select bank0
  1955     0467  085E               	movf	?___flsub,w
  1956     0468  1683               	bsf	3,5	;RP0=1, select bank1
  1957     0469  1303               	bcf	3,6	;RP1=0, select bank1
  1958     046A  00AC               	movwf	_f_x_position^(0+128)
  1959     046B                     l2689:
  1960                           
  1961                           ;main.c: 101:         ball_x_position = (uint8_t)f_x_position;
  1962     046B  082F               	movf	(_f_x_position+3)^(0+128),w
  1963     046C  00F3               	movwf	___fltol@f1+3
  1964     046D  082E               	movf	(_f_x_position+2)^(0+128),w
  1965     046E  00F2               	movwf	___fltol@f1+2
  1966     046F  082D               	movf	(_f_x_position+1)^(0+128),w
  1967     0470  00F1               	movwf	___fltol@f1+1
  1968     0471  082C               	movf	_f_x_position^(0+128),w
  1969     0472  00F0               	movwf	___fltol@f1
  1970     0473  158A  25B7  118A   	fcall	___fltol
  1971     0476  0870               	movf	?___fltol,w
  1972     0477  1283               	bcf	3,5	;RP0=0, select bank0
  1973     0478  1303               	bcf	3,6	;RP1=0, select bank0
  1974     0479  00EF               	movwf	_ball_x_position
  1975     047A                     l2691:
  1976                           
  1977                           ;main.c: 102:         if(ball_x_position <= 1) {
  1978     047A  3002               	movlw	2
  1979     047B  026F               	subwf	_ball_x_position,w
  1980     047C  1803               	skipnc
  1981     047D  2C7F               	goto	u3371
  1982     047E  2C80               	goto	u3370
  1983     047F                     u3371:
  1984     047F  2C82               	goto	l2695
  1985     0480                     u3370:
  1986     0480                     l2693:
  1987                           
  1988                           ;main.c: 103:             ball_x_position = 1;
  1989     0480  01EF               	clrf	_ball_x_position
  1990     0481  0AEF               	incf	_ball_x_position,f
  1991     0482                     l2695:
  1992                           
  1993                           ;main.c: 107:     if(ball_y_direction == 1) {
  1994     0482  0369               	decf	_ball_y_direction,w
  1995     0483  046A               	iorwf	_ball_y_direction+1,w
  1996     0484  1D03               	btfss	3,2
  1997     0485  2C87               	goto	u3381
  1998     0486  2C88               	goto	u3380
  1999     0487                     u3381:
  2000     0487  2D02               	goto	l2707
  2001     0488                     u3380:
  2002     0488                     l2697:
  2003                           
  2004                           ;main.c: 108:         old_y_position = ball_y_position;
  2005     0488  086E               	movf	_ball_y_position,w
  2006     0489  1683               	bsf	3,5	;RP0=1, select bank1
  2007     048A  1303               	bcf	3,6	;RP1=0, select bank1
  2008     048B  00B9               	movwf	_old_y_position^(0+128)
  2009     048C                     l2699:
  2010                           
  2011                           ;main.c: 109:         f_y_position += dy/sqrt(dx*dx + dy*dy * 1.0);
  2012     048C  303F               	movlw	63
  2013     048D  1283               	bcf	3,5	;RP0=0, select bank0
  2014     048E  1303               	bcf	3,6	;RP1=0, select bank0
  2015     048F  00BC               	movwf	___fldiv@b+3
  2016     0490  3059               	movlw	89
  2017     0491  00BB               	movwf	___fldiv@b+2
  2018     0492  3099               	movlw	153
  2019     0493  00BA               	movwf	___fldiv@b+1
  2020     0494  309A               	movlw	154
  2021     0495  00B9               	movwf	___fldiv@b
  2022     0496  303F               	movlw	63
  2023     0497  00F3               	movwf	sqrt@a+3
  2024     0498  30F7               	movlw	247
  2025     0499  00F2               	movwf	sqrt@a+2
  2026     049A  305C               	movlw	92
  2027     049B  00F1               	movwf	sqrt@a+1
  2028     049C  3029               	movlw	41
  2029     049D  00F0               	movwf	sqrt@a
  2030     049E  118A  21A8  118A   	fcall	_sqrt
  2031     04A1  0873               	movf	?_sqrt+3,w
  2032     04A2  1283               	bcf	3,5	;RP0=0, select bank0
  2033     04A3  1303               	bcf	3,6	;RP1=0, select bank0
  2034     04A4  00B8               	movwf	___fldiv@a+3
  2035     04A5  0872               	movf	?_sqrt+2,w
  2036     04A6  00B7               	movwf	___fldiv@a+2
  2037     04A7  0871               	movf	?_sqrt+1,w
  2038     04A8  00B6               	movwf	___fldiv@a+1
  2039     04A9  0870               	movf	?_sqrt,w
  2040     04AA  00B5               	movwf	___fldiv@a
  2041     04AB  158A  262D  118A   	fcall	___fldiv
  2042     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2043     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2044     04B0  0838               	movf	?___fldiv+3,w
  2045     04B1  00CD               	movwf	___fladd@b+3
  2046     04B2  0837               	movf	?___fldiv+2,w
  2047     04B3  00CC               	movwf	___fladd@b+2
  2048     04B4  0836               	movf	?___fldiv+1,w
  2049     04B5  00CB               	movwf	___fladd@b+1
  2050     04B6  0835               	movf	?___fldiv,w
  2051     04B7  00CA               	movwf	___fladd@b
  2052     04B8  1683               	bsf	3,5	;RP0=1, select bank1
  2053     04B9  1303               	bcf	3,6	;RP1=0, select bank1
  2054     04BA  082B               	movf	(_f_y_position+3)^(0+128),w
  2055     04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2056     04BC  1303               	bcf	3,6	;RP1=0, select bank0
  2057     04BD  00D1               	movwf	___fladd@a+3
  2058     04BE  1683               	bsf	3,5	;RP0=1, select bank1
  2059     04BF  1303               	bcf	3,6	;RP1=0, select bank1
  2060     04C0  082A               	movf	(_f_y_position+2)^(0+128),w
  2061     04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2062     04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2063     04C3  00D0               	movwf	___fladd@a+2
  2064     04C4  1683               	bsf	3,5	;RP0=1, select bank1
  2065     04C5  1303               	bcf	3,6	;RP1=0, select bank1
  2066     04C6  0829               	movf	(_f_y_position+1)^(0+128),w
  2067     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2068     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2069     04C9  00CF               	movwf	___fladd@a+1
  2070     04CA  1683               	bsf	3,5	;RP0=1, select bank1
  2071     04CB  1303               	bcf	3,6	;RP1=0, select bank1
  2072     04CC  0828               	movf	_f_y_position^(0+128),w
  2073     04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2074     04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2075     04CF  00CE               	movwf	___fladd@a
  2076     04D0  118A  2585  118A   	fcall	___fladd
  2077     04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2078     04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2079     04D5  084D               	movf	?___fladd+3,w
  2080     04D6  1683               	bsf	3,5	;RP0=1, select bank1
  2081     04D7  1303               	bcf	3,6	;RP1=0, select bank1
  2082     04D8  00AB               	movwf	(_f_y_position+3)^(0+128)
  2083     04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2084     04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2085     04DB  084C               	movf	?___fladd+2,w
  2086     04DC  1683               	bsf	3,5	;RP0=1, select bank1
  2087     04DD  1303               	bcf	3,6	;RP1=0, select bank1
  2088     04DE  00AA               	movwf	(_f_y_position+2)^(0+128)
  2089     04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2090     04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2091     04E1  084B               	movf	?___fladd+1,w
  2092     04E2  1683               	bsf	3,5	;RP0=1, select bank1
  2093     04E3  1303               	bcf	3,6	;RP1=0, select bank1
  2094     04E4  00A9               	movwf	(_f_y_position+1)^(0+128)
  2095     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2096     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2097     04E7  084A               	movf	?___fladd,w
  2098     04E8  1683               	bsf	3,5	;RP0=1, select bank1
  2099     04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2100     04EA  00A8               	movwf	_f_y_position^(0+128)
  2101     04EB                     l2701:
  2102                           
  2103                           ;main.c: 110:         ball_y_position = (uint8_t)f_y_position;
  2104     04EB  082B               	movf	(_f_y_position+3)^(0+128),w
  2105     04EC  00F3               	movwf	___fltol@f1+3
  2106     04ED  082A               	movf	(_f_y_position+2)^(0+128),w
  2107     04EE  00F2               	movwf	___fltol@f1+2
  2108     04EF  0829               	movf	(_f_y_position+1)^(0+128),w
  2109     04F0  00F1               	movwf	___fltol@f1+1
  2110     04F1  0828               	movf	_f_y_position^(0+128),w
  2111     04F2  00F0               	movwf	___fltol@f1
  2112     04F3  158A  25B7  118A   	fcall	___fltol
  2113     04F6  0870               	movf	?___fltol,w
  2114     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2115     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2116     04F9  00EE               	movwf	_ball_y_position
  2117     04FA                     l2703:
  2118                           
  2119                           ;main.c: 111:         if(ball_y_position >= 92) {
  2120     04FA  305C               	movlw	92
  2121     04FB  026E               	subwf	_ball_y_position,w
  2122     04FC  1C03               	skipc
  2123     04FD  2CFF               	goto	u3391
  2124     04FE  2D00               	goto	u3390
  2125     04FF                     u3391:
  2126     04FF  2D02               	goto	l2707
  2127     0500                     u3390:
  2128     0500                     l2705:
  2129                           
  2130                           ;main.c: 112:             ball_y_position = 92;
  2131     0500  305C               	movlw	92
  2132     0501  00EE               	movwf	_ball_y_position
  2133     0502                     l2707:
  2134                           
  2135                           ;main.c: 115:     if(ball_y_direction == -1) {
  2136     0502  0A69               	incf	_ball_y_direction,w
  2137     0503  1D03               	skipz
  2138     0504  2D09               	goto	u3401
  2139     0505  0A6A               	incf	_ball_y_direction+1,w
  2140     0506  1D03               	btfss	3,2
  2141     0507  2D09               	goto	u3401
  2142     0508  2D0A               	goto	u3400
  2143     0509                     u3401:
  2144     0509  2D84               	goto	l100
  2145     050A                     u3400:
  2146     050A                     l2709:
  2147                           
  2148                           ;main.c: 116:         old_y_position = ball_y_position;
  2149     050A  086E               	movf	_ball_y_position,w
  2150     050B  1683               	bsf	3,5	;RP0=1, select bank1
  2151     050C  1303               	bcf	3,6	;RP1=0, select bank1
  2152     050D  00B9               	movwf	_old_y_position^(0+128)
  2153     050E                     l2711:
  2154                           
  2155                           ;main.c: 117:         f_y_position -= dy/sqrt(dx*dx + dy*dy * 1.0);
  2156     050E  303F               	movlw	63
  2157     050F  1283               	bcf	3,5	;RP0=0, select bank0
  2158     0510  1303               	bcf	3,6	;RP1=0, select bank0
  2159     0511  00BC               	movwf	___fldiv@b+3
  2160     0512  3059               	movlw	89
  2161     0513  00BB               	movwf	___fldiv@b+2
  2162     0514  3099               	movlw	153
  2163     0515  00BA               	movwf	___fldiv@b+1
  2164     0516  309A               	movlw	154
  2165     0517  00B9               	movwf	___fldiv@b
  2166     0518  303F               	movlw	63
  2167     0519  00F3               	movwf	sqrt@a+3
  2168     051A  30F7               	movlw	247
  2169     051B  00F2               	movwf	sqrt@a+2
  2170     051C  305C               	movlw	92
  2171     051D  00F1               	movwf	sqrt@a+1
  2172     051E  3029               	movlw	41
  2173     051F  00F0               	movwf	sqrt@a
  2174     0520  118A  21A8  118A   	fcall	_sqrt
  2175     0523  0873               	movf	?_sqrt+3,w
  2176     0524  1283               	bcf	3,5	;RP0=0, select bank0
  2177     0525  1303               	bcf	3,6	;RP1=0, select bank0
  2178     0526  00B8               	movwf	___fldiv@a+3
  2179     0527  0872               	movf	?_sqrt+2,w
  2180     0528  00B7               	movwf	___fldiv@a+2
  2181     0529  0871               	movf	?_sqrt+1,w
  2182     052A  00B6               	movwf	___fldiv@a+1
  2183     052B  0870               	movf	?_sqrt,w
  2184     052C  00B5               	movwf	___fldiv@a
  2185     052D  158A  262D  118A   	fcall	___fldiv
  2186     0530  1283               	bcf	3,5	;RP0=0, select bank0
  2187     0531  1303               	bcf	3,6	;RP1=0, select bank0
  2188     0532  0838               	movf	?___fldiv+3,w
  2189     0533  00E1               	movwf	___flsub@a+3
  2190     0534  0837               	movf	?___fldiv+2,w
  2191     0535  00E0               	movwf	___flsub@a+2
  2192     0536  0836               	movf	?___fldiv+1,w
  2193     0537  00DF               	movwf	___flsub@a+1
  2194     0538  0835               	movf	?___fldiv,w
  2195     0539  00DE               	movwf	___flsub@a
  2196     053A  1683               	bsf	3,5	;RP0=1, select bank1
  2197     053B  1303               	bcf	3,6	;RP1=0, select bank1
  2198     053C  082B               	movf	(_f_y_position+3)^(0+128),w
  2199     053D  1283               	bcf	3,5	;RP0=0, select bank0
  2200     053E  1303               	bcf	3,6	;RP1=0, select bank0
  2201     053F  00E5               	movwf	___flsub@b+3
  2202     0540  1683               	bsf	3,5	;RP0=1, select bank1
  2203     0541  1303               	bcf	3,6	;RP1=0, select bank1
  2204     0542  082A               	movf	(_f_y_position+2)^(0+128),w
  2205     0543  1283               	bcf	3,5	;RP0=0, select bank0
  2206     0544  1303               	bcf	3,6	;RP1=0, select bank0
  2207     0545  00E4               	movwf	___flsub@b+2
  2208     0546  1683               	bsf	3,5	;RP0=1, select bank1
  2209     0547  1303               	bcf	3,6	;RP1=0, select bank1
  2210     0548  0829               	movf	(_f_y_position+1)^(0+128),w
  2211     0549  1283               	bcf	3,5	;RP0=0, select bank0
  2212     054A  1303               	bcf	3,6	;RP1=0, select bank0
  2213     054B  00E3               	movwf	___flsub@b+1
  2214     054C  1683               	bsf	3,5	;RP0=1, select bank1
  2215     054D  1303               	bcf	3,6	;RP1=0, select bank1
  2216     054E  0828               	movf	_f_y_position^(0+128),w
  2217     054F  1283               	bcf	3,5	;RP0=0, select bank0
  2218     0550  1303               	bcf	3,6	;RP1=0, select bank0
  2219     0551  00E2               	movwf	___flsub@b
  2220     0552  158A  2279  118A   	fcall	___flsub
  2221     0555  1283               	bcf	3,5	;RP0=0, select bank0
  2222     0556  1303               	bcf	3,6	;RP1=0, select bank0
  2223     0557  0861               	movf	?___flsub+3,w
  2224     0558  1683               	bsf	3,5	;RP0=1, select bank1
  2225     0559  1303               	bcf	3,6	;RP1=0, select bank1
  2226     055A  00AB               	movwf	(_f_y_position+3)^(0+128)
  2227     055B  1283               	bcf	3,5	;RP0=0, select bank0
  2228     055C  1303               	bcf	3,6	;RP1=0, select bank0
  2229     055D  0860               	movf	?___flsub+2,w
  2230     055E  1683               	bsf	3,5	;RP0=1, select bank1
  2231     055F  1303               	bcf	3,6	;RP1=0, select bank1
  2232     0560  00AA               	movwf	(_f_y_position+2)^(0+128)
  2233     0561  1283               	bcf	3,5	;RP0=0, select bank0
  2234     0562  1303               	bcf	3,6	;RP1=0, select bank0
  2235     0563  085F               	movf	?___flsub+1,w
  2236     0564  1683               	bsf	3,5	;RP0=1, select bank1
  2237     0565  1303               	bcf	3,6	;RP1=0, select bank1
  2238     0566  00A9               	movwf	(_f_y_position+1)^(0+128)
  2239     0567  1283               	bcf	3,5	;RP0=0, select bank0
  2240     0568  1303               	bcf	3,6	;RP1=0, select bank0
  2241     0569  085E               	movf	?___flsub,w
  2242     056A  1683               	bsf	3,5	;RP0=1, select bank1
  2243     056B  1303               	bcf	3,6	;RP1=0, select bank1
  2244     056C  00A8               	movwf	_f_y_position^(0+128)
  2245     056D                     l2713:
  2246                           
  2247                           ;main.c: 118:         ball_y_position = (uint8_t)f_y_position;
  2248     056D  082B               	movf	(_f_y_position+3)^(0+128),w
  2249     056E  00F3               	movwf	___fltol@f1+3
  2250     056F  082A               	movf	(_f_y_position+2)^(0+128),w
  2251     0570  00F2               	movwf	___fltol@f1+2
  2252     0571  0829               	movf	(_f_y_position+1)^(0+128),w
  2253     0572  00F1               	movwf	___fltol@f1+1
  2254     0573  0828               	movf	_f_y_position^(0+128),w
  2255     0574  00F0               	movwf	___fltol@f1
  2256     0575  158A  25B7  118A   	fcall	___fltol
  2257     0578  0870               	movf	?___fltol,w
  2258     0579  1283               	bcf	3,5	;RP0=0, select bank0
  2259     057A  1303               	bcf	3,6	;RP1=0, select bank0
  2260     057B  00EE               	movwf	_ball_y_position
  2261     057C                     l2715:
  2262                           
  2263                           ;main.c: 119:         if(ball_y_position <= 2) {
  2264     057C  3003               	movlw	3
  2265     057D  026E               	subwf	_ball_y_position,w
  2266     057E  1803               	skipnc
  2267     057F  2D81               	goto	u3411
  2268     0580  2D82               	goto	u3410
  2269     0581                     u3411:
  2270     0581  2D84               	goto	l100
  2271     0582                     u3410:
  2272     0582                     l2717:
  2273                           
  2274                           ;main.c: 120:             ball_y_position = 2;
  2275     0582  3002               	movlw	2
  2276     0583  00EE               	movwf	_ball_y_position
  2277     0584                     l100:
  2278     0584  0008               	return
  2279     0585                     __end_of_updateANDset_ball_position:
  2280                           
  2281                           	psect	text5
  2282     01A8                     __ptext5:	
  2283 ;; *************** function _sqrt *****************
  2284 ;; Defined at:
  2285 ;;		line 9 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcsqrt.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  a               4    0[COMMON] void 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  frac            4   17[BANK0 ] unsigned long 
  2290 ;;  root            4   13[BANK0 ] struct .
  2291 ;;  grs             4    7[BANK0 ] unsigned long 
  2292 ;;  tfrac           4    2[BANK0 ] unsigned long 
  2293 ;;  exp             2   11[BANK0 ] int 
  2294 ;;  p               1    6[BANK0 ] unsigned char 
  2295 ;;  i               1    1[BANK0 ] unsigned char 
  2296 ;;  sign            1    0[BANK0 ] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  4    0[COMMON] unsigned char 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, btemp+1
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2306 ;;      Params:         4       0       0       0
  2307 ;;      Locals:         0      21       0       0
  2308 ;;      Temps:          4       0       0       0
  2309 ;;      Totals:         8      21       0       0
  2310 ;;Total ram usage:       29 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_updateANDset_ball_position
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319     01A8                     _sqrt:	
  2320                           ;psect for function _sqrt
  2321                           
  2322     01A8                     l2339:	
  2323                           ;incstack = 0
  2324                           ; Regs used in _sqrt: [wreg+status,2+status,0+btemp+1]
  2325                           
  2326     01A8  0873               	movf	sqrt@a+3,w
  2327     01A9  3980               	andlw	128
  2328     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2329     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2330     01AC  00A0               	movwf	sqrt@sign
  2331     01AD                     l2341:
  2332     01AD  0873               	movf	sqrt@a+3,w
  2333     01AE  00F4               	movwf	??_sqrt
  2334     01AF  0774               	addwf	??_sqrt,w
  2335     01B0  00A6               	movwf	sqrt@p
  2336     01B1                     l2343:
  2337     01B1  1FF2               	btfss	sqrt@a+2,7
  2338     01B2  29B4               	goto	u2651
  2339     01B3  29B5               	goto	u2650
  2340     01B4                     u2651:
  2341     01B4  29B6               	goto	l2347
  2342     01B5                     u2650:
  2343     01B5                     l2345:
  2344     01B5  1426               	bsf	sqrt@p,0
  2345     01B6                     l2347:
  2346     01B6  0826               	movf	sqrt@p,w
  2347     01B7  00F4               	movwf	??_sqrt
  2348     01B8  01F5               	clrf	??_sqrt+1
  2349     01B9  0874               	movf	??_sqrt,w
  2350     01BA  00AB               	movwf	sqrt@exp
  2351     01BB  0875               	movf	??_sqrt+1,w
  2352     01BC  00AC               	movwf	sqrt@exp+1
  2353     01BD  30FF               	movlw	255
  2354     01BE  0570               	andwf	sqrt@a,w
  2355     01BF  00B1               	movwf	sqrt@frac
  2356     01C0  30FF               	movlw	255
  2357     01C1  0571               	andwf	sqrt@a+1,w
  2358     01C2  00B2               	movwf	sqrt@frac+1
  2359     01C3  307F               	movlw	127
  2360     01C4  0572               	andwf	sqrt@a+2,w
  2361     01C5  00B3               	movwf	sqrt@frac+2
  2362     01C6  3000               	movlw	0
  2363     01C7  0573               	andwf	sqrt@a+3,w
  2364     01C8  00B4               	movwf	sqrt@frac+3
  2365     01C9                     l2349:
  2366     01C9  082B               	movf	sqrt@exp,w
  2367     01CA  042C               	iorwf	sqrt@exp+1,w
  2368     01CB  1903               	btfsc	3,2
  2369     01CC  29CE               	goto	u2661
  2370     01CD  29CF               	goto	u2660
  2371     01CE                     u2661:
  2372     01CE  29D6               	goto	l2355
  2373     01CF                     u2660:
  2374     01CF                     l2351:
  2375     01CF  17B3               	bsf	sqrt@frac+2,7
  2376     01D0                     l2353:
  2377     01D0  0A2B               	incf	sqrt@exp,w
  2378     01D1  042C               	iorwf	sqrt@exp+1,w
  2379     01D2  1D03               	btfss	3,2
  2380     01D3  29D5               	goto	u2671
  2381     01D4  29D6               	goto	u2670
  2382     01D5                     u2671:
  2383     01D5  29DE               	goto	l2359
  2384     01D6                     u2670:
  2385     01D6                     l2355:
  2386     01D6  3000               	movlw	0
  2387     01D7  00B4               	movwf	sqrt@frac+3
  2388     01D8  3000               	movlw	0
  2389     01D9  00B3               	movwf	sqrt@frac+2
  2390     01DA  3000               	movlw	0
  2391     01DB  00B2               	movwf	sqrt@frac+1
  2392     01DC  3000               	movlw	0
  2393     01DD  00B1               	movwf	sqrt@frac
  2394     01DE                     l2359:
  2395     01DE  082B               	movf	sqrt@exp,w
  2396     01DF  042C               	iorwf	sqrt@exp+1,w
  2397     01E0  1D03               	btfss	3,2
  2398     01E1  29E3               	goto	u2681
  2399     01E2  29E4               	goto	u2680
  2400     01E3                     u2681:
  2401     01E3  29ED               	goto	l2365
  2402     01E4                     u2680:
  2403     01E4                     l2361:
  2404     01E4  3000               	movlw	0
  2405     01E5  00F3               	movwf	?_sqrt+3
  2406     01E6  3000               	movlw	0
  2407     01E7  00F2               	movwf	?_sqrt+2
  2408     01E8  3000               	movlw	0
  2409     01E9  00F1               	movwf	?_sqrt+1
  2410     01EA  3000               	movlw	0
  2411     01EB  00F0               	movwf	?_sqrt
  2412     01EC  2B7D               	goto	l815
  2413     01ED                     l2365:
  2414     01ED  0820               	movf	sqrt@sign,w
  2415     01EE  1903               	btfsc	3,2
  2416     01EF  29F1               	goto	u2691
  2417     01F0  29F2               	goto	u2690
  2418     01F1                     u2691:
  2419     01F1  2A0F               	goto	l2371
  2420     01F2                     u2690:
  2421     01F2                     l2367:
  2422     01F2  3000               	movlw	0
  2423     01F3  00B0               	movwf	sqrt@root+3
  2424     01F4  3040               	movlw	64
  2425     01F5  00AF               	movwf	sqrt@root+2
  2426     01F6  3000               	movlw	0
  2427     01F7  00AE               	movwf	sqrt@root+1
  2428     01F8  3000               	movlw	0
  2429     01F9  00AD               	movwf	sqrt@root
  2430     01FA  3080               	movlw	128
  2431     01FB  04AF               	iorwf	sqrt@root+2,f
  2432     01FC  30FF               	movlw	255
  2433     01FD  04B0               	iorwf	sqrt@root+3,f
  2434     01FE  3021               	movlw	33
  2435     01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2436     0200  1303               	bcf	3,6	;RP1=0, select bank1
  2437     0201  00B4               	movwf	_errno^(0+128)
  2438     0202  3000               	movlw	0
  2439     0203  00B5               	movwf	(_errno^(0+128)+1)
  2440     0204  1283               	bcf	3,5	;RP0=0, select bank0
  2441     0205  1303               	bcf	3,6	;RP1=0, select bank0
  2442     0206  0830               	movf	sqrt@root+3,w
  2443     0207  00F3               	movwf	?_sqrt+3
  2444     0208  082F               	movf	sqrt@root+2,w
  2445     0209  00F2               	movwf	?_sqrt+2
  2446     020A  082E               	movf	sqrt@root+1,w
  2447     020B  00F1               	movwf	?_sqrt+1
  2448     020C  082D               	movf	sqrt@root,w
  2449     020D  00F0               	movwf	?_sqrt
  2450     020E  2B7D               	goto	l815
  2451     020F                     l2371:
  2452     020F  0A2B               	incf	sqrt@exp,w
  2453     0210  042C               	iorwf	sqrt@exp+1,w
  2454     0211  1D03               	btfss	3,2
  2455     0212  2A14               	goto	u2701
  2456     0213  2A15               	goto	u2700
  2457     0214                     u2701:
  2458     0214  2A26               	goto	l2377
  2459     0215                     u2700:
  2460     0215                     l2373:
  2461     0215  307F               	movlw	127
  2462     0216  00B0               	movwf	sqrt@root+3
  2463     0217  3080               	movlw	128
  2464     0218  00AF               	movwf	sqrt@root+2
  2465     0219  3000               	movlw	0
  2466     021A  00AE               	movwf	sqrt@root+1
  2467     021B  3000               	movlw	0
  2468     021C  00AD               	movwf	sqrt@root
  2469     021D  0830               	movf	sqrt@root+3,w
  2470     021E  00F3               	movwf	?_sqrt+3
  2471     021F  082F               	movf	sqrt@root+2,w
  2472     0220  00F2               	movwf	?_sqrt+2
  2473     0221  082E               	movf	sqrt@root+1,w
  2474     0222  00F1               	movwf	?_sqrt+1
  2475     0223  082D               	movf	sqrt@root,w
  2476     0224  00F0               	movwf	?_sqrt
  2477     0225  2B7D               	goto	l815
  2478     0226                     l2377:
  2479     0226  3081               	movlw	129
  2480     0227  07AB               	addwf	sqrt@exp,f
  2481     0228  1803               	skipnc
  2482     0229  0AAC               	incf	sqrt@exp+1,f
  2483     022A  30FF               	movlw	255
  2484     022B  07AC               	addwf	sqrt@exp+1,f
  2485     022C                     l2379:
  2486     022C  082B               	movf	sqrt@exp,w
  2487     022D  3901               	andlw	1
  2488     022E  00A6               	movwf	sqrt@p
  2489     022F                     l2381:
  2490     022F  3001               	movlw	1
  2491     0230  00FF               	movwf	btemp+1
  2492     0231                     u2715:
  2493     0231  0D2C               	rlf	sqrt@exp+1,w
  2494     0232  0CAC               	rrf	sqrt@exp+1,f
  2495     0233  0CAB               	rrf	sqrt@exp,f
  2496     0234  0BFF               	decfsz	btemp+1,f
  2497     0235  2A31               	goto	u2715
  2498     0236                     l2383:
  2499     0236  307F               	movlw	127
  2500     0237  07AB               	addwf	sqrt@exp,f
  2501     0238  1803               	skipnc
  2502     0239  0AAC               	incf	sqrt@exp+1,f
  2503     023A  3000               	movlw	0
  2504     023B  07AC               	addwf	sqrt@exp+1,f
  2505     023C                     l2385:
  2506     023C  1003               	clrc
  2507     023D  0D31               	rlf	sqrt@frac,w
  2508     023E  00A2               	movwf	sqrt@tfrac
  2509     023F  0D32               	rlf	sqrt@frac+1,w
  2510     0240  00A3               	movwf	sqrt@tfrac+1
  2511     0241  0D33               	rlf	sqrt@frac+2,w
  2512     0242  00A4               	movwf	sqrt@tfrac+2
  2513     0243  0D34               	rlf	sqrt@frac+3,w
  2514     0244  00A5               	movwf	sqrt@tfrac+3
  2515     0245                     l2387:
  2516     0245  3000               	movlw	0
  2517     0246  00B4               	movwf	sqrt@frac+3
  2518     0247  3000               	movlw	0
  2519     0248  00B3               	movwf	sqrt@frac+2
  2520     0249  3000               	movlw	0
  2521     024A  00B2               	movwf	sqrt@frac+1
  2522     024B  3000               	movlw	0
  2523     024C  00B1               	movwf	sqrt@frac
  2524     024D                     l2389:
  2525     024D  3001               	movlw	1
  2526     024E  00AA               	movwf	sqrt@grs+3
  2527     024F  3000               	movlw	0
  2528     0250  00A9               	movwf	sqrt@grs+2
  2529     0251  3000               	movlw	0
  2530     0252  00A8               	movwf	sqrt@grs+1
  2531     0253  3000               	movlw	0
  2532     0254  00A7               	movwf	sqrt@grs
  2533     0255                     l2391:
  2534     0255  0826               	movf	sqrt@p,w
  2535     0256  1903               	btfsc	3,2
  2536     0257  2A59               	goto	u2721
  2537     0258  2A5A               	goto	u2720
  2538     0259                     u2721:
  2539     0259  2A63               	goto	l2395
  2540     025A                     u2720:
  2541     025A                     l2393:
  2542     025A  3001               	movlw	1
  2543     025B  00F4               	movwf	??_sqrt
  2544     025C                     u2735:
  2545     025C  1003               	clrc
  2546     025D  0DA2               	rlf	sqrt@tfrac,f
  2547     025E  0DA3               	rlf	sqrt@tfrac+1,f
  2548     025F  0DA4               	rlf	sqrt@tfrac+2,f
  2549     0260  0DA5               	rlf	sqrt@tfrac+3,f
  2550     0261  0BF4               	decfsz	??_sqrt,f
  2551     0262  2A5C               	goto	u2735
  2552     0263                     l2395:
  2553     0263  01A1               	clrf	sqrt@i
  2554     0264  2ADB               	goto	l2403
  2555     0265                     l2397:
  2556     0265  0827               	movf	sqrt@grs,w
  2557     0266  04B1               	iorwf	sqrt@frac,f
  2558     0267  0828               	movf	sqrt@grs+1,w
  2559     0268  04B2               	iorwf	sqrt@frac+1,f
  2560     0269  0829               	movf	sqrt@grs+2,w
  2561     026A  04B3               	iorwf	sqrt@frac+2,f
  2562     026B  082A               	movf	sqrt@grs+3,w
  2563     026C  04B4               	iorwf	sqrt@frac+3,f
  2564     026D  0834               	movf	sqrt@frac+3,w
  2565     026E  0225               	subwf	sqrt@tfrac+3,w
  2566     026F  1D03               	skipz
  2567     0270  2A7B               	goto	u2745
  2568     0271  0833               	movf	sqrt@frac+2,w
  2569     0272  0224               	subwf	sqrt@tfrac+2,w
  2570     0273  1D03               	skipz
  2571     0274  2A7B               	goto	u2745
  2572     0275  0832               	movf	sqrt@frac+1,w
  2573     0276  0223               	subwf	sqrt@tfrac+1,w
  2574     0277  1D03               	skipz
  2575     0278  2A7B               	goto	u2745
  2576     0279  0831               	movf	sqrt@frac,w
  2577     027A  0222               	subwf	sqrt@tfrac,w
  2578     027B                     u2745:
  2579     027B  1C03               	skipc
  2580     027C  2A7E               	goto	u2741
  2581     027D  2A7F               	goto	u2740
  2582     027E                     u2741:
  2583     027E  2AA5               	goto	l2401
  2584     027F                     u2740:
  2585     027F                     l2399:
  2586     027F  0831               	movf	sqrt@frac,w
  2587     0280  02A2               	subwf	sqrt@tfrac,f
  2588     0281  0832               	movf	sqrt@frac+1,w
  2589     0282  1C03               	skipc
  2590     0283  0F32               	incfsz	sqrt@frac+1,w
  2591     0284  02A3               	subwf	sqrt@tfrac+1,f
  2592     0285  0833               	movf	sqrt@frac+2,w
  2593     0286  1C03               	skipc
  2594     0287  0F33               	incfsz	sqrt@frac+2,w
  2595     0288  02A4               	subwf	sqrt@tfrac+2,f
  2596     0289  0834               	movf	sqrt@frac+3,w
  2597     028A  1C03               	skipc
  2598     028B  0F34               	incfsz	sqrt@frac+3,w
  2599     028C  02A5               	subwf	sqrt@tfrac+3,f
  2600     028D  0827               	movf	sqrt@grs,w
  2601     028E  07B1               	addwf	sqrt@frac,f
  2602     028F  0828               	movf	sqrt@grs+1,w
  2603     0290  1103               	clrz
  2604     0291  1803               	skipnc
  2605     0292  3E01               	addlw	1
  2606     0293  1903               	skipnz
  2607     0294  2A96               	goto	u2751
  2608     0295  07B2               	addwf	sqrt@frac+1,f
  2609     0296                     u2751:
  2610     0296  0829               	movf	sqrt@grs+2,w
  2611     0297  1103               	clrz
  2612     0298  1803               	skipnc
  2613     0299  3E01               	addlw	1
  2614     029A  1903               	skipnz
  2615     029B  2A9D               	goto	u2752
  2616     029C  07B3               	addwf	sqrt@frac+2,f
  2617     029D                     u2752:
  2618     029D  082A               	movf	sqrt@grs+3,w
  2619     029E  1103               	clrz
  2620     029F  1803               	skipnc
  2621     02A0  3E01               	addlw	1
  2622     02A1  1903               	skipnz
  2623     02A2  2AA4               	goto	u2753
  2624     02A3  07B4               	addwf	sqrt@frac+3,f
  2625     02A4                     u2753:
  2626     02A4  2AB5               	goto	l822
  2627     02A5                     l2401:
  2628     02A5  0927               	comf	sqrt@grs,w
  2629     02A6  00F4               	movwf	??_sqrt
  2630     02A7  0928               	comf	sqrt@grs+1,w
  2631     02A8  00F5               	movwf	??_sqrt+1
  2632     02A9  0929               	comf	sqrt@grs+2,w
  2633     02AA  00F6               	movwf	??_sqrt+2
  2634     02AB  092A               	comf	sqrt@grs+3,w
  2635     02AC  00F7               	movwf	??_sqrt+3
  2636     02AD  0874               	movf	??_sqrt,w
  2637     02AE  05B1               	andwf	sqrt@frac,f
  2638     02AF  0875               	movf	??_sqrt+1,w
  2639     02B0  05B2               	andwf	sqrt@frac+1,f
  2640     02B1  0876               	movf	??_sqrt+2,w
  2641     02B2  05B3               	andwf	sqrt@frac+2,f
  2642     02B3  0877               	movf	??_sqrt+3,w
  2643     02B4  05B4               	andwf	sqrt@frac+3,f
  2644     02B5                     l822:
  2645     02B5  0827               	movf	sqrt@grs,w
  2646     02B6  00F4               	movwf	??_sqrt
  2647     02B7  0828               	movf	sqrt@grs+1,w
  2648     02B8  00F5               	movwf	??_sqrt+1
  2649     02B9  0829               	movf	sqrt@grs+2,w
  2650     02BA  00F6               	movwf	??_sqrt+2
  2651     02BB  082A               	movf	sqrt@grs+3,w
  2652     02BC  00F7               	movwf	??_sqrt+3
  2653     02BD  3001               	movlw	1
  2654     02BE                     u2765:
  2655     02BE  1003               	clrc
  2656     02BF  0CF7               	rrf	??_sqrt+3,f
  2657     02C0  0CF6               	rrf	??_sqrt+2,f
  2658     02C1  0CF5               	rrf	??_sqrt+1,f
  2659     02C2  0CF4               	rrf	??_sqrt,f
  2660     02C3                     u2760:
  2661     02C3  3EFF               	addlw	-1
  2662     02C4  1D03               	skipz
  2663     02C5  2ABE               	goto	u2765
  2664     02C6  0877               	movf	??_sqrt+3,w
  2665     02C7  00AA               	movwf	sqrt@grs+3
  2666     02C8  0876               	movf	??_sqrt+2,w
  2667     02C9  00A9               	movwf	sqrt@grs+2
  2668     02CA  0875               	movf	??_sqrt+1,w
  2669     02CB  00A8               	movwf	sqrt@grs+1
  2670     02CC  0874               	movf	??_sqrt,w
  2671     02CD  00A7               	movwf	sqrt@grs
  2672     02CE  3001               	movlw	1
  2673     02CF  00F4               	movwf	??_sqrt
  2674     02D0                     u2775:
  2675     02D0  1003               	clrc
  2676     02D1  0DA2               	rlf	sqrt@tfrac,f
  2677     02D2  0DA3               	rlf	sqrt@tfrac+1,f
  2678     02D3  0DA4               	rlf	sqrt@tfrac+2,f
  2679     02D4  0DA5               	rlf	sqrt@tfrac+3,f
  2680     02D5  0BF4               	decfsz	??_sqrt,f
  2681     02D6  2AD0               	goto	u2775
  2682     02D7  3001               	movlw	1
  2683     02D8  00F4               	movwf	??_sqrt
  2684     02D9  0874               	movf	??_sqrt,w
  2685     02DA  07A1               	addwf	sqrt@i,f
  2686     02DB                     l2403:
  2687     02DB  3019               	movlw	25
  2688     02DC  0221               	subwf	sqrt@i,w
  2689     02DD  1C03               	skipc
  2690     02DE  2AE0               	goto	u2781
  2691     02DF  2AE1               	goto	u2780
  2692     02E0                     u2781:
  2693     02E0  2A65               	goto	l2397
  2694     02E1                     u2780:
  2695     02E1                     l2405:
  2696     02E1  0831               	movf	sqrt@frac,w
  2697     02E2  00F4               	movwf	??_sqrt
  2698     02E3  0832               	movf	sqrt@frac+1,w
  2699     02E4  00F5               	movwf	??_sqrt+1
  2700     02E5  0833               	movf	sqrt@frac+2,w
  2701     02E6  00F6               	movwf	??_sqrt+2
  2702     02E7  0834               	movf	sqrt@frac+3,w
  2703     02E8  00F7               	movwf	??_sqrt+3
  2704     02E9  3001               	movlw	1
  2705     02EA                     u2795:
  2706     02EA  1003               	clrc
  2707     02EB  0CF7               	rrf	??_sqrt+3,f
  2708     02EC  0CF6               	rrf	??_sqrt+2,f
  2709     02ED  0CF5               	rrf	??_sqrt+1,f
  2710     02EE  0CF4               	rrf	??_sqrt,f
  2711     02EF                     u2790:
  2712     02EF  3EFF               	addlw	-1
  2713     02F0  1D03               	skipz
  2714     02F1  2AEA               	goto	u2795
  2715     02F2  0877               	movf	??_sqrt+3,w
  2716     02F3  00B4               	movwf	sqrt@frac+3
  2717     02F4  0876               	movf	??_sqrt+2,w
  2718     02F5  00B3               	movwf	sqrt@frac+2
  2719     02F6  0875               	movf	??_sqrt+1,w
  2720     02F7  00B2               	movwf	sqrt@frac+1
  2721     02F8  0874               	movf	??_sqrt,w
  2722     02F9  00B1               	movwf	sqrt@frac
  2723     02FA                     l2407:
  2724     02FA  3001               	movlw	1
  2725     02FB  0531               	andwf	sqrt@frac,w
  2726     02FC  00A7               	movwf	sqrt@grs
  2727     02FD  3000               	movlw	0
  2728     02FE  0532               	andwf	sqrt@frac+1,w
  2729     02FF  00A8               	movwf	sqrt@grs+1
  2730     0300  3000               	movlw	0
  2731     0301  0533               	andwf	sqrt@frac+2,w
  2732     0302  00A9               	movwf	sqrt@grs+2
  2733     0303  3000               	movlw	0
  2734     0304  0534               	andwf	sqrt@frac+3,w
  2735     0305  00AA               	movwf	sqrt@grs+3
  2736     0306                     l2409:
  2737     0306  0831               	movf	sqrt@frac,w
  2738     0307  00F4               	movwf	??_sqrt
  2739     0308  0832               	movf	sqrt@frac+1,w
  2740     0309  00F5               	movwf	??_sqrt+1
  2741     030A  0833               	movf	sqrt@frac+2,w
  2742     030B  00F6               	movwf	??_sqrt+2
  2743     030C  0834               	movf	sqrt@frac+3,w
  2744     030D  00F7               	movwf	??_sqrt+3
  2745     030E  3001               	movlw	1
  2746     030F                     u2805:
  2747     030F  1003               	clrc
  2748     0310  0CF7               	rrf	??_sqrt+3,f
  2749     0311  0CF6               	rrf	??_sqrt+2,f
  2750     0312  0CF5               	rrf	??_sqrt+1,f
  2751     0313  0CF4               	rrf	??_sqrt,f
  2752     0314                     u2800:
  2753     0314  3EFF               	addlw	-1
  2754     0315  1D03               	skipz
  2755     0316  2B0F               	goto	u2805
  2756     0317  0877               	movf	??_sqrt+3,w
  2757     0318  00B4               	movwf	sqrt@frac+3
  2758     0319  0876               	movf	??_sqrt+2,w
  2759     031A  00B3               	movwf	sqrt@frac+2
  2760     031B  0875               	movf	??_sqrt+1,w
  2761     031C  00B2               	movwf	sqrt@frac+1
  2762     031D  0874               	movf	??_sqrt,w
  2763     031E  00B1               	movwf	sqrt@frac
  2764     031F  0827               	movf	sqrt@grs,w
  2765     0320  07B1               	addwf	sqrt@frac,f
  2766     0321  0828               	movf	sqrt@grs+1,w
  2767     0322  1103               	clrz
  2768     0323  1803               	skipnc
  2769     0324  3E01               	addlw	1
  2770     0325  1903               	skipnz
  2771     0326  2B28               	goto	u2811
  2772     0327  07B2               	addwf	sqrt@frac+1,f
  2773     0328                     u2811:
  2774     0328  0829               	movf	sqrt@grs+2,w
  2775     0329  1103               	clrz
  2776     032A  1803               	skipnc
  2777     032B  3E01               	addlw	1
  2778     032C  1903               	skipnz
  2779     032D  2B2F               	goto	u2812
  2780     032E  07B3               	addwf	sqrt@frac+2,f
  2781     032F                     u2812:
  2782     032F  082A               	movf	sqrt@grs+3,w
  2783     0330  1103               	clrz
  2784     0331  1803               	skipnc
  2785     0332  3E01               	addlw	1
  2786     0333  1903               	skipnz
  2787     0334  2B36               	goto	u2813
  2788     0335  07B4               	addwf	sqrt@frac+3,f
  2789     0336                     u2813:
  2790     0336                     l2411:
  2791     0336  1C34               	btfss	sqrt@frac+3,0
  2792     0337  2B39               	goto	u2821
  2793     0338  2B3A               	goto	u2820
  2794     0339                     u2821:
  2795     0339  2B59               	goto	l2417
  2796     033A                     u2820:
  2797     033A                     l2413:
  2798     033A  0831               	movf	sqrt@frac,w
  2799     033B  00F4               	movwf	??_sqrt
  2800     033C  0832               	movf	sqrt@frac+1,w
  2801     033D  00F5               	movwf	??_sqrt+1
  2802     033E  0833               	movf	sqrt@frac+2,w
  2803     033F  00F6               	movwf	??_sqrt+2
  2804     0340  0834               	movf	sqrt@frac+3,w
  2805     0341  00F7               	movwf	??_sqrt+3
  2806     0342  3001               	movlw	1
  2807     0343                     u2835:
  2808     0343  1003               	clrc
  2809     0344  0CF7               	rrf	??_sqrt+3,f
  2810     0345  0CF6               	rrf	??_sqrt+2,f
  2811     0346  0CF5               	rrf	??_sqrt+1,f
  2812     0347  0CF4               	rrf	??_sqrt,f
  2813     0348                     u2830:
  2814     0348  3EFF               	addlw	-1
  2815     0349  1D03               	skipz
  2816     034A  2B43               	goto	u2835
  2817     034B  0877               	movf	??_sqrt+3,w
  2818     034C  00B4               	movwf	sqrt@frac+3
  2819     034D  0876               	movf	??_sqrt+2,w
  2820     034E  00B3               	movwf	sqrt@frac+2
  2821     034F  0875               	movf	??_sqrt+1,w
  2822     0350  00B2               	movwf	sqrt@frac+1
  2823     0351  0874               	movf	??_sqrt,w
  2824     0352  00B1               	movwf	sqrt@frac
  2825     0353                     l2415:
  2826     0353  3001               	movlw	1
  2827     0354  07AB               	addwf	sqrt@exp,f
  2828     0355  1803               	skipnc
  2829     0356  0AAC               	incf	sqrt@exp+1,f
  2830     0357  3000               	movlw	0
  2831     0358  07AC               	addwf	sqrt@exp+1,f
  2832     0359                     l2417:
  2833     0359  30FF               	movlw	255
  2834     035A  0531               	andwf	sqrt@frac,w
  2835     035B  00AD               	movwf	sqrt@root
  2836     035C  30FF               	movlw	255
  2837     035D  0532               	andwf	sqrt@frac+1,w
  2838     035E  00AE               	movwf	sqrt@root+1
  2839     035F  307F               	movlw	127
  2840     0360  0533               	andwf	sqrt@frac+2,w
  2841     0361  00AF               	movwf	sqrt@root+2
  2842     0362  3000               	movlw	0
  2843     0363  0534               	andwf	sqrt@frac+3,w
  2844     0364  00B0               	movwf	sqrt@root+3
  2845     0365                     l2419:
  2846     0365  082B               	movf	sqrt@exp,w
  2847     0366  00A6               	movwf	sqrt@p
  2848     0367                     l2421:
  2849     0367  1C26               	btfss	sqrt@p,0
  2850     0368  2B6A               	goto	u2841
  2851     0369  2B6B               	goto	u2840
  2852     036A                     u2841:
  2853     036A  2B6C               	goto	l2425
  2854     036B                     u2840:
  2855     036B                     l2423:
  2856     036B  17AF               	bsf	sqrt@root+2,7
  2857     036C                     l2425:
  2858     036C  0826               	movf	sqrt@p,w
  2859     036D  00F4               	movwf	??_sqrt
  2860     036E  1003               	clrc
  2861     036F  0C74               	rrf	??_sqrt,w
  2862     0370  00B0               	movwf	sqrt@root+3
  2863     0371  307F               	movlw	127
  2864     0372  00F4               	movwf	??_sqrt
  2865     0373  0874               	movf	??_sqrt,w
  2866     0374  05B0               	andwf	sqrt@root+3,f
  2867     0375                     l2427:
  2868     0375  0830               	movf	sqrt@root+3,w
  2869     0376  00F3               	movwf	?_sqrt+3
  2870     0377  082F               	movf	sqrt@root+2,w
  2871     0378  00F2               	movwf	?_sqrt+2
  2872     0379  082E               	movf	sqrt@root+1,w
  2873     037A  00F1               	movwf	?_sqrt+1
  2874     037B  082D               	movf	sqrt@root,w
  2875     037C  00F0               	movwf	?_sqrt
  2876     037D                     l815:
  2877     037D  0008               	return
  2878     037E                     __end_of_sqrt:
  2879                           
  2880                           	psect	text6
  2881     0DB7                     __ptext6:	
  2882 ;; *************** function ___fltol *****************
  2883 ;; Defined at:
  2884 ;;		line 43 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/fltol.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  f1              4    0[COMMON] unsigned char 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  exp1            1    9[COMMON] unsigned char 
  2889 ;;  sign1           1    8[COMMON] unsigned char 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  4    0[COMMON] long 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2899 ;;      Params:         4       0       0       0
  2900 ;;      Locals:         2       0       0       0
  2901 ;;      Temps:          4       0       0       0
  2902 ;;      Totals:        10       0       0       0
  2903 ;;Total ram usage:       10 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; This function calls:
  2906 ;;		Nothing
  2907 ;; This function is called by:
  2908 ;;		_updateANDset_ball_position
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912     0DB7                     ___fltol:	
  2913                           ;psect for function ___fltol
  2914                           
  2915     0DB7                     l2463:	
  2916                           ;incstack = 0
  2917                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2918                           
  2919     0DB7  1003               	clrc
  2920     0DB8  0D72               	rlf	___fltol@f1+2,w
  2921     0DB9  0D73               	rlf	___fltol@f1+3,w
  2922     0DBA  00F9               	movwf	___fltol@exp1
  2923     0DBB  0879               	movf	___fltol@exp1,w
  2924     0DBC  1D03               	btfss	3,2
  2925     0DBD  2DBF               	goto	u2871
  2926     0DBE  2DC0               	goto	u2870
  2927     0DBF                     u2871:
  2928     0DBF  2DC9               	goto	l2469
  2929     0DC0                     u2870:
  2930     0DC0                     l2465:
  2931     0DC0  3000               	movlw	0
  2932     0DC1  00F3               	movwf	?___fltol+3
  2933     0DC2  3000               	movlw	0
  2934     0DC3  00F2               	movwf	?___fltol+2
  2935     0DC4  3000               	movlw	0
  2936     0DC5  00F1               	movwf	?___fltol+1
  2937     0DC6  3000               	movlw	0
  2938     0DC7  00F0               	movwf	?___fltol
  2939     0DC8  2E2C               	goto	l581
  2940     0DC9                     l2469:
  2941     0DC9  0870               	movf	___fltol@f1,w
  2942     0DCA  00F4               	movwf	??___fltol
  2943     0DCB  0871               	movf	___fltol@f1+1,w
  2944     0DCC  00F5               	movwf	??___fltol+1
  2945     0DCD  0872               	movf	___fltol@f1+2,w
  2946     0DCE  00F6               	movwf	??___fltol+2
  2947     0DCF  0873               	movf	___fltol@f1+3,w
  2948     0DD0  00F7               	movwf	??___fltol+3
  2949     0DD1  301F               	movlw	31
  2950     0DD2                     u2885:
  2951     0DD2  1003               	clrc
  2952     0DD3  0CF7               	rrf	??___fltol+3,f
  2953     0DD4  0CF6               	rrf	??___fltol+2,f
  2954     0DD5  0CF5               	rrf	??___fltol+1,f
  2955     0DD6  0CF4               	rrf	??___fltol,f
  2956     0DD7                     u2880:
  2957     0DD7  3EFF               	addlw	-1
  2958     0DD8  1D03               	skipz
  2959     0DD9  2DD2               	goto	u2885
  2960     0DDA  0874               	movf	??___fltol,w
  2961     0DDB  00F8               	movwf	___fltol@sign1
  2962     0DDC                     l2471:
  2963     0DDC  17F2               	bsf	___fltol@f1+2,7
  2964     0DDD                     l2473:
  2965     0DDD  30FF               	movlw	255
  2966     0DDE  05F0               	andwf	___fltol@f1,f
  2967     0DDF  30FF               	movlw	255
  2968     0DE0  05F1               	andwf	___fltol@f1+1,f
  2969     0DE1  30FF               	movlw	255
  2970     0DE2  05F2               	andwf	___fltol@f1+2,f
  2971     0DE3  3000               	movlw	0
  2972     0DE4  05F3               	andwf	___fltol@f1+3,f
  2973     0DE5                     l2475:
  2974     0DE5  3096               	movlw	150
  2975     0DE6  02F9               	subwf	___fltol@exp1,f
  2976     0DE7                     l2477:
  2977     0DE7  1FF9               	btfss	___fltol@exp1,7
  2978     0DE8  2DEA               	goto	u2891
  2979     0DE9  2DEB               	goto	u2890
  2980     0DEA                     u2891:
  2981     0DEA  2E05               	goto	l2487
  2982     0DEB                     u2890:
  2983     0DEB                     l2479:
  2984     0DEB  0879               	movf	___fltol@exp1,w
  2985     0DEC  3A80               	xorlw	128
  2986     0DED  3E97               	addlw	151
  2987     0DEE  1803               	skipnc
  2988     0DEF  2DF1               	goto	u2901
  2989     0DF0  2DF2               	goto	u2900
  2990     0DF1                     u2901:
  2991     0DF1  2DF3               	goto	l2485
  2992     0DF2                     u2900:
  2993     0DF2  2DC0               	goto	l2465
  2994     0DF3                     l2485:
  2995     0DF3  3001               	movlw	1
  2996     0DF4                     u2915:
  2997     0DF4  1003               	clrc
  2998     0DF5  0CF3               	rrf	___fltol@f1+3,f
  2999     0DF6  0CF2               	rrf	___fltol@f1+2,f
  3000     0DF7  0CF1               	rrf	___fltol@f1+1,f
  3001     0DF8  0CF0               	rrf	___fltol@f1,f
  3002     0DF9  3EFF               	addlw	-1
  3003     0DFA  1D03               	skipz
  3004     0DFB  2DF4               	goto	u2915
  3005     0DFC  3001               	movlw	1
  3006     0DFD  00F4               	movwf	??___fltol
  3007     0DFE  0874               	movf	??___fltol,w
  3008     0DFF  07F9               	addwf	___fltol@exp1,f
  3009     0E00  1D03               	btfss	3,2
  3010     0E01  2E03               	goto	u2921
  3011     0E02  2E04               	goto	u2920
  3012     0E03                     u2921:
  3013     0E03  2DF3               	goto	l2485
  3014     0E04                     u2920:
  3015     0E04  2E1C               	goto	l2495
  3016     0E05                     l2487:
  3017     0E05  3020               	movlw	32
  3018     0E06  0279               	subwf	___fltol@exp1,w
  3019     0E07  1C03               	skipc
  3020     0E08  2E0A               	goto	u2931
  3021     0E09  2E0B               	goto	u2930
  3022     0E0A                     u2931:
  3023     0E0A  2E17               	goto	l588
  3024     0E0B                     u2930:
  3025     0E0B  2DC0               	goto	l2465
  3026     0E0C                     l2493:
  3027     0E0C  3001               	movlw	1
  3028     0E0D  00F4               	movwf	??___fltol
  3029     0E0E                     u2945:
  3030     0E0E  1003               	clrc
  3031     0E0F  0DF0               	rlf	___fltol@f1,f
  3032     0E10  0DF1               	rlf	___fltol@f1+1,f
  3033     0E11  0DF2               	rlf	___fltol@f1+2,f
  3034     0E12  0DF3               	rlf	___fltol@f1+3,f
  3035     0E13  0BF4               	decfsz	??___fltol,f
  3036     0E14  2E0E               	goto	u2945
  3037     0E15  3001               	movlw	1
  3038     0E16  02F9               	subwf	___fltol@exp1,f
  3039     0E17                     l588:
  3040     0E17  0879               	movf	___fltol@exp1,w
  3041     0E18  1D03               	btfss	3,2
  3042     0E19  2E1B               	goto	u2951
  3043     0E1A  2E1C               	goto	u2950
  3044     0E1B                     u2951:
  3045     0E1B  2E0C               	goto	l2493
  3046     0E1C                     u2950:
  3047     0E1C                     l2495:
  3048     0E1C  0878               	movf	___fltol@sign1,w
  3049     0E1D  1903               	btfsc	3,2
  3050     0E1E  2E20               	goto	u2961
  3051     0E1F  2E21               	goto	u2960
  3052     0E20                     u2961:
  3053     0E20  2E2C               	goto	l591
  3054     0E21                     u2960:
  3055     0E21                     l2497:
  3056     0E21  09F0               	comf	___fltol@f1,f
  3057     0E22  09F1               	comf	___fltol@f1+1,f
  3058     0E23  09F2               	comf	___fltol@f1+2,f
  3059     0E24  09F3               	comf	___fltol@f1+3,f
  3060     0E25  0AF0               	incf	___fltol@f1,f
  3061     0E26  1903               	skipnz
  3062     0E27  0AF1               	incf	___fltol@f1+1,f
  3063     0E28  1903               	skipnz
  3064     0E29  0AF2               	incf	___fltol@f1+2,f
  3065     0E2A  1903               	skipnz
  3066     0E2B  0AF3               	incf	___fltol@f1+3,f
  3067     0E2C                     l591:
  3068     0E2C                     l581:
  3069     0E2C  0008               	return
  3070     0E2D                     __end_of___fltol:
  3071                           
  3072                           	psect	text7
  3073     0A79                     __ptext7:	
  3074 ;; *************** function ___flsub *****************
  3075 ;; Defined at:
  3076 ;;		line 242 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcadd.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  a               4   62[BANK0 ] long 
  3079 ;;  b               4   66[BANK0 ] long 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  4   62[BANK0 ] long 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3091 ;;      Params:         0       8       0       0
  3092 ;;      Locals:         0       0       0       0
  3093 ;;      Temps:          0       0       0       0
  3094 ;;      Totals:         0       8       0       0
  3095 ;;Total ram usage:        8 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 1
  3098 ;; This function calls:
  3099 ;;		___fladd
  3100 ;; This function is called by:
  3101 ;;		_updateANDset_ball_position
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105     0A79                     ___flsub:	
  3106                           ;psect for function ___flsub
  3107                           
  3108     0A79                     l2499:	
  3109                           ;incstack = 0
  3110                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3111                           
  3112     0A79  3080               	movlw	128
  3113     0A7A  1283               	bcf	3,5	;RP0=0, select bank0
  3114     0A7B  1303               	bcf	3,6	;RP1=0, select bank0
  3115     0A7C  06E1               	xorwf	___flsub@a+3,f
  3116     0A7D                     l2501:
  3117     0A7D  0865               	movf	___flsub@b+3,w
  3118     0A7E  00CD               	movwf	___fladd@b+3
  3119     0A7F  0864               	movf	___flsub@b+2,w
  3120     0A80  00CC               	movwf	___fladd@b+2
  3121     0A81  0863               	movf	___flsub@b+1,w
  3122     0A82  00CB               	movwf	___fladd@b+1
  3123     0A83  0862               	movf	___flsub@b,w
  3124     0A84  00CA               	movwf	___fladd@b
  3125     0A85  0861               	movf	___flsub@a+3,w
  3126     0A86  00D1               	movwf	___fladd@a+3
  3127     0A87  0860               	movf	___flsub@a+2,w
  3128     0A88  00D0               	movwf	___fladd@a+2
  3129     0A89  085F               	movf	___flsub@a+1,w
  3130     0A8A  00CF               	movwf	___fladd@a+1
  3131     0A8B  085E               	movf	___flsub@a,w
  3132     0A8C  00CE               	movwf	___fladd@a
  3133     0A8D  118A  2585  158A   	fcall	___fladd
  3134     0A90  1283               	bcf	3,5	;RP0=0, select bank0
  3135     0A91  1303               	bcf	3,6	;RP1=0, select bank0
  3136     0A92  084D               	movf	?___fladd+3,w
  3137     0A93  00E1               	movwf	?___flsub+3
  3138     0A94  084C               	movf	?___fladd+2,w
  3139     0A95  00E0               	movwf	?___flsub+2
  3140     0A96  084B               	movf	?___fladd+1,w
  3141     0A97  00DF               	movwf	?___flsub+1
  3142     0A98  084A               	movf	?___fladd,w
  3143     0A99  00DE               	movwf	?___flsub
  3144     0A9A                     l734:
  3145     0A9A  0008               	return
  3146     0A9B                     __end_of___flsub:
  3147                           
  3148                           	psect	text8
  3149     0585                     __ptext8:	
  3150 ;; *************** function ___fladd *****************
  3151 ;; Defined at:
  3152 ;;		line 10 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcadd.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  b               4   42[BANK0 ] long 
  3155 ;;  a               4   46[BANK0 ] long 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  grs             1   61[BANK0 ] unsigned char 
  3158 ;;  bexp            1   60[BANK0 ] unsigned char 
  3159 ;;  aexp            1   59[BANK0 ] unsigned char 
  3160 ;;  signs           1   58[BANK0 ] unsigned char 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  4   42[BANK0 ] unsigned char 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0, btemp+1
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3170 ;;      Params:         0       8       0       0
  3171 ;;      Locals:         0       4       0       0
  3172 ;;      Temps:          0       8       0       0
  3173 ;;      Totals:         0      20       0       0
  3174 ;;Total ram usage:       20 bytes
  3175 ;; Hardware stack levels used: 1
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_updateANDset_ball_position
  3180 ;;		___flsub
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184     0585                     ___fladd:	
  3185                           ;psect for function ___fladd
  3186                           
  3187     0585                     l2145:	
  3188                           ;incstack = 0
  3189                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3190                           
  3191     0585  1283               	bcf	3,5	;RP0=0, select bank0
  3192     0586  1303               	bcf	3,6	;RP1=0, select bank0
  3193     0587  084D               	movf	___fladd@b+3,w
  3194     0588  3980               	andlw	128
  3195     0589  00DA               	movwf	___fladd@signs
  3196     058A                     l2147:
  3197     058A  084D               	movf	___fladd@b+3,w
  3198     058B  00D2               	movwf	??___fladd
  3199     058C  0752               	addwf	??___fladd,w
  3200     058D  00DC               	movwf	___fladd@bexp
  3201     058E                     l2149:
  3202     058E  1FCC               	btfss	___fladd@b+2,7
  3203     058F  2D91               	goto	u2191
  3204     0590  2D92               	goto	u2190
  3205     0591                     u2191:
  3206     0591  2D93               	goto	l2153
  3207     0592                     u2190:
  3208     0592                     l2151:
  3209     0592  145C               	bsf	___fladd@bexp,0
  3210     0593                     l2153:
  3211     0593  085C               	movf	___fladd@bexp,w
  3212     0594  1903               	btfsc	3,2
  3213     0595  2D97               	goto	u2201
  3214     0596  2D98               	goto	u2200
  3215     0597                     u2201:
  3216     0597  2DA8               	goto	l2163
  3217     0598                     u2200:
  3218     0598                     l2155:
  3219     0598  0A5C               	incf	___fladd@bexp,w
  3220     0599  1D03               	btfss	3,2
  3221     059A  2D9C               	goto	u2211
  3222     059B  2D9D               	goto	u2210
  3223     059C                     u2211:
  3224     059C  2DA5               	goto	l2159
  3225     059D                     u2210:
  3226     059D                     l2157:
  3227     059D  3000               	movlw	0
  3228     059E  00CD               	movwf	___fladd@b+3
  3229     059F  3000               	movlw	0
  3230     05A0  00CC               	movwf	___fladd@b+2
  3231     05A1  3000               	movlw	0
  3232     05A2  00CB               	movwf	___fladd@b+1
  3233     05A3  3000               	movlw	0
  3234     05A4  00CA               	movwf	___fladd@b
  3235     05A5                     l2159:
  3236     05A5  17CC               	bsf	___fladd@b+2,7
  3237     05A6                     l2161:
  3238     05A6  01CD               	clrf	___fladd@b+3
  3239     05A7  2DB0               	goto	l2165
  3240     05A8                     l2163:
  3241     05A8  3000               	movlw	0
  3242     05A9  00CD               	movwf	___fladd@b+3
  3243     05AA  3000               	movlw	0
  3244     05AB  00CC               	movwf	___fladd@b+2
  3245     05AC  3000               	movlw	0
  3246     05AD  00CB               	movwf	___fladd@b+1
  3247     05AE  3000               	movlw	0
  3248     05AF  00CA               	movwf	___fladd@b
  3249     05B0                     l2165:
  3250     05B0  0851               	movf	___fladd@a+3,w
  3251     05B1  3980               	andlw	128
  3252     05B2  00DB               	movwf	___fladd@aexp
  3253     05B3                     l2167:
  3254     05B3  085B               	movf	___fladd@aexp,w
  3255     05B4  065A               	xorwf	___fladd@signs,w
  3256     05B5  1903               	skipnz
  3257     05B6  2DB8               	goto	u2221
  3258     05B7  2DB9               	goto	u2220
  3259     05B8                     u2221:
  3260     05B8  2DBA               	goto	l2171
  3261     05B9                     u2220:
  3262     05B9                     l2169:
  3263     05B9  175A               	bsf	___fladd@signs,6
  3264     05BA                     l2171:
  3265     05BA  0851               	movf	___fladd@a+3,w
  3266     05BB  00D2               	movwf	??___fladd
  3267     05BC  0752               	addwf	??___fladd,w
  3268     05BD  00DB               	movwf	___fladd@aexp
  3269     05BE                     l2173:
  3270     05BE  1FD0               	btfss	___fladd@a+2,7
  3271     05BF  2DC1               	goto	u2231
  3272     05C0  2DC2               	goto	u2230
  3273     05C1                     u2231:
  3274     05C1  2DC3               	goto	l2177
  3275     05C2                     u2230:
  3276     05C2                     l2175:
  3277     05C2  145B               	bsf	___fladd@aexp,0
  3278     05C3                     l2177:
  3279     05C3  085B               	movf	___fladd@aexp,w
  3280     05C4  1903               	btfsc	3,2
  3281     05C5  2DC7               	goto	u2241
  3282     05C6  2DC8               	goto	u2240
  3283     05C7                     u2241:
  3284     05C7  2DD8               	goto	l2187
  3285     05C8                     u2240:
  3286     05C8                     l2179:
  3287     05C8  0A5B               	incf	___fladd@aexp,w
  3288     05C9  1D03               	btfss	3,2
  3289     05CA  2DCC               	goto	u2251
  3290     05CB  2DCD               	goto	u2250
  3291     05CC                     u2251:
  3292     05CC  2DD5               	goto	l2183
  3293     05CD                     u2250:
  3294     05CD                     l2181:
  3295     05CD  3000               	movlw	0
  3296     05CE  00D1               	movwf	___fladd@a+3
  3297     05CF  3000               	movlw	0
  3298     05D0  00D0               	movwf	___fladd@a+2
  3299     05D1  3000               	movlw	0
  3300     05D2  00CF               	movwf	___fladd@a+1
  3301     05D3  3000               	movlw	0
  3302     05D4  00CE               	movwf	___fladd@a
  3303     05D5                     l2183:
  3304     05D5  17D0               	bsf	___fladd@a+2,7
  3305     05D6                     l2185:
  3306     05D6  01D1               	clrf	___fladd@a+3
  3307     05D7  2DE0               	goto	l688
  3308     05D8                     l2187:
  3309     05D8  3000               	movlw	0
  3310     05D9  00D1               	movwf	___fladd@a+3
  3311     05DA  3000               	movlw	0
  3312     05DB  00D0               	movwf	___fladd@a+2
  3313     05DC  3000               	movlw	0
  3314     05DD  00CF               	movwf	___fladd@a+1
  3315     05DE  3000               	movlw	0
  3316     05DF  00CE               	movwf	___fladd@a
  3317     05E0                     l688:
  3318     05E0  085C               	movf	___fladd@bexp,w
  3319     05E1  025B               	subwf	___fladd@aexp,w
  3320     05E2  1803               	skipnc
  3321     05E3  2DE5               	goto	u2261
  3322     05E4  2DE6               	goto	u2260
  3323     05E5                     u2261:
  3324     05E5  2E0C               	goto	l2223
  3325     05E6                     u2260:
  3326     05E6                     l2189:
  3327     05E6  1F5A               	btfss	___fladd@signs,6
  3328     05E7  2DE9               	goto	u2271
  3329     05E8  2DEA               	goto	u2270
  3330     05E9                     u2271:
  3331     05E9  2DEE               	goto	l2193
  3332     05EA                     u2270:
  3333     05EA                     l2191:
  3334     05EA  3080               	movlw	128
  3335     05EB  00D2               	movwf	??___fladd
  3336     05EC  0852               	movf	??___fladd,w
  3337     05ED  06DA               	xorwf	___fladd@signs,f
  3338     05EE                     l2193:
  3339     05EE  085C               	movf	___fladd@bexp,w
  3340     05EF  00DD               	movwf	___fladd@grs
  3341     05F0                     l2195:
  3342     05F0  085B               	movf	___fladd@aexp,w
  3343     05F1  00DC               	movwf	___fladd@bexp
  3344     05F2                     l2197:
  3345     05F2  085D               	movf	___fladd@grs,w
  3346     05F3  00DB               	movwf	___fladd@aexp
  3347     05F4                     l2199:
  3348     05F4  084A               	movf	___fladd@b,w
  3349     05F5  00DD               	movwf	___fladd@grs
  3350     05F6                     l2201:
  3351     05F6  084E               	movf	___fladd@a,w
  3352     05F7  00CA               	movwf	___fladd@b
  3353     05F8                     l2203:
  3354     05F8  085D               	movf	___fladd@grs,w
  3355     05F9  00CE               	movwf	___fladd@a
  3356     05FA                     l2205:
  3357     05FA  084B               	movf	___fladd@b+1,w
  3358     05FB  00DD               	movwf	___fladd@grs
  3359     05FC                     l2207:
  3360     05FC  084F               	movf	___fladd@a+1,w
  3361     05FD  00CB               	movwf	___fladd@b+1
  3362     05FE                     l2209:
  3363     05FE  085D               	movf	___fladd@grs,w
  3364     05FF  00CF               	movwf	___fladd@a+1
  3365     0600                     l2211:
  3366     0600  084C               	movf	___fladd@b+2,w
  3367     0601  00DD               	movwf	___fladd@grs
  3368     0602                     l2213:
  3369     0602  0850               	movf	___fladd@a+2,w
  3370     0603  00CC               	movwf	___fladd@b+2
  3371     0604                     l2215:
  3372     0604  085D               	movf	___fladd@grs,w
  3373     0605  00D0               	movwf	___fladd@a+2
  3374     0606                     l2217:
  3375     0606  084D               	movf	___fladd@b+3,w
  3376     0607  00DD               	movwf	___fladd@grs
  3377     0608                     l2219:
  3378     0608  0851               	movf	___fladd@a+3,w
  3379     0609  00CD               	movwf	___fladd@b+3
  3380     060A                     l2221:
  3381     060A  085D               	movf	___fladd@grs,w
  3382     060B  00D1               	movwf	___fladd@a+3
  3383     060C                     l2223:
  3384     060C  01DD               	clrf	___fladd@grs
  3385     060D                     l2225:
  3386     060D  085B               	movf	___fladd@aexp,w
  3387     060E  00D2               	movwf	??___fladd
  3388     060F  01D3               	clrf	??___fladd+1
  3389     0610  0853               	movf	??___fladd+1,w
  3390     0611  00D5               	movwf	??___fladd+3
  3391     0612  085C               	movf	___fladd@bexp,w
  3392     0613  0252               	subwf	??___fladd,w
  3393     0614  00D4               	movwf	??___fladd+2
  3394     0615  1C03               	skipc
  3395     0616  03D5               	decf	??___fladd+3,f
  3396     0617  0855               	movf	??___fladd+3,w
  3397     0618  3A80               	xorlw	128
  3398     0619  00FF               	movwf	btemp+1
  3399     061A  3080               	movlw	128
  3400     061B  027F               	subwf	btemp+1,w
  3401     061C  1D03               	skipz
  3402     061D  2E20               	goto	u2285
  3403     061E  301A               	movlw	26
  3404     061F  0254               	subwf	??___fladd+2,w
  3405     0620                     u2285:
  3406     0620  1C03               	skipc
  3407     0621  2E23               	goto	u2281
  3408     0622  2E24               	goto	u2280
  3409     0623                     u2281:
  3410     0623  2E5B               	goto	l2241
  3411     0624                     u2280:
  3412     0624                     l2227:
  3413     0624  1283               	bcf	3,5	;RP0=0, select bank0
  3414     0625  1303               	bcf	3,6	;RP1=0, select bank0
  3415     0626  084D               	movf	___fladd@b+3,w
  3416     0627  044C               	iorwf	___fladd@b+2,w
  3417     0628  044B               	iorwf	___fladd@b+1,w
  3418     0629  044A               	iorwf	___fladd@b,w
  3419     062A  1D03               	skipz
  3420     062B  2E2D               	goto	u2291
  3421     062C  2E2F               	goto	u2290
  3422     062D                     u2291:
  3423     062D  3001               	movlw	1
  3424     062E  2E30               	goto	u2300
  3425     062F                     u2290:
  3426     062F  3000               	movlw	0
  3427     0630                     u2300:
  3428     0630  00DD               	movwf	___fladd@grs
  3429     0631  3000               	movlw	0
  3430     0632  00CD               	movwf	___fladd@b+3
  3431     0633  3000               	movlw	0
  3432     0634  00CC               	movwf	___fladd@b+2
  3433     0635  3000               	movlw	0
  3434     0636  00CB               	movwf	___fladd@b+1
  3435     0637  3000               	movlw	0
  3436     0638  00CA               	movwf	___fladd@b
  3437     0639  085B               	movf	___fladd@aexp,w
  3438     063A  00DC               	movwf	___fladd@bexp
  3439     063B  2E63               	goto	l692
  3440     063C                     l694:
  3441     063C  1C5D               	btfss	___fladd@grs,0
  3442     063D  2E3F               	goto	u2311
  3443     063E  2E40               	goto	u2310
  3444     063F                     u2311:
  3445     063F  2E47               	goto	l2231
  3446     0640                     u2310:
  3447     0640                     l2229:
  3448     0640  085D               	movf	___fladd@grs,w
  3449     0641  00D2               	movwf	??___fladd
  3450     0642  1003               	clrc
  3451     0643  0C52               	rrf	??___fladd,w
  3452     0644  3801               	iorlw	1
  3453     0645  00DD               	movwf	___fladd@grs
  3454     0646  2E49               	goto	l2233
  3455     0647                     l2231:
  3456     0647  1003               	clrc
  3457     0648  0CDD               	rrf	___fladd@grs,f
  3458     0649                     l2233:
  3459     0649  1C4A               	btfss	___fladd@b,0
  3460     064A  2E4C               	goto	u2321
  3461     064B  2E4D               	goto	u2320
  3462     064C                     u2321:
  3463     064C  2E4E               	goto	l2237
  3464     064D                     u2320:
  3465     064D                     l2235:
  3466     064D  17DD               	bsf	___fladd@grs,7
  3467     064E                     l2237:
  3468     064E  3001               	movlw	1
  3469     064F  00D2               	movwf	??___fladd
  3470     0650                     u2335:
  3471     0650  0D4D               	rlf	___fladd@b+3,w
  3472     0651  0CCD               	rrf	___fladd@b+3,f
  3473     0652  0CCC               	rrf	___fladd@b+2,f
  3474     0653  0CCB               	rrf	___fladd@b+1,f
  3475     0654  0CCA               	rrf	___fladd@b,f
  3476     0655  0BD2               	decfsz	??___fladd& (0+127),f
  3477     0656  2E50               	goto	u2335
  3478     0657                     l2239:
  3479     0657  3001               	movlw	1
  3480     0658  00D2               	movwf	??___fladd
  3481     0659  0852               	movf	??___fladd,w
  3482     065A  07DC               	addwf	___fladd@bexp,f
  3483     065B                     l2241:
  3484     065B  1283               	bcf	3,5	;RP0=0, select bank0
  3485     065C  1303               	bcf	3,6	;RP1=0, select bank0
  3486     065D  085B               	movf	___fladd@aexp,w
  3487     065E  025C               	subwf	___fladd@bexp,w
  3488     065F  1C03               	skipc
  3489     0660  2E62               	goto	u2341
  3490     0661  2E63               	goto	u2340
  3491     0662                     u2341:
  3492     0662  2E3C               	goto	l694
  3493     0663                     u2340:
  3494     0663                     l692:
  3495     0663  1B5A               	btfsc	___fladd@signs,6
  3496     0664  2E66               	goto	u2351
  3497     0665  2E67               	goto	u2350
  3498     0666                     u2351:
  3499     0666  2EB0               	goto	l2267
  3500     0667                     u2350:
  3501     0667                     l2243:
  3502     0667  085C               	movf	___fladd@bexp,w
  3503     0668  1D03               	btfss	3,2
  3504     0669  2E6B               	goto	u2361
  3505     066A  2E6C               	goto	u2360
  3506     066B                     u2361:
  3507     066B  2E75               	goto	l2249
  3508     066C                     u2360:
  3509     066C                     l2245:
  3510     066C  3000               	movlw	0
  3511     066D  00CD               	movwf	?___fladd+3
  3512     066E  3000               	movlw	0
  3513     066F  00CC               	movwf	?___fladd+2
  3514     0670  3000               	movlw	0
  3515     0671  00CB               	movwf	?___fladd+1
  3516     0672  3000               	movlw	0
  3517     0673  00CA               	movwf	?___fladd
  3518     0674  2FDC               	goto	l701
  3519     0675                     l2249:
  3520     0675  084E               	movf	___fladd@a,w
  3521     0676  07CA               	addwf	___fladd@b,f
  3522     0677  084F               	movf	___fladd@a+1,w
  3523     0678  1103               	clrz
  3524     0679  1803               	skipnc
  3525     067A  3E01               	addlw	1
  3526     067B  1903               	skipnz
  3527     067C  2E7E               	goto	u2371
  3528     067D  07CB               	addwf	___fladd@b+1,f
  3529     067E                     u2371:
  3530     067E  0850               	movf	___fladd@a+2,w
  3531     067F  1103               	clrz
  3532     0680  1803               	skipnc
  3533     0681  3E01               	addlw	1
  3534     0682  1903               	skipnz
  3535     0683  2E85               	goto	u2372
  3536     0684  07CC               	addwf	___fladd@b+2,f
  3537     0685                     u2372:
  3538     0685  0851               	movf	___fladd@a+3,w
  3539     0686  1103               	clrz
  3540     0687  1803               	skipnc
  3541     0688  3E01               	addlw	1
  3542     0689  1903               	skipnz
  3543     068A  2E8C               	goto	u2373
  3544     068B  07CD               	addwf	___fladd@b+3,f
  3545     068C                     u2373:
  3546     068C                     l2251:
  3547     068C  1C4D               	btfss	___fladd@b+3,0
  3548     068D  2E8F               	goto	u2381
  3549     068E  2E90               	goto	u2380
  3550     068F                     u2381:
  3551     068F  2F64               	goto	l2301
  3552     0690                     u2380:
  3553     0690                     l2253:
  3554     0690  1C5D               	btfss	___fladd@grs,0
  3555     0691  2E93               	goto	u2391
  3556     0692  2E94               	goto	u2390
  3557     0693                     u2391:
  3558     0693  2E9B               	goto	l2257
  3559     0694                     u2390:
  3560     0694                     l2255:
  3561     0694  085D               	movf	___fladd@grs,w
  3562     0695  00D2               	movwf	??___fladd
  3563     0696  1003               	clrc
  3564     0697  0C52               	rrf	??___fladd,w
  3565     0698  3801               	iorlw	1
  3566     0699  00DD               	movwf	___fladd@grs
  3567     069A  2E9D               	goto	l2259
  3568     069B                     l2257:
  3569     069B  1003               	clrc
  3570     069C  0CDD               	rrf	___fladd@grs,f
  3571     069D                     l2259:
  3572     069D  1C4A               	btfss	___fladd@b,0
  3573     069E  2EA0               	goto	u2401
  3574     069F  2EA1               	goto	u2400
  3575     06A0                     u2401:
  3576     06A0  2EA2               	goto	l2263
  3577     06A1                     u2400:
  3578     06A1                     l2261:
  3579     06A1  17DD               	bsf	___fladd@grs,7
  3580     06A2                     l2263:
  3581     06A2  3001               	movlw	1
  3582     06A3  00D2               	movwf	??___fladd
  3583     06A4                     u2415:
  3584     06A4  0D4D               	rlf	___fladd@b+3,w
  3585     06A5  0CCD               	rrf	___fladd@b+3,f
  3586     06A6  0CCC               	rrf	___fladd@b+2,f
  3587     06A7  0CCB               	rrf	___fladd@b+1,f
  3588     06A8  0CCA               	rrf	___fladd@b,f
  3589     06A9  0BD2               	decfsz	??___fladd& (0+127),f
  3590     06AA  2EA4               	goto	u2415
  3591     06AB                     l2265:
  3592     06AB  3001               	movlw	1
  3593     06AC  00D2               	movwf	??___fladd
  3594     06AD  0852               	movf	??___fladd,w
  3595     06AE  07DC               	addwf	___fladd@bexp,f
  3596     06AF  2F64               	goto	l2301
  3597     06B0                     l2267:
  3598     06B0  084D               	movf	___fladd@b+3,w
  3599     06B1  3A80               	xorlw	128
  3600     06B2  00FF               	movwf	btemp+1
  3601     06B3  0851               	movf	___fladd@a+3,w
  3602     06B4  3A80               	xorlw	128
  3603     06B5  027F               	subwf	btemp+1,w
  3604     06B6  1D03               	skipz
  3605     06B7  2EC2               	goto	u2423
  3606     06B8  0850               	movf	___fladd@a+2,w
  3607     06B9  024C               	subwf	___fladd@b+2,w
  3608     06BA  1D03               	skipz
  3609     06BB  2EC2               	goto	u2423
  3610     06BC  084F               	movf	___fladd@a+1,w
  3611     06BD  024B               	subwf	___fladd@b+1,w
  3612     06BE  1D03               	skipz
  3613     06BF  2EC2               	goto	u2423
  3614     06C0  084E               	movf	___fladd@a,w
  3615     06C1  024A               	subwf	___fladd@b,w
  3616     06C2                     u2423:
  3617     06C2  1803               	skipnc
  3618     06C3  2EC5               	goto	u2421
  3619     06C4  2EC6               	goto	u2420
  3620     06C5                     u2421:
  3621     06C5  2F1E               	goto	l2277
  3622     06C6                     u2420:
  3623     06C6                     l2269:
  3624     06C6  30FF               	movlw	255
  3625     06C7  00D2               	movwf	??___fladd
  3626     06C8  30FF               	movlw	255
  3627     06C9  00D3               	movwf	??___fladd+1
  3628     06CA  30FF               	movlw	255
  3629     06CB  00D4               	movwf	??___fladd+2
  3630     06CC  30FF               	movlw	255
  3631     06CD  00D5               	movwf	??___fladd+3
  3632     06CE  084E               	movf	___fladd@a,w
  3633     06CF  00D6               	movwf	??___fladd+4
  3634     06D0  084F               	movf	___fladd@a+1,w
  3635     06D1  00D7               	movwf	??___fladd+5
  3636     06D2  0850               	movf	___fladd@a+2,w
  3637     06D3  00D8               	movwf	??___fladd+6
  3638     06D4  0851               	movf	___fladd@a+3,w
  3639     06D5  00D9               	movwf	??___fladd+7
  3640     06D6  084A               	movf	___fladd@b,w
  3641     06D7  02D6               	subwf	??___fladd+4,f
  3642     06D8  084B               	movf	___fladd@b+1,w
  3643     06D9  1C03               	skipc
  3644     06DA  0F4B               	incfsz	___fladd@b+1,w
  3645     06DB  2EDD               	goto	u2431
  3646     06DC  2EDE               	goto	u2432
  3647     06DD                     u2431:
  3648     06DD  02D7               	subwf	??___fladd+5,f
  3649     06DE                     u2432:
  3650     06DE  084C               	movf	___fladd@b+2,w
  3651     06DF  1C03               	skipc
  3652     06E0  0F4C               	incfsz	___fladd@b+2,w
  3653     06E1  2EE3               	goto	u2433
  3654     06E2  2EE4               	goto	u2434
  3655     06E3                     u2433:
  3656     06E3  02D8               	subwf	??___fladd+6,f
  3657     06E4                     u2434:
  3658     06E4  084D               	movf	___fladd@b+3,w
  3659     06E5  1C03               	skipc
  3660     06E6  0F4D               	incfsz	___fladd@b+3,w
  3661     06E7  2EE9               	goto	u2435
  3662     06E8  2EEA               	goto	u2436
  3663     06E9                     u2435:
  3664     06E9  02D9               	subwf	??___fladd+7,f
  3665     06EA                     u2436:
  3666     06EA  0856               	movf	??___fladd+4,w
  3667     06EB  07D2               	addwf	??___fladd,f
  3668     06EC  0857               	movf	??___fladd+5,w
  3669     06ED  1803               	skipnc
  3670     06EE  0F57               	incfsz	??___fladd+5,w
  3671     06EF  2EF1               	goto	u2440
  3672     06F0  2EF2               	goto	u2441
  3673     06F1                     u2440:
  3674     06F1  07D3               	addwf	??___fladd+1,f
  3675     06F2                     u2441:
  3676     06F2  0858               	movf	??___fladd+6,w
  3677     06F3  1803               	skipnc
  3678     06F4  0F58               	incfsz	??___fladd+6,w
  3679     06F5  2EF7               	goto	u2442
  3680     06F6  2EF8               	goto	u2443
  3681     06F7                     u2442:
  3682     06F7  07D4               	addwf	??___fladd+2,f
  3683     06F8                     u2443:
  3684     06F8  0859               	movf	??___fladd+7,w
  3685     06F9  1803               	skipnc
  3686     06FA  0A59               	incf	??___fladd+7,w
  3687     06FB  07D5               	addwf	??___fladd+3,f
  3688     06FC  0855               	movf	??___fladd+3,w
  3689     06FD  00CD               	movwf	___fladd@b+3
  3690     06FE  0854               	movf	??___fladd+2,w
  3691     06FF  00CC               	movwf	___fladd@b+2
  3692     0700  0853               	movf	??___fladd+1,w
  3693     0701  00CB               	movwf	___fladd@b+1
  3694     0702  0852               	movf	??___fladd,w
  3695     0703  00CA               	movwf	___fladd@b
  3696     0704                     l2271:
  3697     0704  3080               	movlw	128
  3698     0705  00D2               	movwf	??___fladd
  3699     0706  0852               	movf	??___fladd,w
  3700     0707  06DA               	xorwf	___fladd@signs,f
  3701     0708  09DD               	comf	___fladd@grs,f
  3702     0709  0ADD               	incf	___fladd@grs,f
  3703     070A                     l2273:
  3704     070A  085D               	movf	___fladd@grs,w
  3705     070B  1D03               	btfss	3,2
  3706     070C  2F0E               	goto	u2451
  3707     070D  2F0F               	goto	u2450
  3708     070E                     u2451:
  3709     070E  2F2C               	goto	l709
  3710     070F                     u2450:
  3711     070F                     l2275:
  3712     070F  3001               	movlw	1
  3713     0710  07CA               	addwf	___fladd@b,f
  3714     0711  3000               	movlw	0
  3715     0712  1803               	skipnc
  3716     0713  3001               	movlw	1
  3717     0714  07CB               	addwf	___fladd@b+1,f
  3718     0715  3000               	movlw	0
  3719     0716  1803               	skipnc
  3720     0717  3001               	movlw	1
  3721     0718  07CC               	addwf	___fladd@b+2,f
  3722     0719  3000               	movlw	0
  3723     071A  1803               	skipnc
  3724     071B  3001               	movlw	1
  3725     071C  07CD               	addwf	___fladd@b+3,f
  3726     071D  2F2C               	goto	l709
  3727     071E                     l2277:
  3728     071E  084E               	movf	___fladd@a,w
  3729     071F  02CA               	subwf	___fladd@b,f
  3730     0720  084F               	movf	___fladd@a+1,w
  3731     0721  1C03               	skipc
  3732     0722  0F4F               	incfsz	___fladd@a+1,w
  3733     0723  02CB               	subwf	___fladd@b+1,f
  3734     0724  0850               	movf	___fladd@a+2,w
  3735     0725  1C03               	skipc
  3736     0726  0F50               	incfsz	___fladd@a+2,w
  3737     0727  02CC               	subwf	___fladd@b+2,f
  3738     0728  0851               	movf	___fladd@a+3,w
  3739     0729  1C03               	skipc
  3740     072A  0F51               	incfsz	___fladd@a+3,w
  3741     072B  02CD               	subwf	___fladd@b+3,f
  3742     072C                     l709:
  3743     072C  084D               	movf	___fladd@b+3,w
  3744     072D  044C               	iorwf	___fladd@b+2,w
  3745     072E  044B               	iorwf	___fladd@b+1,w
  3746     072F  044A               	iorwf	___fladd@b,w
  3747     0730  1D03               	skipz
  3748     0731  2F33               	goto	u2461
  3749     0732  2F34               	goto	u2460
  3750     0733                     u2461:
  3751     0733  2F60               	goto	l2299
  3752     0734                     u2460:
  3753     0734                     l2279:
  3754     0734  085D               	movf	___fladd@grs,w
  3755     0735  1D03               	btfss	3,2
  3756     0736  2F38               	goto	u2471
  3757     0737  2F39               	goto	u2470
  3758     0738                     u2471:
  3759     0738  2F60               	goto	l2299
  3760     0739                     u2470:
  3761     0739                     l2281:
  3762     0739  3000               	movlw	0
  3763     073A  00CD               	movwf	?___fladd+3
  3764     073B  3000               	movlw	0
  3765     073C  00CC               	movwf	?___fladd+2
  3766     073D  3000               	movlw	0
  3767     073E  00CB               	movwf	?___fladd+1
  3768     073F  3000               	movlw	0
  3769     0740  00CA               	movwf	?___fladd
  3770     0741  2FDC               	goto	l701
  3771     0742                     l2285:
  3772     0742  3001               	movlw	1
  3773     0743  00D2               	movwf	??___fladd
  3774     0744                     u2485:
  3775     0744  1003               	clrc
  3776     0745  0DCA               	rlf	___fladd@b,f
  3777     0746  0DCB               	rlf	___fladd@b+1,f
  3778     0747  0DCC               	rlf	___fladd@b+2,f
  3779     0748  0DCD               	rlf	___fladd@b+3,f
  3780     0749  0BD2               	decfsz	??___fladd,f
  3781     074A  2F44               	goto	u2485
  3782     074B                     l2287:
  3783     074B  1FDD               	btfss	___fladd@grs,7
  3784     074C  2F4E               	goto	u2491
  3785     074D  2F4F               	goto	u2490
  3786     074E                     u2491:
  3787     074E  2F50               	goto	l713
  3788     074F                     u2490:
  3789     074F                     l2289:
  3790     074F  144A               	bsf	___fladd@b,0
  3791     0750                     l713:
  3792     0750  1C5D               	btfss	___fladd@grs,0
  3793     0751  2F53               	goto	u2501
  3794     0752  2F54               	goto	u2500
  3795     0753                     u2501:
  3796     0753  2F57               	goto	l2293
  3797     0754                     u2500:
  3798     0754                     l2291:
  3799     0754  1403               	setc
  3800     0755  0DDD               	rlf	___fladd@grs,f
  3801     0756  2F59               	goto	l2295
  3802     0757                     l2293:
  3803     0757  1003               	clrc
  3804     0758  0DDD               	rlf	___fladd@grs,f
  3805     0759                     l2295:
  3806     0759  085C               	movf	___fladd@bexp,w
  3807     075A  1903               	btfsc	3,2
  3808     075B  2F5D               	goto	u2511
  3809     075C  2F5E               	goto	u2510
  3810     075D                     u2511:
  3811     075D  2F60               	goto	l2299
  3812     075E                     u2510:
  3813     075E                     l2297:
  3814     075E  3001               	movlw	1
  3815     075F  02DC               	subwf	___fladd@bexp,f
  3816     0760                     l2299:
  3817     0760  1FCC               	btfss	___fladd@b+2,7
  3818     0761  2F63               	goto	u2521
  3819     0762  2F64               	goto	u2520
  3820     0763                     u2521:
  3821     0763  2F42               	goto	l2285
  3822     0764                     u2520:
  3823     0764                     l2301:
  3824     0764  01DB               	clrf	___fladd@aexp
  3825     0765                     l2303:
  3826     0765  1FDD               	btfss	___fladd@grs,7
  3827     0766  2F68               	goto	u2531
  3828     0767  2F69               	goto	u2530
  3829     0768                     u2531:
  3830     0768  2F77               	goto	l2311
  3831     0769                     u2530:
  3832     0769                     l2305:
  3833     0769  085D               	movf	___fladd@grs,w
  3834     076A  397F               	andlw	127
  3835     076B  1903               	btfsc	3,2
  3836     076C  2F6E               	goto	u2541
  3837     076D  2F6F               	goto	u2540
  3838     076E                     u2541:
  3839     076E  2F72               	goto	l719
  3840     076F                     u2540:
  3841     076F                     l2307:
  3842     076F  01DB               	clrf	___fladd@aexp
  3843     0770  0ADB               	incf	___fladd@aexp,f
  3844     0771  2F77               	goto	l2311
  3845     0772                     l719:
  3846     0772  1C4A               	btfss	___fladd@b,0
  3847     0773  2F75               	goto	u2551
  3848     0774  2F76               	goto	u2550
  3849     0775                     u2551:
  3850     0775  2F77               	goto	l2311
  3851     0776                     u2550:
  3852     0776  2F6F               	goto	l2307
  3853     0777                     l2311:
  3854     0777  085B               	movf	___fladd@aexp,w
  3855     0778  1903               	btfsc	3,2
  3856     0779  2F7B               	goto	u2561
  3857     077A  2F7C               	goto	u2560
  3858     077B                     u2561:
  3859     077B  2FB0               	goto	l722
  3860     077C                     u2560:
  3861     077C                     l2313:
  3862     077C  3001               	movlw	1
  3863     077D  07CA               	addwf	___fladd@b,f
  3864     077E  3000               	movlw	0
  3865     077F  1803               	skipnc
  3866     0780  3001               	movlw	1
  3867     0781  07CB               	addwf	___fladd@b+1,f
  3868     0782  3000               	movlw	0
  3869     0783  1803               	skipnc
  3870     0784  3001               	movlw	1
  3871     0785  07CC               	addwf	___fladd@b+2,f
  3872     0786  3000               	movlw	0
  3873     0787  1803               	skipnc
  3874     0788  3001               	movlw	1
  3875     0789  07CD               	addwf	___fladd@b+3,f
  3876     078A                     l2315:
  3877     078A  1C4D               	btfss	___fladd@b+3,0
  3878     078B  2F8D               	goto	u2571
  3879     078C  2F8E               	goto	u2570
  3880     078D                     u2571:
  3881     078D  2FB0               	goto	l722
  3882     078E                     u2570:
  3883     078E                     l2317:
  3884     078E  084A               	movf	___fladd@b,w
  3885     078F  00D2               	movwf	??___fladd
  3886     0790  084B               	movf	___fladd@b+1,w
  3887     0791  00D3               	movwf	??___fladd+1
  3888     0792  084C               	movf	___fladd@b+2,w
  3889     0793  00D4               	movwf	??___fladd+2
  3890     0794  084D               	movf	___fladd@b+3,w
  3891     0795  00D5               	movwf	??___fladd+3
  3892     0796  3001               	movlw	1
  3893     0797  00D6               	movwf	??___fladd+4
  3894     0798                     u2585:
  3895     0798  0D55               	rlf	??___fladd+3,w
  3896     0799  0CD5               	rrf	??___fladd+3,f
  3897     079A  0CD4               	rrf	??___fladd+2,f
  3898     079B  0CD3               	rrf	??___fladd+1,f
  3899     079C  0CD2               	rrf	??___fladd,f
  3900     079D                     u2580:
  3901     079D  0BD6               	decfsz	??___fladd+4,f
  3902     079E  2F98               	goto	u2585
  3903     079F  0855               	movf	??___fladd+3,w
  3904     07A0  00CD               	movwf	___fladd@b+3
  3905     07A1  0854               	movf	??___fladd+2,w
  3906     07A2  00CC               	movwf	___fladd@b+2
  3907     07A3  0853               	movf	??___fladd+1,w
  3908     07A4  00CB               	movwf	___fladd@b+1
  3909     07A5  0852               	movf	??___fladd,w
  3910     07A6  00CA               	movwf	___fladd@b
  3911     07A7  0A5C               	incf	___fladd@bexp,w
  3912     07A8  1903               	btfsc	3,2
  3913     07A9  2FAB               	goto	u2591
  3914     07AA  2FAC               	goto	u2590
  3915     07AB                     u2591:
  3916     07AB  2FB0               	goto	l722
  3917     07AC                     u2590:
  3918     07AC                     l2319:
  3919     07AC  3001               	movlw	1
  3920     07AD  00D2               	movwf	??___fladd
  3921     07AE  0852               	movf	??___fladd,w
  3922     07AF  07DC               	addwf	___fladd@bexp,f
  3923     07B0                     l722:
  3924     07B0  0A5C               	incf	___fladd@bexp,w
  3925     07B1  1903               	btfsc	3,2
  3926     07B2  2FB4               	goto	u2601
  3927     07B3  2FB5               	goto	u2600
  3928     07B4                     u2601:
  3929     07B4  2FBA               	goto	l2323
  3930     07B5                     u2600:
  3931     07B5                     l2321:
  3932     07B5  085C               	movf	___fladd@bexp,w
  3933     07B6  1D03               	btfss	3,2
  3934     07B7  2FB9               	goto	u2611
  3935     07B8  2FBA               	goto	u2610
  3936     07B9                     u2611:
  3937     07B9  2FC8               	goto	l2329
  3938     07BA                     u2610:
  3939     07BA                     l2323:
  3940     07BA  3000               	movlw	0
  3941     07BB  00CD               	movwf	___fladd@b+3
  3942     07BC  3000               	movlw	0
  3943     07BD  00CC               	movwf	___fladd@b+2
  3944     07BE  3000               	movlw	0
  3945     07BF  00CB               	movwf	___fladd@b+1
  3946     07C0  3000               	movlw	0
  3947     07C1  00CA               	movwf	___fladd@b
  3948     07C2                     l2325:
  3949     07C2  085C               	movf	___fladd@bexp,w
  3950     07C3  1D03               	btfss	3,2
  3951     07C4  2FC6               	goto	u2621
  3952     07C5  2FC7               	goto	u2620
  3953     07C6                     u2621:
  3954     07C6  2FC8               	goto	l2329
  3955     07C7                     u2620:
  3956     07C7                     l2327:
  3957     07C7  01DA               	clrf	___fladd@signs
  3958     07C8                     l2329:
  3959     07C8  1C5C               	btfss	___fladd@bexp,0
  3960     07C9  2FCB               	goto	u2631
  3961     07CA  2FCC               	goto	u2630
  3962     07CB                     u2631:
  3963     07CB  2FCE               	goto	l2333
  3964     07CC                     u2630:
  3965     07CC                     l2331:
  3966     07CC  17CC               	bsf	___fladd@b+2,7
  3967     07CD  2FD2               	goto	l730
  3968     07CE                     l2333:
  3969     07CE  307F               	movlw	127
  3970     07CF  00D2               	movwf	??___fladd
  3971     07D0  0852               	movf	??___fladd,w
  3972     07D1  05CC               	andwf	___fladd@b+2,f
  3973     07D2                     l730:
  3974     07D2  085C               	movf	___fladd@bexp,w
  3975     07D3  00D2               	movwf	??___fladd
  3976     07D4  1003               	clrc
  3977     07D5  0C52               	rrf	??___fladd,w
  3978     07D6  00CD               	movwf	___fladd@b+3
  3979     07D7                     l2335:
  3980     07D7  1FDA               	btfss	___fladd@signs,7
  3981     07D8  2FDA               	goto	u2641
  3982     07D9  2FDB               	goto	u2640
  3983     07DA                     u2641:
  3984     07DA  2FDC               	goto	l731
  3985     07DB                     u2640:
  3986     07DB                     l2337:
  3987     07DB  17CD               	bsf	___fladd@b+3,7
  3988     07DC                     l731:
  3989     07DC                     l701:
  3990     07DC  0008               	return
  3991     07DD                     __end_of___fladd:
  3992                           
  3993                           	psect	text9
  3994     0E2D                     __ptext9:	
  3995 ;; *************** function ___fldiv *****************
  3996 ;; Defined at:
  3997 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcdiv.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  a               4   21[BANK0 ] unsigned char 
  4000 ;;  b               4   25[BANK0 ] unsigned char 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  grs             4   36[BANK0 ] unsigned long 
  4003 ;;  rem             4   29[BANK0 ] unsigned long 
  4004 ;;  new_exp         2   34[BANK0 ] int 
  4005 ;;  aexp            1   41[BANK0 ] unsigned char 
  4006 ;;  bexp            1   40[BANK0 ] unsigned char 
  4007 ;;  sign            1   33[BANK0 ] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  4   21[BANK0 ] unsigned char 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0, btemp+1
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4017 ;;      Params:         0       8       0       0
  4018 ;;      Locals:         0      13       0       0
  4019 ;;      Temps:          5       0       0       0
  4020 ;;      Totals:         5      21       0       0
  4021 ;;Total ram usage:       26 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_updateANDset_ball_position
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030     0E2D                     ___fldiv:	
  4031                           ;psect for function ___fldiv
  4032                           
  4033     0E2D                     l2505:	
  4034                           ;incstack = 0
  4035                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  4036                           
  4037     0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  4038     0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  4039     0E2F  083C               	movf	___fldiv@b+3,w
  4040     0E30  3980               	andlw	128
  4041     0E31  00C1               	movwf	___fldiv@sign
  4042     0E32                     l2507:
  4043     0E32  083C               	movf	___fldiv@b+3,w
  4044     0E33  00F8               	movwf	??___fldiv
  4045     0E34  0778               	addwf	??___fldiv,w
  4046     0E35  00C8               	movwf	___fldiv@bexp
  4047     0E36                     l2509:
  4048     0E36  1FBB               	btfss	___fldiv@b+2,7
  4049     0E37  2E39               	goto	u2971
  4050     0E38  2E3A               	goto	u2970
  4051     0E39                     u2971:
  4052     0E39  2E3B               	goto	l2513
  4053     0E3A                     u2970:
  4054     0E3A                     l2511:
  4055     0E3A  1448               	bsf	___fldiv@bexp,0
  4056     0E3B                     l2513:
  4057     0E3B  0848               	movf	___fldiv@bexp,w
  4058     0E3C  1903               	btfsc	3,2
  4059     0E3D  2E3F               	goto	u2981
  4060     0E3E  2E40               	goto	u2980
  4061     0E3F                     u2981:
  4062     0E3F  2E50               	goto	l2523
  4063     0E40                     u2980:
  4064     0E40                     l2515:
  4065     0E40  0A48               	incf	___fldiv@bexp,w
  4066     0E41  1D03               	btfss	3,2
  4067     0E42  2E44               	goto	u2991
  4068     0E43  2E45               	goto	u2990
  4069     0E44                     u2991:
  4070     0E44  2E4D               	goto	l2519
  4071     0E45                     u2990:
  4072     0E45                     l2517:
  4073     0E45  3000               	movlw	0
  4074     0E46  00BC               	movwf	___fldiv@b+3
  4075     0E47  3000               	movlw	0
  4076     0E48  00BB               	movwf	___fldiv@b+2
  4077     0E49  3000               	movlw	0
  4078     0E4A  00BA               	movwf	___fldiv@b+1
  4079     0E4B  3000               	movlw	0
  4080     0E4C  00B9               	movwf	___fldiv@b
  4081     0E4D                     l2519:
  4082     0E4D  17BB               	bsf	___fldiv@b+2,7
  4083     0E4E                     l2521:
  4084     0E4E  01BC               	clrf	___fldiv@b+3
  4085     0E4F  2E58               	goto	l2525
  4086     0E50                     l2523:
  4087     0E50  3000               	movlw	0
  4088     0E51  00BC               	movwf	___fldiv@b+3
  4089     0E52  3000               	movlw	0
  4090     0E53  00BB               	movwf	___fldiv@b+2
  4091     0E54  3000               	movlw	0
  4092     0E55  00BA               	movwf	___fldiv@b+1
  4093     0E56  3000               	movlw	0
  4094     0E57  00B9               	movwf	___fldiv@b
  4095     0E58                     l2525:
  4096     0E58  0838               	movf	___fldiv@a+3,w
  4097     0E59  3980               	andlw	128
  4098     0E5A  00F8               	movwf	??___fldiv
  4099     0E5B  0878               	movf	??___fldiv,w
  4100     0E5C  06C1               	xorwf	___fldiv@sign,f
  4101     0E5D                     l2527:
  4102     0E5D  0838               	movf	___fldiv@a+3,w
  4103     0E5E  00F8               	movwf	??___fldiv
  4104     0E5F  0778               	addwf	??___fldiv,w
  4105     0E60  00C9               	movwf	___fldiv@aexp
  4106     0E61                     l2529:
  4107     0E61  1FB7               	btfss	___fldiv@a+2,7
  4108     0E62  2E64               	goto	u3001
  4109     0E63  2E65               	goto	u3000
  4110     0E64                     u3001:
  4111     0E64  2E66               	goto	l2533
  4112     0E65                     u3000:
  4113     0E65                     l2531:
  4114     0E65  1449               	bsf	___fldiv@aexp,0
  4115     0E66                     l2533:
  4116     0E66  0849               	movf	___fldiv@aexp,w
  4117     0E67  1903               	btfsc	3,2
  4118     0E68  2E6A               	goto	u3011
  4119     0E69  2E6B               	goto	u3010
  4120     0E6A                     u3011:
  4121     0E6A  2E7B               	goto	l2543
  4122     0E6B                     u3010:
  4123     0E6B                     l2535:
  4124     0E6B  0A49               	incf	___fldiv@aexp,w
  4125     0E6C  1D03               	btfss	3,2
  4126     0E6D  2E6F               	goto	u3021
  4127     0E6E  2E70               	goto	u3020
  4128     0E6F                     u3021:
  4129     0E6F  2E78               	goto	l2539
  4130     0E70                     u3020:
  4131     0E70                     l2537:
  4132     0E70  3000               	movlw	0
  4133     0E71  00B8               	movwf	___fldiv@a+3
  4134     0E72  3000               	movlw	0
  4135     0E73  00B7               	movwf	___fldiv@a+2
  4136     0E74  3000               	movlw	0
  4137     0E75  00B6               	movwf	___fldiv@a+1
  4138     0E76  3000               	movlw	0
  4139     0E77  00B5               	movwf	___fldiv@a
  4140     0E78                     l2539:
  4141     0E78  17B7               	bsf	___fldiv@a+2,7
  4142     0E79                     l2541:
  4143     0E79  01B8               	clrf	___fldiv@a+3
  4144     0E7A  2E83               	goto	l744
  4145     0E7B                     l2543:
  4146     0E7B  3000               	movlw	0
  4147     0E7C  00B8               	movwf	___fldiv@a+3
  4148     0E7D  3000               	movlw	0
  4149     0E7E  00B7               	movwf	___fldiv@a+2
  4150     0E7F  3000               	movlw	0
  4151     0E80  00B6               	movwf	___fldiv@a+1
  4152     0E81  3000               	movlw	0
  4153     0E82  00B5               	movwf	___fldiv@a
  4154     0E83                     l744:
  4155     0E83  0838               	movf	___fldiv@a+3,w
  4156     0E84  0437               	iorwf	___fldiv@a+2,w
  4157     0E85  0436               	iorwf	___fldiv@a+1,w
  4158     0E86  0435               	iorwf	___fldiv@a,w
  4159     0E87  1D03               	skipz
  4160     0E88  2E8A               	goto	u3031
  4161     0E89  2E8B               	goto	u3030
  4162     0E8A                     u3031:
  4163     0E8A  2EA4               	goto	l2553
  4164     0E8B                     u3030:
  4165     0E8B                     l2545:
  4166     0E8B  3000               	movlw	0
  4167     0E8C  00BC               	movwf	___fldiv@b+3
  4168     0E8D  3000               	movlw	0
  4169     0E8E  00BB               	movwf	___fldiv@b+2
  4170     0E8F  3000               	movlw	0
  4171     0E90  00BA               	movwf	___fldiv@b+1
  4172     0E91  3000               	movlw	0
  4173     0E92  00B9               	movwf	___fldiv@b
  4174     0E93  3080               	movlw	128
  4175     0E94  04BB               	iorwf	___fldiv@b+2,f
  4176     0E95  307F               	movlw	127
  4177     0E96  04BC               	iorwf	___fldiv@b+3,f
  4178     0E97                     l2547:
  4179     0E97  0841               	movf	___fldiv@sign,w
  4180     0E98  00F8               	movwf	??___fldiv
  4181     0E99  0878               	movf	??___fldiv,w
  4182     0E9A  04BC               	iorwf	___fldiv@b+3,f
  4183     0E9B                     l2549:
  4184     0E9B  083C               	movf	___fldiv@b+3,w
  4185     0E9C  00B8               	movwf	?___fldiv+3
  4186     0E9D  083B               	movf	___fldiv@b+2,w
  4187     0E9E  00B7               	movwf	?___fldiv+2
  4188     0E9F  083A               	movf	___fldiv@b+1,w
  4189     0EA0  00B6               	movwf	?___fldiv+1
  4190     0EA1  0839               	movf	___fldiv@b,w
  4191     0EA2  00B5               	movwf	?___fldiv
  4192     0EA3  2FFF               	goto	l746
  4193     0EA4                     l2553:
  4194     0EA4  0848               	movf	___fldiv@bexp,w
  4195     0EA5  1D03               	btfss	3,2
  4196     0EA6  2EA8               	goto	u3041
  4197     0EA7  2EA9               	goto	u3040
  4198     0EA8                     u3041:
  4199     0EA8  2EB2               	goto	l2559
  4200     0EA9                     u3040:
  4201     0EA9                     l2555:
  4202     0EA9  3000               	movlw	0
  4203     0EAA  00B8               	movwf	?___fldiv+3
  4204     0EAB  3000               	movlw	0
  4205     0EAC  00B7               	movwf	?___fldiv+2
  4206     0EAD  3000               	movlw	0
  4207     0EAE  00B6               	movwf	?___fldiv+1
  4208     0EAF  3000               	movlw	0
  4209     0EB0  00B5               	movwf	?___fldiv
  4210     0EB1  2FFF               	goto	l746
  4211     0EB2                     l2559:
  4212     0EB2  0848               	movf	___fldiv@bexp,w
  4213     0EB3  00F8               	movwf	??___fldiv
  4214     0EB4  01F9               	clrf	??___fldiv+1
  4215     0EB5  0879               	movf	??___fldiv+1,w
  4216     0EB6  00FB               	movwf	??___fldiv+3
  4217     0EB7  0849               	movf	___fldiv@aexp,w
  4218     0EB8  0278               	subwf	??___fldiv,w
  4219     0EB9  00FA               	movwf	??___fldiv+2
  4220     0EBA  1C03               	skipc
  4221     0EBB  03FB               	decf	??___fldiv+3,f
  4222     0EBC  087A               	movf	??___fldiv+2,w
  4223     0EBD  3E7F               	addlw	127
  4224     0EBE  00C2               	movwf	___fldiv@new_exp
  4225     0EBF  087B               	movf	??___fldiv+3,w
  4226     0EC0  1803               	skipnc
  4227     0EC1  3E01               	addlw	1
  4228     0EC2  3E00               	addlw	0
  4229     0EC3  00C3               	movwf	___fldiv@new_exp+1
  4230     0EC4                     l2561:
  4231     0EC4  083C               	movf	___fldiv@b+3,w
  4232     0EC5  00C0               	movwf	___fldiv@rem+3
  4233     0EC6  083B               	movf	___fldiv@b+2,w
  4234     0EC7  00BF               	movwf	___fldiv@rem+2
  4235     0EC8  083A               	movf	___fldiv@b+1,w
  4236     0EC9  00BE               	movwf	___fldiv@rem+1
  4237     0ECA  0839               	movf	___fldiv@b,w
  4238     0ECB  00BD               	movwf	___fldiv@rem
  4239     0ECC                     l2563:
  4240     0ECC  3000               	movlw	0
  4241     0ECD  00BC               	movwf	___fldiv@b+3
  4242     0ECE  3000               	movlw	0
  4243     0ECF  00BB               	movwf	___fldiv@b+2
  4244     0ED0  3000               	movlw	0
  4245     0ED1  00BA               	movwf	___fldiv@b+1
  4246     0ED2  3000               	movlw	0
  4247     0ED3  00B9               	movwf	___fldiv@b
  4248     0ED4                     l2565:
  4249     0ED4  3000               	movlw	0
  4250     0ED5  00C7               	movwf	___fldiv@grs+3
  4251     0ED6  3000               	movlw	0
  4252     0ED7  00C6               	movwf	___fldiv@grs+2
  4253     0ED8  3000               	movlw	0
  4254     0ED9  00C5               	movwf	___fldiv@grs+1
  4255     0EDA  3000               	movlw	0
  4256     0EDB  00C4               	movwf	___fldiv@grs
  4257     0EDC                     l2567:
  4258     0EDC  01C9               	clrf	___fldiv@aexp
  4259     0EDD  2F28               	goto	l2587
  4260     0EDE                     l2569:
  4261     0EDE  0849               	movf	___fldiv@aexp,w
  4262     0EDF  1903               	btfsc	3,2
  4263     0EE0  2EE2               	goto	u3051
  4264     0EE1  2EE3               	goto	u3050
  4265     0EE2                     u3051:
  4266     0EE2  2F03               	goto	l2579
  4267     0EE3                     u3050:
  4268     0EE3                     l2571:
  4269     0EE3  3001               	movlw	1
  4270     0EE4  00F8               	movwf	??___fldiv
  4271     0EE5                     u3065:
  4272     0EE5  1003               	clrc
  4273     0EE6  0DBD               	rlf	___fldiv@rem,f
  4274     0EE7  0DBE               	rlf	___fldiv@rem+1,f
  4275     0EE8  0DBF               	rlf	___fldiv@rem+2,f
  4276     0EE9  0DC0               	rlf	___fldiv@rem+3,f
  4277     0EEA  0BF8               	decfsz	??___fldiv,f
  4278     0EEB  2EE5               	goto	u3065
  4279     0EEC  3001               	movlw	1
  4280     0EED  00F8               	movwf	??___fldiv
  4281     0EEE                     u3075:
  4282     0EEE  1003               	clrc
  4283     0EEF  0DB9               	rlf	___fldiv@b,f
  4284     0EF0  0DBA               	rlf	___fldiv@b+1,f
  4285     0EF1  0DBB               	rlf	___fldiv@b+2,f
  4286     0EF2  0DBC               	rlf	___fldiv@b+3,f
  4287     0EF3  0BF8               	decfsz	??___fldiv,f
  4288     0EF4  2EEE               	goto	u3075
  4289     0EF5                     l2573:
  4290     0EF5  1FC7               	btfss	___fldiv@grs+3,7
  4291     0EF6  2EF8               	goto	u3081
  4292     0EF7  2EF9               	goto	u3080
  4293     0EF8                     u3081:
  4294     0EF8  2EFA               	goto	l2577
  4295     0EF9                     u3080:
  4296     0EF9                     l2575:
  4297     0EF9  1439               	bsf	___fldiv@b,0
  4298     0EFA                     l2577:
  4299     0EFA  3001               	movlw	1
  4300     0EFB  00F8               	movwf	??___fldiv
  4301     0EFC                     u3095:
  4302     0EFC  1003               	clrc
  4303     0EFD  0DC4               	rlf	___fldiv@grs,f
  4304     0EFE  0DC5               	rlf	___fldiv@grs+1,f
  4305     0EFF  0DC6               	rlf	___fldiv@grs+2,f
  4306     0F00  0DC7               	rlf	___fldiv@grs+3,f
  4307     0F01  0BF8               	decfsz	??___fldiv,f
  4308     0F02  2EFC               	goto	u3095
  4309     0F03                     l2579:
  4310     0F03  0838               	movf	___fldiv@a+3,w
  4311     0F04  0240               	subwf	___fldiv@rem+3,w
  4312     0F05  1D03               	skipz
  4313     0F06  2F11               	goto	u3105
  4314     0F07  0837               	movf	___fldiv@a+2,w
  4315     0F08  023F               	subwf	___fldiv@rem+2,w
  4316     0F09  1D03               	skipz
  4317     0F0A  2F11               	goto	u3105
  4318     0F0B  0836               	movf	___fldiv@a+1,w
  4319     0F0C  023E               	subwf	___fldiv@rem+1,w
  4320     0F0D  1D03               	skipz
  4321     0F0E  2F11               	goto	u3105
  4322     0F0F  0835               	movf	___fldiv@a,w
  4323     0F10  023D               	subwf	___fldiv@rem,w
  4324     0F11                     u3105:
  4325     0F11  1C03               	skipc
  4326     0F12  2F14               	goto	u3101
  4327     0F13  2F15               	goto	u3100
  4328     0F14                     u3101:
  4329     0F14  2F24               	goto	l2585
  4330     0F15                     u3100:
  4331     0F15                     l2581:
  4332     0F15  1747               	bsf	___fldiv@grs+3,6
  4333     0F16                     l2583:
  4334     0F16  0835               	movf	___fldiv@a,w
  4335     0F17  02BD               	subwf	___fldiv@rem,f
  4336     0F18  0836               	movf	___fldiv@a+1,w
  4337     0F19  1C03               	skipc
  4338     0F1A  0F36               	incfsz	___fldiv@a+1,w
  4339     0F1B  02BE               	subwf	___fldiv@rem+1,f
  4340     0F1C  0837               	movf	___fldiv@a+2,w
  4341     0F1D  1C03               	skipc
  4342     0F1E  0F37               	incfsz	___fldiv@a+2,w
  4343     0F1F  02BF               	subwf	___fldiv@rem+2,f
  4344     0F20  0838               	movf	___fldiv@a+3,w
  4345     0F21  1C03               	skipc
  4346     0F22  0F38               	incfsz	___fldiv@a+3,w
  4347     0F23  02C0               	subwf	___fldiv@rem+3,f
  4348     0F24                     l2585:
  4349     0F24  3001               	movlw	1
  4350     0F25  00F8               	movwf	??___fldiv
  4351     0F26  0878               	movf	??___fldiv,w
  4352     0F27  07C9               	addwf	___fldiv@aexp,f
  4353     0F28                     l2587:
  4354     0F28  301A               	movlw	26
  4355     0F29  0249               	subwf	___fldiv@aexp,w
  4356     0F2A  1C03               	skipc
  4357     0F2B  2F2D               	goto	u3111
  4358     0F2C  2F2E               	goto	u3110
  4359     0F2D                     u3111:
  4360     0F2D  2EDE               	goto	l2569
  4361     0F2E                     u3110:
  4362     0F2E                     l2589:
  4363     0F2E  0840               	movf	___fldiv@rem+3,w
  4364     0F2F  043F               	iorwf	___fldiv@rem+2,w
  4365     0F30  043E               	iorwf	___fldiv@rem+1,w
  4366     0F31  043D               	iorwf	___fldiv@rem,w
  4367     0F32  1903               	skipnz
  4368     0F33  2F35               	goto	u3121
  4369     0F34  2F36               	goto	u3120
  4370     0F35                     u3121:
  4371     0F35  2F55               	goto	l2603
  4372     0F36                     u3120:
  4373     0F36                     l2591:
  4374     0F36  1444               	bsf	___fldiv@grs,0
  4375     0F37  2F55               	goto	l2603
  4376     0F38                     l2593:
  4377     0F38  3001               	movlw	1
  4378     0F39  00F8               	movwf	??___fldiv
  4379     0F3A                     u3135:
  4380     0F3A  1003               	clrc
  4381     0F3B  0DB9               	rlf	___fldiv@b,f
  4382     0F3C  0DBA               	rlf	___fldiv@b+1,f
  4383     0F3D  0DBB               	rlf	___fldiv@b+2,f
  4384     0F3E  0DBC               	rlf	___fldiv@b+3,f
  4385     0F3F  0BF8               	decfsz	??___fldiv,f
  4386     0F40  2F3A               	goto	u3135
  4387     0F41                     l2595:
  4388     0F41  1FC7               	btfss	___fldiv@grs+3,7
  4389     0F42  2F44               	goto	u3141
  4390     0F43  2F45               	goto	u3140
  4391     0F44                     u3141:
  4392     0F44  2F46               	goto	l2599
  4393     0F45                     u3140:
  4394     0F45                     l2597:
  4395     0F45  1439               	bsf	___fldiv@b,0
  4396     0F46                     l2599:
  4397     0F46  3001               	movlw	1
  4398     0F47  00F8               	movwf	??___fldiv
  4399     0F48                     u3155:
  4400     0F48  1003               	clrc
  4401     0F49  0DC4               	rlf	___fldiv@grs,f
  4402     0F4A  0DC5               	rlf	___fldiv@grs+1,f
  4403     0F4B  0DC6               	rlf	___fldiv@grs+2,f
  4404     0F4C  0DC7               	rlf	___fldiv@grs+3,f
  4405     0F4D  0BF8               	decfsz	??___fldiv,f
  4406     0F4E  2F48               	goto	u3155
  4407     0F4F                     l2601:
  4408     0F4F  30FF               	movlw	255
  4409     0F50  07C2               	addwf	___fldiv@new_exp,f
  4410     0F51  1803               	skipnc
  4411     0F52  0AC3               	incf	___fldiv@new_exp+1,f
  4412     0F53  30FF               	movlw	255
  4413     0F54  07C3               	addwf	___fldiv@new_exp+1,f
  4414     0F55                     l2603:
  4415     0F55  1FBB               	btfss	___fldiv@b+2,7
  4416     0F56  2F58               	goto	u3161
  4417     0F57  2F59               	goto	u3160
  4418     0F58                     u3161:
  4419     0F58  2F38               	goto	l2593
  4420     0F59                     u3160:
  4421     0F59                     l2605:
  4422     0F59  01C9               	clrf	___fldiv@aexp
  4423     0F5A                     l2607:
  4424     0F5A  1FC7               	btfss	___fldiv@grs+3,7
  4425     0F5B  2F5D               	goto	u3171
  4426     0F5C  2F5E               	goto	u3170
  4427     0F5D                     u3171:
  4428     0F5D  2F7A               	goto	l2615
  4429     0F5E                     u3170:
  4430     0F5E                     l2609:
  4431     0F5E  30FF               	movlw	255
  4432     0F5F  0544               	andwf	___fldiv@grs,w
  4433     0F60  00F8               	movwf	??___fldiv
  4434     0F61  30FF               	movlw	255
  4435     0F62  0545               	andwf	___fldiv@grs+1,w
  4436     0F63  00F9               	movwf	??___fldiv+1
  4437     0F64  30FF               	movlw	255
  4438     0F65  0546               	andwf	___fldiv@grs+2,w
  4439     0F66  00FA               	movwf	??___fldiv+2
  4440     0F67  307F               	movlw	127
  4441     0F68  0547               	andwf	___fldiv@grs+3,w
  4442     0F69  00FB               	movwf	??___fldiv+3
  4443     0F6A  087B               	movf	??___fldiv+3,w
  4444     0F6B  047A               	iorwf	??___fldiv+2,w
  4445     0F6C  0479               	iorwf	??___fldiv+1,w
  4446     0F6D  0478               	iorwf	??___fldiv,w
  4447     0F6E  1903               	skipnz
  4448     0F6F  2F71               	goto	u3181
  4449     0F70  2F72               	goto	u3180
  4450     0F71                     u3181:
  4451     0F71  2F75               	goto	l760
  4452     0F72                     u3180:
  4453     0F72                     l2611:
  4454     0F72  01C9               	clrf	___fldiv@aexp
  4455     0F73  0AC9               	incf	___fldiv@aexp,f
  4456     0F74  2F7A               	goto	l2615
  4457     0F75                     l760:
  4458     0F75  1C39               	btfss	___fldiv@b,0
  4459     0F76  2F78               	goto	u3191
  4460     0F77  2F79               	goto	u3190
  4461     0F78                     u3191:
  4462     0F78  2F7A               	goto	l2615
  4463     0F79                     u3190:
  4464     0F79  2F72               	goto	l2611
  4465     0F7A                     l2615:
  4466     0F7A  0849               	movf	___fldiv@aexp,w
  4467     0F7B  1903               	btfsc	3,2
  4468     0F7C  2F7E               	goto	u3201
  4469     0F7D  2F7F               	goto	u3200
  4470     0F7E                     u3201:
  4471     0F7E  2FB0               	goto	l2625
  4472     0F7F                     u3200:
  4473     0F7F                     l2617:
  4474     0F7F  3001               	movlw	1
  4475     0F80  07B9               	addwf	___fldiv@b,f
  4476     0F81  3000               	movlw	0
  4477     0F82  1803               	skipnc
  4478     0F83  3001               	movlw	1
  4479     0F84  07BA               	addwf	___fldiv@b+1,f
  4480     0F85  3000               	movlw	0
  4481     0F86  1803               	skipnc
  4482     0F87  3001               	movlw	1
  4483     0F88  07BB               	addwf	___fldiv@b+2,f
  4484     0F89  3000               	movlw	0
  4485     0F8A  1803               	skipnc
  4486     0F8B  3001               	movlw	1
  4487     0F8C  07BC               	addwf	___fldiv@b+3,f
  4488     0F8D                     l2619:
  4489     0F8D  1C3C               	btfss	___fldiv@b+3,0
  4490     0F8E  2F90               	goto	u3211
  4491     0F8F  2F91               	goto	u3210
  4492     0F90                     u3211:
  4493     0F90  2FB0               	goto	l2625
  4494     0F91                     u3210:
  4495     0F91                     l2621:
  4496     0F91  0839               	movf	___fldiv@b,w
  4497     0F92  00F8               	movwf	??___fldiv
  4498     0F93  083A               	movf	___fldiv@b+1,w
  4499     0F94  00F9               	movwf	??___fldiv+1
  4500     0F95  083B               	movf	___fldiv@b+2,w
  4501     0F96  00FA               	movwf	??___fldiv+2
  4502     0F97  083C               	movf	___fldiv@b+3,w
  4503     0F98  00FB               	movwf	??___fldiv+3
  4504     0F99  3001               	movlw	1
  4505     0F9A  00FC               	movwf	??___fldiv+4
  4506     0F9B                     u3225:
  4507     0F9B  0D7B               	rlf	??___fldiv+3,w
  4508     0F9C  0CFB               	rrf	??___fldiv+3,f
  4509     0F9D  0CFA               	rrf	??___fldiv+2,f
  4510     0F9E  0CF9               	rrf	??___fldiv+1,f
  4511     0F9F  0CF8               	rrf	??___fldiv,f
  4512     0FA0                     u3220:
  4513     0FA0  0BFC               	decfsz	??___fldiv+4,f
  4514     0FA1  2F9B               	goto	u3225
  4515     0FA2  087B               	movf	??___fldiv+3,w
  4516     0FA3  00BC               	movwf	___fldiv@b+3
  4517     0FA4  087A               	movf	??___fldiv+2,w
  4518     0FA5  00BB               	movwf	___fldiv@b+2
  4519     0FA6  0879               	movf	??___fldiv+1,w
  4520     0FA7  00BA               	movwf	___fldiv@b+1
  4521     0FA8  0878               	movf	??___fldiv,w
  4522     0FA9  00B9               	movwf	___fldiv@b
  4523     0FAA                     l2623:
  4524     0FAA  3001               	movlw	1
  4525     0FAB  07C2               	addwf	___fldiv@new_exp,f
  4526     0FAC  1803               	skipnc
  4527     0FAD  0AC3               	incf	___fldiv@new_exp+1,f
  4528     0FAE  3000               	movlw	0
  4529     0FAF  07C3               	addwf	___fldiv@new_exp+1,f
  4530     0FB0                     l2625:
  4531     0FB0  0843               	movf	___fldiv@new_exp+1,w
  4532     0FB1  3A80               	xorlw	128
  4533     0FB2  00FF               	movwf	btemp+1
  4534     0FB3  3080               	movlw	128
  4535     0FB4  027F               	subwf	btemp+1,w
  4536     0FB5  1D03               	skipz
  4537     0FB6  2FB9               	goto	u3235
  4538     0FB7  30FF               	movlw	255
  4539     0FB8  0242               	subwf	___fldiv@new_exp,w
  4540     0FB9                     u3235:
  4541     0FB9  1C03               	skipc
  4542     0FBA  2FBC               	goto	u3231
  4543     0FBB  2FBD               	goto	u3230
  4544     0FBC                     u3231:
  4545     0FBC  2FCB               	goto	l2629
  4546     0FBD                     u3230:
  4547     0FBD                     l2627:
  4548     0FBD  30FF               	movlw	255
  4549     0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  4550     0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  4551     0FC0  00C2               	movwf	___fldiv@new_exp
  4552     0FC1  3000               	movlw	0
  4553     0FC2  00C3               	movwf	___fldiv@new_exp+1
  4554     0FC3  3000               	movlw	0
  4555     0FC4  00BC               	movwf	___fldiv@b+3
  4556     0FC5  3000               	movlw	0
  4557     0FC6  00BB               	movwf	___fldiv@b+2
  4558     0FC7  3000               	movlw	0
  4559     0FC8  00BA               	movwf	___fldiv@b+1
  4560     0FC9  3000               	movlw	0
  4561     0FCA  00B9               	movwf	___fldiv@b
  4562     0FCB                     l2629:
  4563     0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  4564     0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  4565     0FCD  0843               	movf	___fldiv@new_exp+1,w
  4566     0FCE  3A80               	xorlw	128
  4567     0FCF  00FF               	movwf	btemp+1
  4568     0FD0  3080               	movlw	128
  4569     0FD1  027F               	subwf	btemp+1,w
  4570     0FD2  1D03               	skipz
  4571     0FD3  2FD6               	goto	u3245
  4572     0FD4  3001               	movlw	1
  4573     0FD5  0242               	subwf	___fldiv@new_exp,w
  4574     0FD6                     u3245:
  4575     0FD6  1803               	skipnc
  4576     0FD7  2FD9               	goto	u3241
  4577     0FD8  2FDA               	goto	u3240
  4578     0FD9                     u3241:
  4579     0FD9  2FE7               	goto	l766
  4580     0FDA                     u3240:
  4581     0FDA                     l2631:
  4582     0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  4583     0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  4584     0FDC  01C2               	clrf	___fldiv@new_exp
  4585     0FDD  01C3               	clrf	___fldiv@new_exp+1
  4586     0FDE                     l2633:
  4587     0FDE  3000               	movlw	0
  4588     0FDF  00BC               	movwf	___fldiv@b+3
  4589     0FE0  3000               	movlw	0
  4590     0FE1  00BB               	movwf	___fldiv@b+2
  4591     0FE2  3000               	movlw	0
  4592     0FE3  00BA               	movwf	___fldiv@b+1
  4593     0FE4  3000               	movlw	0
  4594     0FE5  00B9               	movwf	___fldiv@b
  4595     0FE6                     l2635:
  4596     0FE6  01C1               	clrf	___fldiv@sign
  4597     0FE7                     l766:
  4598     0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  4599     0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  4600     0FE9  0842               	movf	___fldiv@new_exp,w
  4601     0FEA  00C8               	movwf	___fldiv@bexp
  4602     0FEB                     l2637:
  4603     0FEB  1C48               	btfss	___fldiv@bexp,0
  4604     0FEC  2FEE               	goto	u3251
  4605     0FED  2FEF               	goto	u3250
  4606     0FEE                     u3251:
  4607     0FEE  2FF1               	goto	l2641
  4608     0FEF                     u3250:
  4609     0FEF                     l2639:
  4610     0FEF  17BB               	bsf	___fldiv@b+2,7
  4611     0FF0  2FF5               	goto	l768
  4612     0FF1                     l2641:
  4613     0FF1  307F               	movlw	127
  4614     0FF2  00F8               	movwf	??___fldiv
  4615     0FF3  0878               	movf	??___fldiv,w
  4616     0FF4  05BB               	andwf	___fldiv@b+2,f
  4617     0FF5                     l768:
  4618     0FF5  0848               	movf	___fldiv@bexp,w
  4619     0FF6  00F8               	movwf	??___fldiv
  4620     0FF7  1003               	clrc
  4621     0FF8  0C78               	rrf	??___fldiv,w
  4622     0FF9  00BC               	movwf	___fldiv@b+3
  4623     0FFA  0841               	movf	___fldiv@sign,w
  4624     0FFB  00F8               	movwf	??___fldiv
  4625     0FFC  0878               	movf	??___fldiv,w
  4626     0FFD  04BC               	iorwf	___fldiv@b+3,f
  4627     0FFE  2E9B               	goto	l2549
  4628     0FFF                     l746:
  4629     0FFF  0008               	return
  4630     1000                     __end_of___fldiv:
  4631                           
  4632                           	psect	text10
  4633     09DB                     __ptext10:	
  4634 ;; *************** function _sendCommand_Hard *****************
  4635 ;; Defined at:
  4636 ;;		line 431 in file "main.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  commandByte     1    wreg     unsigned char 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  commandByte     1    1[COMMON] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0, pclath, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4650 ;;      Params:         0       0       0       0
  4651 ;;      Locals:         1       0       0       0
  4652 ;;      Temps:          0       0       0       0
  4653 ;;      Totals:         1       0       0       0
  4654 ;;Total ram usage:        1 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; Hardware stack levels required when called: 1
  4657 ;; This function calls:
  4658 ;;		_SPI_CS_HIGH
  4659 ;;		_SPI_CS_LOW
  4660 ;;		_SPI_DC_HIGH
  4661 ;;		_SPI_DC_LOW
  4662 ;;		_spi_send_recv
  4663 ;; This function is called by:
  4664 ;;		_main
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668     09DB                     _sendCommand_Hard:	
  4669                           ;psect for function _sendCommand_Hard
  4670                           
  4671                           
  4672                           ;incstack = 0
  4673                           ; Regs used in _sendCommand_Hard: [wreg+status,2+status,0+pclath+cstack]
  4674                           ;sendCommand_Hard@commandByte stored from wreg
  4675     09DB  00F1               	movwf	sendCommand_Hard@commandByte
  4676     09DC                     l2911:
  4677                           
  4678                           ;main.c: 433:   SPI_CS_LOW();
  4679     09DC  158A  2161  158A   	fcall	_SPI_CS_LOW
  4680                           
  4681                           ;main.c: 435:   SPI_DC_LOW();
  4682     09DF  158A  2169  158A   	fcall	_SPI_DC_LOW
  4683     09E2                     l2913:
  4684                           
  4685                           ;main.c: 436:   spi_send_recv(commandByte);
  4686     09E2  0871               	movf	sendCommand_Hard@commandByte,w
  4687     09E3  158A  2184  158A   	fcall	_spi_send_recv
  4688     09E6                     l2915:
  4689                           
  4690                           ;main.c: 437:   SPI_DC_HIGH();
  4691     09E6  158A  2165  158A   	fcall	_SPI_DC_HIGH
  4692     09E9                     l2917:
  4693                           
  4694                           ;main.c: 439:   SPI_CS_HIGH();
  4695     09E9  158A  215D  158A   	fcall	_SPI_CS_HIGH
  4696     09EC                     l164:
  4697     09EC  0008               	return
  4698     09ED                     __end_of_sendCommand_Hard:
  4699                           
  4700                           	psect	text11
  4701     0B16                     __ptext11:	
  4702 ;; *************** function _pong_field_init *****************
  4703 ;; Defined at:
  4704 ;;		line 701 in file "main.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;		None
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0, pclath, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4718 ;;      Params:         0       0       0       0
  4719 ;;      Locals:         0       0       0       0
  4720 ;;      Temps:          0       0       0       0
  4721 ;;      Totals:         0       0       0       0
  4722 ;;Total ram usage:        0 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; Hardware stack levels required when called: 4
  4725 ;; This function calls:
  4726 ;;		_drawFastHLine_Hard
  4727 ;;		_drawFastVLine_Hard
  4728 ;; This function is called by:
  4729 ;;		_main
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733     0B16                     _pong_field_init:	
  4734                           ;psect for function _pong_field_init
  4735                           
  4736     0B16                     l2947:	
  4737                           ;incstack = 0
  4738                           ; Regs used in _pong_field_init: [wreg+status,2+status,0+pclath+cstack]
  4739                           
  4740                           
  4741                           ;main.c: 702:     drawFastHLine_Hard(0, 127, 0, 0x001F);
  4742     0B16  307F               	movlw	127
  4743     0B17  00FA               	movwf	drawFastHLine_Hard@length
  4744     0B18  01FB               	clrf	drawFastHLine_Hard@in_HLine_y
  4745     0B19  301F               	movlw	31
  4746     0B1A  00FC               	movwf	drawFastHLine_Hard@color
  4747     0B1B  3000               	movlw	0
  4748     0B1C  00FD               	movwf	drawFastHLine_Hard@color+1
  4749     0B1D  3000               	movlw	0
  4750     0B1E  158A  2450  158A   	fcall	_drawFastHLine_Hard
  4751                           
  4752                           ;main.c: 703:     drawFastHLine_Hard(0, 127, 95, 0x001F);
  4753     0B21  307F               	movlw	127
  4754     0B22  00FA               	movwf	drawFastHLine_Hard@length
  4755     0B23  305F               	movlw	95
  4756     0B24  00FB               	movwf	drawFastHLine_Hard@in_HLine_y
  4757     0B25  301F               	movlw	31
  4758     0B26  00FC               	movwf	drawFastHLine_Hard@color
  4759     0B27  3000               	movlw	0
  4760     0B28  00FD               	movwf	drawFastHLine_Hard@color+1
  4761     0B29  3000               	movlw	0
  4762     0B2A  158A  2450  158A   	fcall	_drawFastHLine_Hard
  4763                           
  4764                           ;main.c: 704:     drawFastVLine_Hard(0, 96, 0, 0x001F);
  4765     0B2D  3060               	movlw	96
  4766     0B2E  00FA               	movwf	drawFastVLine_Hard@length
  4767     0B2F  01FB               	clrf	drawFastVLine_Hard@in_VLine_x
  4768     0B30  301F               	movlw	31
  4769     0B31  00FC               	movwf	drawFastVLine_Hard@color
  4770     0B32  3000               	movlw	0
  4771     0B33  00FD               	movwf	drawFastVLine_Hard@color+1
  4772     0B34  3000               	movlw	0
  4773     0B35  158A  24A0  158A   	fcall	_drawFastVLine_Hard
  4774                           
  4775                           ;main.c: 705:     drawFastVLine_Hard(0, 96, 127, 0x001F);
  4776     0B38  3060               	movlw	96
  4777     0B39  00FA               	movwf	drawFastVLine_Hard@length
  4778     0B3A  307F               	movlw	127
  4779     0B3B  00FB               	movwf	drawFastVLine_Hard@in_VLine_x
  4780     0B3C  301F               	movlw	31
  4781     0B3D  00FC               	movwf	drawFastVLine_Hard@color
  4782     0B3E  3000               	movlw	0
  4783     0B3F  00FD               	movwf	drawFastVLine_Hard@color+1
  4784     0B40  3000               	movlw	0
  4785     0B41  158A  24A0  158A   	fcall	_drawFastVLine_Hard
  4786     0B44                     l261:
  4787     0B44  0008               	return
  4788     0B45                     __end_of_pong_field_init:
  4789                           
  4790                           	psect	text12
  4791     0CA0                     __ptext12:	
  4792 ;; *************** function _drawFastVLine_Hard *****************
  4793 ;; Defined at:
  4794 ;;		line 507 in file "main.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  start_y         1    wreg     char 
  4797 ;;  length          1   10[COMMON] char 
  4798 ;;  in_VLine_x      1   11[COMMON] char 
  4799 ;;  color           2   12[COMMON] unsigned int 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  start_y         1    6[BANK0 ] char 
  4802 ;;  y_row_vertic    2    4[BANK0 ] int 
  4803 ;;  y2              1    3[BANK0 ] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0, pclath, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4813 ;;      Params:         4       0       0       0
  4814 ;;      Locals:         0       4       0       0
  4815 ;;      Temps:          0       3       0       0
  4816 ;;      Totals:         4       7       0       0
  4817 ;;Total ram usage:       11 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; Hardware stack levels required when called: 3
  4820 ;; This function calls:
  4821 ;;		_SPI_CS_HIGH
  4822 ;;		_SPI_CS_LOW
  4823 ;;		_SPI_WRITE16_Hard
  4824 ;;		_my_setAddrWindow_Hard
  4825 ;; This function is called by:
  4826 ;;		_pong_field_init
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830     0CA0                     _drawFastVLine_Hard:	
  4831                           ;psect for function _drawFastVLine_Hard
  4832                           
  4833                           
  4834                           ;incstack = 0
  4835                           ; Regs used in _drawFastVLine_Hard: [wreg+status,2+status,0+pclath+cstack]
  4836                           ;drawFastVLine_Hard@start_y stored from wreg
  4837     0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  4838     0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  4839     0CA2  00A6               	movwf	drawFastVLine_Hard@start_y
  4840     0CA3                     l2811:
  4841                           
  4842                           ;main.c: 508:     SPI_CS_LOW();
  4843     0CA3  158A  2161  158A   	fcall	_SPI_CS_LOW
  4844     0CA6                     l2813:
  4845                           
  4846                           ;main.c: 510:     uint8_t y2 = start_y + length - 1;
  4847     0CA6  087A               	movf	drawFastVLine_Hard@length,w
  4848     0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  4849     0CA8  1303               	bcf	3,6	;RP1=0, select bank0
  4850     0CA9  0726               	addwf	drawFastVLine_Hard@start_y,w
  4851     0CAA  3EFF               	addlw	255
  4852     0CAB  00A3               	movwf	drawFastVLine_Hard@y2
  4853     0CAC                     l2815:
  4854                           
  4855                           ;main.c: 511:     my_setAddrWindow_Hard(in_VLine_x, start_y, in_VLine_x, y2);
  4856     0CAC  087B               	movf	drawFastVLine_Hard@in_VLine_x,w
  4857     0CAD  00F2               	movwf	my_setAddrWindow_Hard@x_start
  4858     0CAE  01F3               	clrf	my_setAddrWindow_Hard@x_start+1
  4859     0CAF  1BF2               	btfsc	my_setAddrWindow_Hard@x_start,7
  4860     0CB0  03F3               	decf	my_setAddrWindow_Hard@x_start+1,f
  4861     0CB1  0826               	movf	drawFastVLine_Hard@start_y,w
  4862     0CB2  00F4               	movwf	my_setAddrWindow_Hard@y_start
  4863     0CB3  01F5               	clrf	my_setAddrWindow_Hard@y_start+1
  4864     0CB4  1BF4               	btfsc	my_setAddrWindow_Hard@y_start,7
  4865     0CB5  03F5               	decf	my_setAddrWindow_Hard@y_start+1,f
  4866     0CB6  087B               	movf	drawFastVLine_Hard@in_VLine_x,w
  4867     0CB7  00F6               	movwf	my_setAddrWindow_Hard@x_finish
  4868     0CB8  01F7               	clrf	my_setAddrWindow_Hard@x_finish+1
  4869     0CB9  1BF6               	btfsc	my_setAddrWindow_Hard@x_finish,7
  4870     0CBA  03F7               	decf	my_setAddrWindow_Hard@x_finish+1,f
  4871     0CBB  0823               	movf	drawFastVLine_Hard@y2,w
  4872     0CBC  00A0               	movwf	??_drawFastVLine_Hard
  4873     0CBD  01A1               	clrf	??_drawFastVLine_Hard+1
  4874     0CBE  0820               	movf	??_drawFastVLine_Hard,w
  4875     0CBF  00F8               	movwf	my_setAddrWindow_Hard@y_finish
  4876     0CC0  0821               	movf	??_drawFastVLine_Hard+1,w
  4877     0CC1  00F9               	movwf	my_setAddrWindow_Hard@y_finish+1
  4878     0CC2  158A  225C  158A   	fcall	_my_setAddrWindow_Hard
  4879     0CC5                     l2817:
  4880     0CC5                     l2819:
  4881                           
  4882                           ;main.c: 515:     for(y_row_vertical = 0; y_row_vertical < length; y_row_vertical++) {
  4883     0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  4884     0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  4885     0CC7  01A4               	clrf	drawFastVLine_Hard@y_row_vertical
  4886     0CC8  01A5               	clrf	drawFastVLine_Hard@y_row_vertical+1
  4887     0CC9  2CD9               	goto	l2825
  4888     0CCA                     l2821:
  4889                           
  4890                           ;main.c: 516:         SPI_WRITE16_Hard(color);
  4891     0CCA  087D               	movf	drawFastVLine_Hard@color+1,w
  4892     0CCB  00F2               	movwf	SPI_WRITE16_Hard@w+1
  4893     0CCC  087C               	movf	drawFastVLine_Hard@color,w
  4894     0CCD  00F1               	movwf	SPI_WRITE16_Hard@w
  4895     0CCE  158A  219C  158A   	fcall	_SPI_WRITE16_Hard
  4896     0CD1                     l2823:
  4897                           
  4898                           ;main.c: 517:     }
  4899     0CD1  3001               	movlw	1
  4900     0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  4901     0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  4902     0CD4  07A4               	addwf	drawFastVLine_Hard@y_row_vertical,f
  4903     0CD5  1803               	skipnc
  4904     0CD6  0AA5               	incf	drawFastVLine_Hard@y_row_vertical+1,f
  4905     0CD7  3000               	movlw	0
  4906     0CD8  07A5               	addwf	drawFastVLine_Hard@y_row_vertical+1,f
  4907     0CD9                     l2825:
  4908     0CD9  087A               	movf	drawFastVLine_Hard@length,w
  4909     0CDA  00A0               	movwf	??_drawFastVLine_Hard
  4910     0CDB  01A1               	clrf	??_drawFastVLine_Hard+1
  4911     0CDC  1BA0               	btfsc	??_drawFastVLine_Hard,7
  4912     0CDD  03A1               	decf	??_drawFastVLine_Hard+1,f
  4913     0CDE  0825               	movf	drawFastVLine_Hard@y_row_vertical+1,w
  4914     0CDF  3A80               	xorlw	128
  4915     0CE0  00A2               	movwf	??_drawFastVLine_Hard+2
  4916     0CE1  0821               	movf	??_drawFastVLine_Hard+1,w
  4917     0CE2  3A80               	xorlw	128
  4918     0CE3  0222               	subwf	??_drawFastVLine_Hard+2,w
  4919     0CE4  1D03               	skipz
  4920     0CE5  2CE8               	goto	u3455
  4921     0CE6  0820               	movf	??_drawFastVLine_Hard,w
  4922     0CE7  0224               	subwf	drawFastVLine_Hard@y_row_vertical,w
  4923     0CE8                     u3455:
  4924     0CE8  1C03               	skipc
  4925     0CE9  2CEB               	goto	u3451
  4926     0CEA  2CEC               	goto	u3450
  4927     0CEB                     u3451:
  4928     0CEB  2CCA               	goto	l2821
  4929     0CEC                     u3450:
  4930     0CEC                     l2827:
  4931                           
  4932                           ;main.c: 519:     SPI_CS_HIGH();
  4933     0CEC  158A  215D  158A   	fcall	_SPI_CS_HIGH
  4934     0CEF                     l201:
  4935     0CEF  0008               	return
  4936     0CF0                     __end_of_drawFastVLine_Hard:
  4937                           
  4938                           	psect	text13
  4939     0C50                     __ptext13:	
  4940 ;; *************** function _drawFastHLine_Hard *****************
  4941 ;; Defined at:
  4942 ;;		line 494 in file "main.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  start_x         1    wreg     char 
  4945 ;;  length          1   10[COMMON] char 
  4946 ;;  in_HLine_y      1   11[COMMON] char 
  4947 ;;  color           2   12[COMMON] unsigned int 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  start_x         1    6[BANK0 ] char 
  4950 ;;  x_colum_hori    2    4[BANK0 ] int 
  4951 ;;  x2              1    3[BANK0 ] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2, status,0, pclath, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4961 ;;      Params:         4       0       0       0
  4962 ;;      Locals:         0       4       0       0
  4963 ;;      Temps:          0       3       0       0
  4964 ;;      Totals:         4       7       0       0
  4965 ;;Total ram usage:       11 bytes
  4966 ;; Hardware stack levels used: 1
  4967 ;; Hardware stack levels required when called: 3
  4968 ;; This function calls:
  4969 ;;		_SPI_CS_HIGH
  4970 ;;		_SPI_CS_LOW
  4971 ;;		_SPI_WRITE16_Hard
  4972 ;;		_my_setAddrWindow_Hard
  4973 ;; This function is called by:
  4974 ;;		_pong_field_init
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978     0C50                     _drawFastHLine_Hard:	
  4979                           ;psect for function _drawFastHLine_Hard
  4980                           
  4981                           
  4982                           ;incstack = 0
  4983                           ; Regs used in _drawFastHLine_Hard: [wreg+status,2+status,0+pclath+cstack]
  4984                           ;drawFastHLine_Hard@start_x stored from wreg
  4985     0C50  1283               	bcf	3,5	;RP0=0, select bank0
  4986     0C51  1303               	bcf	3,6	;RP1=0, select bank0
  4987     0C52  00A6               	movwf	drawFastHLine_Hard@start_x
  4988     0C53                     l2793:
  4989                           
  4990                           ;main.c: 495:     SPI_CS_LOW();
  4991     0C53  158A  2161  158A   	fcall	_SPI_CS_LOW
  4992     0C56                     l2795:
  4993                           
  4994                           ;main.c: 497:     uint8_t x2 = start_x + length - 1;
  4995     0C56  087A               	movf	drawFastHLine_Hard@length,w
  4996     0C57  1283               	bcf	3,5	;RP0=0, select bank0
  4997     0C58  1303               	bcf	3,6	;RP1=0, select bank0
  4998     0C59  0726               	addwf	drawFastHLine_Hard@start_x,w
  4999     0C5A  3EFF               	addlw	255
  5000     0C5B  00A3               	movwf	drawFastHLine_Hard@x2
  5001     0C5C                     l2797:
  5002                           
  5003                           ;main.c: 498:     my_setAddrWindow_Hard(start_x, in_HLine_y, x2, in_HLine_y);
  5004     0C5C  0826               	movf	drawFastHLine_Hard@start_x,w
  5005     0C5D  00F2               	movwf	my_setAddrWindow_Hard@x_start
  5006     0C5E  01F3               	clrf	my_setAddrWindow_Hard@x_start+1
  5007     0C5F  1BF2               	btfsc	my_setAddrWindow_Hard@x_start,7
  5008     0C60  03F3               	decf	my_setAddrWindow_Hard@x_start+1,f
  5009     0C61  087B               	movf	drawFastHLine_Hard@in_HLine_y,w
  5010     0C62  00F4               	movwf	my_setAddrWindow_Hard@y_start
  5011     0C63  01F5               	clrf	my_setAddrWindow_Hard@y_start+1
  5012     0C64  1BF4               	btfsc	my_setAddrWindow_Hard@y_start,7
  5013     0C65  03F5               	decf	my_setAddrWindow_Hard@y_start+1,f
  5014     0C66  0823               	movf	drawFastHLine_Hard@x2,w
  5015     0C67  00A0               	movwf	??_drawFastHLine_Hard
  5016     0C68  01A1               	clrf	??_drawFastHLine_Hard+1
  5017     0C69  0820               	movf	??_drawFastHLine_Hard,w
  5018     0C6A  00F6               	movwf	my_setAddrWindow_Hard@x_finish
  5019     0C6B  0821               	movf	??_drawFastHLine_Hard+1,w
  5020     0C6C  00F7               	movwf	my_setAddrWindow_Hard@x_finish+1
  5021     0C6D  087B               	movf	drawFastHLine_Hard@in_HLine_y,w
  5022     0C6E  00F8               	movwf	my_setAddrWindow_Hard@y_finish
  5023     0C6F  01F9               	clrf	my_setAddrWindow_Hard@y_finish+1
  5024     0C70  1BF8               	btfsc	my_setAddrWindow_Hard@y_finish,7
  5025     0C71  03F9               	decf	my_setAddrWindow_Hard@y_finish+1,f
  5026     0C72  158A  225C  158A   	fcall	_my_setAddrWindow_Hard
  5027     0C75                     l2799:
  5028     0C75                     l2801:
  5029                           
  5030                           ;main.c: 501:     for(x_colum_horizontal = 0; x_colum_horizontal < length; x_colum_horiz
      +                          ontal++) {
  5031     0C75  1283               	bcf	3,5	;RP0=0, select bank0
  5032     0C76  1303               	bcf	3,6	;RP1=0, select bank0
  5033     0C77  01A4               	clrf	drawFastHLine_Hard@x_colum_horizontal
  5034     0C78  01A5               	clrf	drawFastHLine_Hard@x_colum_horizontal+1
  5035     0C79  2C89               	goto	l2807
  5036     0C7A                     l2803:
  5037                           
  5038                           ;main.c: 502:         SPI_WRITE16_Hard(color);
  5039     0C7A  087D               	movf	drawFastHLine_Hard@color+1,w
  5040     0C7B  00F2               	movwf	SPI_WRITE16_Hard@w+1
  5041     0C7C  087C               	movf	drawFastHLine_Hard@color,w
  5042     0C7D  00F1               	movwf	SPI_WRITE16_Hard@w
  5043     0C7E  158A  219C  158A   	fcall	_SPI_WRITE16_Hard
  5044     0C81                     l2805:
  5045                           
  5046                           ;main.c: 503:     }
  5047     0C81  3001               	movlw	1
  5048     0C82  1283               	bcf	3,5	;RP0=0, select bank0
  5049     0C83  1303               	bcf	3,6	;RP1=0, select bank0
  5050     0C84  07A4               	addwf	drawFastHLine_Hard@x_colum_horizontal,f
  5051     0C85  1803               	skipnc
  5052     0C86  0AA5               	incf	drawFastHLine_Hard@x_colum_horizontal+1,f
  5053     0C87  3000               	movlw	0
  5054     0C88  07A5               	addwf	drawFastHLine_Hard@x_colum_horizontal+1,f
  5055     0C89                     l2807:
  5056     0C89  087A               	movf	drawFastHLine_Hard@length,w
  5057     0C8A  00A0               	movwf	??_drawFastHLine_Hard
  5058     0C8B  01A1               	clrf	??_drawFastHLine_Hard+1
  5059     0C8C  1BA0               	btfsc	??_drawFastHLine_Hard,7
  5060     0C8D  03A1               	decf	??_drawFastHLine_Hard+1,f
  5061     0C8E  0825               	movf	drawFastHLine_Hard@x_colum_horizontal+1,w
  5062     0C8F  3A80               	xorlw	128
  5063     0C90  00A2               	movwf	??_drawFastHLine_Hard+2
  5064     0C91  0821               	movf	??_drawFastHLine_Hard+1,w
  5065     0C92  3A80               	xorlw	128
  5066     0C93  0222               	subwf	??_drawFastHLine_Hard+2,w
  5067     0C94  1D03               	skipz
  5068     0C95  2C98               	goto	u3445
  5069     0C96  0820               	movf	??_drawFastHLine_Hard,w
  5070     0C97  0224               	subwf	drawFastHLine_Hard@x_colum_horizontal,w
  5071     0C98                     u3445:
  5072     0C98  1C03               	skipc
  5073     0C99  2C9B               	goto	u3441
  5074     0C9A  2C9C               	goto	u3440
  5075     0C9B                     u3441:
  5076     0C9B  2C7A               	goto	l2803
  5077     0C9C                     u3440:
  5078     0C9C                     l2809:
  5079                           
  5080                           ;main.c: 505:     SPI_CS_HIGH();
  5081     0C9C  158A  215D  158A   	fcall	_SPI_CS_HIGH
  5082     0C9F                     l195:
  5083     0C9F  0008               	return
  5084     0CA0                     __end_of_drawFastHLine_Hard:
  5085                           
  5086                           	psect	text14
  5087     0A16                     __ptext14:	
  5088 ;; *************** function _paddle_init *****************
  5089 ;; Defined at:
  5090 ;;		line 717 in file "main.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;		None
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;		None
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      void 
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5104 ;;      Params:         0       0       0       0
  5105 ;;      Locals:         0       0       0       0
  5106 ;;      Temps:          0       0       0       0
  5107 ;;      Totals:         0       0       0       0
  5108 ;;Total ram usage:        0 bytes
  5109 ;; Hardware stack levels used: 1
  5110 ;; Hardware stack levels required when called: 4
  5111 ;; This function calls:
  5112 ;;		_drawVerticalLeftPaddle_Hard
  5113 ;; This function is called by:
  5114 ;;		_main
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118     0A16                     _paddle_init:	
  5119                           ;psect for function _paddle_init
  5120                           
  5121     0A16                     l2949:	
  5122                           ;incstack = 0
  5123                           ; Regs used in _paddle_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5124                           
  5125                           
  5126                           ;main.c: 719:     TRISB5 = 1;
  5127     0A16  1683               	bsf	3,5	;RP0=1, select bank1
  5128     0A17  1303               	bcf	3,6	;RP1=0, select bank1
  5129     0A18  1686               	bsf	6,5	;volatile
  5130                           
  5131                           ;main.c: 720:     TRISB4 = 1;
  5132     0A19  1606               	bsf	6,4	;volatile
  5133     0A1A                     l2951:
  5134                           
  5135                           ;main.c: 722:     drawVerticalLeftPaddle_Hard(paddle_top_left_position, paddle_length, p
      +                          addle_left_side_vertical_position, paddle_width, 0xFFFF);
  5136     0A1A  300D               	movlw	13
  5137     0A1B  1283               	bcf	3,5	;RP0=0, select bank0
  5138     0A1C  1303               	bcf	3,6	;RP1=0, select bank0
  5139     0A1D  00A0               	movwf	drawVerticalLeftPaddle_Hard@length
  5140     0A1E  3010               	movlw	16
  5141     0A1F  00A1               	movwf	drawVerticalLeftPaddle_Hard@in_VLine_x
  5142     0A20  3003               	movlw	3
  5143     0A21  00A2               	movwf	drawVerticalLeftPaddle_Hard@width
  5144     0A22  30FF               	movlw	255
  5145     0A23  00A3               	movwf	drawVerticalLeftPaddle_Hard@color
  5146     0A24  30FF               	movlw	255
  5147     0A25  00A4               	movwf	drawVerticalLeftPaddle_Hard@color+1
  5148     0A26  086D               	movf	_paddle_top_left_position,w
  5149     0A27  118A  2050  158A   	fcall	_drawVerticalLeftPaddle_Hard
  5150     0A2A                     l276:
  5151     0A2A  0008               	return
  5152     0A2B                     __end_of_paddle_init:
  5153                           
  5154                           	psect	text15
  5155     0BC0                     __ptext15:	
  5156 ;; *************** function _draw_game_state *****************
  5157 ;; Defined at:
  5158 ;;		line 765 in file "main.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;		None
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5172 ;;      Params:         0       0       0       0
  5173 ;;      Locals:         0       0       0       0
  5174 ;;      Temps:          0       0       0       0
  5175 ;;      Totals:         0       0       0       0
  5176 ;;Total ram usage:        0 bytes
  5177 ;; Hardware stack levels used: 1
  5178 ;; Hardware stack levels required when called: 4
  5179 ;; This function calls:
  5180 ;;		_drawSquareLine_Hard
  5181 ;;		_drawVerticalLeftPaddle_Hard
  5182 ;; This function is called by:
  5183 ;;		_main
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187     0BC0                     _draw_game_state:	
  5188                           ;psect for function _draw_game_state
  5189                           
  5190     0BC0                     l2979:	
  5191                           ;incstack = 0
  5192                           ; Regs used in _draw_game_state: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5193                           
  5194                           
  5195                           ;main.c: 766:     drawSquareLine_Hard(old_x_position, 3, old_y_position, 0x0000);
  5196     0BC0  3003               	movlw	3
  5197     0BC1  00FA               	movwf	drawSquareLine_Hard@side_length
  5198     0BC2  1683               	bsf	3,5	;RP0=1, select bank1
  5199     0BC3  1303               	bcf	3,6	;RP1=0, select bank1
  5200     0BC4  0839               	movf	_old_y_position^(0+128),w
  5201     0BC5  00FB               	movwf	drawSquareLine_Hard@start_y_top_left
  5202     0BC6  3000               	movlw	0
  5203     0BC7  00FC               	movwf	drawSquareLine_Hard@color
  5204     0BC8  00FD               	movwf	drawSquareLine_Hard@color+1
  5205     0BC9  083A               	movf	_old_x_position^(0+128),w
  5206     0BCA  158A  2541  158A   	fcall	_drawSquareLine_Hard
  5207                           
  5208                           ;main.c: 767:         drawSquareLine_Hard(ball_x_position, 3, ball_y_position, 0xF800);
  5209     0BCD  3003               	movlw	3
  5210     0BCE  00FA               	movwf	drawSquareLine_Hard@side_length
  5211     0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  5212     0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  5213     0BD1  086E               	movf	_ball_y_position,w
  5214     0BD2  00FB               	movwf	drawSquareLine_Hard@start_y_top_left
  5215     0BD3  3000               	movlw	0
  5216     0BD4  00FC               	movwf	drawSquareLine_Hard@color
  5217     0BD5  30F8               	movlw	248
  5218     0BD6  00FD               	movwf	drawSquareLine_Hard@color+1
  5219     0BD7  086F               	movf	_ball_x_position,w
  5220     0BD8  158A  2541  158A   	fcall	_drawSquareLine_Hard
  5221     0BDB                     l2981:
  5222                           
  5223                           ;main.c: 768:         if(paddle_position_has_changed == 1) {
  5224     0BDB  1683               	bsf	3,5	;RP0=1, select bank1
  5225     0BDC  1303               	bcf	3,6	;RP1=0, select bank1
  5226     0BDD  0337               	decf	_paddle_position_has_changed^(0+128),w
  5227     0BDE  1D03               	btfss	3,2
  5228     0BDF  2BE1               	goto	u3731
  5229     0BE0  2BE2               	goto	u3730
  5230     0BE1                     u3731:
  5231     0BE1  2BF6               	goto	l2987
  5232     0BE2                     u3730:
  5233     0BE2                     l2983:
  5234                           
  5235                           ;main.c: 769:             drawVerticalLeftPaddle_Hard(old_paddle_top_left_position, padd
      +                          le_length, paddle_left_side_vertical_position, paddle_width, 0x0000);
  5236     0BE2  300D               	movlw	13
  5237     0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  5238     0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  5239     0BE5  00A0               	movwf	drawVerticalLeftPaddle_Hard@length
  5240     0BE6  3010               	movlw	16
  5241     0BE7  00A1               	movwf	drawVerticalLeftPaddle_Hard@in_VLine_x
  5242     0BE8  3003               	movlw	3
  5243     0BE9  00A2               	movwf	drawVerticalLeftPaddle_Hard@width
  5244     0BEA  3000               	movlw	0
  5245     0BEB  00A3               	movwf	drawVerticalLeftPaddle_Hard@color
  5246     0BEC  00A4               	movwf	drawVerticalLeftPaddle_Hard@color+1
  5247     0BED  1683               	bsf	3,5	;RP0=1, select bank1
  5248     0BEE  1303               	bcf	3,6	;RP1=0, select bank1
  5249     0BEF  0833               	movf	_old_paddle_top_left_position^(0+128),w
  5250     0BF0  118A  2050  158A   	fcall	_drawVerticalLeftPaddle_Hard
  5251     0BF3                     l2985:
  5252                           
  5253                           ;main.c: 771:             paddle_position_has_changed = 0;
  5254     0BF3  1683               	bsf	3,5	;RP0=1, select bank1
  5255     0BF4  1303               	bcf	3,6	;RP1=0, select bank1
  5256     0BF5  01B7               	clrf	_paddle_position_has_changed^(0+128)
  5257     0BF6                     l2987:
  5258                           
  5259                           ;main.c: 773:         drawVerticalLeftPaddle_Hard(paddle_top_left_position, paddle_lengt
      +                          h, paddle_left_side_vertical_position, paddle_width, 0xFFFF);
  5260     0BF6  300D               	movlw	13
  5261     0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  5262     0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  5263     0BF9  00A0               	movwf	drawVerticalLeftPaddle_Hard@length
  5264     0BFA  3010               	movlw	16
  5265     0BFB  00A1               	movwf	drawVerticalLeftPaddle_Hard@in_VLine_x
  5266     0BFC  3003               	movlw	3
  5267     0BFD  00A2               	movwf	drawVerticalLeftPaddle_Hard@width
  5268     0BFE  30FF               	movlw	255
  5269     0BFF  00A3               	movwf	drawVerticalLeftPaddle_Hard@color
  5270     0C00  30FF               	movlw	255
  5271     0C01  00A4               	movwf	drawVerticalLeftPaddle_Hard@color+1
  5272     0C02  086D               	movf	_paddle_top_left_position,w
  5273     0C03  118A  2050  158A   	fcall	_drawVerticalLeftPaddle_Hard
  5274     0C06                     l300:
  5275     0C06  0008               	return
  5276     0C07                     __end_of_draw_game_state:
  5277                           
  5278                           	psect	text16
  5279     0050                     __ptext16:	
  5280 ;; *************** function _drawVerticalLeftPaddle_Hard *****************
  5281 ;; Defined at:
  5282 ;;		line 646 in file "main.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  start_y         1    wreg     char 
  5285 ;;  length          1    0[BANK0 ] char 
  5286 ;;  in_VLine_x      1    1[BANK0 ] char 
  5287 ;;  width           1    2[BANK0 ] unsigned char 
  5288 ;;  color           2    3[BANK0 ] unsigned int 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  start_y         1   10[BANK0 ] char 
  5291 ;;  y_row_vertic    2    8[BANK0 ] int 
  5292 ;;  total           1    7[BANK0 ] unsigned char 
  5293 ;;  x2              1    6[BANK0 ] unsigned char 
  5294 ;;  y2              1    5[BANK0 ] unsigned char 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  1    wreg      void 
  5297 ;; Registers used:
  5298 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5304 ;;      Params:         0       5       0       0
  5305 ;;      Locals:         0       6       0       0
  5306 ;;      Temps:          4       0       0       0
  5307 ;;      Totals:         4      11       0       0
  5308 ;;Total ram usage:       15 bytes
  5309 ;; Hardware stack levels used: 1
  5310 ;; Hardware stack levels required when called: 3
  5311 ;; This function calls:
  5312 ;;		_SPI_CS_HIGH
  5313 ;;		_SPI_CS_LOW
  5314 ;;		_SPI_WRITE16_Hard
  5315 ;;		___bmul
  5316 ;;		_my_setAddrWindow_Hard
  5317 ;; This function is called by:
  5318 ;;		_paddle_init
  5319 ;;		_draw_game_state
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323     0050                     _drawVerticalLeftPaddle_Hard:	
  5324                           ;psect for function _drawVerticalLeftPaddle_Hard
  5325                           
  5326                           
  5327                           ;incstack = 0
  5328                           ; Regs used in _drawVerticalLeftPaddle_Hard: [wreg+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  5329                           ;drawVerticalLeftPaddle_Hard@start_y stored from wreg
  5330     0050  1283               	bcf	3,5	;RP0=0, select bank0
  5331     0051  1303               	bcf	3,6	;RP1=0, select bank0
  5332     0052  00AA               	movwf	drawVerticalLeftPaddle_Hard@start_y
  5333     0053                     l2855:
  5334                           
  5335                           ;main.c: 648:     if((start_y > 0 && ((start_y + length - 1) < 95)) && (in_VLine_x > 0) 
      +                          && ((in_VLine_x + width - 1) < 127)) {
  5336     0053  082A               	movf	drawVerticalLeftPaddle_Hard@start_y,w
  5337     0054  3A80               	xorlw	128
  5338     0055  3E7F               	addlw	-129
  5339     0056  1C03               	skipc
  5340     0057  2859               	goto	u3481
  5341     0058  285A               	goto	u3480
  5342     0059                     u3481:
  5343     0059  28F9               	goto	l252
  5344     005A                     u3480:
  5345     005A                     l2857:
  5346     005A  082A               	movf	drawVerticalLeftPaddle_Hard@start_y,w
  5347     005B  0720               	addwf	drawVerticalLeftPaddle_Hard@length,w
  5348     005C  00FA               	movwf	??_drawVerticalLeftPaddle_Hard
  5349     005D  01FB               	clrf	??_drawVerticalLeftPaddle_Hard+1
  5350     005E  1803               	skipnc
  5351     005F  0AFB               	incf	??_drawVerticalLeftPaddle_Hard+1,f
  5352     0060  1FAA               	btfss	drawVerticalLeftPaddle_Hard@start_y,7
  5353     0061  2863               	goto	u3494
  5354     0062  03FB               	decf	??_drawVerticalLeftPaddle_Hard+1,f
  5355     0063                     u3494:
  5356     0063  1FA0               	btfss	drawVerticalLeftPaddle_Hard@length,7
  5357     0064  2866               	goto	u3495
  5358     0065  03FB               	decf	??_drawVerticalLeftPaddle_Hard+1,f
  5359     0066                     u3495:
  5360     0066  087A               	movf	??_drawVerticalLeftPaddle_Hard,w
  5361     0067  3EFF               	addlw	255
  5362     0068  00FC               	movwf	??_drawVerticalLeftPaddle_Hard+2
  5363     0069  087B               	movf	??_drawVerticalLeftPaddle_Hard+1,w
  5364     006A  1803               	skipnc
  5365     006B  3E01               	addlw	1
  5366     006C  3EFF               	addlw	255
  5367     006D  00FD               	movwf	??_drawVerticalLeftPaddle_Hard+3
  5368     006E  087D               	movf	??_drawVerticalLeftPaddle_Hard+3,w
  5369     006F  3A80               	xorlw	128
  5370     0070  00FF               	movwf	btemp+1
  5371     0071  3080               	movlw	128
  5372     0072  027F               	subwf	btemp+1,w
  5373     0073  1D03               	skipz
  5374     0074  2877               	goto	u3505
  5375     0075  305F               	movlw	95
  5376     0076  027C               	subwf	??_drawVerticalLeftPaddle_Hard+2,w
  5377     0077                     u3505:
  5378     0077  1803               	skipnc
  5379     0078  287A               	goto	u3501
  5380     0079  287B               	goto	u3500
  5381     007A                     u3501:
  5382     007A  28F9               	goto	l252
  5383     007B                     u3500:
  5384     007B                     l2859:
  5385     007B  1283               	bcf	3,5	;RP0=0, select bank0
  5386     007C  1303               	bcf	3,6	;RP1=0, select bank0
  5387     007D  0821               	movf	drawVerticalLeftPaddle_Hard@in_VLine_x,w
  5388     007E  3A80               	xorlw	128
  5389     007F  3E7F               	addlw	-129
  5390     0080  1C03               	skipc
  5391     0081  2883               	goto	u3511
  5392     0082  2884               	goto	u3510
  5393     0083                     u3511:
  5394     0083  28F9               	goto	l252
  5395     0084                     u3510:
  5396     0084                     l2861:
  5397     0084  0822               	movf	drawVerticalLeftPaddle_Hard@width,w
  5398     0085  0721               	addwf	drawVerticalLeftPaddle_Hard@in_VLine_x,w
  5399     0086  00FA               	movwf	??_drawVerticalLeftPaddle_Hard
  5400     0087  01FB               	clrf	??_drawVerticalLeftPaddle_Hard+1
  5401     0088  1803               	skipnc
  5402     0089  0AFB               	incf	??_drawVerticalLeftPaddle_Hard+1,f
  5403     008A  1FA1               	btfss	drawVerticalLeftPaddle_Hard@in_VLine_x,7
  5404     008B  288D               	goto	u3524
  5405     008C  03FB               	decf	??_drawVerticalLeftPaddle_Hard+1,f
  5406     008D                     u3524:
  5407     008D  087A               	movf	??_drawVerticalLeftPaddle_Hard,w
  5408     008E  3EFF               	addlw	255
  5409     008F  00FC               	movwf	??_drawVerticalLeftPaddle_Hard+2
  5410     0090  087B               	movf	??_drawVerticalLeftPaddle_Hard+1,w
  5411     0091  1803               	skipnc
  5412     0092  3E01               	addlw	1
  5413     0093  3EFF               	addlw	255
  5414     0094  00FD               	movwf	??_drawVerticalLeftPaddle_Hard+3
  5415     0095  087D               	movf	??_drawVerticalLeftPaddle_Hard+3,w
  5416     0096  3A80               	xorlw	128
  5417     0097  00FF               	movwf	btemp+1
  5418     0098  3080               	movlw	128
  5419     0099  027F               	subwf	btemp+1,w
  5420     009A  1D03               	skipz
  5421     009B  289E               	goto	u3535
  5422     009C  307F               	movlw	127
  5423     009D  027C               	subwf	??_drawVerticalLeftPaddle_Hard+2,w
  5424     009E                     u3535:
  5425     009E  1803               	skipnc
  5426     009F  28A1               	goto	u3531
  5427     00A0  28A2               	goto	u3530
  5428     00A1                     u3531:
  5429     00A1  28F9               	goto	l252
  5430     00A2                     u3530:
  5431     00A2                     l2863:
  5432                           
  5433                           ;main.c: 650:         SPI_CS_LOW();
  5434     00A2  158A  2161  118A   	fcall	_SPI_CS_LOW
  5435     00A5                     l2865:
  5436                           
  5437                           ;main.c: 652:         uint8_t y2 = start_y + length - 1;
  5438     00A5  1283               	bcf	3,5	;RP0=0, select bank0
  5439     00A6  1303               	bcf	3,6	;RP1=0, select bank0
  5440     00A7  0820               	movf	drawVerticalLeftPaddle_Hard@length,w
  5441     00A8  072A               	addwf	drawVerticalLeftPaddle_Hard@start_y,w
  5442     00A9  3EFF               	addlw	255
  5443     00AA  00A5               	movwf	drawVerticalLeftPaddle_Hard@y2
  5444     00AB                     l2867:
  5445                           
  5446                           ;main.c: 653:         uint8_t x2 = in_VLine_x + width - 1;
  5447     00AB  0822               	movf	drawVerticalLeftPaddle_Hard@width,w
  5448     00AC  0721               	addwf	drawVerticalLeftPaddle_Hard@in_VLine_x,w
  5449     00AD  3EFF               	addlw	255
  5450     00AE  00A6               	movwf	drawVerticalLeftPaddle_Hard@x2
  5451     00AF                     l2869:
  5452                           
  5453                           ;main.c: 655:         my_setAddrWindow_Hard(in_VLine_x, start_y, x2, y2);
  5454     00AF  0821               	movf	drawVerticalLeftPaddle_Hard@in_VLine_x,w
  5455     00B0  00F2               	movwf	my_setAddrWindow_Hard@x_start
  5456     00B1  01F3               	clrf	my_setAddrWindow_Hard@x_start+1
  5457     00B2  1BF2               	btfsc	my_setAddrWindow_Hard@x_start,7
  5458     00B3  03F3               	decf	my_setAddrWindow_Hard@x_start+1,f
  5459     00B4  082A               	movf	drawVerticalLeftPaddle_Hard@start_y,w
  5460     00B5  00F4               	movwf	my_setAddrWindow_Hard@y_start
  5461     00B6  01F5               	clrf	my_setAddrWindow_Hard@y_start+1
  5462     00B7  1BF4               	btfsc	my_setAddrWindow_Hard@y_start,7
  5463     00B8  03F5               	decf	my_setAddrWindow_Hard@y_start+1,f
  5464     00B9  0826               	movf	drawVerticalLeftPaddle_Hard@x2,w
  5465     00BA  00FA               	movwf	??_drawVerticalLeftPaddle_Hard
  5466     00BB  01FB               	clrf	??_drawVerticalLeftPaddle_Hard+1
  5467     00BC  087A               	movf	??_drawVerticalLeftPaddle_Hard,w
  5468     00BD  00F6               	movwf	my_setAddrWindow_Hard@x_finish
  5469     00BE  087B               	movf	??_drawVerticalLeftPaddle_Hard+1,w
  5470     00BF  00F7               	movwf	my_setAddrWindow_Hard@x_finish+1
  5471     00C0  0825               	movf	drawVerticalLeftPaddle_Hard@y2,w
  5472     00C1  00FC               	movwf	??_drawVerticalLeftPaddle_Hard+2
  5473     00C2  01FD               	clrf	??_drawVerticalLeftPaddle_Hard+3
  5474     00C3  087C               	movf	??_drawVerticalLeftPaddle_Hard+2,w
  5475     00C4  00F8               	movwf	my_setAddrWindow_Hard@y_finish
  5476     00C5  087D               	movf	??_drawVerticalLeftPaddle_Hard+3,w
  5477     00C6  00F9               	movwf	my_setAddrWindow_Hard@y_finish+1
  5478     00C7  158A  225C  118A   	fcall	_my_setAddrWindow_Hard
  5479     00CA                     l2871:
  5480     00CA                     l2873:
  5481                           
  5482                           ;main.c: 659:         uint8_t total = length * width;
  5483     00CA  1283               	bcf	3,5	;RP0=0, select bank0
  5484     00CB  1303               	bcf	3,6	;RP1=0, select bank0
  5485     00CC  0822               	movf	drawVerticalLeftPaddle_Hard@width,w
  5486     00CD  00F0               	movwf	___bmul@multiplicand
  5487     00CE  0820               	movf	drawVerticalLeftPaddle_Hard@length,w
  5488     00CF  158A  2201  118A   	fcall	___bmul
  5489     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  5490     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  5491     00D4  00A7               	movwf	drawVerticalLeftPaddle_Hard@total
  5492     00D5                     l2875:
  5493                           
  5494                           ;main.c: 660:         for(y_row_vertical = 0; y_row_vertical < total; y_row_vertical++) 
      +                          {
  5495     00D5  01A8               	clrf	drawVerticalLeftPaddle_Hard@y_row_vertical
  5496     00D6  01A9               	clrf	drawVerticalLeftPaddle_Hard@y_row_vertical+1
  5497     00D7  28E9               	goto	l2881
  5498     00D8                     l2877:
  5499                           
  5500                           ;main.c: 661:             SPI_WRITE16_Hard(color);
  5501     00D8  1283               	bcf	3,5	;RP0=0, select bank0
  5502     00D9  1303               	bcf	3,6	;RP1=0, select bank0
  5503     00DA  0824               	movf	drawVerticalLeftPaddle_Hard@color+1,w
  5504     00DB  00F2               	movwf	SPI_WRITE16_Hard@w+1
  5505     00DC  0823               	movf	drawVerticalLeftPaddle_Hard@color,w
  5506     00DD  00F1               	movwf	SPI_WRITE16_Hard@w
  5507     00DE  158A  219C  118A   	fcall	_SPI_WRITE16_Hard
  5508     00E1                     l2879:
  5509                           
  5510                           ;main.c: 662:         }
  5511     00E1  3001               	movlw	1
  5512     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  5513     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  5514     00E4  07A8               	addwf	drawVerticalLeftPaddle_Hard@y_row_vertical,f
  5515     00E5  1803               	skipnc
  5516     00E6  0AA9               	incf	drawVerticalLeftPaddle_Hard@y_row_vertical+1,f
  5517     00E7  3000               	movlw	0
  5518     00E8  07A9               	addwf	drawVerticalLeftPaddle_Hard@y_row_vertical+1,f
  5519     00E9                     l2881:
  5520     00E9  0829               	movf	drawVerticalLeftPaddle_Hard@y_row_vertical+1,w
  5521     00EA  3A80               	xorlw	128
  5522     00EB  00FA               	movwf	??_drawVerticalLeftPaddle_Hard
  5523     00EC  3080               	movlw	128
  5524     00ED  027A               	subwf	??_drawVerticalLeftPaddle_Hard,w
  5525     00EE  1D03               	skipz
  5526     00EF  28F2               	goto	u3545
  5527     00F0  0827               	movf	drawVerticalLeftPaddle_Hard@total,w
  5528     00F1  0228               	subwf	drawVerticalLeftPaddle_Hard@y_row_vertical,w
  5529     00F2                     u3545:
  5530     00F2  1C03               	skipc
  5531     00F3  28F5               	goto	u3541
  5532     00F4  28F6               	goto	u3540
  5533     00F5                     u3541:
  5534     00F5  28D8               	goto	l2877
  5535     00F6                     u3540:
  5536     00F6                     l2883:
  5537                           
  5538                           ;main.c: 664:         SPI_CS_HIGH();
  5539     00F6  158A  215D  118A   	fcall	_SPI_CS_HIGH
  5540     00F9                     l252:
  5541     00F9  0008               	return
  5542     00FA                     __end_of_drawVerticalLeftPaddle_Hard:
  5543                           
  5544                           	psect	text17
  5545     0A01                     __ptext17:	
  5546 ;; *************** function ___bmul *****************
  5547 ;; Defined at:
  5548 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul8.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  multiplier      1    wreg     unsigned char 
  5551 ;;  multiplicand    1    0[COMMON] unsigned char 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  multiplier      1    3[COMMON] unsigned char 
  5554 ;;  product         1    2[COMMON] unsigned char 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  1    wreg      unsigned char 
  5557 ;; Registers used:
  5558 ;;		wreg, status,2, status,0
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5564 ;;      Params:         1       0       0       0
  5565 ;;      Locals:         2       0       0       0
  5566 ;;      Temps:          1       0       0       0
  5567 ;;      Totals:         4       0       0       0
  5568 ;;Total ram usage:        4 bytes
  5569 ;; Hardware stack levels used: 1
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_drawVerticalLeftPaddle_Hard
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577     0A01                     ___bmul:	
  5578                           ;psect for function ___bmul
  5579                           
  5580                           
  5581                           ;incstack = 0
  5582                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5583                           ;___bmul@multiplier stored from wreg
  5584     0A01  00F3               	movwf	___bmul@multiplier
  5585     0A02                     l2449:
  5586     0A02  01F2               	clrf	___bmul@product
  5587     0A03                     l2451:
  5588     0A03  1C73               	btfss	___bmul@multiplier,0
  5589     0A04  2A06               	goto	u2851
  5590     0A05  2A07               	goto	u2850
  5591     0A06                     u2851:
  5592     0A06  2A0B               	goto	l2455
  5593     0A07                     u2850:
  5594     0A07                     l2453:
  5595     0A07  0870               	movf	___bmul@multiplicand,w
  5596     0A08  00F1               	movwf	??___bmul
  5597     0A09  0871               	movf	??___bmul,w
  5598     0A0A  07F2               	addwf	___bmul@product,f
  5599     0A0B                     l2455:
  5600     0A0B  1003               	clrc
  5601     0A0C  0DF0               	rlf	___bmul@multiplicand,f
  5602     0A0D                     l2457:
  5603     0A0D  1003               	clrc
  5604     0A0E  0CF3               	rrf	___bmul@multiplier,f
  5605     0A0F  0873               	movf	___bmul@multiplier,w
  5606     0A10  1D03               	btfss	3,2
  5607     0A11  2A13               	goto	u2861
  5608     0A12  2A14               	goto	u2860
  5609     0A13                     u2861:
  5610     0A13  2A03               	goto	l2451
  5611     0A14                     u2860:
  5612     0A14                     l2459:
  5613     0A14  0872               	movf	___bmul@product,w
  5614     0A15                     l421:
  5615     0A15  0008               	return
  5616     0A16                     __end_of___bmul:
  5617                           
  5618                           	psect	text18
  5619     0D41                     __ptext18:	
  5620 ;; *************** function _drawSquareLine_Hard *****************
  5621 ;; Defined at:
  5622 ;;		line 581 in file "main.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  start_x_top_    1    wreg     char 
  5625 ;;  side_length     1   10[COMMON] char 
  5626 ;;  start_y_top_    1   11[COMMON] char 
  5627 ;;  color           2   12[COMMON] unsigned int 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  start_x_top_    1   10[BANK0 ] char 
  5630 ;;  y_row_vertic    2    8[BANK0 ] int 
  5631 ;;  x_colum_hori    2    6[BANK0 ] int 
  5632 ;;  y2              1    5[BANK0 ] unsigned char 
  5633 ;;  x2              1    4[BANK0 ] unsigned char 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      void 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0, pclath, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5643 ;;      Params:         4       0       0       0
  5644 ;;      Locals:         0       7       0       0
  5645 ;;      Temps:          0       4       0       0
  5646 ;;      Totals:         4      11       0       0
  5647 ;;Total ram usage:       15 bytes
  5648 ;; Hardware stack levels used: 1
  5649 ;; Hardware stack levels required when called: 3
  5650 ;; This function calls:
  5651 ;;		_SPI_CS_HIGH
  5652 ;;		_SPI_CS_LOW
  5653 ;;		_SPI_WRITE16_Hard
  5654 ;;		_my_setAddrWindow_Hard
  5655 ;; This function is called by:
  5656 ;;		_draw_game_state
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660     0D41                     _drawSquareLine_Hard:	
  5661                           ;psect for function _drawSquareLine_Hard
  5662                           
  5663                           
  5664                           ;incstack = 0
  5665                           ; Regs used in _drawSquareLine_Hard: [wreg+status,2+status,0+pclath+cstack]
  5666                           ;drawSquareLine_Hard@start_x_top_left stored from wreg
  5667     0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5668     0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5669     0D43  00AA               	movwf	drawSquareLine_Hard@start_x_top_left
  5670     0D44                     l2829:
  5671                           
  5672                           ;main.c: 582:     SPI_CS_LOW();
  5673     0D44  158A  2161  158A   	fcall	_SPI_CS_LOW
  5674     0D47                     l2831:
  5675                           
  5676                           ;main.c: 584:     uint8_t x2 = start_x_top_left + side_length - 1;
  5677     0D47  087A               	movf	drawSquareLine_Hard@side_length,w
  5678     0D48  1283               	bcf	3,5	;RP0=0, select bank0
  5679     0D49  1303               	bcf	3,6	;RP1=0, select bank0
  5680     0D4A  072A               	addwf	drawSquareLine_Hard@start_x_top_left,w
  5681     0D4B  3EFF               	addlw	255
  5682     0D4C  00A4               	movwf	drawSquareLine_Hard@x2
  5683     0D4D                     l2833:
  5684                           
  5685                           ;main.c: 585:     uint8_t y2 = start_y_top_left + side_length - 1;
  5686     0D4D  087A               	movf	drawSquareLine_Hard@side_length,w
  5687     0D4E  077B               	addwf	drawSquareLine_Hard@start_y_top_left,w
  5688     0D4F  3EFF               	addlw	255
  5689     0D50  00A5               	movwf	drawSquareLine_Hard@y2
  5690     0D51                     l2835:
  5691                           
  5692                           ;main.c: 586:     my_setAddrWindow_Hard(start_x_top_left, start_y_top_left, x2, y2);
  5693     0D51  082A               	movf	drawSquareLine_Hard@start_x_top_left,w
  5694     0D52  00F2               	movwf	my_setAddrWindow_Hard@x_start
  5695     0D53  01F3               	clrf	my_setAddrWindow_Hard@x_start+1
  5696     0D54  1BF2               	btfsc	my_setAddrWindow_Hard@x_start,7
  5697     0D55  03F3               	decf	my_setAddrWindow_Hard@x_start+1,f
  5698     0D56  087B               	movf	drawSquareLine_Hard@start_y_top_left,w
  5699     0D57  00F4               	movwf	my_setAddrWindow_Hard@y_start
  5700     0D58  01F5               	clrf	my_setAddrWindow_Hard@y_start+1
  5701     0D59  1BF4               	btfsc	my_setAddrWindow_Hard@y_start,7
  5702     0D5A  03F5               	decf	my_setAddrWindow_Hard@y_start+1,f
  5703     0D5B  0824               	movf	drawSquareLine_Hard@x2,w
  5704     0D5C  00A0               	movwf	??_drawSquareLine_Hard
  5705     0D5D  01A1               	clrf	??_drawSquareLine_Hard+1
  5706     0D5E  0820               	movf	??_drawSquareLine_Hard,w
  5707     0D5F  00F6               	movwf	my_setAddrWindow_Hard@x_finish
  5708     0D60  0821               	movf	??_drawSquareLine_Hard+1,w
  5709     0D61  00F7               	movwf	my_setAddrWindow_Hard@x_finish+1
  5710     0D62  0825               	movf	drawSquareLine_Hard@y2,w
  5711     0D63  00A2               	movwf	??_drawSquareLine_Hard+2
  5712     0D64  01A3               	clrf	??_drawSquareLine_Hard+3
  5713     0D65  0822               	movf	??_drawSquareLine_Hard+2,w
  5714     0D66  00F8               	movwf	my_setAddrWindow_Hard@y_finish
  5715     0D67  0823               	movf	??_drawSquareLine_Hard+3,w
  5716     0D68  00F9               	movwf	my_setAddrWindow_Hard@y_finish+1
  5717     0D69  158A  225C  158A   	fcall	_my_setAddrWindow_Hard
  5718     0D6C                     l2837:
  5719     0D6C                     l2839:
  5720     0D6C                     l2841:
  5721                           
  5722                           ;main.c: 591:     for(y_row_vertical = 0; y_row_vertical < side_length; y_row_vertical++
      +                          ) {
  5723     0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  5724     0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  5725     0D6E  01A8               	clrf	drawSquareLine_Hard@y_row_vertical
  5726     0D6F  01A9               	clrf	drawSquareLine_Hard@y_row_vertical+1
  5727     0D70  2DA0               	goto	l221
  5728     0D71                     l2843:
  5729                           
  5730                           ;main.c: 592:         for(x_colum_horizontal = 0; x_colum_horizontal < side_length; x_co
      +                          lum_horizontal++) {
  5731     0D71  1283               	bcf	3,5	;RP0=0, select bank0
  5732     0D72  1303               	bcf	3,6	;RP1=0, select bank0
  5733     0D73  01A6               	clrf	drawSquareLine_Hard@x_colum_horizontal
  5734     0D74  01A7               	clrf	drawSquareLine_Hard@x_colum_horizontal+1
  5735     0D75  2D85               	goto	l2849
  5736     0D76                     l2845:
  5737                           
  5738                           ;main.c: 593:             SPI_WRITE16_Hard(color);
  5739     0D76  087D               	movf	drawSquareLine_Hard@color+1,w
  5740     0D77  00F2               	movwf	SPI_WRITE16_Hard@w+1
  5741     0D78  087C               	movf	drawSquareLine_Hard@color,w
  5742     0D79  00F1               	movwf	SPI_WRITE16_Hard@w
  5743     0D7A  158A  219C  158A   	fcall	_SPI_WRITE16_Hard
  5744     0D7D                     l2847:
  5745                           
  5746                           ;main.c: 594:         }
  5747     0D7D  3001               	movlw	1
  5748     0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  5749     0D7F  1303               	bcf	3,6	;RP1=0, select bank0
  5750     0D80  07A6               	addwf	drawSquareLine_Hard@x_colum_horizontal,f
  5751     0D81  1803               	skipnc
  5752     0D82  0AA7               	incf	drawSquareLine_Hard@x_colum_horizontal+1,f
  5753     0D83  3000               	movlw	0
  5754     0D84  07A7               	addwf	drawSquareLine_Hard@x_colum_horizontal+1,f
  5755     0D85                     l2849:
  5756     0D85  087A               	movf	drawSquareLine_Hard@side_length,w
  5757     0D86  00A0               	movwf	??_drawSquareLine_Hard
  5758     0D87  01A1               	clrf	??_drawSquareLine_Hard+1
  5759     0D88  1BA0               	btfsc	??_drawSquareLine_Hard,7
  5760     0D89  03A1               	decf	??_drawSquareLine_Hard+1,f
  5761     0D8A  0827               	movf	drawSquareLine_Hard@x_colum_horizontal+1,w
  5762     0D8B  3A80               	xorlw	128
  5763     0D8C  00A2               	movwf	??_drawSquareLine_Hard+2
  5764     0D8D  0821               	movf	??_drawSquareLine_Hard+1,w
  5765     0D8E  3A80               	xorlw	128
  5766     0D8F  0222               	subwf	??_drawSquareLine_Hard+2,w
  5767     0D90  1D03               	skipz
  5768     0D91  2D94               	goto	u3465
  5769     0D92  0820               	movf	??_drawSquareLine_Hard,w
  5770     0D93  0226               	subwf	drawSquareLine_Hard@x_colum_horizontal,w
  5771     0D94                     u3465:
  5772     0D94  1C03               	skipc
  5773     0D95  2D97               	goto	u3461
  5774     0D96  2D98               	goto	u3460
  5775     0D97                     u3461:
  5776     0D97  2D76               	goto	l2845
  5777     0D98                     u3460:
  5778     0D98                     l2851:
  5779                           
  5780                           ;main.c: 595:     }
  5781     0D98  3001               	movlw	1
  5782     0D99  1283               	bcf	3,5	;RP0=0, select bank0
  5783     0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  5784     0D9B  07A8               	addwf	drawSquareLine_Hard@y_row_vertical,f
  5785     0D9C  1803               	skipnc
  5786     0D9D  0AA9               	incf	drawSquareLine_Hard@y_row_vertical+1,f
  5787     0D9E  3000               	movlw	0
  5788     0D9F  07A9               	addwf	drawSquareLine_Hard@y_row_vertical+1,f
  5789     0DA0                     l221:
  5790     0DA0  087A               	movf	drawSquareLine_Hard@side_length,w
  5791     0DA1  00A0               	movwf	??_drawSquareLine_Hard
  5792     0DA2  01A1               	clrf	??_drawSquareLine_Hard+1
  5793     0DA3  1BA0               	btfsc	??_drawSquareLine_Hard,7
  5794     0DA4  03A1               	decf	??_drawSquareLine_Hard+1,f
  5795     0DA5  0829               	movf	drawSquareLine_Hard@y_row_vertical+1,w
  5796     0DA6  3A80               	xorlw	128
  5797     0DA7  00A2               	movwf	??_drawSquareLine_Hard+2
  5798     0DA8  0821               	movf	??_drawSquareLine_Hard+1,w
  5799     0DA9  3A80               	xorlw	128
  5800     0DAA  0222               	subwf	??_drawSquareLine_Hard+2,w
  5801     0DAB  1D03               	skipz
  5802     0DAC  2DAF               	goto	u3475
  5803     0DAD  0820               	movf	??_drawSquareLine_Hard,w
  5804     0DAE  0228               	subwf	drawSquareLine_Hard@y_row_vertical,w
  5805     0DAF                     u3475:
  5806     0DAF  1C03               	skipc
  5807     0DB0  2DB2               	goto	u3471
  5808     0DB1  2DB3               	goto	u3470
  5809     0DB2                     u3471:
  5810     0DB2  2D71               	goto	l2843
  5811     0DB3                     u3470:
  5812     0DB3                     l2853:
  5813                           
  5814                           ;main.c: 597:     SPI_CS_HIGH();
  5815     0DB3  158A  215D  158A   	fcall	_SPI_CS_HIGH
  5816     0DB6                     l227:
  5817     0DB6  0008               	return
  5818     0DB7                     __end_of_drawSquareLine_Hard:
  5819                           
  5820                           	psect	text19
  5821     0A9B                     __ptext19:	
  5822 ;; *************** function _display_init *****************
  5823 ;; Defined at:
  5824 ;;		line 682 in file "main.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5838 ;;      Params:         0       0       0       0
  5839 ;;      Locals:         0       0       0       0
  5840 ;;      Temps:          0       3       0       0
  5841 ;;      Totals:         0       3       0       0
  5842 ;;Total ram usage:        3 bytes
  5843 ;; Hardware stack levels used: 1
  5844 ;; Hardware stack levels required when called: 4
  5845 ;; This function calls:
  5846 ;;		_init_Hardwear_SPI
  5847 ;;		_init_Softwear_SPI
  5848 ;;		_sendCommand
  5849 ;;		_setAllDisplayPixels_Hard
  5850 ;;		_setDisplayFillingMode
  5851 ;; This function is called by:
  5852 ;;		_main
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856     0A9B                     _display_init:	
  5857                           ;psect for function _display_init
  5858                           
  5859     0A9B                     l2933:	
  5860                           ;incstack = 0
  5861                           ; Regs used in _display_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5862                           
  5863                           
  5864                           ;main.c: 683:     init_Softwear_SPI();
  5865     0A9B  158A  2380  158A   	fcall	_init_Softwear_SPI
  5866     0A9E                     l2935:
  5867                           
  5868                           ;main.c: 684:     sendCommand(0xAF);
  5869     0A9E  30AF               	movlw	175
  5870     0A9F  158A  21C9  158A   	fcall	_sendCommand
  5871     0AA2                     l2937:
  5872                           
  5873                           ;main.c: 686:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  5874     0AA2  301A               	movlw	26
  5875     0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  5876     0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  5877     0AA5  00A6               	movwf	??_display_init+2
  5878     0AA6  305E               	movlw	94
  5879     0AA7  00A5               	movwf	??_display_init+1
  5880     0AA8  306E               	movlw	110
  5881     0AA9  00A4               	movwf	??_display_init
  5882     0AAA                     u4327:
  5883     0AAA  0BA4               	decfsz	??_display_init,f
  5884     0AAB  2AAA               	goto	u4327
  5885     0AAC  0BA5               	decfsz	??_display_init+1,f
  5886     0AAD  2AAA               	goto	u4327
  5887     0AAE  0BA6               	decfsz	??_display_init+2,f
  5888     0AAF  2AAA               	goto	u4327
  5889     0AB0                     l2939:
  5890                           
  5891                           ;main.c: 687:     setDisplayFillingMode(1);
  5892     0AB0  3001               	movlw	1
  5893     0AB1  158A  2345  158A   	fcall	_setDisplayFillingMode
  5894     0AB4                     l2941:
  5895                           
  5896                           ;main.c: 697:     init_Hardwear_SPI();
  5897     0AB4  158A  21A9  158A   	fcall	_init_Hardwear_SPI
  5898     0AB7                     l2943:
  5899                           
  5900                           ;main.c: 698:     TRISC5 = 1;
  5901     0AB7  1683               	bsf	3,5	;RP0=1, select bank1
  5902     0AB8  1303               	bcf	3,6	;RP1=0, select bank1
  5903     0AB9  1687               	bsf	7,5	;volatile
  5904     0ABA                     l2945:
  5905                           
  5906                           ;main.c: 699:     setAllDisplayPixels_Hard(0x0000);
  5907     0ABA  3000               	movlw	0
  5908     0ABB  00FA               	movwf	setAllDisplayPixels_Hard@color
  5909     0ABC  00FB               	movwf	setAllDisplayPixels_Hard@color+1
  5910     0ABD  158A  24F0  158A   	fcall	_setAllDisplayPixels_Hard
  5911     0AC0                     l258:
  5912     0AC0  0008               	return
  5913     0AC1                     __end_of_display_init:
  5914                           
  5915                           	psect	text20
  5916     0B45                     __ptext20:	
  5917 ;; *************** function _setDisplayFillingMode *****************
  5918 ;; Defined at:
  5919 ;;		line 368 in file "main.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  hORv            1    wreg     unsigned char 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  hORv            1    7[COMMON] unsigned char 
  5924 ;;  madctl          1    8[COMMON] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      void 
  5927 ;; Registers used:
  5928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5934 ;;      Params:         0       0       0       0
  5935 ;;      Locals:         2       0       0       0
  5936 ;;      Temps:          2       0       0       0
  5937 ;;      Totals:         4       0       0       0
  5938 ;;Total ram usage:        4 bytes
  5939 ;; Hardware stack levels used: 1
  5940 ;; Hardware stack levels required when called: 3
  5941 ;; This function calls:
  5942 ;;		_sendCommand_and_8bit_Data
  5943 ;; This function is called by:
  5944 ;;		_display_init
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948     0B45                     _setDisplayFillingMode:	
  5949                           ;psect for function _setDisplayFillingMode
  5950                           
  5951                           
  5952                           ;incstack = 0
  5953                           ; Regs used in _setDisplayFillingMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  5954                           ;setDisplayFillingMode@hORv stored from wreg
  5955     0B45  00F7               	movwf	setDisplayFillingMode@hORv
  5956     0B46                     l2727:
  5957                           
  5958                           ;main.c: 377:   uint8_t madctl = 0b00100100;
  5959     0B46  3024               	movlw	36
  5960     0B47  00F8               	movwf	setDisplayFillingMode@madctl
  5961                           
  5962                           ;main.c: 379:   mode = hORv;
  5963     0B48  0877               	movf	setDisplayFillingMode@hORv,w
  5964     0B49  1683               	bsf	3,5	;RP0=1, select bank1
  5965     0B4A  1303               	bcf	3,6	;RP1=0, select bank1
  5966     0B4B  00B8               	movwf	_mode^(0+128)
  5967                           
  5968                           ;main.c: 381:   switch (mode) {
  5969     0B4C  2B5B               	goto	l2735
  5970     0B4D                     l154:	
  5971                           ;main.c: 385:     case 1:
  5972                           
  5973                           
  5974                           ;main.c: 386:             madctl |= 0b00010000;
  5975     0B4D  1678               	bsf	setDisplayFillingMode@madctl,4
  5976                           
  5977                           ;main.c: 387:             break;
  5978     0B4E  2B74               	goto	l2737
  5979     0B4F                     l2729:
  5980                           
  5981                           ;main.c: 389:             madctl |= 0b00010010;
  5982     0B4F  3012               	movlw	18
  5983     0B50  00F5               	movwf	??_setDisplayFillingMode
  5984     0B51  0875               	movf	??_setDisplayFillingMode,w
  5985     0B52  04F8               	iorwf	setDisplayFillingMode@madctl,f
  5986                           
  5987                           ;main.c: 390:             break;
  5988     0B53  2B74               	goto	l2737
  5989     0B54                     l156:	
  5990                           ;main.c: 391:     case 3:
  5991                           
  5992                           
  5993                           ;main.c: 392:             madctl |= 0b00000001;
  5994     0B54  1478               	bsf	setDisplayFillingMode@madctl,0
  5995                           
  5996                           ;main.c: 393:             break;
  5997     0B55  2B74               	goto	l2737
  5998     0B56                     l2731:
  5999                           
  6000                           ;main.c: 395:             madctl |= 0b00010001;
  6001     0B56  3011               	movlw	17
  6002     0B57  00F5               	movwf	??_setDisplayFillingMode
  6003     0B58  0875               	movf	??_setDisplayFillingMode,w
  6004     0B59  04F8               	iorwf	setDisplayFillingMode@madctl,f
  6005                           
  6006                           ;main.c: 396:             break;
  6007     0B5A  2B74               	goto	l2737
  6008     0B5B                     l2735:
  6009     0B5B  0838               	movf	_mode^(0+128),w
  6010     0B5C  00F5               	movwf	??_setDisplayFillingMode
  6011     0B5D  01F6               	clrf	??_setDisplayFillingMode+1
  6012                           
  6013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6014                           ; Switch size 1, requested type "simple"
  6015                           ; Number of cases is 1, Range of values is 0 to 0
  6016                           ; switch strategies available:
  6017                           ; Name         Instructions Cycles
  6018                           ; simple_byte            4     3 (average)
  6019                           ; direct_byte            9     7 (fixed)
  6020                           ; jumptable            260     6 (fixed)
  6021                           ;	Chosen strategy is simple_byte
  6022     0B5E  0876               	movf	??_setDisplayFillingMode+1,w
  6023     0B5F  3A00               	xorlw	0	; case 0
  6024     0B60  1903               	skipnz
  6025     0B61  2B63               	goto	l3283
  6026     0B62  2B74               	goto	l2737
  6027     0B63                     l3283:
  6028                           
  6029                           ; Switch size 1, requested type "simple"
  6030                           ; Number of cases is 5, Range of values is 0 to 4
  6031                           ; switch strategies available:
  6032                           ; Name         Instructions Cycles
  6033                           ; simple_byte           16     9 (average)
  6034                           ; direct_byte           17     7 (fixed)
  6035                           ; jumptable            260     6 (fixed)
  6036                           ;	Chosen strategy is simple_byte
  6037     0B63  0875               	movf	??_setDisplayFillingMode,w
  6038     0B64  3A00               	xorlw	0	; case 0
  6039     0B65  1903               	skipnz
  6040     0B66  2B74               	goto	l2737
  6041     0B67  3A01               	xorlw	1	; case 1
  6042     0B68  1903               	skipnz
  6043     0B69  2B4D               	goto	l154
  6044     0B6A  3A03               	xorlw	3	; case 2
  6045     0B6B  1903               	skipnz
  6046     0B6C  2B4F               	goto	l2729
  6047     0B6D  3A01               	xorlw	1	; case 3
  6048     0B6E  1903               	skipnz
  6049     0B6F  2B54               	goto	l156
  6050     0B70  3A07               	xorlw	7	; case 4
  6051     0B71  1903               	skipnz
  6052     0B72  2B56               	goto	l2731
  6053     0B73  2B74               	goto	l2737
  6054     0B74                     l2737:
  6055                           
  6056                           ;main.c: 399:   sendCommand_and_8bit_Data(0xA0, madctl);
  6057     0B74  0878               	movf	setDisplayFillingMode@madctl,w
  6058     0B75  00F3               	movwf	sendCommand_and_8bit_Data@first_byte
  6059     0B76  30A0               	movlw	160
  6060     0B77  158A  222B  158A   	fcall	_sendCommand_and_8bit_Data
  6061                           
  6062                           ;main.c: 400:   sendCommand_and_8bit_Data(0xA1, 0);
  6063     0B7A  01F3               	clrf	sendCommand_and_8bit_Data@first_byte
  6064     0B7B  30A1               	movlw	161
  6065     0B7C  158A  222B  158A   	fcall	_sendCommand_and_8bit_Data
  6066     0B7F                     l158:
  6067     0B7F  0008               	return
  6068     0B80                     __end_of_setDisplayFillingMode:
  6069                           
  6070                           	psect	text21
  6071     0A2B                     __ptext21:	
  6072 ;; *************** function _sendCommand_and_8bit_Data *****************
  6073 ;; Defined at:
  6074 ;;		line 330 in file "main.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  commandByte     1    wreg     unsigned char 
  6077 ;;  first_byte      1    3[COMMON] unsigned char 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  commandByte     1    4[COMMON] unsigned char 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6089 ;;      Params:         1       0       0       0
  6090 ;;      Locals:         1       0       0       0
  6091 ;;      Temps:          0       0       0       0
  6092 ;;      Totals:         2       0       0       0
  6093 ;;Total ram usage:        2 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; Hardware stack levels required when called: 2
  6096 ;; This function calls:
  6097 ;;		_SPI_CS_HIGH
  6098 ;;		_SPI_CS_LOW
  6099 ;;		_SPI_DC_HIGH
  6100 ;;		_SPI_DC_LOW
  6101 ;;		_spiWrite
  6102 ;; This function is called by:
  6103 ;;		_setDisplayFillingMode
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107     0A2B                     _sendCommand_and_8bit_Data:	
  6108                           ;psect for function _sendCommand_and_8bit_Data
  6109                           
  6110                           
  6111                           ;incstack = 0
  6112                           ; Regs used in _sendCommand_and_8bit_Data: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  6113                           ;sendCommand_and_8bit_Data@commandByte stored from wreg
  6114     0A2B  00F4               	movwf	sendCommand_and_8bit_Data@commandByte
  6115     0A2C                     l2431:
  6116                           
  6117                           ;main.c: 332:   SPI_CS_LOW();
  6118     0A2C  158A  2161  158A   	fcall	_SPI_CS_LOW
  6119                           
  6120                           ;main.c: 334:   SPI_DC_LOW();
  6121     0A2F  158A  2169  158A   	fcall	_SPI_DC_LOW
  6122     0A32                     l2433:
  6123                           
  6124                           ;main.c: 335:   spiWrite(commandByte);
  6125     0A32  0874               	movf	sendCommand_and_8bit_Data@commandByte,w
  6126     0A33  158A  22EA  158A   	fcall	_spiWrite
  6127     0A36                     l2435:
  6128                           
  6129                           ;main.c: 336:   SPI_DC_HIGH();
  6130     0A36  158A  2165  158A   	fcall	_SPI_DC_HIGH
  6131                           
  6132                           ;main.c: 338:   spiWrite(first_byte);
  6133     0A39  0873               	movf	sendCommand_and_8bit_Data@first_byte,w
  6134     0A3A  158A  22EA  158A   	fcall	_spiWrite
  6135     0A3D                     l2437:
  6136                           
  6137                           ;main.c: 340:   SPI_CS_HIGH();
  6138     0A3D  158A  215D  158A   	fcall	_SPI_CS_HIGH
  6139     0A40                     l141:
  6140     0A40  0008               	return
  6141     0A41                     __end_of_sendCommand_and_8bit_Data:
  6142                           
  6143                           	psect	text22
  6144     0CF0                     __ptext22:	
  6145 ;; *************** function _setAllDisplayPixels_Hard *****************
  6146 ;; Defined at:
  6147 ;;		line 479 in file "main.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  color           2   10[COMMON] unsigned int 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;  y               2    2[BANK0 ] int 
  6152 ;;  x               2    0[BANK0 ] int 
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  1    wreg      void 
  6155 ;; Registers used:
  6156 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6157 ;; Tracked objects:
  6158 ;;		On entry : 0/0
  6159 ;;		On exit  : 0/0
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6162 ;;      Params:         2       0       0       0
  6163 ;;      Locals:         0       4       0       0
  6164 ;;      Temps:          0       0       0       0
  6165 ;;      Totals:         2       4       0       0
  6166 ;;Total ram usage:        6 bytes
  6167 ;; Hardware stack levels used: 1
  6168 ;; Hardware stack levels required when called: 3
  6169 ;; This function calls:
  6170 ;;		_SPI_CS_HIGH
  6171 ;;		_SPI_CS_LOW
  6172 ;;		_SPI_WRITE16_Hard
  6173 ;;		_my_setAddrWindow_Hard
  6174 ;; This function is called by:
  6175 ;;		_display_init
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179     0CF0                     _setAllDisplayPixels_Hard:	
  6180                           ;psect for function _setAllDisplayPixels_Hard
  6181                           
  6182     0CF0                     l2761:	
  6183                           ;incstack = 0
  6184                           ; Regs used in _setAllDisplayPixels_Hard: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6185                           
  6186                           
  6187                           ;main.c: 480:     SPI_CS_LOW();
  6188     0CF0  158A  2161  158A   	fcall	_SPI_CS_LOW
  6189     0CF3                     l2763:
  6190                           
  6191                           ;main.c: 482:     my_setAddrWindow_Hard(0, 0, 127, 95);
  6192     0CF3  3000               	movlw	0
  6193     0CF4  00F2               	movwf	my_setAddrWindow_Hard@x_start
  6194     0CF5  00F3               	movwf	my_setAddrWindow_Hard@x_start+1
  6195     0CF6  3000               	movlw	0
  6196     0CF7  00F4               	movwf	my_setAddrWindow_Hard@y_start
  6197     0CF8  00F5               	movwf	my_setAddrWindow_Hard@y_start+1
  6198     0CF9  307F               	movlw	127
  6199     0CFA  00F6               	movwf	my_setAddrWindow_Hard@x_finish
  6200     0CFB  3000               	movlw	0
  6201     0CFC  00F7               	movwf	my_setAddrWindow_Hard@x_finish+1
  6202     0CFD  305F               	movlw	95
  6203     0CFE  00F8               	movwf	my_setAddrWindow_Hard@y_finish
  6204     0CFF  3000               	movlw	0
  6205     0D00  00F9               	movwf	my_setAddrWindow_Hard@y_finish+1
  6206     0D01  158A  225C  158A   	fcall	_my_setAddrWindow_Hard
  6207     0D04                     l2765:
  6208     0D04                     l2767:
  6209     0D04                     l2769:
  6210                           
  6211                           ;main.c: 486:     for(y = 0; y < 96; y++) {
  6212     0D04  1283               	bcf	3,5	;RP0=0, select bank0
  6213     0D05  1303               	bcf	3,6	;RP1=0, select bank0
  6214     0D06  01A2               	clrf	setAllDisplayPixels_Hard@y
  6215     0D07  01A3               	clrf	setAllDisplayPixels_Hard@y+1
  6216     0D08                     l2775:
  6217                           
  6218                           ;main.c: 487:         for(x = 0; x < 128; x++) {
  6219     0D08  1283               	bcf	3,5	;RP0=0, select bank0
  6220     0D09  1303               	bcf	3,6	;RP1=0, select bank0
  6221     0D0A  01A0               	clrf	setAllDisplayPixels_Hard@x
  6222     0D0B  01A1               	clrf	setAllDisplayPixels_Hard@x+1
  6223     0D0C                     l2781:
  6224                           
  6225                           ;main.c: 488:             SPI_WRITE16_Hard(color);
  6226     0D0C  087B               	movf	setAllDisplayPixels_Hard@color+1,w
  6227     0D0D  00F2               	movwf	SPI_WRITE16_Hard@w+1
  6228     0D0E  087A               	movf	setAllDisplayPixels_Hard@color,w
  6229     0D0F  00F1               	movwf	SPI_WRITE16_Hard@w
  6230     0D10  158A  219C  158A   	fcall	_SPI_WRITE16_Hard
  6231     0D13                     l2783:
  6232                           
  6233                           ;main.c: 489:         }
  6234     0D13  3001               	movlw	1
  6235     0D14  1283               	bcf	3,5	;RP0=0, select bank0
  6236     0D15  1303               	bcf	3,6	;RP1=0, select bank0
  6237     0D16  07A0               	addwf	setAllDisplayPixels_Hard@x,f
  6238     0D17  1803               	skipnc
  6239     0D18  0AA1               	incf	setAllDisplayPixels_Hard@x+1,f
  6240     0D19  3000               	movlw	0
  6241     0D1A  07A1               	addwf	setAllDisplayPixels_Hard@x+1,f
  6242     0D1B                     l2785:
  6243     0D1B  0821               	movf	setAllDisplayPixels_Hard@x+1,w
  6244     0D1C  3A80               	xorlw	128
  6245     0D1D  00FF               	movwf	btemp+1
  6246     0D1E  3080               	movlw	128
  6247     0D1F  027F               	subwf	btemp+1,w
  6248     0D20  1D03               	skipz
  6249     0D21  2D24               	goto	u3425
  6250     0D22  3080               	movlw	128
  6251     0D23  0220               	subwf	setAllDisplayPixels_Hard@x,w
  6252     0D24                     u3425:
  6253     0D24  1C03               	skipc
  6254     0D25  2D27               	goto	u3421
  6255     0D26  2D28               	goto	u3420
  6256     0D27                     u3421:
  6257     0D27  2D0C               	goto	l2781
  6258     0D28                     u3420:
  6259     0D28                     l2787:
  6260                           
  6261                           ;main.c: 490:     }
  6262     0D28  3001               	movlw	1
  6263     0D29  1283               	bcf	3,5	;RP0=0, select bank0
  6264     0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  6265     0D2B  07A2               	addwf	setAllDisplayPixels_Hard@y,f
  6266     0D2C  1803               	skipnc
  6267     0D2D  0AA3               	incf	setAllDisplayPixels_Hard@y+1,f
  6268     0D2E  3000               	movlw	0
  6269     0D2F  07A3               	addwf	setAllDisplayPixels_Hard@y+1,f
  6270     0D30                     l2789:
  6271     0D30  0823               	movf	setAllDisplayPixels_Hard@y+1,w
  6272     0D31  3A80               	xorlw	128
  6273     0D32  00FF               	movwf	btemp+1
  6274     0D33  3080               	movlw	128
  6275     0D34  027F               	subwf	btemp+1,w
  6276     0D35  1D03               	skipz
  6277     0D36  2D39               	goto	u3435
  6278     0D37  3060               	movlw	96
  6279     0D38  0222               	subwf	setAllDisplayPixels_Hard@y,w
  6280     0D39                     u3435:
  6281     0D39  1C03               	skipc
  6282     0D3A  2D3C               	goto	u3431
  6283     0D3B  2D3D               	goto	u3430
  6284     0D3C                     u3431:
  6285     0D3C  2D08               	goto	l2775
  6286     0D3D                     u3430:
  6287     0D3D                     l2791:
  6288                           
  6289                           ;main.c: 492:     SPI_CS_HIGH();
  6290     0D3D  158A  215D  158A   	fcall	_SPI_CS_HIGH
  6291     0D40                     l189:
  6292     0D40  0008               	return
  6293     0D41                     __end_of_setAllDisplayPixels_Hard:
  6294                           
  6295                           	psect	text23
  6296     0A5C                     __ptext23:	
  6297 ;; *************** function _my_setAddrWindow_Hard *****************
  6298 ;; Defined at:
  6299 ;;		line 469 in file "main.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  x_start         2    2[COMMON] unsigned int 
  6302 ;;  y_start         2    4[COMMON] unsigned int 
  6303 ;;  x_finish        2    6[COMMON] unsigned int 
  6304 ;;  y_finish        2    8[COMMON] unsigned int 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;		None
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      void 
  6309 ;; Registers used:
  6310 ;;		wreg, status,2, status,0, pclath, cstack
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6316 ;;      Params:         8       0       0       0
  6317 ;;      Locals:         0       0       0       0
  6318 ;;      Temps:          0       0       0       0
  6319 ;;      Totals:         8       0       0       0
  6320 ;;Total ram usage:        8 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; Hardware stack levels required when called: 2
  6323 ;; This function calls:
  6324 ;;		_spi_send_recv
  6325 ;;		_writeCommand_Hard
  6326 ;; This function is called by:
  6327 ;;		_setAllDisplayPixels_Hard
  6328 ;;		_drawFastHLine_Hard
  6329 ;;		_drawFastVLine_Hard
  6330 ;;		_drawSquareLine_Hard
  6331 ;;		_drawVerticalLeftPaddle_Hard
  6332 ;;		_drawSquare_and_clean_old_Hard
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336     0A5C                     _my_setAddrWindow_Hard:	
  6337                           ;psect for function _my_setAddrWindow_Hard
  6338                           
  6339     0A5C                     l2447:	
  6340                           ;incstack = 0
  6341                           ; Regs used in _my_setAddrWindow_Hard: [wreg+status,2+status,0+pclath+cstack]
  6342                           
  6343                           
  6344                           ;main.c: 470:     writeCommand_Hard(0x15);
  6345     0A5C  3015               	movlw	21
  6346     0A5D  158A  2190  158A   	fcall	_writeCommand_Hard
  6347                           
  6348                           ;main.c: 471:     spi_send_recv(x_start);
  6349     0A60  0872               	movf	my_setAddrWindow_Hard@x_start,w
  6350     0A61  158A  2184  158A   	fcall	_spi_send_recv
  6351                           
  6352                           ;main.c: 472:     spi_send_recv(x_finish);
  6353     0A64  0876               	movf	my_setAddrWindow_Hard@x_finish,w
  6354     0A65  158A  2184  158A   	fcall	_spi_send_recv
  6355                           
  6356                           ;main.c: 473:     writeCommand_Hard(0x75);
  6357     0A68  3075               	movlw	117
  6358     0A69  158A  2190  158A   	fcall	_writeCommand_Hard
  6359                           
  6360                           ;main.c: 474:     spi_send_recv(y_start);
  6361     0A6C  0874               	movf	my_setAddrWindow_Hard@y_start,w
  6362     0A6D  158A  2184  158A   	fcall	_spi_send_recv
  6363                           
  6364                           ;main.c: 475:     spi_send_recv(y_finish);
  6365     0A70  0878               	movf	my_setAddrWindow_Hard@y_finish,w
  6366     0A71  158A  2184  158A   	fcall	_spi_send_recv
  6367                           
  6368                           ;main.c: 476:     writeCommand_Hard(0x5C);
  6369     0A74  305C               	movlw	92
  6370     0A75  158A  2190  158A   	fcall	_writeCommand_Hard
  6371     0A78                     l182:
  6372     0A78  0008               	return
  6373     0A79                     __end_of_my_setAddrWindow_Hard:
  6374                           
  6375                           	psect	text24
  6376     0990                     __ptext24:	
  6377 ;; *************** function _writeCommand_Hard *****************
  6378 ;; Defined at:
  6379 ;;		line 441 in file "main.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  cmd             1    wreg     unsigned char 
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;  cmd             1    1[COMMON] unsigned char 
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  1    wreg      void 
  6386 ;; Registers used:
  6387 ;;		wreg, status,2, status,0, pclath, cstack
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6393 ;;      Params:         0       0       0       0
  6394 ;;      Locals:         1       0       0       0
  6395 ;;      Temps:          0       0       0       0
  6396 ;;      Totals:         1       0       0       0
  6397 ;;Total ram usage:        1 bytes
  6398 ;; Hardware stack levels used: 1
  6399 ;; Hardware stack levels required when called: 1
  6400 ;; This function calls:
  6401 ;;		_SPI_DC_HIGH
  6402 ;;		_SPI_DC_LOW
  6403 ;;		_spi_send_recv
  6404 ;; This function is called by:
  6405 ;;		_my_setAddrWindow_Hard
  6406 ;;		_setAddrWindow_Hard
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410     0990                     _writeCommand_Hard:	
  6411                           ;psect for function _writeCommand_Hard
  6412                           
  6413                           
  6414                           ;incstack = 0
  6415                           ; Regs used in _writeCommand_Hard: [wreg+status,2+status,0+pclath+cstack]
  6416                           ;writeCommand_Hard@cmd stored from wreg
  6417     0990  00F1               	movwf	writeCommand_Hard@cmd
  6418     0991                     l2139:
  6419                           
  6420                           ;main.c: 442:   SPI_DC_LOW();
  6421     0991  158A  2169  158A   	fcall	_SPI_DC_LOW
  6422     0994                     l2141:
  6423                           
  6424                           ;main.c: 443:   spi_send_recv(cmd);
  6425     0994  0871               	movf	writeCommand_Hard@cmd,w
  6426     0995  158A  2184  158A   	fcall	_spi_send_recv
  6427     0998                     l2143:
  6428                           
  6429                           ;main.c: 444:   SPI_DC_HIGH();
  6430     0998  158A  2165  158A   	fcall	_SPI_DC_HIGH
  6431     099B                     l167:
  6432     099B  0008               	return
  6433     099C                     __end_of_writeCommand_Hard:
  6434                           
  6435                           	psect	text25
  6436     099C                     __ptext25:	
  6437 ;; *************** function _SPI_WRITE16_Hard *****************
  6438 ;; Defined at:
  6439 ;;		line 451 in file "main.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;  w               2    1[COMMON] unsigned int 
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;  second_B        1    4[COMMON] unsigned char 
  6444 ;;  first_B         1    3[COMMON] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  1    wreg      void 
  6447 ;; Registers used:
  6448 ;;		wreg, status,2, status,0, pclath, cstack
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6454 ;;      Params:         2       0       0       0
  6455 ;;      Locals:         2       0       0       0
  6456 ;;      Temps:          0       0       0       0
  6457 ;;      Totals:         4       0       0       0
  6458 ;;Total ram usage:        4 bytes
  6459 ;; Hardware stack levels used: 1
  6460 ;; Hardware stack levels required when called: 1
  6461 ;; This function calls:
  6462 ;;		_spi_send_recv
  6463 ;; This function is called by:
  6464 ;;		_setAllDisplayPixels_Hard
  6465 ;;		_drawFastHLine_Hard
  6466 ;;		_drawFastVLine_Hard
  6467 ;;		_drawSquareLine_Hard
  6468 ;;		_drawVerticalLeftPaddle_Hard
  6469 ;;		_drawPixel_Hard
  6470 ;;		_drawSquare_and_clean_old_Hard
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474     099C                     _SPI_WRITE16_Hard:	
  6475                           ;psect for function _SPI_WRITE16_Hard
  6476                           
  6477     099C                     l2439:	
  6478                           ;incstack = 0
  6479                           ; Regs used in _SPI_WRITE16_Hard: [wreg+status,2+status,0+pclath+cstack]
  6480                           
  6481                           
  6482                           ;main.c: 452:     uint8_t first_B = ((w >> 8) & 0xFF) ;
  6483     099C  0872               	movf	SPI_WRITE16_Hard@w+1,w
  6484     099D  00F3               	movwf	SPI_WRITE16_Hard@first_B
  6485     099E                     l2441:
  6486                           
  6487                           ;main.c: 453:     uint8_t second_B = w & 0xFF;
  6488     099E  0871               	movf	SPI_WRITE16_Hard@w,w
  6489     099F  00F4               	movwf	SPI_WRITE16_Hard@second_B
  6490     09A0                     l2443:
  6491                           
  6492                           ;main.c: 454:     spi_send_recv(first_B);
  6493     09A0  0873               	movf	SPI_WRITE16_Hard@first_B,w
  6494     09A1  158A  2184  158A   	fcall	_spi_send_recv
  6495     09A4                     l2445:
  6496                           
  6497                           ;main.c: 455:     spi_send_recv(second_B);
  6498     09A4  0874               	movf	SPI_WRITE16_Hard@second_B,w
  6499     09A5  158A  2184  158A   	fcall	_spi_send_recv
  6500     09A8                     l176:
  6501     09A8  0008               	return
  6502     09A9                     __end_of_SPI_WRITE16_Hard:
  6503                           
  6504                           	psect	text26
  6505     0984                     __ptext26:	
  6506 ;; *************** function _spi_send_recv *****************
  6507 ;; Defined at:
  6508 ;;		line 446 in file "main.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  data            1    wreg     unsigned char 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  data            1    0[COMMON] unsigned char 
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  1    wreg      void 
  6515 ;; Registers used:
  6516 ;;		wreg
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6522 ;;      Params:         0       0       0       0
  6523 ;;      Locals:         1       0       0       0
  6524 ;;      Temps:          0       0       0       0
  6525 ;;      Totals:         1       0       0       0
  6526 ;;Total ram usage:        1 bytes
  6527 ;; Hardware stack levels used: 1
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_sendCommand_Hard
  6532 ;;		_writeCommand_Hard
  6533 ;;		_SPI_WRITE16_Hard
  6534 ;;		_my_setAddrWindow_Hard
  6535 ;;		_setAddrWindow_Hard
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539     0984                     _spi_send_recv:	
  6540                           ;psect for function _spi_send_recv
  6541                           
  6542                           
  6543                           ;incstack = 0
  6544                           ; Regs used in _spi_send_recv: [wreg]
  6545                           ;spi_send_recv@data stored from wreg
  6546     0984  00F0               	movwf	spi_send_recv@data
  6547     0985                     l2117:
  6548                           
  6549                           ;main.c: 447:     SSPBUF = data;
  6550     0985  0870               	movf	spi_send_recv@data,w
  6551     0986  1283               	bcf	3,5	;RP0=0, select bank0
  6552     0987  1303               	bcf	3,6	;RP1=0, select bank0
  6553     0988  0093               	movwf	19	;volatile
  6554     0989                     l170:	
  6555                           ;main.c: 448:     while(SSPSTATbits.BF == 1);
  6556                           
  6557     0989  1683               	bsf	3,5	;RP0=1, select bank1
  6558     098A  1303               	bcf	3,6	;RP1=0, select bank1
  6559     098B  1814               	btfsc	20,0	;volatile
  6560     098C  298E               	goto	u2161
  6561     098D  298F               	goto	u2160
  6562     098E                     u2161:
  6563     098E  2989               	goto	l170
  6564     098F                     u2160:
  6565     098F                     l173:
  6566     098F  0008               	return
  6567     0990                     __end_of_spi_send_recv:
  6568                           
  6569                           	psect	text27
  6570     09C9                     __ptext27:	
  6571 ;; *************** function _sendCommand *****************
  6572 ;; Defined at:
  6573 ;;		line 316 in file "main.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  commandByte     1    wreg     unsigned char 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  commandByte     1    3[COMMON] unsigned char 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      void 
  6580 ;; Registers used:
  6581 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6587 ;;      Params:         0       0       0       0
  6588 ;;      Locals:         1       0       0       0
  6589 ;;      Temps:          0       0       0       0
  6590 ;;      Totals:         1       0       0       0
  6591 ;;Total ram usage:        1 bytes
  6592 ;; Hardware stack levels used: 1
  6593 ;; Hardware stack levels required when called: 2
  6594 ;; This function calls:
  6595 ;;		_SPI_CS_HIGH
  6596 ;;		_SPI_CS_LOW
  6597 ;;		_SPI_DC_HIGH
  6598 ;;		_SPI_DC_LOW
  6599 ;;		_spiWrite
  6600 ;; This function is called by:
  6601 ;;		_display_init
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605     09C9                     _sendCommand:	
  6606                           ;psect for function _sendCommand
  6607                           
  6608                           
  6609                           ;incstack = 0
  6610                           ; Regs used in _sendCommand: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6611                           ;sendCommand@commandByte stored from wreg
  6612     09C9  00F3               	movwf	sendCommand@commandByte
  6613     09CA                     l2719:
  6614                           
  6615                           ;main.c: 318:   SPI_CS_LOW();
  6616     09CA  158A  2161  158A   	fcall	_SPI_CS_LOW
  6617                           
  6618                           ;main.c: 320:   SPI_DC_LOW();
  6619     09CD  158A  2169  158A   	fcall	_SPI_DC_LOW
  6620     09D0                     l2721:
  6621                           
  6622                           ;main.c: 321:   spiWrite(commandByte);
  6623     09D0  0873               	movf	sendCommand@commandByte,w
  6624     09D1  158A  22EA  158A   	fcall	_spiWrite
  6625     09D4                     l2723:
  6626                           
  6627                           ;main.c: 322:   SPI_DC_HIGH();
  6628     09D4  158A  2165  158A   	fcall	_SPI_DC_HIGH
  6629     09D7                     l2725:
  6630                           
  6631                           ;main.c: 324:   SPI_CS_HIGH();
  6632     09D7  158A  215D  158A   	fcall	_SPI_CS_HIGH
  6633     09DA                     l138:
  6634     09DA  0008               	return
  6635     09DB                     __end_of_sendCommand:
  6636                           
  6637                           	psect	text28
  6638     0AEA                     __ptext28:	
  6639 ;; *************** function _spiWrite *****************
  6640 ;; Defined at:
  6641 ;;		line 352 in file "main.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  b               1    wreg     unsigned char 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  b               1    0[COMMON] unsigned char 
  6646 ;;  bit             2    1[COMMON] int 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6656 ;;      Params:         0       0       0       0
  6657 ;;      Locals:         3       0       0       0
  6658 ;;      Temps:          0       0       0       0
  6659 ;;      Totals:         3       0       0       0
  6660 ;;Total ram usage:        3 bytes
  6661 ;; Hardware stack levels used: 1
  6662 ;; Hardware stack levels required when called: 1
  6663 ;; This function calls:
  6664 ;;		_SPI_MOSI_HIGH
  6665 ;;		_SPI_MOSI_LOW
  6666 ;;		_SPI_SCK_HIGH
  6667 ;;		_SPI_SCK_LOW
  6668 ;; This function is called by:
  6669 ;;		_sendCommand
  6670 ;;		_sendCommand_and_8bit_Data
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674     0AEA                     _spiWrite:	
  6675                           ;psect for function _spiWrite
  6676                           
  6677                           
  6678                           ;incstack = 0
  6679                           ; Regs used in _spiWrite: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6680                           ;spiWrite@b stored from wreg
  6681     0AEA  00F0               	movwf	spiWrite@b
  6682     0AEB                     l2123:
  6683                           
  6684                           ;main.c: 353:     int bit = 0;
  6685     0AEB  01F1               	clrf	spiWrite@bit
  6686     0AEC  01F2               	clrf	spiWrite@bit+1
  6687                           
  6688                           ;main.c: 355:     for (bit = 0; bit < 8; bit++) {
  6689     0AED  01F1               	clrf	spiWrite@bit
  6690     0AEE  01F2               	clrf	spiWrite@bit+1
  6691     0AEF                     l144:
  6692                           
  6693                           ;main.c: 356:       if (b & 0x80) {
  6694     0AEF  1FF0               	btfss	spiWrite@b,7
  6695     0AF0  2AF2               	goto	u2171
  6696     0AF1  2AF3               	goto	u2170
  6697     0AF2                     u2171:
  6698     0AF2  2AF7               	goto	l2131
  6699     0AF3                     u2170:
  6700     0AF3                     l2129:
  6701                           
  6702                           ;main.c: 357:         SPI_MOSI_HIGH();
  6703     0AF3  158A  216D  158A   	fcall	_SPI_MOSI_HIGH
  6704                           
  6705                           ;main.c: 358:       } else {
  6706     0AF6  2AFA               	goto	l147
  6707     0AF7                     l2131:
  6708                           
  6709                           ;main.c: 359:         SPI_MOSI_LOW();
  6710     0AF7  158A  2171  158A   	fcall	_SPI_MOSI_LOW
  6711     0AFA                     l147:	
  6712                           ;main.c: 360:       }
  6713                           
  6714                           
  6715                           ;main.c: 361:       SPI_SCK_HIGH();
  6716     0AFA  158A  2175  158A   	fcall	_SPI_SCK_HIGH
  6717     0AFD                     l2133:
  6718                           
  6719                           ;main.c: 362:       b <<= 1;
  6720     0AFD  1003               	clrc
  6721     0AFE  0DF0               	rlf	spiWrite@b,f
  6722     0AFF                     l2135:
  6723                           
  6724                           ;main.c: 363:       SPI_SCK_LOW();
  6725     0AFF  158A  2179  158A   	fcall	_SPI_SCK_LOW
  6726                           
  6727                           ;main.c: 364:     }
  6728     0B02  3001               	movlw	1
  6729     0B03  07F1               	addwf	spiWrite@bit,f
  6730     0B04  1803               	skipnc
  6731     0B05  0AF2               	incf	spiWrite@bit+1,f
  6732     0B06  3000               	movlw	0
  6733     0B07  07F2               	addwf	spiWrite@bit+1,f
  6734     0B08                     l2137:
  6735     0B08  0872               	movf	spiWrite@bit+1,w
  6736     0B09  3A80               	xorlw	128
  6737     0B0A  00FF               	movwf	btemp+1
  6738     0B0B  3080               	movlw	128
  6739     0B0C  027F               	subwf	btemp+1,w
  6740     0B0D  1D03               	skipz
  6741     0B0E  2B11               	goto	u2185
  6742     0B0F  3008               	movlw	8
  6743     0B10  0271               	subwf	spiWrite@bit,w
  6744     0B11                     u2185:
  6745     0B11  1C03               	skipc
  6746     0B12  2B14               	goto	u2181
  6747     0B13  2B15               	goto	u2180
  6748     0B14                     u2181:
  6749     0B14  2AEF               	goto	l144
  6750     0B15                     u2180:
  6751     0B15                     l148:
  6752     0B15  0008               	return
  6753     0B16                     __end_of_spiWrite:
  6754                           
  6755                           	psect	text29
  6756     0979                     __ptext29:	
  6757 ;; *************** function _SPI_SCK_LOW *****************
  6758 ;; Defined at:
  6759 ;;		line 270 in file "main.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;		None
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;		None
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  1    wreg      void 
  6766 ;; Registers used:
  6767 ;;		None
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6773 ;;      Params:         0       0       0       0
  6774 ;;      Locals:         0       0       0       0
  6775 ;;      Temps:          0       0       0       0
  6776 ;;      Totals:         0       0       0       0
  6777 ;;Total ram usage:        0 bytes
  6778 ;; Hardware stack levels used: 1
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_spiWrite
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786     0979                     _SPI_SCK_LOW:	
  6787                           ;psect for function _SPI_SCK_LOW
  6788                           
  6789     0979                     l2113:	
  6790                           ;incstack = 0
  6791                           ; Regs used in _SPI_SCK_LOW: []
  6792                           
  6793                           
  6794                           ;main.c: 271:     RC6 = 0;
  6795     0979  1283               	bcf	3,5	;RP0=0, select bank0
  6796     097A  1303               	bcf	3,6	;RP1=0, select bank0
  6797     097B  1307               	bcf	7,6	;volatile
  6798     097C                     l127:
  6799     097C  0008               	return
  6800     097D                     __end_of_SPI_SCK_LOW:
  6801                           
  6802                           	psect	text30
  6803     0975                     __ptext30:	
  6804 ;; *************** function _SPI_SCK_HIGH *****************
  6805 ;; Defined at:
  6806 ;;		line 273 in file "main.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;		None
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;		None
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  1    wreg      void 
  6813 ;; Registers used:
  6814 ;;		None
  6815 ;; Tracked objects:
  6816 ;;		On entry : 0/0
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6820 ;;      Params:         0       0       0       0
  6821 ;;      Locals:         0       0       0       0
  6822 ;;      Temps:          0       0       0       0
  6823 ;;      Totals:         0       0       0       0
  6824 ;;Total ram usage:        0 bytes
  6825 ;; Hardware stack levels used: 1
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_spiWrite
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833     0975                     _SPI_SCK_HIGH:	
  6834                           ;psect for function _SPI_SCK_HIGH
  6835                           
  6836     0975                     l2115:	
  6837                           ;incstack = 0
  6838                           ; Regs used in _SPI_SCK_HIGH: []
  6839                           
  6840                           
  6841                           ;main.c: 274:     RC6 = 1;
  6842     0975  1283               	bcf	3,5	;RP0=0, select bank0
  6843     0976  1303               	bcf	3,6	;RP1=0, select bank0
  6844     0977  1707               	bsf	7,6	;volatile
  6845     0978                     l130:
  6846     0978  0008               	return
  6847     0979                     __end_of_SPI_SCK_HIGH:
  6848                           
  6849                           	psect	text31
  6850     0971                     __ptext31:	
  6851 ;; *************** function _SPI_MOSI_LOW *****************
  6852 ;; Defined at:
  6853 ;;		line 263 in file "main.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;		None
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;		None
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		None
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6867 ;;      Params:         0       0       0       0
  6868 ;;      Locals:         0       0       0       0
  6869 ;;      Temps:          0       0       0       0
  6870 ;;      Totals:         0       0       0       0
  6871 ;;Total ram usage:        0 bytes
  6872 ;; Hardware stack levels used: 1
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_spiWrite
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880     0971                     _SPI_MOSI_LOW:	
  6881                           ;psect for function _SPI_MOSI_LOW
  6882                           
  6883     0971                     l2109:	
  6884                           ;incstack = 0
  6885                           ; Regs used in _SPI_MOSI_LOW: []
  6886                           
  6887                           
  6888                           ;main.c: 264:     RC4 = 0;
  6889     0971  1283               	bcf	3,5	;RP0=0, select bank0
  6890     0972  1303               	bcf	3,6	;RP1=0, select bank0
  6891     0973  1207               	bcf	7,4	;volatile
  6892     0974                     l121:
  6893     0974  0008               	return
  6894     0975                     __end_of_SPI_MOSI_LOW:
  6895                           
  6896                           	psect	text32
  6897     096D                     __ptext32:	
  6898 ;; *************** function _SPI_MOSI_HIGH *****************
  6899 ;; Defined at:
  6900 ;;		line 266 in file "main.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;		None
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;		None
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  1    wreg      void 
  6907 ;; Registers used:
  6908 ;;		None
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6914 ;;      Params:         0       0       0       0
  6915 ;;      Locals:         0       0       0       0
  6916 ;;      Temps:          0       0       0       0
  6917 ;;      Totals:         0       0       0       0
  6918 ;;Total ram usage:        0 bytes
  6919 ;; Hardware stack levels used: 1
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_spiWrite
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927     096D                     _SPI_MOSI_HIGH:	
  6928                           ;psect for function _SPI_MOSI_HIGH
  6929                           
  6930     096D                     l2111:	
  6931                           ;incstack = 0
  6932                           ; Regs used in _SPI_MOSI_HIGH: []
  6933                           
  6934                           
  6935                           ;main.c: 267:     RC4 = 1;
  6936     096D  1283               	bcf	3,5	;RP0=0, select bank0
  6937     096E  1303               	bcf	3,6	;RP1=0, select bank0
  6938     096F  1607               	bsf	7,4	;volatile
  6939     0970                     l124:
  6940     0970  0008               	return
  6941     0971                     __end_of_SPI_MOSI_HIGH:
  6942                           
  6943                           	psect	text33
  6944     0969                     __ptext33:	
  6945 ;; *************** function _SPI_DC_LOW *****************
  6946 ;; Defined at:
  6947 ;;		line 256 in file "main.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;		None
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;		None
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1    wreg      void 
  6954 ;; Registers used:
  6955 ;;		None
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6961 ;;      Params:         0       0       0       0
  6962 ;;      Locals:         0       0       0       0
  6963 ;;      Temps:          0       0       0       0
  6964 ;;      Totals:         0       0       0       0
  6965 ;;Total ram usage:        0 bytes
  6966 ;; Hardware stack levels used: 1
  6967 ;; This function calls:
  6968 ;;		Nothing
  6969 ;; This function is called by:
  6970 ;;		_sendCommand
  6971 ;;		_sendCommand_and_8bit_Data
  6972 ;;		_sendCommand_Hard
  6973 ;;		_writeCommand_Hard
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977     0969                     _SPI_DC_LOW:	
  6978                           ;psect for function _SPI_DC_LOW
  6979                           
  6980     0969                     l2105:	
  6981                           ;incstack = 0
  6982                           ; Regs used in _SPI_DC_LOW: []
  6983                           
  6984                           
  6985                           ;main.c: 257:     RB2 = 0;
  6986     0969  1283               	bcf	3,5	;RP0=0, select bank0
  6987     096A  1303               	bcf	3,6	;RP1=0, select bank0
  6988     096B  1106               	bcf	6,2	;volatile
  6989     096C                     l115:
  6990     096C  0008               	return
  6991     096D                     __end_of_SPI_DC_LOW:
  6992                           
  6993                           	psect	text34
  6994     0965                     __ptext34:	
  6995 ;; *************** function _SPI_DC_HIGH *****************
  6996 ;; Defined at:
  6997 ;;		line 259 in file "main.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;		None
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;		None
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  1    wreg      void 
  7004 ;; Registers used:
  7005 ;;		None
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7011 ;;      Params:         0       0       0       0
  7012 ;;      Locals:         0       0       0       0
  7013 ;;      Temps:          0       0       0       0
  7014 ;;      Totals:         0       0       0       0
  7015 ;;Total ram usage:        0 bytes
  7016 ;; Hardware stack levels used: 1
  7017 ;; This function calls:
  7018 ;;		Nothing
  7019 ;; This function is called by:
  7020 ;;		_sendCommand
  7021 ;;		_sendCommand_and_8bit_Data
  7022 ;;		_sendCommand_Hard
  7023 ;;		_writeCommand_Hard
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027     0965                     _SPI_DC_HIGH:	
  7028                           ;psect for function _SPI_DC_HIGH
  7029                           
  7030     0965                     l2107:	
  7031                           ;incstack = 0
  7032                           ; Regs used in _SPI_DC_HIGH: []
  7033                           
  7034                           
  7035                           ;main.c: 260:     RB2 = 1;
  7036     0965  1283               	bcf	3,5	;RP0=0, select bank0
  7037     0966  1303               	bcf	3,6	;RP1=0, select bank0
  7038     0967  1506               	bsf	6,2	;volatile
  7039     0968                     l118:
  7040     0968  0008               	return
  7041     0969                     __end_of_SPI_DC_HIGH:
  7042                           
  7043                           	psect	text35
  7044     0961                     __ptext35:	
  7045 ;; *************** function _SPI_CS_LOW *****************
  7046 ;; Defined at:
  7047 ;;		line 249 in file "main.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;		None
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;		None
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  1    wreg      void 
  7054 ;; Registers used:
  7055 ;;		None
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7061 ;;      Params:         0       0       0       0
  7062 ;;      Locals:         0       0       0       0
  7063 ;;      Temps:          0       0       0       0
  7064 ;;      Totals:         0       0       0       0
  7065 ;;Total ram usage:        0 bytes
  7066 ;; Hardware stack levels used: 1
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_sendCommand
  7071 ;;		_sendCommand_and_8bit_Data
  7072 ;;		_sendCommand_Hard
  7073 ;;		_setAllDisplayPixels_Hard
  7074 ;;		_drawFastHLine_Hard
  7075 ;;		_drawFastVLine_Hard
  7076 ;;		_drawSquareLine_Hard
  7077 ;;		_drawVerticalLeftPaddle_Hard
  7078 ;;		_startWrite
  7079 ;;		_drawPixel_Hard
  7080 ;;		_drawSquare_and_clean_old_Hard
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084     0961                     _SPI_CS_LOW:	
  7085                           ;psect for function _SPI_CS_LOW
  7086                           
  7087     0961                     l2119:	
  7088                           ;incstack = 0
  7089                           ; Regs used in _SPI_CS_LOW: []
  7090                           
  7091                           
  7092                           ;main.c: 250:     RB0 = 0;
  7093     0961  1283               	bcf	3,5	;RP0=0, select bank0
  7094     0962  1303               	bcf	3,6	;RP1=0, select bank0
  7095     0963  1006               	bcf	6,0	;volatile
  7096     0964                     l109:
  7097     0964  0008               	return
  7098     0965                     __end_of_SPI_CS_LOW:
  7099                           
  7100                           	psect	text36
  7101     095D                     __ptext36:	
  7102 ;; *************** function _SPI_CS_HIGH *****************
  7103 ;; Defined at:
  7104 ;;		line 252 in file "main.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;		None
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;		None
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1    wreg      void 
  7111 ;; Registers used:
  7112 ;;		None
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7118 ;;      Params:         0       0       0       0
  7119 ;;      Locals:         0       0       0       0
  7120 ;;      Temps:          0       0       0       0
  7121 ;;      Totals:         0       0       0       0
  7122 ;;Total ram usage:        0 bytes
  7123 ;; Hardware stack levels used: 1
  7124 ;; This function calls:
  7125 ;;		Nothing
  7126 ;; This function is called by:
  7127 ;;		_sendCommand
  7128 ;;		_sendCommand_and_8bit_Data
  7129 ;;		_sendCommand_Hard
  7130 ;;		_setAllDisplayPixels_Hard
  7131 ;;		_drawFastHLine_Hard
  7132 ;;		_drawFastVLine_Hard
  7133 ;;		_drawSquareLine_Hard
  7134 ;;		_drawVerticalLeftPaddle_Hard
  7135 ;;		_endWrite
  7136 ;;		_drawPixel_Hard
  7137 ;;		_drawSquare_and_clean_old_Hard
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141     095D                     _SPI_CS_HIGH:	
  7142                           ;psect for function _SPI_CS_HIGH
  7143                           
  7144     095D                     l2121:	
  7145                           ;incstack = 0
  7146                           ; Regs used in _SPI_CS_HIGH: []
  7147                           
  7148                           
  7149                           ;main.c: 253:     RB0 = 1;
  7150     095D  1283               	bcf	3,5	;RP0=0, select bank0
  7151     095E  1303               	bcf	3,6	;RP1=0, select bank0
  7152     095F  1406               	bsf	6,0	;volatile
  7153     0960                     l112:
  7154     0960  0008               	return
  7155     0961                     __end_of_SPI_CS_HIGH:
  7156                           
  7157                           	psect	text37
  7158     0B80                     __ptext37:	
  7159 ;; *************** function _init_Softwear_SPI *****************
  7160 ;; Defined at:
  7161 ;;		line 285 in file "main.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;		None
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;		None
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      void 
  7168 ;; Registers used:
  7169 ;;		wreg
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7175 ;;      Params:         0       0       0       0
  7176 ;;      Locals:         0       0       0       0
  7177 ;;      Temps:          2       0       0       0
  7178 ;;      Totals:         2       0       0       0
  7179 ;;Total ram usage:        2 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_display_init
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188     0B80                     _init_Softwear_SPI:	
  7189                           ;psect for function _init_Softwear_SPI
  7190                           
  7191     0B80                     l1543:	
  7192                           ;incstack = 0
  7193                           ; Regs used in _init_Softwear_SPI: [wreg]
  7194                           
  7195                           
  7196                           ;main.c: 286:     TRISB0 = 0;
  7197     0B80  1683               	bsf	3,5	;RP0=1, select bank1
  7198     0B81  1303               	bcf	3,6	;RP1=0, select bank1
  7199     0B82  1006               	bcf	6,0	;volatile
  7200                           
  7201                           ;main.c: 287:     RB0 = 1;
  7202     0B83  1283               	bcf	3,5	;RP0=0, select bank0
  7203     0B84  1303               	bcf	3,6	;RP1=0, select bank0
  7204     0B85  1406               	bsf	6,0	;volatile
  7205                           
  7206                           ;main.c: 289:     TRISB2 = 0;
  7207     0B86  1683               	bsf	3,5	;RP0=1, select bank1
  7208     0B87  1303               	bcf	3,6	;RP1=0, select bank1
  7209     0B88  1106               	bcf	6,2	;volatile
  7210                           
  7211                           ;main.c: 290:     RB2 = 1;
  7212     0B89  1283               	bcf	3,5	;RP0=0, select bank0
  7213     0B8A  1303               	bcf	3,6	;RP1=0, select bank0
  7214     0B8B  1506               	bsf	6,2	;volatile
  7215                           
  7216                           ;main.c: 292:     TRISC6 = 0;
  7217     0B8C  1683               	bsf	3,5	;RP0=1, select bank1
  7218     0B8D  1303               	bcf	3,6	;RP1=0, select bank1
  7219     0B8E  1307               	bcf	7,6	;volatile
  7220                           
  7221                           ;main.c: 293:     RC6 = 0;
  7222     0B8F  1283               	bcf	3,5	;RP0=0, select bank0
  7223     0B90  1303               	bcf	3,6	;RP1=0, select bank0
  7224     0B91  1307               	bcf	7,6	;volatile
  7225                           
  7226                           ;main.c: 295:     TRISC4 = 0;
  7227     0B92  1683               	bsf	3,5	;RP0=1, select bank1
  7228     0B93  1303               	bcf	3,6	;RP1=0, select bank1
  7229     0B94  1207               	bcf	7,4	;volatile
  7230                           
  7231                           ;main.c: 296:     RC4 = 0;
  7232     0B95  1283               	bcf	3,5	;RP0=0, select bank0
  7233     0B96  1303               	bcf	3,6	;RP1=0, select bank0
  7234     0B97  1207               	bcf	7,4	;volatile
  7235                           
  7236                           ;main.c: 299:     TRISB1 = 0;
  7237     0B98  1683               	bsf	3,5	;RP0=1, select bank1
  7238     0B99  1303               	bcf	3,6	;RP1=0, select bank1
  7239     0B9A  1086               	bcf	6,1	;volatile
  7240                           
  7241                           ;main.c: 300:     RB1 = 1;
  7242     0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  7243     0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  7244     0B9D  1486               	bsf	6,1	;volatile
  7245     0B9E                     l1545:
  7246                           
  7247                           ;main.c: 301:      _delay((unsigned long)((5)*(20000000/4000.0)));
  7248     0B9E  3021               	movlw	33
  7249     0B9F  00F1               	movwf	??_init_Softwear_SPI+1
  7250     0BA0  3076               	movlw	118
  7251     0BA1  00F0               	movwf	??_init_Softwear_SPI
  7252     0BA2                     u4337:
  7253     0BA2  0BF0               	decfsz	??_init_Softwear_SPI,f
  7254     0BA3  2BA2               	goto	u4337
  7255     0BA4  0BF1               	decfsz	??_init_Softwear_SPI+1,f
  7256     0BA5  2BA2               	goto	u4337
  7257     0BA6  0000               	nop
  7258     0BA7                     l1547:
  7259                           
  7260                           ;main.c: 303:     TRISB4 = 0;
  7261     0BA7  1683               	bsf	3,5	;RP0=1, select bank1
  7262     0BA8  1303               	bcf	3,6	;RP1=0, select bank1
  7263     0BA9  1206               	bcf	6,4	;volatile
  7264     0BAA                     l1549:
  7265                           
  7266                           ;main.c: 304:     RB4 = 1;
  7267     0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  7268     0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  7269     0BAC  1606               	bsf	6,4	;volatile
  7270                           
  7271                           ;main.c: 305:     _delay((unsigned long)((1)*(20000000/4000.0)));
  7272     0BAD  3007               	movlw	7
  7273     0BAE  00F1               	movwf	??_init_Softwear_SPI+1
  7274     0BAF  307D               	movlw	125
  7275     0BB0  00F0               	movwf	??_init_Softwear_SPI
  7276     0BB1                     u4347:
  7277     0BB1  0BF0               	decfsz	??_init_Softwear_SPI,f
  7278     0BB2  2BB1               	goto	u4347
  7279     0BB3  0BF1               	decfsz	??_init_Softwear_SPI+1,f
  7280     0BB4  2BB1               	goto	u4347
  7281     0BB5                     l1551:
  7282                           
  7283                           ;main.c: 308:     RB1 = 0;
  7284     0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  7285     0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  7286     0BB7  1086               	bcf	6,1	;volatile
  7287                           
  7288                           ;main.c: 309:     _delay((unsigned long)((2)*(20000000/4000000.0)));
  7289     0BB8  3003               	movlw	3
  7290     0BB9  00F0               	movwf	??_init_Softwear_SPI
  7291     0BBA                     u4357:
  7292     0BBA  0BF0               	decfsz	??_init_Softwear_SPI,f
  7293     0BBB  2BBA               	goto	u4357
  7294     0BBC                     l1553:
  7295                           
  7296                           ;main.c: 310:     RB1 = 1;
  7297     0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  7298     0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  7299     0BBE  1486               	bsf	6,1	;volatile
  7300     0BBF                     l135:
  7301     0BBF  0008               	return
  7302     0BC0                     __end_of_init_Softwear_SPI:
  7303                           
  7304                           	psect	text38
  7305     09A9                     __ptext38:	
  7306 ;; *************** function _init_Hardwear_SPI *****************
  7307 ;; Defined at:
  7308 ;;		line 406 in file "main.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;		None
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;		None
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  1    wreg      void 
  7315 ;; Registers used:
  7316 ;;		None
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7322 ;;      Params:         0       0       0       0
  7323 ;;      Locals:         0       0       0       0
  7324 ;;      Temps:          0       0       0       0
  7325 ;;      Totals:         0       0       0       0
  7326 ;;Total ram usage:        0 bytes
  7327 ;; Hardware stack levels used: 1
  7328 ;; This function calls:
  7329 ;;		Nothing
  7330 ;; This function is called by:
  7331 ;;		_display_init
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335     09A9                     _init_Hardwear_SPI:	
  7336                           ;psect for function _init_Hardwear_SPI
  7337                           
  7338     09A9                     l1579:	
  7339                           ;incstack = 0
  7340                           ; Regs used in _init_Hardwear_SPI: []
  7341                           
  7342                           
  7343                           ;main.c: 409:     TRISC7 = 1;
  7344     09A9  1683               	bsf	3,5	;RP0=1, select bank1
  7345     09AA  1303               	bcf	3,6	;RP1=0, select bank1
  7346     09AB  1787               	bsf	7,7	;volatile
  7347                           
  7348                           ;main.c: 410:     RC7 = 0;
  7349     09AC  1283               	bcf	3,5	;RP0=0, select bank0
  7350     09AD  1303               	bcf	3,6	;RP1=0, select bank0
  7351     09AE  1387               	bcf	7,7	;volatile
  7352                           
  7353                           ;main.c: 414:     SSPCONbits.SSPEN = 0;
  7354     09AF  1294               	bcf	20,5	;volatile
  7355                           
  7356                           ;main.c: 425:     SSPSTATbits.CKE = 1;
  7357     09B0  1683               	bsf	3,5	;RP0=1, select bank1
  7358     09B1  1303               	bcf	3,6	;RP1=0, select bank1
  7359     09B2  1714               	bsf	20,6	;volatile
  7360                           
  7361                           ;main.c: 426:     SSPSTATbits.SMP = 0;
  7362     09B3  1394               	bcf	20,7	;volatile
  7363                           
  7364                           ;main.c: 428:     SSPCONbits.SSPEN = 1;
  7365     09B4  1283               	bcf	3,5	;RP0=0, select bank0
  7366     09B5  1303               	bcf	3,6	;RP1=0, select bank0
  7367     09B6  1694               	bsf	20,5	;volatile
  7368     09B7                     l161:
  7369     09B7  0008               	return
  7370     09B8                     __end_of_init_Hardwear_SPI:
  7371                           
  7372                           	psect	text39
  7373     0A41                     __ptext39:	
  7374 ;; *************** function _die *****************
  7375 ;; Defined at:
  7376 ;;		line 676 in file "main.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;		None
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      void 
  7383 ;; Registers used:
  7384 ;;		wreg
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7390 ;;      Params:         0       0       0       0
  7391 ;;      Locals:         0       0       0       0
  7392 ;;      Temps:          3       0       0       0
  7393 ;;      Totals:         3       0       0       0
  7394 ;;Total ram usage:        3 bytes
  7395 ;; Hardware stack levels used: 1
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_main
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403     0A41                     _die:	
  7404                           ;psect for function _die
  7405                           
  7406     0A41                     l1769:	
  7407                           ;incstack = 0
  7408                           ; Regs used in _die: [wreg]
  7409                           
  7410                           
  7411                           ;main.c: 677:     _delay((unsigned long)((10000)*(20000000/4000.0)));
  7412     0A41  30FE               	movlw	254
  7413     0A42  00F2               	movwf	??_die+2
  7414     0A43  30A7               	movlw	167
  7415     0A44  00F1               	movwf	??_die+1
  7416     0A45  3065               	movlw	101
  7417     0A46  00F0               	movwf	??_die
  7418     0A47                     u4367:
  7419     0A47  0BF0               	decfsz	??_die,f
  7420     0A48  2A47               	goto	u4367
  7421     0A49  0BF1               	decfsz	??_die+1,f
  7422     0A4A  2A47               	goto	u4367
  7423     0A4B  0BF2               	decfsz	??_die+2,f
  7424     0A4C  2A47               	goto	u4367
  7425     0A4D  2A4E               	nop2
  7426                           
  7427                           ;main.c: 678:     _delay((unsigned long)((10000)*(20000000/4000.0)));
  7428     0A4E  30FE               	movlw	254
  7429     0A4F  00F2               	movwf	??_die+2
  7430     0A50  30A7               	movlw	167
  7431     0A51  00F1               	movwf	??_die+1
  7432     0A52  3065               	movlw	101
  7433     0A53  00F0               	movwf	??_die
  7434     0A54                     u4377:
  7435     0A54  0BF0               	decfsz	??_die,f
  7436     0A55  2A54               	goto	u4377
  7437     0A56  0BF1               	decfsz	??_die+1,f
  7438     0A57  2A54               	goto	u4377
  7439     0A58  0BF2               	decfsz	??_die+2,f
  7440     0A59  2A54               	goto	u4377
  7441     0A5A  2A5B               	nop2
  7442     0A5B                     l255:
  7443     0A5B  0008               	return
  7444     0A5C                     __end_of_die:
  7445     007E                     btemp	set	126	;btemp
  7446     007E                     wtemp0	set	126
  7447                           
  7448                           	psect	idloc
  7449                           
  7450                           ;Config register IDLOC0 @ 0x2000
  7451                           ;	unspecified, using default values
  7452     2000                     	org	8192
  7453     2000  3FFF               	dw	16383
  7454                           
  7455                           ;Config register IDLOC1 @ 0x2001
  7456                           ;	unspecified, using default values
  7457     2001                     	org	8193
  7458     2001  3FFF               	dw	16383
  7459                           
  7460                           ;Config register IDLOC2 @ 0x2002
  7461                           ;	unspecified, using default values
  7462     2002                     	org	8194
  7463     2002  3FFF               	dw	16383
  7464                           
  7465                           ;Config register IDLOC3 @ 0x2003
  7466                           ;	unspecified, using default values
  7467     2003                     	org	8195
  7468     2003  3FFF               	dw	16383
  7469                           
  7470                           	psect	config
  7471                           
  7472                           ;Config register CONFIG @ 0x2007
  7473                           ;	Oscillator Selection bits
  7474                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT/T1OSO pin, I/O f
      +                          unction on RA7/OSC1/CLKIN/T1OSI
  7475                           ;	Watchdog Timer Enable bit
  7476                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7477                           ;	Power Up Timer Enable bit
  7478                           ;	PWRTE = ON, PWRT enabled
  7479                           ;	RE3/MCLR pin function select bit
  7480                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  7481                           ;	Code Protection bit
  7482                           ;	CP = OFF, Program memory code protection is disabled
  7483                           ;	Data Code Protection bit
  7484                           ;	CPD = OFF, Data memory code protection is disabled
  7485                           ;	Brown-out Reset Selection bits
  7486                           ;	BOREN = ON, BOR enabled
  7487                           ;	Internal External Switchover bit
  7488                           ;	IESO = ON, Internal/External Switchover mode is enabled
  7489                           ;	Fail-Safe Clock Monitor Enabled bit
  7490                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7491                           ;	In-Circuit Debugger Mode bit
  7492                           ;	DEBUG = 0x1, unprogrammed default
  7493     2007                     	org	8199
  7494     2007  3FE4               	dw	16356

Data Sizes:
    Strings     0
    Constant    0
    Data        27
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     73      80
    BANK1            80      0      27
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _updateANDset_ball_position->___fldiv
    ___flsub->___fldiv
    ___fladd->___fldiv
    ___fldiv->_sqrt
    _sendCommand_Hard->_spi_send_recv
    _pong_field_init->_drawFastHLine_Hard
    _pong_field_init->_drawFastVLine_Hard
    _drawFastVLine_Hard->_my_setAddrWindow_Hard
    _drawFastHLine_Hard->_my_setAddrWindow_Hard
    _paddle_init->_drawVerticalLeftPaddle_Hard
    _draw_game_state->_drawSquareLine_Hard
    _draw_game_state->_drawVerticalLeftPaddle_Hard
    _drawVerticalLeftPaddle_Hard->_my_setAddrWindow_Hard
    _drawSquareLine_Hard->_my_setAddrWindow_Hard
    _display_init->_setAllDisplayPixels_Hard
    _setDisplayFillingMode->_sendCommand_and_8bit_Data
    _sendCommand_and_8bit_Data->_spiWrite
    _setAllDisplayPixels_Hard->_my_setAddrWindow_Hard
    _my_setAddrWindow_Hard->_writeCommand_Hard
    _writeCommand_Hard->_spi_send_recv
    _SPI_WRITE16_Hard->_spi_send_recv
    _sendCommand->_spiWrite

Critical Paths under _main in BANK0

    _main->_update_game_state
    _updateANDset_ball_position->___flsub
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fldiv->_sqrt
    _pong_field_init->_drawFastHLine_Hard
    _pong_field_init->_drawFastVLine_Hard
    _paddle_init->_drawVerticalLeftPaddle_Hard
    _draw_game_state->_drawSquareLine_Hard
    _draw_game_state->_drawVerticalLeftPaddle_Hard
    _display_init->_setAllDisplayPixels_Hard

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   32693
                                             72 BANK0      1     1      0
                                _die
                       _display_init
                    _draw_game_state
                        _paddle_init
                    _pong_field_init
                   _sendCommand_Hard
                  _update_game_state
 ---------------------------------------------------------------------------------
 (1) _update_game_state                                    2     2      0    9788
                                             70 BANK0      2     2      0
         _updateANDset_ball_position
              _update_ball_direction
_update_ball_direction_if_touches_pa
 ---------------------------------------------------------------------------------
 (2) _update_ball_direction_if_touches_paddle              5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _update_ball_direction                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _updateANDset_ball_position                           0     0      0    9788
                            ___fladd
                            ___fldiv
                            ___flsub
                            ___fltol
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1185
                                              0 COMMON     8     4      4
                                              0 BANK0     21    21      0
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3333
                                             62 BANK0      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2984
                                             42 BANK0     20    12      8
                            ___fldiv (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1729
                                              8 COMMON     5     5      0
                                             21 BANK0     21    13      8
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendCommand_Hard                                     1     1      0      44
                                              1 COMMON     1     1      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                      _spi_send_recv
 ---------------------------------------------------------------------------------
 (1) _pong_field_init                                      0     0      0    7060
                 _drawFastHLine_Hard
                 _drawFastVLine_Hard
 ---------------------------------------------------------------------------------
 (2) _drawFastVLine_Hard                                  11     7      4    3530
                                             10 COMMON     4     0      4
                                              0 BANK0      7     7      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                   _SPI_WRITE16_Hard
              _my_setAddrWindow_Hard
 ---------------------------------------------------------------------------------
 (2) _drawFastHLine_Hard                                  11     7      4    3530
                                             10 COMMON     4     0      4
                                              0 BANK0      7     7      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                   _SPI_WRITE16_Hard
              _my_setAddrWindow_Hard
 ---------------------------------------------------------------------------------
 (1) _paddle_init                                          0     0      0    4376
        _drawVerticalLeftPaddle_Hard
 ---------------------------------------------------------------------------------
 (1) _draw_game_state                                      0     0      0    7976
                _drawSquareLine_Hard
        _drawVerticalLeftPaddle_Hard
 ---------------------------------------------------------------------------------
 (2) _drawVerticalLeftPaddle_Hard                         15    10      5    4376
                                             10 COMMON     4     4      0
                                              0 BANK0     11     6      5
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                   _SPI_WRITE16_Hard
                             ___bmul
              _my_setAddrWindow_Hard
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _drawSquareLine_Hard                                 15    11      4    3600
                                             10 COMMON     4     0      4
                                              0 BANK0     11    11      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                   _SPI_WRITE16_Hard
              _my_setAddrWindow_Hard
 ---------------------------------------------------------------------------------
 (1) _display_init                                         3     3      0    3449
                                              4 BANK0      3     3      0
                  _init_Hardwear_SPI
                  _init_Softwear_SPI
                        _sendCommand
           _setAllDisplayPixels_Hard
              _setDisplayFillingMode
 ---------------------------------------------------------------------------------
 (2) _setDisplayFillingMode                                4     4      0     315
                                              5 COMMON     4     4      0
          _sendCommand_and_8bit_Data
 ---------------------------------------------------------------------------------
 (3) _sendCommand_and_8bit_Data                            2     1      1     266
                                              3 COMMON     2     1      1
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _setAllDisplayPixels_Hard                             6     4      2    3042
                                             10 COMMON     2     0      2
                                              0 BANK0      4     4      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                   _SPI_WRITE16_Hard
              _my_setAddrWindow_Hard
 ---------------------------------------------------------------------------------
 (3) _my_setAddrWindow_Hard                                8     0      8    1978
                                              2 COMMON     8     0      8
                      _spi_send_recv
                  _writeCommand_Hard
 ---------------------------------------------------------------------------------
 (4) _writeCommand_Hard                                    1     1      0      44
                                              1 COMMON     1     1      0
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                      _spi_send_recv
 ---------------------------------------------------------------------------------
 (3) _SPI_WRITE16_Hard                                     4     2      2     872
                                              1 COMMON     4     2      2
                      _spi_send_recv
 ---------------------------------------------------------------------------------
 (2) _spi_send_recv                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _sendCommand                                          1     1      0      92
                                              3 COMMON     1     1      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             3     3      0      70
                                              0 COMMON     3     3      0
                      _SPI_MOSI_HIGH
                       _SPI_MOSI_LOW
                       _SPI_SCK_HIGH
                        _SPI_SCK_LOW
 ---------------------------------------------------------------------------------
 (5) _SPI_SCK_LOW                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SPI_SCK_HIGH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SPI_MOSI_LOW                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SPI_MOSI_HIGH                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_DC_LOW                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_DC_HIGH                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_CS_LOW                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_CS_HIGH                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_Softwear_SPI                                    2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _init_Hardwear_SPI                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _die                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _die
   _display_init
     _init_Hardwear_SPI
     _init_Softwear_SPI
     _sendCommand
       _SPI_CS_HIGH
       _SPI_CS_LOW
       _SPI_DC_HIGH
       _SPI_DC_LOW
       _spiWrite
         _SPI_MOSI_HIGH
         _SPI_MOSI_LOW
         _SPI_SCK_HIGH
         _SPI_SCK_LOW
     _setAllDisplayPixels_Hard
       _SPI_CS_HIGH
       _SPI_CS_LOW
       _SPI_WRITE16_Hard
         _spi_send_recv
       _my_setAddrWindow_Hard
         _spi_send_recv
         _writeCommand_Hard
           _SPI_DC_HIGH
           _SPI_DC_LOW
           _spi_send_recv
     _setDisplayFillingMode
       _sendCommand_and_8bit_Data
         _SPI_CS_HIGH
         _SPI_CS_LOW
         _SPI_DC_HIGH
         _SPI_DC_LOW
         _spiWrite
   _draw_game_state
     _drawSquareLine_Hard
       _SPI_CS_HIGH
       _SPI_CS_LOW
       _SPI_WRITE16_Hard
       _my_setAddrWindow_Hard
     _drawVerticalLeftPaddle_Hard
       _SPI_CS_HIGH
       _SPI_CS_LOW
       _SPI_WRITE16_Hard
       ___bmul
       _my_setAddrWindow_Hard
   _paddle_init
     _drawVerticalLeftPaddle_Hard
   _pong_field_init
     _drawFastHLine_Hard
       _SPI_CS_HIGH
       _SPI_CS_LOW
       _SPI_WRITE16_Hard
       _my_setAddrWindow_Hard
     _drawFastVLine_Hard
       _SPI_CS_HIGH
       _SPI_CS_LOW
       _SPI_WRITE16_Hard
       _my_setAddrWindow_Hard
   _sendCommand_Hard
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_DC_HIGH
     _SPI_DC_LOW
     _spi_send_recv
   _update_game_state
     _updateANDset_ball_position
       ___fladd
         ___fldiv (ARG)
           _sqrt (ARG)
         _sqrt (ARG)
       ___fldiv
       ___flsub
         ___fladd
         ___fldiv (ARG)
         _sqrt (ARG)
       ___fltol
       _sqrt
     _update_ball_direction
     _update_ball_direction_if_touches_paddle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      1B       5       33.8%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     49      50       3      100.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      79      10        0.0%
ABS                  0      0      79       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar  2 13:45:04 2023

                                   ___fldiv@aexp 0049                                     ___fldiv@bexp 0048  
                                              pc 0002                                     ___fldiv@sign 0041  
                                 ___bmul@product 0072                                      _SSPSTATbits 0094  
                                 ?_spi_send_recv 0070                                               l89 0C4F  
                                             _dx 00A4                                               _dy 00A0  
                                             fsr 0004               drawVerticalLeftPaddle_Hard@start_y 002A  
                         sendCommand@commandByte 0073                     drawFastHLine_Hard@in_HLine_y 007B  
                                            l100 0584                                              l112 0960  
                                            l121 0974                                              l201 0CEF  
                                            l130 0978                                              l115 096C  
                                            l124 0970                                              l300 0C06  
                                            l109 0964                                              l141 0A40  
                                            l221 0DA0                                              l118 0968  
                                            l135 0BBF                                              l127 097C  
                                            l144 0AEF                                              l161 09B7  
                                            l138 09DA                                              l170 0989  
                                            l154 0B4D                                              l147 0AFA  
                                            l227 0DB6                                              l148 0B15  
                                            l156 0B54                                              l252 00F9  
                                            l164 09EC                                              l173 098F  
                                            l421 0A15                                              l261 0B44  
                                            l182 0A78                                              l158 0B7F  
                                            l255 0A5B                                              l167 099B  
                                            l176 09A8                                              l258 0AC0  
                                            l195 0C9F                                              l276 0A2A  
                                            l189 0D40                                              l701 07DC  
                                            l286 01A3                                              l287 01A7  
                                            l296 004F                                              l713 0750  
                                            l730 07D2                                              l722 07B0  
                                            l731 07DC                                              l709 072C  
                                            l581 0E2C                                              l734 0A9A  
                                            l822 02B5                                              l719 0772  
                                            l591 0E2C                                              l815 037D  
                                            l760 0F75                                              l744 0E83  
                                            l746 0FFF                                              l692 0663  
                                            l588 0E17                                              l766 0FE7  
                                            l694 063C                                              l768 0FF5  
                                            l688 05E0                               _drawFastVLine_Hard 0CA0  
                                            _RB0 0030                                              _RB1 0031  
                                            _RB2 0032                                    ?_display_init 0070  
                                            _RB4 0034                                              _RB5 0035  
                                            _RC4 003C                                              _RC5 003D  
                                            _RC6 003E                                              _RC7 003F  
                    ??_sendCommand_and_8bit_Data 0074                                              _die 0A41  
                                            indf 0000                        setDisplayFillingMode@hORv 0077  
                        __end_of_draw_game_state 0C07                              ?_drawFastVLine_Hard 007A  
                                   ___fltol@exp1 0079                                             l2111 096D  
                                           l2121 095D                                             l2105 0969  
                                           l2113 0979                                             l2201 05F6  
                                           l2107 0965                                             l2115 0975  
                                           l2131 0AF7                                             l2123 0AEB  
                                           l2211 0600                                             l2203 05F8  
                                           l2109 0971                                             l2133 0AFD  
                                           l2117 0985                                             l2141 0994  
                                           l2301 0764                                             l2221 060A  
                                           l2213 0602                                             l2205 05FA  
                                           l2119 0961                                             l2135 0AFF  
                                           l2143 0998                                             l2311 0777  
                                           l2303 0765                                             l2231 0647  
                                           l2215 0604                                             l2207 05FC  
                                           l2223 060C                                             l2151 0592  
                                           ?_die 0070                                             l2137 0B08  
                                           l2129 0AF3                                             l2321 07B5  
                                           l2313 077C                                             l2305 0769  
                                           l2233 0649                                             l2241 065B  
                                           l2225 060D                                             l2217 0606  
                                           l2209 05FE                                             l2161 05A6  
                                           l2153 0593                                             l2145 0585  
                                           l2401 02A5                                             l2139 0991  
                                           l2331 07CC                                             l2323 07BA  
                                           l2315 078A                                             l2307 076F  
                                           l2251 068C                                             l2243 0667  
                                           l2235 064D                                             l2227 0624  
                                           l2219 0608                                             l2171 05BA  
                                           l2155 0598                                             l2163 05A8  
                                           l2147 058A                                             l2411 0336  
                                           l2403 02DB                                             l2333 07CE  
                                           l2325 07C2                                             l2317 078E  
                                           l2261 06A1                                             l2253 0690  
                                           l2245 066C                                             l2237 064E  
                                           l2229 0640                                             l2181 05CD  
                                           l2173 05BE                                             l2165 05B0  
                                           l2157 059D                                             l2149 058E  
                                           l2501 0A7D                                             l2421 0367  
                                           l2413 033A                                             l2405 02E1  
                                           l2341 01AD                                             l1551 0BB5  
                                           l1543 0B80                                             l2431 0A2C  
                                           l2511 0E3A                                             l2335 07D7  
                                           l2327 07C7                                             l2319 07AC  
                                           l2271 0704                                             l2263 06A2  
                                           l2255 0694                                             l2239 0657  
                                           l2191 05EA                                             l2183 05D5  
                                           l2175 05C2                                             l2167 05B3  
                                           l2159 05A5                                             l2423 036B  
                                           l2415 0353                                             l2407 02FA  
                                           l2351 01CF                                             l2343 01B1  
                                           l1553 0BBC                                             l1545 0B9E  
                                           l2441 099E                                             l2433 0A32  
                                           l2601 0F4F                                             l2521 0E4E  
                                           l2513 0E3B                                             l2505 0E2D  
                                           l2337 07DB                                             l2329 07C8  
                                           l2281 0739                                             l2273 070A  
                                           l2265 06AB                                             l2257 069B  
                                           l2249 0675                                             l2193 05EE  
                                           l2185 05D6                                             l2177 05C3  
                                           l2169 05B9                                             l2425 036C  
                                           l2417 0359                                             l2409 0306  
                                           l2361 01E4                                             l2353 01D0  
                                           l2345 01B5                                             l1547 0BA7  
                                           l2443 09A0                                             l2435 0A36  
                                           l2451 0A03                                             l2611 0F72  
                                           l2603 0F55                                             l2531 0E65  
                                           l2515 0E40                                             l2523 0E50  
                                           l2507 0E32                                             l2291 0754  
                                           l2275 070F                                             l2259 069D  
                                           l2267 06B0                                             l2195 05F0  
                                           l2179 05C8                                             l2187 05D8  
                                           l2427 0375                                             l2419 0365  
                                           l2371 020F                                             l2355 01D6  
                                           l2347 01B6                                             l2339 01A8  
                                           l3091 0AD0                                             l3083 0AC1  
                                           l1549 0BAA                                             l2445 09A4  
                                           l2437 0A3D                                             l2453 0A07  
                                           l2621 0F91                                             l2605 0F59  
                                           l2541 0E79                                             l2533 0E66  
                                           l2525 0E58                                             l2517 0E45  
                                           l2509 0E36                                             l2293 0757  
                                           l2285 0742                                             l2269 06C6  
                                           l2277 071E                                             l2197 05F2  
                                           l2189 05E6                                             l2381 022F  
                                           l2373 0215                                             l2365 01ED  
                                           l2349 01C9                                             l2701 04EB  
                                           l3093 0ADB                                             l3085 0AC4  
                                           l2439 099C                                             l2447 0A5C  
                                           l2455 0A0B                                             l2631 0FDA  
                                           l2623 0FAA                                             l2615 0F7A  
                                           l2607 0F5A                                             l2535 0E6B  
                                           l2543 0E7B                                             l2527 0E5D  
                                           l2519 0E4D                                             l2295 0759  
                                           l2287 074B                                             l2279 0734  
                                           l2199 05F4                                             l2471 0DDC  
                                           l2463 0DB7                                             l2391 0255  
                                           l2383 0236                                             l2367 01F2  
                                           l2359 01DE                                             l2711 050E  
                                           l2703 04FA                                             l3095 0ADE  
                                           l3087 0AC7                                             l2721 09D0  
                                           l2457 0A0D                                             l2449 0A02  
                                           l2801 0C75                                             l2641 0FF1  
                                           l2633 0FDE                                             l2617 0F7F  
                                           l2625 0FB0                                             l2609 0F5E  
                                           l2561 0EC4                                             l2545 0E8B  
                                           l2553 0EA4                                             l2537 0E70  
                                           l2529 0E61                                             l2297 075E  
                                           l2289 074F                                             l2473 0DDD  
                                           l2465 0DC0                                             l2393 025A  
                                           l2385 023C                                             l2377 0226  
                                           l2713 056D                                             l2705 0500  
                                           l3097 0AE4                                             l3089 0ACA  
                                           l1579 09A9                                             l2723 09D4  
                                           l3283 0B63                                             l2731 0B56  
                                           l2459 0A14                                             l2803 0C7A  
                                           l2811 0CA3                                             l2635 0FE6  
                                           l2627 0FBD                                             l2619 0F8D  
                                           l2571 0EE3                                             l2563 0ECC  
                                           l2555 0EA9                                             l2547 0E97  
                                           l2539 0E78                                             l2299 0760  
                                           l2475 0DE5                                             l2395 0263  
                                           l2387 0245                                             l2379 022C  
                                           l2715 057C                                             l2707 0502  
                                           l2651 0C15                                             l2725 09D7  
                                           l2805 0C81                                             l2821 0CCA  
                                           l2813 0CA6                                             l2637 0FEB  
                                           l2629 0FCB                                             l2581 0F15  
                                           l2573 0EF5                                             l2565 0ED4  
                                           l2549 0E9B                                             l2493 0E0C  
                                           l2485 0DF3                                             l2477 0DE7  
                                           l2469 0DC9                                             l2397 0265  
                                           l2389 024D                                             l2717 0582  
                                           l2709 050A                                             l2661 0C32  
                                           l2653 0C1A                                             l2901 017E  
                                           l2719 09CA                                             l2735 0B5B  
                                           l2727 0B46                                             l2831 0D47  
                                           l2807 0C89                                             l2823 0CD1  
                                           l2815 0CAC                                             l2911 09DC  
                                           l2639 0FEF                                             l2591 0F36  
                                           l2583 0F16                                             l2575 0EF9  
                                           l2567 0EDC                                             l2559 0EB2  
                                           l2495 0E1C                                             l2479 0DEB  
                                           l2487 0E05                                             l2399 027F  
                                           l2671 037E                                             l2663 0C38  
                                           l2655 0C22                                             l2647 0C07  
                                           l2903 018E                                             l1769 0A41  
                                           l2761 0CF0                                             l2729 0B4F  
                                           l2737 0B74                                             l2841 0D6C  
                                           l2833 0D4D                                             l2809 0C9C  
                                           l2825 0CD9                                             l2817 0CC5  
                                           l2913 09E2                                             l2593 0F38  
                                           l2585 0F24                                             l2577 0EFA  
                                           l2569 0EDE                                             l2497 0E21  
                                           l2681 03FE                                             l2673 0386  
                                           l2665 0C3D                                             l2657 0C28  
                                           l2649 0C0F                                             l2905 0194  
                                           l2763 0CF3                                             l2851 0D98  
                                           l2843 0D71                                             l2835 0D51  
                                           l2827 0CEC                                             l2819 0CC5  
                                           l2915 09E6                                             l2595 0F41  
                                           l2579 0F03                                             l2587 0F28  
                                           l2499 0A79                                             l2691 047A  
                                           l2675 038A                                             l2683 0400  
                                           l2667 0C45                                             l2659 0C2C  
                                           l2907 019A                                             l2781 0D0C  
                                           l2765 0D04                                             l2941 0AB4  
                                           l2933 0A9B                                             l2853 0DB3  
                                           l2845 0D76                                             l2837 0D6C  
                                           l2829 0D44                                             l2861 0084  
                                           l2917 09E9                                             l2597 0F45  
                                           l2589 0F2E                                             l2693 0480  
                                           l2685 0408                                             l2677 03E9  
                                           l2669 0C4B                                             l2909 019F  
                                           l2791 0D3D                                             l2783 0D13  
                                           l2775 0D08                                             l2767 0D04  
                                           l2943 0AB7                                             l2935 0A9E  
                                           l2847 0D7D                                             l2839 0D6C  
                                           l2871 00CA                                             l2863 00A2  
                                           l2855 0053                                             l2951 0A1A  
                                           l2599 0F46                                             l2687 040C  
                                           l2695 0482                                             l2679 03F8  
                                           l2785 0D1B                                             l2769 0D04  
                                           l2945 0ABA                                             l2937 0AA2  
                                           l2849 0D85                                             l2881 00E9  
                                           l2873 00CA                                             l2865 00A5  
                                           l2857 005A                                             l2793 0C53  
                                           l2697 0488                                             l2689 046B  
                                           l2961 0019                                             l2953 0005  
                                           l2787 0D28                                             l2939 0AB0  
                                           l2883 00F6                                             l2875 00D5  
                                           l2867 00AB                                             l2859 007B  
                                           l2795 0C56                                             l2947 0B16  
                                           l2699 048C                                             l2891 0126  
                                           l2971 0042                                             l2955 000B  
                                           l2963 001D                                             l2789 0D30  
                                           l2877 00D8                                             l2869 00AF  
                                           l2981 0BDB                                             l2949 0A16  
                                           l2797 0C5C                                             l2893 0144  
                                           l2885 00FA                                             l2965 0022  
                                           l2973 0046                                             l2957 0011  
                                           l2879 00E1                                             l2983 0BE2  
                                           l2799 0C75                                             l2887 0104  
                                           l2895 014A                                             l2975 0049  
                                           l2967 0036                                             l2959 0015  
                                           l2985 0BF3                                             l2897 0154  
                                           l2889 0112                                             l2977 004C  
                                           l2969 003C                                             l2987 0BF6  
                                           l2979 0BC0                                             l2899 0168  
                                           u3000 0E65                                             u2200 0598  
                                           u3001 0E64                                             u2201 0597  
                                           u3010 0E6B                                             u2210 059D  
                                           u3011 0E6A                                             u2211 059C  
                                           u3100 0F15                                             u3020 0E70  
                                           u2300 0630                                             u2220 05B9  
                                           u3101 0F14                                             u3021 0E6F  
                                           u2221 05B8                                             u3110 0F2E  
                                           u3030 0E8B                                             u2310 0640  
                                           u2230 05C2                                             u3111 0F2D  
                                           u3031 0E8A                                             u2311 063F  
                                           u2231 05C1                                             u2160 098F  
                                           u3200 0F7F                                             u3120 0F36  
                                           u3040 0EA9                                             u2400 06A1  
                                           u2320 064D                                             u2240 05C8  
                                           u2161 098E                                             u3201 0F7E  
                                           u3121 0F35                                             u3105 0F11  
                                           u3041 0EA8                                             u2401 06A0  
                                           u2321 064C                                             u2241 05C7  
                                           u2170 0AF3                                             u3210 0F91  
                                           u3050 0EE3                                             u2250 05CD  
                                           u2171 0AF2                                             u3211 0F90  
                                           u3051 0EE2                                             u2251 05CC  
                                           u2180 0B15                                             u3220 0FA0  
                                           u3140 0F45                                             u2500 0754  
                                           u2420 06C6                                             u2340 0663  
                                           u2260 05E6                                             u3300 0C32  
                                           u2181 0B14                                             u3141 0F44  
                                           u2501 0753                                             u2421 06C5  
                                           u2341 0662                                             u2261 05E5  
                                           u3301 0C31                                             u3230 0FBD  
                                           u2510 075E                                             u2350 0667  
                                           u2270 05EA                                             u2190 0592  
                                           u3310 0C38                                             u3231 0FBC  
                                           u3135 0F3A                                             u2511 075D  
                                           u2431 06DD                                             u2423 06C2  
                                           u2415 06A4                                             u2351 0666  
                                           u2335 0650                                             u2271 05E9  
                                           u2191 0591                                             u3311 0C37  
                                           u3240 0FDA                                             u3160 0F59  
                                           u3080 0EF9                                             u2600 07B5  
                                           u2520 0764                                             u2440 06F1  
                                           u2432 06DE                                             u2360 066C  
                                           u2280 0624                                             u3400 050A  
                                           u3320 0C45                                             u2185 0B11  
                                           u3241 0FD9                                             u3225 0F9B  
                                           u3161 0F58                                             u3081 0EF8  
                                           u3065 0EE5                                             u2601 07B4  
                                           u2521 0763                                             u2441 06F2  
                                           u2433 06E3                                             u2361 066B  
                                           u2281 0623                                             u3401 0509  
                                           u3321 0C44                                             u3250 0FEF  
                                           u3170 0F5E                                             u2610 07BA  
                                           u2530 0769                                             u2450 070F  
                                           u2442 06F7                                             u2434 06E4  
                                           u2290 062F                                             u3410 0582  
                                           u3330 0C4B                                             u3251 0FEE  
                                           u3235 0FB9                                             u3171 0F5D  
                                           u3155 0F48                                             u3075 0EEE  
                                           u2611 07B9                                             u2531 0768  
                                           u2451 070E                                             u2443 06F8  
                                           u2435 06E9                                             u2371 067E  
                                           u2291 062D                                             u3411 0581  
                                           u3331 0C4A                                             u3420 0D28  
                                           u3500 007B                                             u3180 0F72  
                                           u2620 07C7                                             u2540 076F  
                                           u2460 0734                                             u2436 06EA  
                                           u2380 0690                                             u2372 0685  
                                           u2700 0215                                             u3340 0386  
                                           u3260 0C0F                                             u3421 0D27  
                                           u3501 007A                                             u3245 0FD6  
                                           u3181 0F71                                             u2621 07C6  
                                           u2541 076E                                             u2461 0733  
                                           u2381 068F                                             u2373 068C  
                                           u2285 0620                                             u2701 0214  
                                           u3341 0385                                             u3261 0C0E  
                                           u3430 0D3D                                             u3510 0084  
                                           u3190 0F79                                             u2630 07CC  
                                           u2550 0776                                             u2470 0739  
                                           u2390 0694                                             u3350 03FE  
                                           u3270 0C15                                             u3431 0D3C  
                                           u3511 0083                                             u3191 0F78  
                                           u3095 0EFC                                             u2631 07CB  
                                           u2551 0775                                             u2471 0738  
                                           u2391 0693                                             u3351 03FD  
                                           u3271 0C14                                             u3440 0C9C  
                                           u2640 07DB                                             u2560 077C  
                                           u2800 0314                                             u2720 025A  
                                           u3360 0408                                             u3280 0C22  
                                           u3600 0168                                             u3425 0D24  
                                           u3505 0077                                             u3441 0C9B  
                                           u2641 07DA                                             u2561 077B  
                                           u2721 0259                                             u3361 0407  
                                           u3281 0C21                                             u3601 0167  
                                           u3530 00A2                                             u3450 0CEC  
                                           u2570 078E                                             u2490 074F  
                                           u2650 01B5                                             u3370 0480  
                                           u3290 0C28                                             u3610 017E  
                                           u3435 0D39                                             u3531 00A1  
                                           u3451 0CEB                                             u2571 078D  
                                           u2491 074E                                             u2811 0328  
                                           u2715 0231                                             u2651 01B4  
                                           u3371 047F                                             u3291 0C27  
                                           u3611 017D                                             u3460 0D98  
                                           u3540 00F6                                             u3524 008D  
                                           u2580 079D                                             u2900 0DF2  
                                           u2820 033A                                             u2812 032F  
                                           u2740 027F                                             u2660 01CF  
                                           u3380 0488                                             u3620 018E  
                                           u3700 0011                                             u3461 0D97  
                                           u3541 00F5                                             u3445 0C98  
                                           u2485 0744                                             u2901 0DF1  
                                           u2821 0339                                             u2813 0336  
                                           u2805 030F                                             u2741 027E  
                                           u2661 01CE                                             u3381 0487  
                                           u3621 018D                                             u3605 0164  
                                           u3701 0010                                             u4317 0AE2  
                                           u3470 0DB3                                             u2590 07AC  
                                           u2830 0348                                             u2670 01D6  
                                           u3390 0500                                             u3630 0194  
                                           u3550 0104                                             u3710 0022  
                                           u4327 0AAA                                             u3471 0DB2  
                                           u3535 009E                                             u3455 0CE8  
                                           u2591 07AB                                             u2751 0296  
                                           u2735 025C                                             u2671 01D5  
                                           u3391 04FF                                             u3631 0193  
                                           u3615 017A                                             u3551 0103  
                                           u3711 0021                                             u3480 005A  
                                           u2920 0E04                                             u2840 036B  
                                           u2760 02C3                                             u2752 029D  
                                           u2680 01E4                                             u3640 019A  
                                           u3560 0112                                             u3720 0036  
                                           u4337 0BA2                                             u3465 0D94  
                                           u3545 00F2                                             u3481 0059  
                                           u2585 0798                                             u2921 0E03  
                                           u2841 036A                                             u2753 02A4  
                                           u2745 027B                                             u2681 01E3  
                                           u3641 0199                                             u3561 0111  
                                           u3721 0035                                             u2850 0A07  
                                           u3730 0BE2                                             u2930 0E0B  
                                           u2690 01F2                                             u3570 0126  
                                           u4347 0BB1                                             u3475 0DAF  
                                           u2851 0A06                                             u3731 0BE1  
                                           u2931 0E0A                                             u2915 0DF4  
                                           u2835 0343                                             u2691 01F1  
                                           u3571 0125                                             u2860 0A14  
                                           u2780 02E1                                             u3580 0144  
                                           u3900 0AD0                                             u4357 0BBA  
                                           u2861 0A13                                             u2781 02E0  
                                           u2765 02BE                                             u3581 0143  
                                           u3725 0032                                             u3901 0ACF  
                                           u3494 0063                                             u2950 0E1C  
                                           u2870 0DC0                                             u2790 02EF  
                                           u3590 0154                                             u4367 0A47  
                                           u3495 0066                                             u2951 0E1B  
                                           u2871 0DBF                                             u2775 02D0  
                                           u3591 0153                                             u3575 0122  
                                           u2960 0E21                                             u2880 0DD7  
                                           u4377 0A54                                             u2961 0E20  
                                           u2945 0E0E                                             u3585 0140  
                                           u2970 0E3A                                             u2890 0DEB  
                                           u3690 000B                                             u2971 0E39  
                                           u2891 0DEA                                             u2795 02EA  
                                           u3691 000A                                             u2980 0E40  
                                           u2981 0E3F                                             u2885 0DD2  
                                           u2990 0E45                                             u2991 0E44  
                   ??_updateANDset_ball_position 007D                          ??_my_setAddrWindow_Hard 007A  
                                           _main 0AC1                                             _mode 00B8  
                                   ?_paddle_init 0070                                             btemp 007E  
                                           _sqrt 01A8                                             start 0000  
                                ___fldiv@new_exp 0042                                ___bmul@multiplier 0073  
                           ??_drawFastVLine_Hard 0020                                            ??_die 0070  
                     ??_setAllDisplayPixels_Hard 007C        drawVerticalLeftPaddle_Hard@y_row_vertical 0028  
                                  ___fltol@sign1 0078                                   ??_display_init 0024  
                                __end_of___fladd 07DD                                  ??_SPI_MOSI_HIGH 0070  
                                          ?_main 0070                                  __end_of___fldiv 1000  
                                __end_of___flsub 0A9B                                  __end_of___fltol 0E2D  
                                          ?_sqrt 0070                                _update_game_state 0005  
                       _paddle_top_left_position 006D                               ?_update_game_state 0070  
                              SPI_WRITE16_Hard@w 0071                                            _errno 00B4  
                                _pong_field_init 0B16                                            pclath 000A  
                                    ?_SPI_DC_LOW 0070                              ??_update_game_state 0066  
                                    ?_SPI_CS_LOW 0070                                            sqrt@a 0070  
                                          sqrt@i 0021                                            sqrt@p 0026  
                                          status 0003                                            wtemp0 007E  
                      _sendCommand_and_8bit_Data 0A2B                                  __initialization 07DD  
                                ??_spi_send_recv 0070                                     __end_of_main 0AEA  
                                   __end_of_sqrt 037E                                 _ball_x_direction 006B  
                                   ?_sendCommand 0070                        __end_of_update_game_state 0050  
                                         ??_main 0068                                           ??_sqrt 0074  
                                  _paddle_length 00B2                                 _ball_y_direction 0069  
                      setAllDisplayPixels_Hard@x 0020                        setAllDisplayPixels_Hard@y 0022  
                               ?_draw_game_state 0070                     _old_paddle_top_left_position 00B3  
                                         _TRISB0 0430                                           _TRISB1 0431  
                                         _TRISB2 0432                                           _TRISB4 0434  
                                         _TRISB5 0435                                           _TRISC4 043C  
                                         _TRISC5 043D                                           _TRISC6 043E  
                                         _TRISC7 043F                                           _SSPBUF 0013  
               drawFastVLine_Hard@y_row_vertical 0024                                 _sendCommand_Hard 09DB  
                        ??_update_ball_direction 0070                                           ___bmul 0A01  
                                      ??___fladd 0052                      __end_of_drawSquareLine_Hard 0DB7  
                                      ??___fldiv 0078                                        ??___flsub 007D  
                                      ??___fltol 0074              sendCommand_and_8bit_Data@first_byte 0073  
                                   ?_SPI_DC_HIGH 0070                          __end_of_pong_field_init 0B45  
                      drawFastHLine_Hard@start_x 0026                                 __end_of_spiWrite 0B16  
                        ??_setDisplayFillingMode 0075                                     ?_SPI_CS_HIGH 0070  
                                   ?_SPI_SCK_LOW 0070               __end_of_updateANDset_ball_position 0585  
                     _updateANDset_ball_position 037E                 drawVerticalLeftPaddle_Hard@color 0023  
                        __end_of__initialization 07FD                 drawVerticalLeftPaddle_Hard@width 0022  
               drawVerticalLeftPaddle_Hard@total 0027                             __end_of_display_init 0AC1  
                                     ___fltol@f1 0070                              ___bmul@multiplicand 0070  
                              _init_Softwear_SPI 0B80                                   __pcstackCOMMON 0070  
                                   __pidataBANK0 097D                                     __pidataBANK1 09ED  
                             ?_init_Softwear_SPI 0070                 __end_of_setAllDisplayPixels_Hard 0D41  
                            ??_init_Softwear_SPI 0070                      setDisplayFillingMode@madctl 0078  
__end_of_update_ball_direction_if_touches_paddle 01A8        ??_update_ball_direction_if_touches_paddle 0070  
       ?_update_ball_direction_if_touches_paddle 0070          _update_ball_direction_if_touches_paddle 00FA  
          drawVerticalLeftPaddle_Hard@in_VLine_x 0021                                       __pbssBANK1 00B4  
                      __end_of_init_Softwear_SPI 0BC0                    __end_of_my_setAddrWindow_Hard 0A79  
            __end_of_drawVerticalLeftPaddle_Hard 00FA                      _drawVerticalLeftPaddle_Hard 0050  
                                     __pmaintext 0AC1                      sendCommand_Hard@commandByte 0071  
                                        ?___bmul 0070                                 ?_pong_field_init 0070  
                                   ??_SPI_DC_LOW 0070                                     ??_SPI_CS_LOW 0070  
                                   _f_x_position 00AC                                     _f_y_position 00A8  
                                      ?_spiWrite 0070                          drawFastHLine_Hard@color 007C  
                                        ___fladd 0585                                          ___fldiv 0E2D  
                                        ___flsub 0A79                                          ___fltol 0DB7  
              __end_of_sendCommand_and_8bit_Data 0A41                                          __ptext1 0005  
                                        __ptext2 00FA                                          __ptext3 0C07  
                                        __ptext4 037E                                          __ptext5 01A8  
                                        __ptext6 0DB7                                          __ptext7 0A79  
                                        __ptext8 0585                                          __ptext9 0E2D  
           drawFastHLine_Hard@x_colum_horizontal 0024                               __end_of_SPI_DC_LOW 096D  
                       __end_of_sendCommand_Hard 09ED                               __end_of_SPI_CS_LOW 0965  
                          __end_of_SPI_MOSI_HIGH 0971                    setAllDisplayPixels_Hard@color 007A  
                       SPI_WRITE16_Hard@second_B 0074                        ?_setAllDisplayPixels_Hard 007A  
                           end_of_initialization 07FD                                 _SPI_WRITE16_Hard 099C  
                              _writeCommand_Hard 0990                               ?_writeCommand_Hard 0070  
                                     ??_spiWrite 0070                    __end_of_update_ball_direction 0C50  
                          drawSquareLine_Hard@x2 0024                            drawSquareLine_Hard@y2 0025  
                            ??_writeCommand_Hard 0071                                          sqrt@grs 0027  
                                        sqrt@exp 002B                            __end_of_spi_send_recv 0990  
                                  ?_SPI_SCK_HIGH 0070                                    ?_SPI_MOSI_LOW 0070  
                                   _display_init 0A9B                                      ___fladd@grs 005D  
              drawVerticalLeftPaddle_Hard@length 0020                                      ___fldiv@grs 0044  
                                    ___fldiv@rem 003D                    __end_of_setDisplayFillingMode 0B80  
                                    spiWrite@bit 0071                        __end_of_writeCommand_Hard 099C  
                    ?_updateANDset_ball_position 0070                     my_setAddrWindow_Hard@x_start 0072  
                   my_setAddrWindow_Hard@y_start 0074                                   ??_SPI_SCK_HIGH 0070  
                                 __end_of___bmul 0A16                                   ??_SPI_MOSI_LOW 0070  
                            start_initialization 07DD                        drawFastVLine_Hard@start_y 0026  
                                    __end_of_die 0A5C                                     _paddle_width 00B1  
                                  ??_paddle_init 007E                                         ??___bmul 0071  
                                _ball_x_position 006F                                       init_fetch0 09B8  
                                    __pdataBANK0 0069                                      __pdataBANK1 00A0  
                     __end_of_drawFastHLine_Hard 0CA0                                  _ball_y_position 006E  
                                      ___fladd@a 004E                                        ___fladd@b 004A  
                                      ___fldiv@a 0035                                        ___fldiv@b 0039  
                                      ___flsub@a 005E                                        ___flsub@b 0062  
                                      ___latbits 0001                                    __pcstackBANK0 0020  
                  my_setAddrWindow_Hard@x_finish 0076                    my_setAddrWindow_Hard@y_finish 0078  
                  drawVerticalLeftPaddle_Hard@x2 0026                    drawVerticalLeftPaddle_Hard@y2 0025  
                              spi_send_recv@data 0070                            _my_setAddrWindow_Hard 0A5C  
                            __end_of_paddle_init 0A2B                                ??_draw_game_state 007E  
                                       ?___fladd 004A                                         ?___fldiv 0035  
                                       ?___flsub 005E                                         ?___fltol 0070  
                                  ??_sendCommand 0073                         __end_of_SPI_WRITE16_Hard 09A9  
                       _state_of_paddles_changes 00B6               _paddle_left_side_vertical_position 00B0  
                              _init_Hardwear_SPI 09A9                                ?_sendCommand_Hard 0070  
                             ?_init_Hardwear_SPI 0070              drawSquareLine_Hard@start_x_top_left 002A  
                             ??_sendCommand_Hard 0071              drawSquareLine_Hard@start_y_top_left 007B  
                   drawFastVLine_Hard@in_VLine_x 007B                          SPI_WRITE16_Hard@first_B 0073  
                           __end_of_SPI_SCK_HIGH 0979                              ??_init_Hardwear_SPI 0070  
                           __end_of_SPI_MOSI_LOW 0975                       __end_of_drawFastVLine_Hard 0CF0  
                      __end_of_init_Hardwear_SPI 09B8                             drawFastVLine_Hard@y2 0023  
                     ?_sendCommand_and_8bit_Data 0073                                    ??_SPI_DC_HIGH 0070  
                            __end_of_sendCommand 09DB                                    ??_SPI_CS_HIGH 0070  
                                  ??_SPI_SCK_LOW 0070                             writeCommand_Hard@cmd 0071  
                                    _paddle_init 0A16                              _drawSquareLine_Hard 0D41  
                         ?_my_setAddrWindow_Hard 0072                         drawSquareLine_Hard@color 007C  
                           drawFastHLine_Hard@x2 0023                         drawFastHLine_Hard@length 007A  
                          _update_ball_direction 0C07                             ?_drawSquareLine_Hard 007A  
                       _setAllDisplayPixels_Hard 0CF0                                         __ptext10 09DB  
                                       __ptext11 0B16                                         __ptext20 0B45  
                                       __ptext12 0CA0                                         __ptext21 0A2B  
                                       __ptext13 0C50                                         __ptext30 0975  
                                       __ptext22 0CF0                                         __ptext14 0A16  
                                       __ptext31 0971                                         __ptext23 0A5C  
                                       __ptext15 0BC0                                         __ptext32 096D  
                                       __ptext24 0990                                         __ptext16 0050  
                                       __ptext33 0969                                         __ptext25 099C  
                                       __ptext17 0A01                                         __ptext34 0965  
                                       __ptext26 0984                                         __ptext18 0D41  
                                       __ptext35 0961                                         __ptext27 09C9  
                                       __ptext19 0A9B                                         __ptext36 095D  
                                       __ptext28 0AEA                                         __ptext37 0B80  
                                       __ptext29 0979                                         __ptext38 09A9  
                                       __ptext39 0A41                              __end_of_SPI_DC_HIGH 0969  
                          _setDisplayFillingMode 0B45                              __end_of_SPI_CS_HIGH 0961  
                            __end_of_SPI_SCK_LOW 097D                     ?_drawVerticalLeftPaddle_Hard 0020  
                              ??_pong_field_init 007E                                         _spiWrite 0AEA  
                 drawSquareLine_Hard@side_length 007A                                        spiWrite@b 0070  
                                    _sendCommand 09C9            drawSquareLine_Hard@x_colum_horizontal 0026  
                          ??_drawSquareLine_Hard 0020                                    _SPI_MOSI_HIGH 096D  
                                       init_ram0 09BC                               _drawFastHLine_Hard 0C50  
                                      sqrt@tfrac 0022                                  _draw_game_state 0BC0  
                            ?_drawFastHLine_Hard 007A                      _paddle_position_has_changed 00B7  
                  ??_drawVerticalLeftPaddle_Hard 007A                           ?_update_ball_direction 0070  
                                   _SPI_SCK_HIGH 0975                                    _spi_send_recv 0984  
                                   _SPI_MOSI_LOW 0971                                ?_SPI_WRITE16_Hard 0071  
                           ??_drawFastHLine_Hard 0020                                         sqrt@frac 0031  
                                       sqrt@sign 0020                                         sqrt@root 002D  
                                 _old_x_position 00BA                               ??_SPI_WRITE16_Hard 0073  
                                 ?_SPI_MOSI_HIGH 0070                                      _SPI_DC_HIGH 0965  
           sendCommand_and_8bit_Data@commandByte 0074                                   _old_y_position 00B9  
                                    _SPI_CS_HIGH 095D                drawSquareLine_Hard@y_row_vertical 0028  
                                  ___fladd@signs 005A                                      _SPI_SCK_LOW 0979  
                         ?_setDisplayFillingMode 0070                         drawFastVLine_Hard@length 007A  
                                     _SPI_DC_LOW 0969                                       _SPI_CS_LOW 0961  
                                   ___fladd@aexp 005B                                     ___fladd@bexp 005C  
                        drawFastVLine_Hard@color 007C                                       _SSPCONbits 0014  
