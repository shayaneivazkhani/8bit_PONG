

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Feb 27 17:55:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F913
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.40
    65                           ; Generated 17/11/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F913 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  0105                     	;# 
   155  0107                     	;# 
   156  0108                     	;# 
   157  0109                     	;# 
   158  010C                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0110                     	;# 
   165  0111                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0116                     	;# 
   169  0117                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011C                     	;# 
   173  011D                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0110                     	;# 
   242  0111                     	;# 
   243  0113                     	;# 
   244  0114                     	;# 
   245  0116                     	;# 
   246  0117                     	;# 
   247  0119                     	;# 
   248  011A                     	;# 
   249  011C                     	;# 
   250  011D                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253                           
   254                           	psect	idataBANK2
   255  0000'                    __pidataBANK2:
   256                           
   257                           ;initializer for _ball_y_positions
   258  0000' 3404               	retlw	4
   259  0001' 3405               	retlw	5
   260  0002' 3406               	retlw	6
   261                           
   262                           ;initializer for _ball_x_positions
   263  0003' 343B               	retlw	59
   264  0004' 343C               	retlw	60
   265  0005' 343D               	retlw	61
   266                           
   267                           ;initializer for _ball_y_position
   268  0006' 3405               	retlw	5
   269                           
   270                           ;initializer for _ball_x_position
   271  0007' 343C               	retlw	60
   272                           
   273                           ;initializer for _ball_y_direction
   274  0008' 34FF               	retlw	255
   275                           
   276                           ;initializer for _ball_x_direction
   277  0009' 3401               	retlw	1
   278                           
   279                           	psect	strings
   280  0000'                    __pstrings:
   281  0000'                    stringtab:
   282  0000'                    __stringtab:
   283  0000'                    stringcode:	
   284                           ;	String table - string pointers are 1 byte each
   285                           
   286  0000'                    stringdir:
   287  0000' 3000'              	movlw	high stringdir
   288  0001' 008A               	movwf	10
   289  0002' 0804               	movf	4,w
   290  0003' 0A84               	incf	4,f
   291  0004' 0782               	addwf	2,f
   292  0005'                    __stringbase:
   293  0005' 3400               	retlw	0
   294  0006'                    __end_of__stringtab:
   295  0006'                    exp@coeff:
   296  0006' 3400               	retlw	0
   297  0007' 3400               	retlw	0
   298  0008' 3480               	retlw	128
   299  0009' 343F               	retlw	63
   300  000A' 3418               	retlw	24
   301  000B' 3472               	retlw	114
   302  000C' 3431               	retlw	49
   303  000D' 343F               	retlw	63
   304  000E' 34F0               	retlw	240
   305  000F' 34FD               	retlw	253
   306  0010' 3475               	retlw	117
   307  0011' 343E               	retlw	62
   308  0012' 3447               	retlw	71
   309  0013' 3458               	retlw	88
   310  0014' 3463               	retlw	99
   311  0015' 343D               	retlw	61
   312  0016' 3458               	retlw	88
   313  0017' 3495               	retlw	149
   314  0018' 341D               	retlw	29
   315  0019' 343C               	retlw	60
   316  001A' 3482               	retlw	130
   317  001B' 34C4               	retlw	196
   318  001C' 34AE               	retlw	174
   319  001D' 343A               	retlw	58
   320  001E' 34A8               	retlw	168
   321  001F' 3478               	retlw	120
   322  0020' 3421               	retlw	33
   323  0021' 3439               	retlw	57
   324  0022' 34EF               	retlw	239
   325  0023' 3493               	retlw	147
   326  0024' 3480               	retlw	128
   327  0025' 3437               	retlw	55
   328  0026' 34A0               	retlw	160
   329  0027' 3492               	retlw	146
   330  0028' 34A7               	retlw	167
   331  0029' 3435               	retlw	53
   332  002A' 3446               	retlw	70
   333  002B' 3456               	retlw	86
   334  002C' 3415               	retlw	21
   335  002D' 3434               	retlw	52
   336  002E'                    __end_ofexp@coeff:
   337  002E'                    log@coeff:
   338  002E' 3400               	retlw	0
   339  002F' 3400               	retlw	0
   340  0030' 3400               	retlw	0
   341  0031' 3400               	retlw	0
   342  0032' 34C4               	retlw	196
   343  0033' 34FF               	retlw	255
   344  0034' 347F               	retlw	127
   345  0035' 343F               	retlw	63
   346  0036' 3480               	retlw	128
   347  0037' 34EF               	retlw	239
   348  0038' 34FF               	retlw	255
   349  0039' 34BE               	retlw	190
   350  003A' 3490               	retlw	144
   351  003B' 34E1               	retlw	225
   352  003C' 34A9               	retlw	169
   353  003D' 343E               	retlw	62
   354  003E' 34EC               	retlw	236
   355  003F' 3482               	retlw	130
   356  0040' 3476               	retlw	118
   357  0041' 34BE               	retlw	190
   358  0042' 3482               	retlw	130
   359  0043' 34AD               	retlw	173
   360  0044' 342B               	retlw	43
   361  0045' 343E               	retlw	62
   362  0046' 340E               	retlw	14
   363  0047' 343C               	retlw	60
   364  0048' 34C3               	retlw	195
   365  0049' 34BD               	retlw	189
   366  004A' 3487               	retlw	135
   367  004B' 34D1               	retlw	209
   368  004C' 3413               	retlw	19
   369  004D' 343D               	retlw	61
   370  004E' 3441               	retlw	65
   371  004F' 3478               	retlw	120
   372  0050' 34D3               	retlw	211
   373  0051' 34BB               	retlw	187
   374  0052'                    __end_oflog@coeff:
   375  0013                     _SSPBUF	set	19
   376  0014                     _SSPCONbits	set	20
   377  003F                     _RC7	set	63
   378  0034                     _RB4	set	52
   379  0031                     _RB1	set	49
   380  003E                     _RC6	set	62
   381  003C                     _RC4	set	60
   382  0032                     _RB2	set	50
   383  0030                     _RB0	set	48
   384  0094                     _SSPSTATbits	set	148
   385  043F                     _TRISC7	set	1087
   386  0434                     _TRISB4	set	1076
   387  0431                     _TRISB1	set	1073
   388  043C                     _TRISC4	set	1084
   389  043E                     _TRISC6	set	1086
   390  0432                     _TRISB2	set	1074
   391  0430                     _TRISB0	set	1072
   392                           
   393                           	psect	cinit
   394  0000'                    start_initialization:	
   395                           ; #config settings
   396                           
   397  0000'                    __initialization:
   398                           
   399                           ; Initialize objects allocated to BANK2
   400  0000' 1783               	bsf	3,7	;select IRP bank2
   401  0001' 3000'              	movlw	low (__pdataBANK2+10)
   402  0002' 00FD               	movwf	btemp+-1
   403  0003' 3000'              	movlw	high __pidataBANK2
   404  0004' 00FE               	movwf	btemp
   405  0005' 3000'              	movlw	low __pidataBANK2
   406  0006' 00FF               	movwf	btemp+1
   407  0007' 3000'              	movlw	low __pdataBANK2
   408  0008' 0084               	movwf	4
   409  0009' 118A' 2000' 118A'  	fcall	init_ram0
   410                           
   411                           ; Clear objects allocated to BANK2
   412  000C' 3000'              	movlw	low __pbssBANK2
   413  000D' 0084               	movwf	4
   414  000E' 3000'              	movlw	low (__pbssBANK2+19)
   415  000F' 118A' 2000' 118A'  	fcall	clear_ram0
   416  0012'                    end_of_initialization:	
   417                           ;End of C runtime variable initialization code
   418                           
   419  0012'                    __end_of__initialization:
   420  0012' 0183               	clrf	3
   421  0013' 118A' 2800'        	ljmp	_main	;jump to C main() function
   422                           
   423                           	psect	bssBANK2
   424  0000'                    __pbssBANK2:
   425  0000'                    _normalized_dy:
   426  0000'                    	ds	4
   427  0004'                    _normalized_dx:
   428  0004'                    	ds	4
   429  0008'                    _dy:
   430  0008'                    	ds	4
   431  000C'                    _dx:
   432  000C'                    	ds	4
   433  0010'                    _errno:
   434  0010'                    	ds	2
   435  0012'                    _mode:
   436  0012'                    	ds	1
   437                           
   438                           	psect	dataBANK2
   439  0000'                    __pdataBANK2:
   440  0000'                    _ball_y_positions:
   441  0000'                    	ds	3
   442  0003'                    _ball_x_positions:
   443  0003'                    	ds	3
   444  0006'                    _ball_y_position:
   445  0006'                    	ds	1
   446  0007'                    _ball_x_position:
   447  0007'                    	ds	1
   448  0008'                    _ball_y_direction:
   449  0008'                    	ds	1
   450  0009'                    _ball_x_direction:
   451  0009'                    	ds	1
   452                           
   453                           	psect	inittext
   454  0000'                    init_fetch0:	
   455                           ;	Called with low address in FSR and high address in W
   456                           
   457  0000' 087E               	movf	btemp,w
   458  0001' 008A               	movwf	10
   459  0002' 087F               	movf	btemp+1,w
   460  0003' 0082               	movwf	2
   461  0004'                    init_ram0:	
   462                           ;Called with:
   463                           ;	high address of idata address in btemp 
   464                           ;	low address of idata address in btemp+1 
   465                           ;	low address of data in FSR
   466                           ;	high address + 1 of data in btemp-1
   467                           
   468  0004' 118A' 2000' 118A'  	fcall	init_fetch0
   469  0007' 0080               	movwf	0
   470  0008' 0A84               	incf	4,f
   471  0009' 0804               	movf	4,w
   472  000A' 067D               	xorwf	btemp+-1,w
   473  000B' 1903               	btfsc	3,2
   474  000C' 3400               	retlw	0
   475  000D' 0AFF               	incf	btemp+1,f
   476  000E' 1903               	btfsc	3,2
   477  000F' 0AFE               	incf	btemp,f
   478  0010' 2800'              	goto	init_ram0
   479                           
   480                           	psect	clrtext
   481  0000'                    clear_ram0:	
   482                           ;	Called with FSR containing the base address, and
   483                           ;	W with the last address+1
   484                           
   485  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   486  0001'                    clrloop0:
   487  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   488  0002' 0A84               	incf	4,f	;increment pointer
   489  0003' 0604               	xorwf	4,w	;XOR with final address
   490  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   491  0005' 3400               	retlw	0	;all done for this memory range, return
   492  0006' 0604               	xorwf	4,w	;XOR again to restore value
   493  0007' 2800'              	goto	clrloop0	;do the next byte
   494                           
   495                           	psect	cstackBANK2
   496  0000'                    __pcstackBANK2:
   497  0000'                    ?_vector_length:
   498  0000'                    vector_length@x:	
   499                           ; 4 bytes @ 0x0
   500                           
   501                           
   502                           ; 4 bytes @ 0x0
   503  0000'                    	ds	4
   504  0004'                    vector_length@y:
   505                           
   506                           ; 4 bytes @ 0x4
   507  0004'                    	ds	4
   508  0008'                    _vector_length$1244:
   509                           
   510                           ; 4 bytes @ 0x8
   511  0008'                    	ds	4
   512  000C'                    _vector_length$1245:
   513                           
   514                           ; 4 bytes @ 0xC
   515  000C'                    	ds	4
   516  0010'                    ?_normalized:
   517  0010'                    normalized@x:	
   518                           ; 1 bytes @ 0x10
   519                           
   520                           
   521                           ; 4 bytes @ 0x10
   522  0010'                    	ds	4
   523  0014'                    normalized@y:
   524                           
   525                           ; 4 bytes @ 0x14
   526  0014'                    	ds	4
   527  0018'                    normalized@length:
   528                           
   529                           ; 4 bytes @ 0x18
   530  0018'                    	ds	4
   531  001C'                    ??_updateANDset_ball_position:
   532                           
   533                           ; 1 bytes @ 0x1C
   534  001C'                    	ds	1
   535  001D'                    updateANDset_ball_position@change_in_x_position:
   536                           
   537                           ; 1 bytes @ 0x1D
   538  001D'                    	ds	1
   539  001E'                    updateANDset_ball_position@change_in_y_position:
   540                           
   541                           ; 1 bytes @ 0x1E
   542  001E'                    	ds	1
   543  001F'                    ??_main:
   544                           
   545                           ; 1 bytes @ 0x1F
   546  001F'                    	ds	3
   547                           
   548                           	psect	cstackBANK1
   549  0000'                    __pcstackBANK1:
   550  0000'                    ?_eval_poly:
   551  0000'                    ?___flsub:	
   552                           ; 4 bytes @ 0x0
   553                           
   554  0000'                    ___flsub@a:	
   555                           ; 4 bytes @ 0x0
   556                           
   557  0000'                    eval_poly@x:	
   558                           ; 4 bytes @ 0x0
   559                           
   560  0000'                    floor@i:	
   561                           ; 4 bytes @ 0x0
   562                           
   563                           
   564                           ; 4 bytes @ 0x0
   565  0000'                    	ds	4
   566  0004'                    eval_poly@d:
   567  0004'                    floor@expon:	
   568                           ; 1 bytes @ 0x4
   569                           
   570  0004'                    ___flsub@b:	
   571                           ; 2 bytes @ 0x4
   572                           
   573                           
   574                           ; 4 bytes @ 0x4
   575  0004'                    	ds	1
   576  0005'                    eval_poly@n:
   577                           
   578                           ; 2 bytes @ 0x5
   579  0005'                    	ds	2
   580  0007'                    eval_poly@res:
   581                           
   582                           ; 4 bytes @ 0x7
   583  0007'                    	ds	4
   584  000B'                    ?_log:
   585  000B'                    ?_ldexp:	
   586                           ; 4 bytes @ 0xB
   587                           
   588  000B'                    ldexp@value:	
   589                           ; 4 bytes @ 0xB
   590                           
   591  000B'                    log@x:	
   592                           ; 4 bytes @ 0xB
   593                           
   594                           
   595                           ; 4 bytes @ 0xB
   596  000B'                    	ds	4
   597  000F'                    ldexp@newexp:
   598  000F'                    log@exponent:	
   599                           ; 2 bytes @ 0xF
   600                           
   601                           
   602                           ; 2 bytes @ 0xF
   603  000F'                    	ds	2
   604  0011'                    ??_ldexp:
   605                           
   606                           ; 1 bytes @ 0x11
   607  0011'                    	ds	2
   608  0013'                    ?_exp:
   609  0013'                    exp@x:	
   610                           ; 4 bytes @ 0x13
   611                           
   612                           
   613                           ; 4 bytes @ 0x13
   614  0013'                    	ds	4
   615  0017'                    _exp$1248:
   616                           
   617                           ; 4 bytes @ 0x17
   618  0017'                    	ds	4
   619  001B'                    exp@exponent:
   620                           
   621                           ; 2 bytes @ 0x1B
   622  001B'                    	ds	2
   623  001D'                    exp@sign:
   624                           
   625                           ; 1 bytes @ 0x1D
   626  001D'                    	ds	1
   627  001E'                    ?_pow:
   628  001E'                    pow@x:	
   629                           ; 4 bytes @ 0x1E
   630                           
   631                           
   632                           ; 4 bytes @ 0x1E
   633  001E'                    	ds	4
   634  0022'                    pow@y:
   635                           
   636                           ; 4 bytes @ 0x22
   637  0022'                    	ds	4
   638  0026'                    _pow$1246:
   639                           
   640                           ; 4 bytes @ 0x26
   641  0026'                    	ds	4
   642  002A'                    _pow$1247:
   643                           
   644                           ; 4 bytes @ 0x2A
   645  002A'                    	ds	4
   646  002E'                    pow@sign:
   647                           
   648                           ; 1 bytes @ 0x2E
   649  002E'                    	ds	1
   650  002F'                    pow@yi:
   651                           
   652                           ; 4 bytes @ 0x2F
   653  002F'                    	ds	4
   654  0033'                    ?_sqrt:
   655  0033'                    sqrt@a:	
   656                           ; 4 bytes @ 0x33
   657                           
   658                           
   659                           ; 4 bytes @ 0x33
   660  0033'                    	ds	4
   661  0037'                    ??_sqrt:
   662                           
   663                           ; 1 bytes @ 0x37
   664  0037'                    	ds	4
   665  003B'                    sqrt@sign:
   666                           
   667                           ; 1 bytes @ 0x3B
   668  003B'                    	ds	1
   669  003C'                    sqrt@i:
   670                           
   671                           ; 1 bytes @ 0x3C
   672  003C'                    	ds	1
   673  003D'                    sqrt@tfrac:
   674                           
   675                           ; 4 bytes @ 0x3D
   676  003D'                    	ds	4
   677  0041'                    sqrt@p:
   678                           
   679                           ; 1 bytes @ 0x41
   680  0041'                    	ds	1
   681  0042'                    sqrt@grs:
   682                           
   683                           ; 4 bytes @ 0x42
   684  0042'                    	ds	4
   685  0046'                    sqrt@exp:
   686                           
   687                           ; 2 bytes @ 0x46
   688  0046'                    	ds	2
   689  0048'                    sqrt@root:
   690                           
   691                           ; 4 bytes @ 0x48
   692  0048'                    	ds	4
   693  004C'                    sqrt@frac:
   694                           
   695                           ; 4 bytes @ 0x4C
   696  004C'                    	ds	4
   697                           
   698                           	psect	cstackCOMMON
   699  0000'                    __pcstackCOMMON:
   700  0000'                    ?___flge:
   701  0000'                    ?_SPI_CS_LOW:	
   702                           ; 1 bit 
   703                           
   704  0000'                    ??_SPI_CS_LOW:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0000'                    ?_SPI_CS_HIGH:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0000'                    ??_SPI_CS_HIGH:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0000'                    ?_spiWrite:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0000'                    ??_spiWrite:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0000'                    ?_spi_send_recv:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0000'                    ??_spi_send_recv:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0000'                    ?_SPI_DC_LOW:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0000'                    ??_SPI_DC_LOW:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0000'                    ?_SPI_DC_HIGH:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0000'                    ??_SPI_DC_HIGH:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0000'                    ?_SPI_MOSI_LOW:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0000'                    ??_SPI_MOSI_LOW:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0000'                    ?_SPI_MOSI_HIGH:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0000'                    ??_SPI_MOSI_HIGH:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0000'                    ?_SPI_SCK_LOW:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0000'                    ??_SPI_SCK_LOW:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0000'                    ?_SPI_SCK_HIGH:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0000'                    ??_SPI_SCK_HIGH:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0000'                    ?_init_Softwear_SPI:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0000'                    ??_init_Softwear_SPI:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0000'                    ?_sendCommand:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0000'                    ?_setDisplayFillingMode:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0000'                    ?_init_Hardwear_SPI:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0000'                    ??_init_Hardwear_SPI:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0000'                    ?_sendCommand_Hard:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0000'                    ?_writeCommand_Hard:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0000'                    ?_update_ball_direction:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0000'                    ??_update_ball_direction:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0000'                    ?_updateANDset_ball_position:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0000'                    ?_main:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0000'                    ?__Umul8_16:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0000'                    ?___flneg:	
   801                           ; 2 bytes @ 0x0
   802                           
   803  0000'                    ?___fltol:	
   804                           ; 4 bytes @ 0x0
   805                           
   806  0000'                    ?___fldiv:	
   807                           ; 4 bytes @ 0x0
   808                           
   809  0000'                    spiWrite@b:	
   810                           ; 4 bytes @ 0x0
   811                           
   812  0000'                    spi_send_recv@data:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0000'                    __Umul8_16@multiplicand:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0000'                    ___flge@ff1:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0000'                    ___flneg@f1:	
   822                           ; 4 bytes @ 0x0
   823                           
   824  0000'                    ___fltol@f1:	
   825                           ; 4 bytes @ 0x0
   826                           
   827  0000'                    ___fldiv@a:	
   828                           ; 4 bytes @ 0x0
   829                           
   830                           
   831                           ; 4 bytes @ 0x0
   832  0000'                    	ds	1
   833  0001'                    ??_sendCommand_Hard:
   834  0001'                    ??_writeCommand_Hard:	
   835                           ; 1 bytes @ 0x1
   836                           
   837  0001'                    ?_SPI_WRITE16_Hard:	
   838                           ; 1 bytes @ 0x1
   839                           
   840  0001'                    sendCommand_Hard@commandByte:	
   841                           ; 1 bytes @ 0x1
   842                           
   843  0001'                    writeCommand_Hard@cmd:	
   844                           ; 1 bytes @ 0x1
   845                           
   846  0001'                    spiWrite@bit:	
   847                           ; 1 bytes @ 0x1
   848                           
   849  0001'                    SPI_WRITE16_Hard@w:	
   850                           ; 2 bytes @ 0x1
   851                           
   852                           
   853                           ; 2 bytes @ 0x1
   854  0001'                    	ds	1
   855  0002'                    ??__Umul8_16:
   856  0002'                    ?_my_setAddrWindow_Hard:	
   857                           ; 1 bytes @ 0x2
   858                           
   859  0002'                    my_setAddrWindow_Hard@x_start:	
   860                           ; 1 bytes @ 0x2
   861                           
   862                           
   863                           ; 2 bytes @ 0x2
   864  0002'                    	ds	1
   865  0003'                    ??_sendCommand:
   866  0003'                    ?_sendCommand_and_8bit_Data:	
   867                           ; 1 bytes @ 0x3
   868                           
   869  0003'                    ??_SPI_WRITE16_Hard:	
   870                           ; 1 bytes @ 0x3
   871                           
   872  0003'                    sendCommand@commandByte:	
   873                           ; 1 bytes @ 0x3
   874                           
   875  0003'                    sendCommand_and_8bit_Data@first_byte:	
   876                           ; 1 bytes @ 0x3
   877                           
   878  0003'                    SPI_WRITE16_Hard@first_B:	
   879                           ; 1 bytes @ 0x3
   880                           
   881                           
   882                           ; 1 bytes @ 0x3
   883  0003'                    	ds	1
   884  0004'                    ??_sendCommand_and_8bit_Data:
   885  0004'                    ??___flneg:	
   886                           ; 1 bytes @ 0x4
   887                           
   888  0004'                    ??___fltol:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0004'                    sendCommand_and_8bit_Data@commandByte:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0004'                    SPI_WRITE16_Hard@second_B:	
   895                           ; 1 bytes @ 0x4
   896                           
   897  0004'                    my_setAddrWindow_Hard@y_start:	
   898                           ; 1 bytes @ 0x4
   899                           
   900  0004'                    __Umul8_16@product:	
   901                           ; 2 bytes @ 0x4
   902                           
   903  0004'                    ___flge@ff2:	
   904                           ; 2 bytes @ 0x4
   905                           
   906  0004'                    ___fldiv@b:	
   907                           ; 4 bytes @ 0x4
   908                           
   909                           
   910                           ; 4 bytes @ 0x4
   911  0004'                    	ds	1
   912  0005'                    ??_setDisplayFillingMode:
   913                           
   914                           ; 1 bytes @ 0x5
   915  0005'                    	ds	1
   916  0006'                    my_setAddrWindow_Hard@x_finish:
   917  0006'                    __Umul8_16@word_mpld:	
   918                           ; 2 bytes @ 0x6
   919                           
   920                           
   921                           ; 2 bytes @ 0x6
   922  0006'                    	ds	1
   923  0007'                    setDisplayFillingMode@hORv:
   924                           
   925                           ; 1 bytes @ 0x7
   926  0007'                    	ds	1
   927  0008'                    ??___flge:
   928  0008'                    ??___fldiv:	
   929                           ; 1 bytes @ 0x8
   930                           
   931  0008'                    setDisplayFillingMode@madctl:	
   932                           ; 1 bytes @ 0x8
   933                           
   934  0008'                    ___fltol@sign1:	
   935                           ; 1 bytes @ 0x8
   936                           
   937  0008'                    __Umul8_16@multiplier:	
   938                           ; 1 bytes @ 0x8
   939                           
   940  0008'                    my_setAddrWindow_Hard@y_finish:	
   941                           ; 1 bytes @ 0x8
   942                           
   943                           
   944                           ; 2 bytes @ 0x8
   945  0008'                    	ds	1
   946  0009'                    ___fltol@exp1:
   947                           
   948                           ; 1 bytes @ 0x9
   949  0009'                    	ds	1
   950  000A'                    ??_my_setAddrWindow_Hard:
   951  000A'                    ?_setAllDisplayPixels_Hard:	
   952                           ; 1 bytes @ 0xA
   953                           
   954  000A'                    ?_drawFastHLine_Hard:	
   955                           ; 1 bytes @ 0xA
   956                           
   957  000A'                    ?_my_floor:	
   958                           ; 1 bytes @ 0xA
   959                           
   960  000A'                    ?___xxtofl:	
   961                           ; 2 bytes @ 0xA
   962                           
   963  000A'                    drawFastHLine_Hard@length:	
   964                           ; 4 bytes @ 0xA
   965                           
   966  000A'                    setAllDisplayPixels_Hard@color:	
   967                           ; 1 bytes @ 0xA
   968                           
   969  000A'                    my_floor@f:	
   970                           ; 2 bytes @ 0xA
   971                           
   972  000A'                    ___xxtofl@val:	
   973                           ; 4 bytes @ 0xA
   974                           
   975                           
   976                           ; 4 bytes @ 0xA
   977  000A'                    	ds	1
   978  000B'                    drawFastHLine_Hard@in_HLine_y:
   979                           
   980                           ; 1 bytes @ 0xB
   981  000B'                    	ds	1
   982  000C'                    ??_setAllDisplayPixels_Hard:
   983  000C'                    drawFastHLine_Hard@color:	
   984                           ; 1 bytes @ 0xC
   985                           
   986                           
   987                           ; 2 bytes @ 0xC
   988  000C'                    	ds	2
   989  000E'                    ??_pow:
   990  000E'                    ??_exp:	
   991                           ; 1 bytes @ 0xE
   992                           
   993  000E'                    ??_log:	
   994                           ; 1 bytes @ 0xE
   995                           
   996  000E'                    ??_floor:	
   997                           ; 1 bytes @ 0xE
   998                           
   999  000E'                    ??_vector_length:	
  1000                           ; 1 bytes @ 0xE
  1001                           
  1002  000E'                    ??_normalized:	
  1003                           ; 1 bytes @ 0xE
  1004                           
  1005  000E'                    ??_my_floor:	
  1006                           ; 1 bytes @ 0xE
  1007                           
  1008  000E'                    ??___flsub:	
  1009                           ; 1 bytes @ 0xE
  1010                           
  1011                           
  1012                           	psect	cstackBANK0
  1013  0000'                    __pcstackBANK0:	
  1014                           ; 1 bytes @ 0xE
  1015                           
  1016  0000'                    ??_drawFastHLine_Hard:
  1017  0000'                    ??___xxtofl:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0000'                    setAllDisplayPixels_Hard@x:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0000'                    my_floor@n:	
  1024                           ; 2 bytes @ 0x0
  1025                           
  1026  0000'                    ___fldiv@rem:	
  1027                           ; 2 bytes @ 0x0
  1028                           
  1029                           
  1030                           ; 4 bytes @ 0x0
  1031  0000'                    	ds	2
  1032  0002'                    setAllDisplayPixels_Hard@y:
  1033                           
  1034                           ; 2 bytes @ 0x2
  1035  0002'                    	ds	1
  1036  0003'                    drawFastHLine_Hard@x2:
  1037                           
  1038                           ; 1 bytes @ 0x3
  1039  0003'                    	ds	1
  1040  0004'                    ___fldiv@sign:
  1041  0004'                    ___xxtofl@sign:	
  1042                           ; 1 bytes @ 0x4
  1043                           
  1044  0004'                    drawFastHLine_Hard@x_colum_horizontal:	
  1045                           ; 1 bytes @ 0x4
  1046                           
  1047                           
  1048                           ; 2 bytes @ 0x4
  1049  0004'                    	ds	1
  1050  0005'                    ___xxtofl@exp:
  1051  0005'                    ___fldiv@new_exp:	
  1052                           ; 1 bytes @ 0x5
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0x5
  1056  0005'                    	ds	1
  1057  0006'                    drawFastHLine_Hard@start_x:
  1058  0006'                    ___xxtofl@arg:	
  1059                           ; 1 bytes @ 0x6
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x6
  1063  0006'                    	ds	1
  1064  0007'                    ___fldiv@grs:
  1065                           
  1066                           ; 4 bytes @ 0x7
  1067  0007'                    	ds	3
  1068  000A'                    ?___fleq:
  1069  000A'                    ___fleq@ff1:	
  1070                           ; 1 bit 
  1071                           
  1072                           
  1073                           ; 4 bytes @ 0xA
  1074  000A'                    	ds	1
  1075  000B'                    ___fldiv@bexp:
  1076                           
  1077                           ; 1 bytes @ 0xB
  1078  000B'                    	ds	1
  1079  000C'                    ___fldiv@aexp:
  1080                           
  1081                           ; 1 bytes @ 0xC
  1082  000C'                    	ds	2
  1083  000E'                    ___fleq@ff2:
  1084                           
  1085                           ; 4 bytes @ 0xE
  1086  000E'                    	ds	4
  1087  0012'                    ??___fleq:
  1088                           
  1089                           ; 1 bytes @ 0x12
  1090  0012'                    	ds	4
  1091  0016'                    ?_frexp:
  1092  0016'                    frexp@value:	
  1093                           ; 4 bytes @ 0x16
  1094                           
  1095                           
  1096                           ; 4 bytes @ 0x16
  1097  0016'                    	ds	4
  1098  001A'                    frexp@eptr:
  1099                           
  1100                           ; 1 bytes @ 0x1A
  1101  001A'                    	ds	1
  1102  001B'                    ??_frexp:
  1103                           
  1104                           ; 1 bytes @ 0x1B
  1105  001B'                    	ds	2
  1106  001D'                    ?___flmul:
  1107  001D'                    ___flmul@b:	
  1108                           ; 4 bytes @ 0x1D
  1109                           
  1110                           
  1111                           ; 4 bytes @ 0x1D
  1112  001D'                    	ds	4
  1113  0021'                    ___flmul@a:
  1114                           
  1115                           ; 4 bytes @ 0x21
  1116  0021'                    	ds	4
  1117  0025'                    ??___flmul:
  1118                           
  1119                           ; 1 bytes @ 0x25
  1120  0025'                    	ds	5
  1121  002A'                    ___flmul@sign:
  1122                           
  1123                           ; 1 bytes @ 0x2A
  1124  002A'                    	ds	1
  1125  002B'                    ___flmul@aexp:
  1126                           
  1127                           ; 1 bytes @ 0x2B
  1128  002B'                    	ds	1
  1129  002C'                    ___flmul@grs:
  1130                           
  1131                           ; 4 bytes @ 0x2C
  1132  002C'                    	ds	4
  1133  0030'                    ___flmul@bexp:
  1134                           
  1135                           ; 1 bytes @ 0x30
  1136  0030'                    	ds	1
  1137  0031'                    ___flmul@prod:
  1138                           
  1139                           ; 4 bytes @ 0x31
  1140  0031'                    	ds	4
  1141  0035'                    ___flmul@temp:
  1142                           
  1143                           ; 2 bytes @ 0x35
  1144  0035'                    	ds	2
  1145  0037'                    ?___fladd:
  1146  0037'                    ___fladd@b:	
  1147                           ; 4 bytes @ 0x37
  1148                           
  1149                           
  1150                           ; 4 bytes @ 0x37
  1151  0037'                    	ds	4
  1152  003B'                    ___fladd@a:
  1153                           
  1154                           ; 4 bytes @ 0x3B
  1155  003B'                    	ds	4
  1156  003F'                    ??___fladd:
  1157                           
  1158                           ; 1 bytes @ 0x3F
  1159  003F'                    	ds	8
  1160  0047'                    ___fladd@signs:
  1161                           
  1162                           ; 1 bytes @ 0x47
  1163  0047'                    	ds	1
  1164  0048'                    ___fladd@aexp:
  1165                           
  1166                           ; 1 bytes @ 0x48
  1167  0048'                    	ds	1
  1168  0049'                    ___fladd@bexp:
  1169                           
  1170                           ; 1 bytes @ 0x49
  1171  0049'                    	ds	1
  1172  004A'                    ___fladd@grs:
  1173                           
  1174                           ; 1 bytes @ 0x4A
  1175  004A'                    	ds	1
  1176  004B'                    ??_eval_poly:
  1177  004B'                    ?_floor:	
  1178                           ; 1 bytes @ 0x4B
  1179                           
  1180  004B'                    floor@x:	
  1181                           ; 4 bytes @ 0x4B
  1182                           
  1183                           
  1184                           ; 4 bytes @ 0x4B
  1185  004B'                    	ds	5
  1186                           
  1187                           	psect	maintext
  1188  0000'                    __pmaintext:	
  1189 ;;
  1190 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1191 ;;
  1192 ;; *************** function _main *****************
  1193 ;; Defined at:
  1194 ;;		line 856 in file "main.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;		None
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : B00/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1208 ;;      Params:         0       0       0       0
  1209 ;;      Locals:         0       0       0       0
  1210 ;;      Temps:          0       0       0       3
  1211 ;;      Totals:         0       0       0       3
  1212 ;;Total ram usage:        3 bytes
  1213 ;; Hardware stack levels required when called: 8
  1214 ;; This function calls:
  1215 ;;		_drawFastHLine_Hard
  1216 ;;		_init_Hardwear_SPI
  1217 ;;		_init_Softwear_SPI
  1218 ;;		_sendCommand
  1219 ;;		_sendCommand_Hard
  1220 ;;		_setAllDisplayPixels_Hard
  1221 ;;		_setDisplayFillingMode
  1222 ;;		_updateANDset_ball_position
  1223 ;;		_update_ball_direction
  1224 ;; This function is called by:
  1225 ;;		Startup code after reset
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229  0000'                    _main:	
  1230                           ;psect for function _main
  1231                           
  1232  0000'                    l4831:	
  1233                           ;incstack = 0
  1234                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1235                           
  1236                           
  1237                           ;main.c: 857:     init_Softwear_SPI();
  1238  0000' 118A' 2000' 118A'  	fcall	_init_Softwear_SPI
  1239  0003'                    l4833:
  1240                           
  1241                           ;main.c: 858:     sendCommand(0xAF);
  1242  0003' 30AF               	movlw	175
  1243  0004' 118A' 2000' 118A'  	fcall	_sendCommand
  1244  0007'                    l4835:
  1245                           
  1246                           ;main.c: 860:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1247  0007' 301A               	movlw	26
  1248  0008' 1283               	bcf	3,5	;RP0=0, select bank2
  1249  0009' 1703               	bsf	3,6	;RP1=1, select bank2
  1250  000A' 0082'              	movwf	(??_main^(0+256)+2)
  1251  000B' 305E               	movlw	94
  1252  000C' 0081'              	movwf	(??_main^(0+256)+1)
  1253  000D' 306E               	movlw	110
  1254  000E' 0080'              	movwf	??_main^(0+256)
  1255  000F'                    u6887:
  1256  000F' 0B80'              	decfsz	??_main^(0+256),f
  1257  0010' 2800'              	goto	u6887
  1258  0011' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1259  0012' 2800'              	goto	u6887
  1260  0013' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1261  0014' 2800'              	goto	u6887
  1262  0015'                    l4837:
  1263                           
  1264                           ;main.c: 861:     setDisplayFillingMode(1);
  1265  0015' 3001               	movlw	1
  1266  0016' 118A' 2000' 118A'  	fcall	_setDisplayFillingMode
  1267  0019'                    l4839:
  1268                           
  1269                           ;main.c: 871:     init_Hardwear_SPI();
  1270  0019' 118A' 2000' 118A'  	fcall	_init_Hardwear_SPI
  1271  001C'                    l4841:
  1272                           
  1273                           ;main.c: 872:     sendCommand_Hard(0xAE);
  1274  001C' 30AE               	movlw	174
  1275  001D' 118A' 2000' 118A'  	fcall	_sendCommand_Hard
  1276  0020'                    l4843:
  1277                           
  1278                           ;main.c: 873:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1279  0020' 300D               	movlw	13
  1280  0021' 1283               	bcf	3,5	;RP0=0, select bank2
  1281  0022' 1703               	bsf	3,6	;RP1=1, select bank2
  1282  0023' 0082'              	movwf	(??_main^(0+256)+2)
  1283  0024' 30AF               	movlw	175
  1284  0025' 0081'              	movwf	(??_main^(0+256)+1)
  1285  0026' 30B6               	movlw	182
  1286  0027' 0080'              	movwf	??_main^(0+256)
  1287  0028'                    u6897:
  1288  0028' 0B80'              	decfsz	??_main^(0+256),f
  1289  0029' 2800'              	goto	u6897
  1290  002A' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1291  002B' 2800'              	goto	u6897
  1292  002C' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1293  002D' 2800'              	goto	u6897
  1294  002E'                    l4845:
  1295                           
  1296                           ;main.c: 874:     sendCommand_Hard(0xAF);
  1297  002E' 30AF               	movlw	175
  1298  002F' 118A' 2000' 118A'  	fcall	_sendCommand_Hard
  1299  0032'                    l4847:
  1300                           
  1301                           ;main.c: 875:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1302  0032' 300D               	movlw	13
  1303  0033' 1283               	bcf	3,5	;RP0=0, select bank2
  1304  0034' 1703               	bsf	3,6	;RP1=1, select bank2
  1305  0035' 0082'              	movwf	(??_main^(0+256)+2)
  1306  0036' 30AF               	movlw	175
  1307  0037' 0081'              	movwf	(??_main^(0+256)+1)
  1308  0038' 30B6               	movlw	182
  1309  0039' 0080'              	movwf	??_main^(0+256)
  1310  003A'                    u6907:
  1311  003A' 0B80'              	decfsz	??_main^(0+256),f
  1312  003B' 2800'              	goto	u6907
  1313  003C' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1314  003D' 2800'              	goto	u6907
  1315  003E' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1316  003F' 2800'              	goto	u6907
  1317  0040'                    l4849:
  1318                           
  1319                           ;main.c: 902:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1320  0040' 300D               	movlw	13
  1321  0041' 1283               	bcf	3,5	;RP0=0, select bank2
  1322  0042' 1703               	bsf	3,6	;RP1=1, select bank2
  1323  0043' 0082'              	movwf	(??_main^(0+256)+2)
  1324  0044' 30AF               	movlw	175
  1325  0045' 0081'              	movwf	(??_main^(0+256)+1)
  1326  0046' 30B6               	movlw	182
  1327  0047' 0080'              	movwf	??_main^(0+256)
  1328  0048'                    u6917:
  1329  0048' 0B80'              	decfsz	??_main^(0+256),f
  1330  0049' 2800'              	goto	u6917
  1331  004A' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1332  004B' 2800'              	goto	u6917
  1333  004C' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1334  004D' 2800'              	goto	u6917
  1335  004E'                    l4851:
  1336                           
  1337                           ;main.c: 903:     setAllDisplayPixels_Hard(0x0000);
  1338  004E' 3000               	movlw	0
  1339  004F' 008A'              	movwf	setAllDisplayPixels_Hard@color
  1340  0050' 008B'              	movwf	setAllDisplayPixels_Hard@color+1
  1341  0051' 118A' 2000' 118A'  	fcall	_setAllDisplayPixels_Hard
  1342  0054'                    l4853:
  1343                           
  1344                           ;main.c: 906:         _delay((unsigned long)((100)*(20000000/4000.0)));
  1345  0054' 3003               	movlw	3
  1346  0055' 1283               	bcf	3,5	;RP0=0, select bank2
  1347  0056' 1703               	bsf	3,6	;RP1=1, select bank2
  1348  0057' 0082'              	movwf	(??_main^(0+256)+2)
  1349  0058' 308A               	movlw	138
  1350  0059' 0081'              	movwf	(??_main^(0+256)+1)
  1351  005A' 3055               	movlw	85
  1352  005B' 0080'              	movwf	??_main^(0+256)
  1353  005C'                    u6927:
  1354  005C' 0B80'              	decfsz	??_main^(0+256),f
  1355  005D' 2800'              	goto	u6927
  1356  005E' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1357  005F' 2800'              	goto	u6927
  1358  0060' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1359  0061' 2800'              	goto	u6927
  1360  0062' 0000               	nop
  1361  0063'                    l4855:
  1362                           
  1363                           ;main.c: 907:         update_ball_direction();
  1364  0063' 118A' 2000' 118A'  	fcall	_update_ball_direction
  1365  0066'                    l4857:
  1366                           
  1367                           ;main.c: 908:         updateANDset_ball_position();
  1368  0066' 118A' 2000' 118A'  	fcall	_updateANDset_ball_position
  1369                           
  1370                           ;main.c: 910:         drawFastHLine_Hard(ball_x_positions[1], 3, ball_y_positions[0], 0x
      +                          F800);
  1371  0069' 3003               	movlw	3
  1372  006A' 008A'              	movwf	drawFastHLine_Hard@length
  1373  006B' 1283               	bcf	3,5	;RP0=0, select bank2
  1374  006C' 1703               	bsf	3,6	;RP1=1, select bank2
  1375  006D' 0800'              	movf	_ball_y_positions^(0+256),w
  1376  006E' 008B'              	movwf	drawFastHLine_Hard@in_HLine_y
  1377  006F' 3000               	movlw	0
  1378  0070' 008C'              	movwf	drawFastHLine_Hard@color
  1379  0071' 30F8               	movlw	248
  1380  0072' 008D'              	movwf	drawFastHLine_Hard@color+1
  1381  0073' 0801'              	movf	(_ball_x_positions^(0+256)+1),w
  1382  0074' 118A' 2000' 118A'  	fcall	_drawFastHLine_Hard
  1383                           
  1384                           ;main.c: 911:         drawFastHLine_Hard(ball_x_positions[1], 3, ball_y_positions[1], 0x
      +                          F800);
  1385  0077' 3003               	movlw	3
  1386  0078' 008A'              	movwf	drawFastHLine_Hard@length
  1387  0079' 1283               	bcf	3,5	;RP0=0, select bank2
  1388  007A' 1703               	bsf	3,6	;RP1=1, select bank2
  1389  007B' 0801'              	movf	(_ball_y_positions^(0+256)+1),w
  1390  007C' 008B'              	movwf	drawFastHLine_Hard@in_HLine_y
  1391  007D' 3000               	movlw	0
  1392  007E' 008C'              	movwf	drawFastHLine_Hard@color
  1393  007F' 30F8               	movlw	248
  1394  0080' 008D'              	movwf	drawFastHLine_Hard@color+1
  1395  0081' 0801'              	movf	(_ball_x_positions^(0+256)+1),w
  1396  0082' 118A' 2000' 118A'  	fcall	_drawFastHLine_Hard
  1397                           
  1398                           ;main.c: 912:         drawFastHLine_Hard(ball_x_positions[1], 3, ball_y_positions[2], 0x
      +                          F800);
  1399  0085' 3003               	movlw	3
  1400  0086' 008A'              	movwf	drawFastHLine_Hard@length
  1401  0087' 1283               	bcf	3,5	;RP0=0, select bank2
  1402  0088' 1703               	bsf	3,6	;RP1=1, select bank2
  1403  0089' 0802'              	movf	(_ball_y_positions^(0+256)+2),w
  1404  008A' 008B'              	movwf	drawFastHLine_Hard@in_HLine_y
  1405  008B' 3000               	movlw	0
  1406  008C' 008C'              	movwf	drawFastHLine_Hard@color
  1407  008D' 30F8               	movlw	248
  1408  008E' 008D'              	movwf	drawFastHLine_Hard@color+1
  1409  008F' 0801'              	movf	(_ball_x_positions^(0+256)+1),w
  1410  0090' 118A' 2000' 118A'  	fcall	_drawFastHLine_Hard
  1411  0093' 2800'              	goto	l4853
  1412  0094' 118A' 2800'        	ljmp	start
  1413  0096'                    __end_of_main:
  1414                           
  1415                           	psect	text1
  1416  0000'                    __ptext1:	
  1417 ;; *************** function _updateANDset_ball_position *****************
  1418 ;; Defined at:
  1419 ;;		line 814 in file "main.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  change_in_y_    1   30[BANK2 ] unsigned char 
  1424 ;;  change_in_x_    1   29[BANK2 ] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1434 ;;      Params:         0       0       0       0
  1435 ;;      Locals:         0       0       0       2
  1436 ;;      Temps:          0       0       0       1
  1437 ;;      Totals:         0       0       0       3
  1438 ;;Total ram usage:        3 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 7
  1441 ;; This function calls:
  1442 ;;		_my_floor
  1443 ;;		_normalized
  1444 ;;		_update_ball_direction
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450  0000'                    _updateANDset_ball_position:	
  1451                           ;psect for function _updateANDset_ball_position
  1452                           
  1453  0000'                    l4813:	
  1454                           ;incstack = 0
  1455                           ; Regs used in _updateANDset_ball_position: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
  1456                           
  1457                           
  1458                           ;main.c: 816:     update_ball_direction();
  1459  0000' 118A' 2000' 118A'  	fcall	_update_ball_direction
  1460  0003'                    l4815:
  1461                           
  1462                           ;main.c: 819:     normalized(dx, dy);
  1463  0003' 3000               	movlw	0
  1464  0004' 1283               	bcf	3,5	;RP0=0, select bank2
  1465  0005' 1703               	bsf	3,6	;RP1=1, select bank2
  1466  0006' 0080'              	movwf	(normalized@x+3)^(0+256)
  1467  0007' 3000               	movlw	0
  1468  0008' 0080'              	movwf	(normalized@x+2)^(0+256)
  1469  0009' 3000               	movlw	0
  1470  000A' 0080'              	movwf	(normalized@x+1)^(0+256)
  1471  000B' 3000               	movlw	0
  1472  000C' 0080'              	movwf	normalized@x^(0+256)
  1473  000D' 3000               	movlw	0
  1474  000E' 0080'              	movwf	(normalized@y+3)^(0+256)
  1475  000F' 3000               	movlw	0
  1476  0010' 0080'              	movwf	(normalized@y+2)^(0+256)
  1477  0011' 3000               	movlw	0
  1478  0012' 0080'              	movwf	(normalized@y+1)^(0+256)
  1479  0013' 3000               	movlw	0
  1480  0014' 0080'              	movwf	normalized@y^(0+256)
  1481  0015' 118A' 2000' 118A'  	fcall	_normalized
  1482  0018'                    l4817:
  1483                           
  1484                           ;main.c: 820:     uint8_t change_in_x_position = (uint8_t)my_floor(normalized_dx);
  1485  0018' 1283               	bcf	3,5	;RP0=0, select bank2
  1486  0019' 1703               	bsf	3,6	;RP1=1, select bank2
  1487  001A' 0800'              	movf	(_normalized_dx+3)^(0+256),w
  1488  001B' 008D'              	movwf	my_floor@f+3
  1489  001C' 0800'              	movf	(_normalized_dx+2)^(0+256),w
  1490  001D' 008C'              	movwf	my_floor@f+2
  1491  001E' 0800'              	movf	(_normalized_dx+1)^(0+256),w
  1492  001F' 008B'              	movwf	my_floor@f+1
  1493  0020' 0800'              	movf	_normalized_dx^(0+256),w
  1494  0021' 008A'              	movwf	my_floor@f
  1495  0022' 118A' 2000' 118A'  	fcall	_my_floor
  1496  0025' 080A'              	movf	?_my_floor,w
  1497  0026' 1283               	bcf	3,5	;RP0=0, select bank2
  1498  0027' 1703               	bsf	3,6	;RP1=1, select bank2
  1499  0028' 0080'              	movwf	updateANDset_ball_position@change_in_x_position^(0+256)
  1500  0029'                    l4819:
  1501                           
  1502                           ;main.c: 821:     uint8_t change_in_y_position = (uint8_t)my_floor(normalized_dy);
  1503  0029' 0800'              	movf	(_normalized_dy+3)^(0+256),w
  1504  002A' 008D'              	movwf	my_floor@f+3
  1505  002B' 0800'              	movf	(_normalized_dy+2)^(0+256),w
  1506  002C' 008C'              	movwf	my_floor@f+2
  1507  002D' 0800'              	movf	(_normalized_dy+1)^(0+256),w
  1508  002E' 008B'              	movwf	my_floor@f+1
  1509  002F' 0800'              	movf	_normalized_dy^(0+256),w
  1510  0030' 008A'              	movwf	my_floor@f
  1511  0031' 118A' 2000' 118A'  	fcall	_my_floor
  1512  0034' 080A'              	movf	?_my_floor,w
  1513  0035' 1283               	bcf	3,5	;RP0=0, select bank2
  1514  0036' 1703               	bsf	3,6	;RP1=1, select bank2
  1515  0037' 0080'              	movwf	updateANDset_ball_position@change_in_y_position^(0+256)
  1516  0038'                    l4821:
  1517                           
  1518                           ;main.c: 824:     if(ball_x_direction == 1) {
  1519  0038' 0300'              	decf	_ball_x_direction^(0+256),w
  1520  0039' 1D03               	btfss	3,2
  1521  003A' 2800'              	goto	u6861
  1522  003B' 2800'              	goto	u6860
  1523  003C'                    u6861:
  1524  003C' 2800'              	goto	l269
  1525  003D'                    u6860:
  1526  003D'                    l4823:
  1527                           
  1528                           ;main.c: 825:         ball_x_position += change_in_x_position;
  1529  003D' 0800'              	movf	updateANDset_ball_position@change_in_x_position^(0+256),w
  1530  003E' 0080'              	movwf	??_updateANDset_ball_position^(0+256)
  1531  003F' 0800'              	movf	??_updateANDset_ball_position^(0+256),w
  1532  0040' 0780'              	addwf	_ball_x_position^(0+256),f
  1533                           
  1534                           ;main.c: 827:         ball_x_positions[0] = ball_x_positions[0] + change_in_x_position;
  1535  0041' 0800'              	movf	updateANDset_ball_position@change_in_x_position^(0+256),w
  1536  0042' 0700'              	addwf	_ball_x_positions^(0+256),w
  1537  0043' 0080'              	movwf	_ball_x_positions^(0+256)
  1538                           
  1539                           ;main.c: 828:         ball_x_positions[1] = ball_x_positions[1] + change_in_x_position;
  1540  0044' 0800'              	movf	updateANDset_ball_position@change_in_x_position^(0+256),w
  1541  0045' 0701'              	addwf	(_ball_x_positions^(0+256)+1),w
  1542  0046' 0081'              	movwf	(_ball_x_positions^(0+256)+1)
  1543                           
  1544                           ;main.c: 829:         ball_x_positions[2] = ball_x_positions[2] + change_in_x_position;
  1545  0047' 0800'              	movf	updateANDset_ball_position@change_in_x_position^(0+256),w
  1546  0048' 0702'              	addwf	(_ball_x_positions^(0+256)+2),w
  1547  0049' 0082'              	movwf	(_ball_x_positions^(0+256)+2)
  1548  004A'                    l269:	
  1549                           ;main.c: 830:     } else if(ball_x_direction == -1) {
  1550                           
  1551                           
  1552                           ;main.c: 838:     if(ball_y_direction == 1) {
  1553  004A' 0300'              	decf	_ball_y_direction^(0+256),w
  1554  004B' 1D03               	btfss	3,2
  1555  004C' 2800'              	goto	u6871
  1556  004D' 2800'              	goto	u6870
  1557  004E'                    u6871:
  1558  004E' 2800'              	goto	l274
  1559  004F'                    u6870:
  1560  004F'                    l4827:
  1561                           
  1562                           ;main.c: 839:         ball_y_position += change_in_y_position;
  1563  004F' 0800'              	movf	updateANDset_ball_position@change_in_y_position^(0+256),w
  1564  0050' 0080'              	movwf	??_updateANDset_ball_position^(0+256)
  1565  0051' 0800'              	movf	??_updateANDset_ball_position^(0+256),w
  1566  0052' 0780'              	addwf	_ball_y_position^(0+256),f
  1567                           
  1568                           ;main.c: 841:         ball_y_positions[0] = ball_y_positions[0] + change_in_y_position;
  1569  0053' 0800'              	movf	updateANDset_ball_position@change_in_y_position^(0+256),w
  1570  0054' 0700'              	addwf	_ball_y_positions^(0+256),w
  1571  0055' 0080'              	movwf	_ball_y_positions^(0+256)
  1572                           
  1573                           ;main.c: 842:         ball_y_positions[1] = ball_y_positions[1] + change_in_y_position;
  1574  0056' 0800'              	movf	updateANDset_ball_position@change_in_y_position^(0+256),w
  1575  0057' 0701'              	addwf	(_ball_y_positions^(0+256)+1),w
  1576  0058' 0081'              	movwf	(_ball_y_positions^(0+256)+1)
  1577                           
  1578                           ;main.c: 843:         ball_y_positions[2] = ball_y_positions[2] + change_in_y_position;
  1579  0059' 0800'              	movf	updateANDset_ball_position@change_in_y_position^(0+256),w
  1580  005A' 0702'              	addwf	(_ball_y_positions^(0+256)+2),w
  1581  005B' 0082'              	movwf	(_ball_y_positions^(0+256)+2)
  1582  005C'                    l274:	
  1583                           ;main.c: 844:     } else if(ball_y_direction == -1) {
  1584                           
  1585  005C' 0008               	return
  1586  005D'                    __end_of_updateANDset_ball_position:
  1587                           
  1588                           	psect	text2
  1589  0000'                    __ptext2:	
  1590 ;; *************** function _update_ball_direction *****************
  1591 ;; Defined at:
  1592 ;;		line 800 in file "main.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1606 ;;      Params:         0       0       0       0
  1607 ;;      Locals:         0       0       0       0
  1608 ;;      Temps:          0       0       0       0
  1609 ;;      Totals:         0       0       0       0
  1610 ;;Total ram usage:        0 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_updateANDset_ball_position
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620  0000'                    _update_ball_direction:	
  1621                           ;psect for function _update_ball_direction
  1622                           
  1623  0000'                    l3451:	
  1624                           ;incstack = 0
  1625                           ; Regs used in _update_ball_direction: [wreg+status,2+status,0]
  1626                           
  1627                           
  1628                           ;main.c: 802:     if(ball_x_direction == 1 && ball_x_position >= 123) {
  1629  0000' 1283               	bcf	3,5	;RP0=0, select bank2
  1630  0001' 1703               	bsf	3,6	;RP1=1, select bank2
  1631  0002' 0300'              	decf	_ball_x_direction^(0+256),w
  1632  0003' 1D03               	btfss	3,2
  1633  0004' 2800'              	goto	u4461
  1634  0005' 2800'              	goto	u4460
  1635  0006'                    u4461:
  1636  0006' 2800'              	goto	l3461
  1637  0007'                    u4460:
  1638  0007'                    l3453:
  1639  0007' 307B               	movlw	123
  1640  0008' 0200'              	subwf	_ball_x_position^(0+256),w
  1641  0009' 1C03               	skipc
  1642  000A' 2800'              	goto	u4471
  1643  000B' 2800'              	goto	u4470
  1644  000C'                    u4471:
  1645  000C' 2800'              	goto	l3461
  1646  000D'                    u4470:
  1647  000D'                    l3455:
  1648                           
  1649                           ;main.c: 803:         ball_x_direction = -1;
  1650  000D' 30FF               	movlw	255
  1651  000E' 0080'              	movwf	_ball_x_direction^(0+256)
  1652  000F'                    l3461:	
  1653                           ;main.c: 804:     } else if(ball_x_direction == -1 && ball_x_position <= 4) {
  1654                           
  1655                           
  1656                           ;main.c: 808:     if(ball_y_direction == 1 && ball_y_position >= 94) {
  1657  000F' 0300'              	decf	_ball_y_direction^(0+256),w
  1658  0010' 1D03               	btfss	3,2
  1659  0011' 2800'              	goto	u4481
  1660  0012' 2800'              	goto	u4480
  1661  0013'                    u4481:
  1662  0013' 2800'              	goto	l265
  1663  0014'                    u4480:
  1664  0014'                    l3463:
  1665  0014' 305E               	movlw	94
  1666  0015' 0200'              	subwf	_ball_y_position^(0+256),w
  1667  0016' 1C03               	skipc
  1668  0017' 2800'              	goto	u4491
  1669  0018' 2800'              	goto	u4490
  1670  0019'                    u4491:
  1671  0019' 2800'              	goto	l265
  1672  001A'                    u4490:
  1673  001A'                    l3465:
  1674                           
  1675                           ;main.c: 809:         ball_y_direction = -1;
  1676  001A' 30FF               	movlw	255
  1677  001B' 0080'              	movwf	_ball_y_direction^(0+256)
  1678  001C'                    l265:	
  1679                           ;main.c: 810:     } else if(ball_y_direction == -1 && ball_y_position <= 2) {
  1680                           
  1681  001C' 0008               	return
  1682  001D'                    __end_of_update_ball_direction:
  1683                           
  1684                           	psect	text3
  1685  0000'                    __ptext3:	
  1686 ;; *************** function _normalized *****************
  1687 ;; Defined at:
  1688 ;;		line 781 in file "main.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  x               4   16[BANK2 ] float 
  1691 ;;  y               4   20[BANK2 ] float 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  length          4   24[BANK2 ] float 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1703 ;;      Params:         0       0       0       8
  1704 ;;      Locals:         0       0       0       4
  1705 ;;      Temps:          0       0       0       0
  1706 ;;      Totals:         0       0       0      12
  1707 ;;Total ram usage:       12 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; Hardware stack levels required when called: 6
  1710 ;; This function calls:
  1711 ;;		___fldiv
  1712 ;;		_vector_length
  1713 ;; This function is called by:
  1714 ;;		_updateANDset_ball_position
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718  0000'                    _normalized:	
  1719                           ;psect for function _normalized
  1720                           
  1721  0000'                    l4801:	
  1722                           ;incstack = 0
  1723                           ; Regs used in _normalized: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1724                           
  1725                           
  1726                           ;main.c: 782:     float length = vector_length(x, y);
  1727  0000' 1283               	bcf	3,5	;RP0=0, select bank2
  1728  0001' 1703               	bsf	3,6	;RP1=1, select bank2
  1729  0002' 0800'              	movf	(normalized@x+3)^(0+256),w
  1730  0003' 0080'              	movwf	(vector_length@x+3)^(0+256)
  1731  0004' 0800'              	movf	(normalized@x+2)^(0+256),w
  1732  0005' 0080'              	movwf	(vector_length@x+2)^(0+256)
  1733  0006' 0800'              	movf	(normalized@x+1)^(0+256),w
  1734  0007' 0080'              	movwf	(vector_length@x+1)^(0+256)
  1735  0008' 0800'              	movf	normalized@x^(0+256),w
  1736  0009' 0080'              	movwf	vector_length@x^(0+256)
  1737  000A' 0800'              	movf	(normalized@y+3)^(0+256),w
  1738  000B' 0080'              	movwf	(vector_length@y+3)^(0+256)
  1739  000C' 0800'              	movf	(normalized@y+2)^(0+256),w
  1740  000D' 0080'              	movwf	(vector_length@y+2)^(0+256)
  1741  000E' 0800'              	movf	(normalized@y+1)^(0+256),w
  1742  000F' 0080'              	movwf	(vector_length@y+1)^(0+256)
  1743  0010' 0800'              	movf	normalized@y^(0+256),w
  1744  0011' 0080'              	movwf	vector_length@y^(0+256)
  1745  0012' 118A' 2000' 118A'  	fcall	_vector_length
  1746  0015' 1283               	bcf	3,5	;RP0=0, select bank2
  1747  0016' 1703               	bsf	3,6	;RP1=1, select bank2
  1748  0017' 0800'              	movf	(?_vector_length+3)^(0+256),w
  1749  0018' 0080'              	movwf	(normalized@length+3)^(0+256)
  1750  0019' 0800'              	movf	(?_vector_length+2)^(0+256),w
  1751  001A' 0080'              	movwf	(normalized@length+2)^(0+256)
  1752  001B' 0800'              	movf	(?_vector_length+1)^(0+256),w
  1753  001C' 0080'              	movwf	(normalized@length+1)^(0+256)
  1754  001D' 0800'              	movf	?_vector_length^(0+256),w
  1755  001E' 0080'              	movwf	normalized@length^(0+256)
  1756  001F'                    l4803:
  1757                           
  1758                           ;main.c: 784:     normalized_dx = dx / length;
  1759  001F' 0800'              	movf	(normalized@length+3)^(0+256),w
  1760  0020' 0083'              	movwf	___fldiv@a+3
  1761  0021' 0800'              	movf	(normalized@length+2)^(0+256),w
  1762  0022' 0082'              	movwf	___fldiv@a+2
  1763  0023' 0800'              	movf	(normalized@length+1)^(0+256),w
  1764  0024' 0081'              	movwf	___fldiv@a+1
  1765  0025' 0800'              	movf	normalized@length^(0+256),w
  1766  0026' 0080'              	movwf	___fldiv@a
  1767  0027' 3000               	movlw	0
  1768  0028' 0087'              	movwf	___fldiv@b+3
  1769  0029' 3000               	movlw	0
  1770  002A' 0086'              	movwf	___fldiv@b+2
  1771  002B' 3000               	movlw	0
  1772  002C' 0085'              	movwf	___fldiv@b+1
  1773  002D' 3000               	movlw	0
  1774  002E' 0084'              	movwf	___fldiv@b
  1775  002F' 118A' 2000' 118A'  	fcall	___fldiv
  1776  0032' 0803'              	movf	?___fldiv+3,w
  1777  0033' 1283               	bcf	3,5	;RP0=0, select bank2
  1778  0034' 1703               	bsf	3,6	;RP1=1, select bank2
  1779  0035' 0080'              	movwf	(_normalized_dx+3)^(0+256)
  1780  0036' 0802'              	movf	?___fldiv+2,w
  1781  0037' 0080'              	movwf	(_normalized_dx+2)^(0+256)
  1782  0038' 0801'              	movf	?___fldiv+1,w
  1783  0039' 0080'              	movwf	(_normalized_dx+1)^(0+256)
  1784  003A' 0800'              	movf	?___fldiv,w
  1785  003B' 0080'              	movwf	_normalized_dx^(0+256)
  1786  003C'                    l4805:
  1787                           
  1788                           ;main.c: 785:     normalized_dy = dy / length;
  1789  003C' 0800'              	movf	(normalized@length+3)^(0+256),w
  1790  003D' 0083'              	movwf	___fldiv@a+3
  1791  003E' 0800'              	movf	(normalized@length+2)^(0+256),w
  1792  003F' 0082'              	movwf	___fldiv@a+2
  1793  0040' 0800'              	movf	(normalized@length+1)^(0+256),w
  1794  0041' 0081'              	movwf	___fldiv@a+1
  1795  0042' 0800'              	movf	normalized@length^(0+256),w
  1796  0043' 0080'              	movwf	___fldiv@a
  1797  0044' 3000               	movlw	0
  1798  0045' 0087'              	movwf	___fldiv@b+3
  1799  0046' 3000               	movlw	0
  1800  0047' 0086'              	movwf	___fldiv@b+2
  1801  0048' 3000               	movlw	0
  1802  0049' 0085'              	movwf	___fldiv@b+1
  1803  004A' 3000               	movlw	0
  1804  004B' 0084'              	movwf	___fldiv@b
  1805  004C' 118A' 2000' 118A'  	fcall	___fldiv
  1806  004F' 0803'              	movf	?___fldiv+3,w
  1807  0050' 1283               	bcf	3,5	;RP0=0, select bank2
  1808  0051' 1703               	bsf	3,6	;RP1=1, select bank2
  1809  0052' 0080'              	movwf	(_normalized_dy+3)^(0+256)
  1810  0053' 0802'              	movf	?___fldiv+2,w
  1811  0054' 0080'              	movwf	(_normalized_dy+2)^(0+256)
  1812  0055' 0801'              	movf	?___fldiv+1,w
  1813  0056' 0080'              	movwf	(_normalized_dy+1)^(0+256)
  1814  0057' 0800'              	movf	?___fldiv,w
  1815  0058' 0080'              	movwf	_normalized_dy^(0+256)
  1816  0059'                    l253:
  1817  0059' 0008               	return
  1818  005A'                    __end_of_normalized:
  1819                           
  1820                           	psect	text4
  1821  0000'                    __ptext4:	
  1822 ;; *************** function _vector_length *****************
  1823 ;; Defined at:
  1824 ;;		line 777 in file "main.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  x               4    0[BANK2 ] float 
  1827 ;;  y               4    4[BANK2 ] float 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  4    0[BANK2 ] float 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1839 ;;      Params:         0       0       0       8
  1840 ;;      Locals:         0       0       0       8
  1841 ;;      Temps:          0       0       0       0
  1842 ;;      Totals:         0       0       0      16
  1843 ;;Total ram usage:       16 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; Hardware stack levels required when called: 5
  1846 ;; This function calls:
  1847 ;;		___fladd
  1848 ;;		___flmul
  1849 ;;		_pow
  1850 ;;		_sqrt
  1851 ;; This function is called by:
  1852 ;;		_normalized
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856  0000'                    _vector_length:	
  1857                           ;psect for function _vector_length
  1858                           
  1859  0000'                    l4795:	
  1860                           ;incstack = 0
  1861                           ; Regs used in _vector_length: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1862                           
  1863                           
  1864                           ;main.c: 779:     return sqrt(pow(x, 2) + pow(y, 2) * 1.0);
  1865  0000' 3040               	movlw	64
  1866  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  1867  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  1868  0003' 0080'              	movwf	(pow@y+3)^(0+128)
  1869  0004' 3000               	movlw	0
  1870  0005' 0080'              	movwf	(pow@y+2)^(0+128)
  1871  0006' 3000               	movlw	0
  1872  0007' 0080'              	movwf	(pow@y+1)^(0+128)
  1873  0008' 3000               	movlw	0
  1874  0009' 0080'              	movwf	pow@y^(0+128)
  1875  000A' 1283               	bcf	3,5	;RP0=0, select bank2
  1876  000B' 1703               	bsf	3,6	;RP1=1, select bank2
  1877  000C' 0800'              	movf	(vector_length@y+3)^(0+256),w
  1878  000D' 1683               	bsf	3,5	;RP0=1, select bank1
  1879  000E' 1303               	bcf	3,6	;RP1=0, select bank1
  1880  000F' 0080'              	movwf	(pow@x+3)^(0+128)
  1881  0010' 1283               	bcf	3,5	;RP0=0, select bank2
  1882  0011' 1703               	bsf	3,6	;RP1=1, select bank2
  1883  0012' 0800'              	movf	(vector_length@y+2)^(0+256),w
  1884  0013' 1683               	bsf	3,5	;RP0=1, select bank1
  1885  0014' 1303               	bcf	3,6	;RP1=0, select bank1
  1886  0015' 0080'              	movwf	(pow@x+2)^(0+128)
  1887  0016' 1283               	bcf	3,5	;RP0=0, select bank2
  1888  0017' 1703               	bsf	3,6	;RP1=1, select bank2
  1889  0018' 0800'              	movf	(vector_length@y+1)^(0+256),w
  1890  0019' 1683               	bsf	3,5	;RP0=1, select bank1
  1891  001A' 1303               	bcf	3,6	;RP1=0, select bank1
  1892  001B' 0080'              	movwf	(pow@x+1)^(0+128)
  1893  001C' 1283               	bcf	3,5	;RP0=0, select bank2
  1894  001D' 1703               	bsf	3,6	;RP1=1, select bank2
  1895  001E' 0800'              	movf	vector_length@y^(0+256),w
  1896  001F' 1683               	bsf	3,5	;RP0=1, select bank1
  1897  0020' 1303               	bcf	3,6	;RP1=0, select bank1
  1898  0021' 0080'              	movwf	pow@x^(0+128)
  1899  0022' 118A' 2000' 118A'  	fcall	_pow
  1900  0025' 1683               	bsf	3,5	;RP0=1, select bank1
  1901  0026' 1303               	bcf	3,6	;RP1=0, select bank1
  1902  0027' 0800'              	movf	(?_pow+3)^(0+128),w
  1903  0028' 1283               	bcf	3,5	;RP0=0, select bank2
  1904  0029' 1703               	bsf	3,6	;RP1=1, select bank2
  1905  002A' 0080'              	movwf	(_vector_length$1244+3)^(0+256)
  1906  002B' 1683               	bsf	3,5	;RP0=1, select bank1
  1907  002C' 1303               	bcf	3,6	;RP1=0, select bank1
  1908  002D' 0800'              	movf	(?_pow+2)^(0+128),w
  1909  002E' 1283               	bcf	3,5	;RP0=0, select bank2
  1910  002F' 1703               	bsf	3,6	;RP1=1, select bank2
  1911  0030' 0080'              	movwf	(_vector_length$1244+2)^(0+256)
  1912  0031' 1683               	bsf	3,5	;RP0=1, select bank1
  1913  0032' 1303               	bcf	3,6	;RP1=0, select bank1
  1914  0033' 0800'              	movf	(?_pow+1)^(0+128),w
  1915  0034' 1283               	bcf	3,5	;RP0=0, select bank2
  1916  0035' 1703               	bsf	3,6	;RP1=1, select bank2
  1917  0036' 0080'              	movwf	(_vector_length$1244+1)^(0+256)
  1918  0037' 1683               	bsf	3,5	;RP0=1, select bank1
  1919  0038' 1303               	bcf	3,6	;RP1=0, select bank1
  1920  0039' 0800'              	movf	?_pow^(0+128),w
  1921  003A' 1283               	bcf	3,5	;RP0=0, select bank2
  1922  003B' 1703               	bsf	3,6	;RP1=1, select bank2
  1923  003C' 0080'              	movwf	_vector_length$1244^(0+256)
  1924                           
  1925                           ;main.c: 779:     return sqrt(pow(x, 2) + pow(y, 2) * 1.0);
  1926  003D' 3040               	movlw	64
  1927  003E' 1683               	bsf	3,5	;RP0=1, select bank1
  1928  003F' 1303               	bcf	3,6	;RP1=0, select bank1
  1929  0040' 0080'              	movwf	(pow@y+3)^(0+128)
  1930  0041' 3000               	movlw	0
  1931  0042' 0080'              	movwf	(pow@y+2)^(0+128)
  1932  0043' 3000               	movlw	0
  1933  0044' 0080'              	movwf	(pow@y+1)^(0+128)
  1934  0045' 3000               	movlw	0
  1935  0046' 0080'              	movwf	pow@y^(0+128)
  1936  0047' 1283               	bcf	3,5	;RP0=0, select bank2
  1937  0048' 1703               	bsf	3,6	;RP1=1, select bank2
  1938  0049' 0800'              	movf	(vector_length@x+3)^(0+256),w
  1939  004A' 1683               	bsf	3,5	;RP0=1, select bank1
  1940  004B' 1303               	bcf	3,6	;RP1=0, select bank1
  1941  004C' 0080'              	movwf	(pow@x+3)^(0+128)
  1942  004D' 1283               	bcf	3,5	;RP0=0, select bank2
  1943  004E' 1703               	bsf	3,6	;RP1=1, select bank2
  1944  004F' 0800'              	movf	(vector_length@x+2)^(0+256),w
  1945  0050' 1683               	bsf	3,5	;RP0=1, select bank1
  1946  0051' 1303               	bcf	3,6	;RP1=0, select bank1
  1947  0052' 0080'              	movwf	(pow@x+2)^(0+128)
  1948  0053' 1283               	bcf	3,5	;RP0=0, select bank2
  1949  0054' 1703               	bsf	3,6	;RP1=1, select bank2
  1950  0055' 0800'              	movf	(vector_length@x+1)^(0+256),w
  1951  0056' 1683               	bsf	3,5	;RP0=1, select bank1
  1952  0057' 1303               	bcf	3,6	;RP1=0, select bank1
  1953  0058' 0080'              	movwf	(pow@x+1)^(0+128)
  1954  0059' 1283               	bcf	3,5	;RP0=0, select bank2
  1955  005A' 1703               	bsf	3,6	;RP1=1, select bank2
  1956  005B' 0800'              	movf	vector_length@x^(0+256),w
  1957  005C' 1683               	bsf	3,5	;RP0=1, select bank1
  1958  005D' 1303               	bcf	3,6	;RP1=0, select bank1
  1959  005E' 0080'              	movwf	pow@x^(0+128)
  1960  005F' 118A' 2000' 118A'  	fcall	_pow
  1961  0062' 1683               	bsf	3,5	;RP0=1, select bank1
  1962  0063' 1303               	bcf	3,6	;RP1=0, select bank1
  1963  0064' 0800'              	movf	(?_pow+3)^(0+128),w
  1964  0065' 1283               	bcf	3,5	;RP0=0, select bank2
  1965  0066' 1703               	bsf	3,6	;RP1=1, select bank2
  1966  0067' 0080'              	movwf	(_vector_length$1245+3)^(0+256)
  1967  0068' 1683               	bsf	3,5	;RP0=1, select bank1
  1968  0069' 1303               	bcf	3,6	;RP1=0, select bank1
  1969  006A' 0800'              	movf	(?_pow+2)^(0+128),w
  1970  006B' 1283               	bcf	3,5	;RP0=0, select bank2
  1971  006C' 1703               	bsf	3,6	;RP1=1, select bank2
  1972  006D' 0080'              	movwf	(_vector_length$1245+2)^(0+256)
  1973  006E' 1683               	bsf	3,5	;RP0=1, select bank1
  1974  006F' 1303               	bcf	3,6	;RP1=0, select bank1
  1975  0070' 0800'              	movf	(?_pow+1)^(0+128),w
  1976  0071' 1283               	bcf	3,5	;RP0=0, select bank2
  1977  0072' 1703               	bsf	3,6	;RP1=1, select bank2
  1978  0073' 0080'              	movwf	(_vector_length$1245+1)^(0+256)
  1979  0074' 1683               	bsf	3,5	;RP0=1, select bank1
  1980  0075' 1303               	bcf	3,6	;RP1=0, select bank1
  1981  0076' 0800'              	movf	?_pow^(0+128),w
  1982  0077' 1283               	bcf	3,5	;RP0=0, select bank2
  1983  0078' 1703               	bsf	3,6	;RP1=1, select bank2
  1984  0079' 0080'              	movwf	_vector_length$1245^(0+256)
  1985  007A'                    l4797:
  1986                           
  1987                           ;main.c: 779:     return sqrt(pow(x, 2) + pow(y, 2) * 1.0);
  1988  007A' 303F               	movlw	63
  1989  007B' 1283               	bcf	3,5	;RP0=0, select bank0
  1990  007C' 1303               	bcf	3,6	;RP1=0, select bank0
  1991  007D' 00A0'              	movwf	___flmul@b+3
  1992  007E' 3080               	movlw	128
  1993  007F' 009F'              	movwf	___flmul@b+2
  1994  0080' 3000               	movlw	0
  1995  0081' 009E'              	movwf	___flmul@b+1
  1996  0082' 3000               	movlw	0
  1997  0083' 009D'              	movwf	___flmul@b
  1998  0084' 1283               	bcf	3,5	;RP0=0, select bank2
  1999  0085' 1703               	bsf	3,6	;RP1=1, select bank2
  2000  0086' 0800'              	movf	(_vector_length$1244+3)^(0+256),w
  2001  0087' 1283               	bcf	3,5	;RP0=0, select bank0
  2002  0088' 1303               	bcf	3,6	;RP1=0, select bank0
  2003  0089' 00A4'              	movwf	___flmul@a+3
  2004  008A' 1283               	bcf	3,5	;RP0=0, select bank2
  2005  008B' 1703               	bsf	3,6	;RP1=1, select bank2
  2006  008C' 0800'              	movf	(_vector_length$1244+2)^(0+256),w
  2007  008D' 1283               	bcf	3,5	;RP0=0, select bank0
  2008  008E' 1303               	bcf	3,6	;RP1=0, select bank0
  2009  008F' 00A3'              	movwf	___flmul@a+2
  2010  0090' 1283               	bcf	3,5	;RP0=0, select bank2
  2011  0091' 1703               	bsf	3,6	;RP1=1, select bank2
  2012  0092' 0800'              	movf	(_vector_length$1244+1)^(0+256),w
  2013  0093' 1283               	bcf	3,5	;RP0=0, select bank0
  2014  0094' 1303               	bcf	3,6	;RP1=0, select bank0
  2015  0095' 00A2'              	movwf	___flmul@a+1
  2016  0096' 1283               	bcf	3,5	;RP0=0, select bank2
  2017  0097' 1703               	bsf	3,6	;RP1=1, select bank2
  2018  0098' 0800'              	movf	_vector_length$1244^(0+256),w
  2019  0099' 1283               	bcf	3,5	;RP0=0, select bank0
  2020  009A' 1303               	bcf	3,6	;RP1=0, select bank0
  2021  009B' 00A1'              	movwf	___flmul@a
  2022  009C' 118A' 2000' 118A'  	fcall	___flmul
  2023  009F' 1283               	bcf	3,5	;RP0=0, select bank0
  2024  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
  2025  00A1' 0820'              	movf	?___flmul+3,w
  2026  00A2' 00BA'              	movwf	___fladd@b+3
  2027  00A3' 081F'              	movf	?___flmul+2,w
  2028  00A4' 00B9'              	movwf	___fladd@b+2
  2029  00A5' 081E'              	movf	?___flmul+1,w
  2030  00A6' 00B8'              	movwf	___fladd@b+1
  2031  00A7' 081D'              	movf	?___flmul,w
  2032  00A8' 00B7'              	movwf	___fladd@b
  2033  00A9' 1283               	bcf	3,5	;RP0=0, select bank2
  2034  00AA' 1703               	bsf	3,6	;RP1=1, select bank2
  2035  00AB' 0800'              	movf	(_vector_length$1245+3)^(0+256),w
  2036  00AC' 1283               	bcf	3,5	;RP0=0, select bank0
  2037  00AD' 1303               	bcf	3,6	;RP1=0, select bank0
  2038  00AE' 00BE'              	movwf	___fladd@a+3
  2039  00AF' 1283               	bcf	3,5	;RP0=0, select bank2
  2040  00B0' 1703               	bsf	3,6	;RP1=1, select bank2
  2041  00B1' 0800'              	movf	(_vector_length$1245+2)^(0+256),w
  2042  00B2' 1283               	bcf	3,5	;RP0=0, select bank0
  2043  00B3' 1303               	bcf	3,6	;RP1=0, select bank0
  2044  00B4' 00BD'              	movwf	___fladd@a+2
  2045  00B5' 1283               	bcf	3,5	;RP0=0, select bank2
  2046  00B6' 1703               	bsf	3,6	;RP1=1, select bank2
  2047  00B7' 0800'              	movf	(_vector_length$1245+1)^(0+256),w
  2048  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
  2049  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
  2050  00BA' 00BC'              	movwf	___fladd@a+1
  2051  00BB' 1283               	bcf	3,5	;RP0=0, select bank2
  2052  00BC' 1703               	bsf	3,6	;RP1=1, select bank2
  2053  00BD' 0800'              	movf	_vector_length$1245^(0+256),w
  2054  00BE' 1283               	bcf	3,5	;RP0=0, select bank0
  2055  00BF' 1303               	bcf	3,6	;RP1=0, select bank0
  2056  00C0' 00BB'              	movwf	___fladd@a
  2057  00C1' 118A' 2000' 118A'  	fcall	___fladd
  2058  00C4' 1283               	bcf	3,5	;RP0=0, select bank0
  2059  00C5' 1303               	bcf	3,6	;RP1=0, select bank0
  2060  00C6' 083A'              	movf	?___fladd+3,w
  2061  00C7' 1683               	bsf	3,5	;RP0=1, select bank1
  2062  00C8' 1303               	bcf	3,6	;RP1=0, select bank1
  2063  00C9' 0080'              	movwf	(sqrt@a+3)^(0+128)
  2064  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
  2065  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
  2066  00CC' 0839'              	movf	?___fladd+2,w
  2067  00CD' 1683               	bsf	3,5	;RP0=1, select bank1
  2068  00CE' 1303               	bcf	3,6	;RP1=0, select bank1
  2069  00CF' 0080'              	movwf	(sqrt@a+2)^(0+128)
  2070  00D0' 1283               	bcf	3,5	;RP0=0, select bank0
  2071  00D1' 1303               	bcf	3,6	;RP1=0, select bank0
  2072  00D2' 0838'              	movf	?___fladd+1,w
  2073  00D3' 1683               	bsf	3,5	;RP0=1, select bank1
  2074  00D4' 1303               	bcf	3,6	;RP1=0, select bank1
  2075  00D5' 0080'              	movwf	(sqrt@a+1)^(0+128)
  2076  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
  2077  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
  2078  00D8' 0837'              	movf	?___fladd,w
  2079  00D9' 1683               	bsf	3,5	;RP0=1, select bank1
  2080  00DA' 1303               	bcf	3,6	;RP1=0, select bank1
  2081  00DB' 0080'              	movwf	sqrt@a^(0+128)
  2082  00DC' 118A' 2000' 118A'  	fcall	_sqrt
  2083  00DF' 1683               	bsf	3,5	;RP0=1, select bank1
  2084  00E0' 1303               	bcf	3,6	;RP1=0, select bank1
  2085  00E1' 0800'              	movf	(?_sqrt+3)^(0+128),w
  2086  00E2' 1283               	bcf	3,5	;RP0=0, select bank2
  2087  00E3' 1703               	bsf	3,6	;RP1=1, select bank2
  2088  00E4' 0080'              	movwf	(?_vector_length+3)^(0+256)
  2089  00E5' 1683               	bsf	3,5	;RP0=1, select bank1
  2090  00E6' 1303               	bcf	3,6	;RP1=0, select bank1
  2091  00E7' 0800'              	movf	(?_sqrt+2)^(0+128),w
  2092  00E8' 1283               	bcf	3,5	;RP0=0, select bank2
  2093  00E9' 1703               	bsf	3,6	;RP1=1, select bank2
  2094  00EA' 0080'              	movwf	(?_vector_length+2)^(0+256)
  2095  00EB' 1683               	bsf	3,5	;RP0=1, select bank1
  2096  00EC' 1303               	bcf	3,6	;RP1=0, select bank1
  2097  00ED' 0800'              	movf	(?_sqrt+1)^(0+128),w
  2098  00EE' 1283               	bcf	3,5	;RP0=0, select bank2
  2099  00EF' 1703               	bsf	3,6	;RP1=1, select bank2
  2100  00F0' 0080'              	movwf	(?_vector_length+1)^(0+256)
  2101  00F1' 1683               	bsf	3,5	;RP0=1, select bank1
  2102  00F2' 1303               	bcf	3,6	;RP1=0, select bank1
  2103  00F3' 0800'              	movf	?_sqrt^(0+128),w
  2104  00F4' 1283               	bcf	3,5	;RP0=0, select bank2
  2105  00F5' 1703               	bsf	3,6	;RP1=1, select bank2
  2106  00F6' 0080'              	movwf	?_vector_length^(0+256)
  2107  00F7'                    l250:
  2108  00F7' 0008               	return
  2109  00F8'                    __end_of_vector_length:
  2110                           
  2111                           	psect	text5
  2112  0000'                    __ptext5:	
  2113 ;; *************** function _sqrt *****************
  2114 ;; Defined at:
  2115 ;;		line 9 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcsqrt.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  a               4   51[BANK1 ] float 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  frac            4   76[BANK1 ] unsigned long 
  2120 ;;  root            4   72[BANK1 ] struct .
  2121 ;;  grs             4   66[BANK1 ] unsigned long 
  2122 ;;  tfrac           4   61[BANK1 ] unsigned long 
  2123 ;;  exp             2   70[BANK1 ] int 
  2124 ;;  p               1   65[BANK1 ] unsigned char 
  2125 ;;  i               1   60[BANK1 ] unsigned char 
  2126 ;;  sign            1   59[BANK1 ] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  4   51[BANK1 ] unsigned char 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, btemp+1
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2136 ;;      Params:         0       0       4       0
  2137 ;;      Locals:         0       0      21       0
  2138 ;;      Temps:          0       0       4       0
  2139 ;;      Totals:         0       0      29       0
  2140 ;;Total ram usage:       29 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_vector_length
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149  0000'                    _sqrt:	
  2150                           ;psect for function _sqrt
  2151                           
  2152  0000'                    l4703:	
  2153                           ;incstack = 0
  2154                           ; Regs used in _sqrt: [wreg+status,2+status,0+btemp+1]
  2155                           
  2156  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2157  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2158  0002' 0803'              	movf	(sqrt@a^(0+128)+3),w
  2159  0003' 3980               	andlw	128
  2160  0004' 0080'              	movwf	sqrt@sign^(0+128)
  2161  0005'                    l4705:
  2162  0005' 0803'              	movf	(sqrt@a^(0+128)+3),w
  2163  0006' 0080'              	movwf	??_sqrt^(0+128)
  2164  0007' 0700'              	addwf	??_sqrt^(0+128),w
  2165  0008' 0080'              	movwf	sqrt@p^(0+128)
  2166  0009'                    l4707:
  2167  0009' 1F82'              	btfss	(sqrt@a^(0+128)+2),7
  2168  000A' 2800'              	goto	u6661
  2169  000B' 2800'              	goto	u6660
  2170  000C'                    u6661:
  2171  000C' 2800'              	goto	l4711
  2172  000D'                    u6660:
  2173  000D'                    l4709:
  2174  000D' 1400'              	bsf	sqrt@p^(0+128),0
  2175  000E'                    l4711:
  2176  000E' 0800'              	movf	sqrt@p^(0+128),w
  2177  000F' 0080'              	movwf	??_sqrt^(0+128)
  2178  0010' 0181'              	clrf	(??_sqrt^(0+128)+1)
  2179  0011' 0800'              	movf	??_sqrt^(0+128),w
  2180  0012' 0080'              	movwf	sqrt@exp^(0+128)
  2181  0013' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2182  0014' 0080'              	movwf	(sqrt@exp+1)^(0+128)
  2183  0015' 30FF               	movlw	255
  2184  0016' 0500'              	andwf	sqrt@a^(0+128),w
  2185  0017' 0080'              	movwf	sqrt@frac^(0+128)
  2186  0018' 30FF               	movlw	255
  2187  0019' 0500'              	andwf	(sqrt@a+1)^(0+128),w
  2188  001A' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2189  001B' 307F               	movlw	127
  2190  001C' 0500'              	andwf	(sqrt@a+2)^(0+128),w
  2191  001D' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2192  001E' 3000               	movlw	0
  2193  001F' 0500'              	andwf	(sqrt@a+3)^(0+128),w
  2194  0020' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2195  0021'                    l4713:
  2196  0021' 0800'              	movf	sqrt@exp^(0+128),w
  2197  0022' 0400'              	iorwf	(sqrt@exp+1)^(0+128),w
  2198  0023' 1903               	btfsc	3,2
  2199  0024' 2800'              	goto	u6671
  2200  0025' 2800'              	goto	u6670
  2201  0026'                    u6671:
  2202  0026' 2800'              	goto	l4719
  2203  0027'                    u6670:
  2204  0027'                    l4715:
  2205  0027' 1782'              	bsf	(sqrt@frac^(0+128)+2),7
  2206  0028'                    l4717:
  2207  0028' 0A00'              	incf	sqrt@exp^(0+128),w
  2208  0029' 0400'              	iorwf	(sqrt@exp+1)^(0+128),w
  2209  002A' 1D03               	btfss	3,2
  2210  002B' 2800'              	goto	u6681
  2211  002C' 2800'              	goto	u6680
  2212  002D'                    u6681:
  2213  002D' 2800'              	goto	l4723
  2214  002E'                    u6680:
  2215  002E'                    l4719:
  2216  002E' 3000               	movlw	0
  2217  002F' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2218  0030' 3000               	movlw	0
  2219  0031' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2220  0032' 3000               	movlw	0
  2221  0033' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2222  0034' 3000               	movlw	0
  2223  0035' 0080'              	movwf	sqrt@frac^(0+128)
  2224  0036'                    l4723:
  2225  0036' 0800'              	movf	sqrt@exp^(0+128),w
  2226  0037' 0400'              	iorwf	(sqrt@exp+1)^(0+128),w
  2227  0038' 1D03               	btfss	3,2
  2228  0039' 2800'              	goto	u6691
  2229  003A' 2800'              	goto	u6690
  2230  003B'                    u6691:
  2231  003B' 2800'              	goto	l4729
  2232  003C'                    u6690:
  2233  003C'                    l4725:
  2234  003C' 3000               	movlw	0
  2235  003D' 0080'              	movwf	(?_sqrt+3)^(0+128)
  2236  003E' 3000               	movlw	0
  2237  003F' 0080'              	movwf	(?_sqrt+2)^(0+128)
  2238  0040' 3000               	movlw	0
  2239  0041' 0080'              	movwf	(?_sqrt+1)^(0+128)
  2240  0042' 3000               	movlw	0
  2241  0043' 0080'              	movwf	?_sqrt^(0+128)
  2242  0044' 2800'              	goto	l788
  2243  0045'                    l4729:
  2244  0045' 0800'              	movf	sqrt@sign^(0+128),w
  2245  0046' 1903               	btfsc	3,2
  2246  0047' 2800'              	goto	u6701
  2247  0048' 2800'              	goto	u6700
  2248  0049'                    u6701:
  2249  0049' 2800'              	goto	l4735
  2250  004A'                    u6700:
  2251  004A'                    l4731:
  2252  004A' 3000               	movlw	0
  2253  004B' 0080'              	movwf	(sqrt@root+3)^(0+128)
  2254  004C' 3040               	movlw	64
  2255  004D' 0080'              	movwf	(sqrt@root+2)^(0+128)
  2256  004E' 3000               	movlw	0
  2257  004F' 0080'              	movwf	(sqrt@root+1)^(0+128)
  2258  0050' 3000               	movlw	0
  2259  0051' 0080'              	movwf	sqrt@root^(0+128)
  2260  0052' 3080               	movlw	128
  2261  0053' 0482'              	iorwf	(sqrt@root^(0+128)+2),f
  2262  0054' 30FF               	movlw	255
  2263  0055' 0482'              	iorwf	((sqrt@root+1)^(0+128)+2),f
  2264  0056' 3021               	movlw	33
  2265  0057' 1283               	bcf	3,5	;RP0=0, select bank2
  2266  0058' 1703               	bsf	3,6	;RP1=1, select bank2
  2267  0059' 0080'              	movwf	_errno^(0+256)
  2268  005A' 3000               	movlw	0
  2269  005B' 0081'              	movwf	(_errno^(0+256)+1)
  2270  005C' 1683               	bsf	3,5	;RP0=1, select bank1
  2271  005D' 1303               	bcf	3,6	;RP1=0, select bank1
  2272  005E' 0800'              	movf	(sqrt@root+3)^(0+128),w
  2273  005F' 0080'              	movwf	(?_sqrt+3)^(0+128)
  2274  0060' 0800'              	movf	(sqrt@root+2)^(0+128),w
  2275  0061' 0080'              	movwf	(?_sqrt+2)^(0+128)
  2276  0062' 0800'              	movf	(sqrt@root+1)^(0+128),w
  2277  0063' 0080'              	movwf	(?_sqrt+1)^(0+128)
  2278  0064' 0800'              	movf	sqrt@root^(0+128),w
  2279  0065' 0080'              	movwf	?_sqrt^(0+128)
  2280  0066' 2800'              	goto	l788
  2281  0067'                    l4735:
  2282  0067' 0A00'              	incf	sqrt@exp^(0+128),w
  2283  0068' 0400'              	iorwf	(sqrt@exp+1)^(0+128),w
  2284  0069' 1D03               	btfss	3,2
  2285  006A' 2800'              	goto	u6711
  2286  006B' 2800'              	goto	u6710
  2287  006C'                    u6711:
  2288  006C' 2800'              	goto	l4741
  2289  006D'                    u6710:
  2290  006D'                    l4737:
  2291  006D' 307F               	movlw	127
  2292  006E' 0080'              	movwf	(sqrt@root+3)^(0+128)
  2293  006F' 3080               	movlw	128
  2294  0070' 0080'              	movwf	(sqrt@root+2)^(0+128)
  2295  0071' 3000               	movlw	0
  2296  0072' 0080'              	movwf	(sqrt@root+1)^(0+128)
  2297  0073' 3000               	movlw	0
  2298  0074' 0080'              	movwf	sqrt@root^(0+128)
  2299  0075' 0800'              	movf	(sqrt@root+3)^(0+128),w
  2300  0076' 0080'              	movwf	(?_sqrt+3)^(0+128)
  2301  0077' 0800'              	movf	(sqrt@root+2)^(0+128),w
  2302  0078' 0080'              	movwf	(?_sqrt+2)^(0+128)
  2303  0079' 0800'              	movf	(sqrt@root+1)^(0+128),w
  2304  007A' 0080'              	movwf	(?_sqrt+1)^(0+128)
  2305  007B' 0800'              	movf	sqrt@root^(0+128),w
  2306  007C' 0080'              	movwf	?_sqrt^(0+128)
  2307  007D' 2800'              	goto	l788
  2308  007E'                    l4741:
  2309  007E' 3081               	movlw	129
  2310  007F' 0780'              	addwf	sqrt@exp^(0+128),f
  2311  0080' 1803               	skipnc
  2312  0081' 0A80'              	incf	(sqrt@exp+1)^(0+128),f
  2313  0082' 30FF               	movlw	255
  2314  0083' 0780'              	addwf	(sqrt@exp+1)^(0+128),f
  2315  0084'                    l4743:
  2316  0084' 0800'              	movf	sqrt@exp^(0+128),w
  2317  0085' 3901               	andlw	1
  2318  0086' 0080'              	movwf	sqrt@p^(0+128)
  2319  0087'                    l4745:
  2320  0087' 3001               	movlw	1
  2321  0088' 00FF               	movwf	btemp+1
  2322  0089'                    u6725:
  2323  0089' 0D00'              	rlf	(sqrt@exp+1)^(0+128),w
  2324  008A' 0C80'              	rrf	(sqrt@exp+1)^(0+128),f
  2325  008B' 0C80'              	rrf	sqrt@exp^(0+128),f
  2326  008C' 0BFF               	decfsz	btemp+1,f
  2327  008D' 2800'              	goto	u6725
  2328  008E'                    l4747:
  2329  008E' 307F               	movlw	127
  2330  008F' 0780'              	addwf	sqrt@exp^(0+128),f
  2331  0090' 1803               	skipnc
  2332  0091' 0A80'              	incf	(sqrt@exp+1)^(0+128),f
  2333  0092' 3000               	movlw	0
  2334  0093' 0780'              	addwf	(sqrt@exp+1)^(0+128),f
  2335  0094'                    l4749:
  2336  0094' 1003               	clrc
  2337  0095' 0D00'              	rlf	sqrt@frac^(0+128),w
  2338  0096' 0080'              	movwf	sqrt@tfrac^(0+128)
  2339  0097' 0D00'              	rlf	(sqrt@frac+1)^(0+128),w
  2340  0098' 0080'              	movwf	(sqrt@tfrac+1)^(0+128)
  2341  0099' 0D00'              	rlf	(sqrt@frac+2)^(0+128),w
  2342  009A' 0080'              	movwf	(sqrt@tfrac+2)^(0+128)
  2343  009B' 0D00'              	rlf	(sqrt@frac+3)^(0+128),w
  2344  009C' 0080'              	movwf	(sqrt@tfrac+3)^(0+128)
  2345  009D'                    l4751:
  2346  009D' 3000               	movlw	0
  2347  009E' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2348  009F' 3000               	movlw	0
  2349  00A0' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2350  00A1' 3000               	movlw	0
  2351  00A2' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2352  00A3' 3000               	movlw	0
  2353  00A4' 0080'              	movwf	sqrt@frac^(0+128)
  2354  00A5'                    l4753:
  2355  00A5' 3001               	movlw	1
  2356  00A6' 0080'              	movwf	(sqrt@grs+3)^(0+128)
  2357  00A7' 3000               	movlw	0
  2358  00A8' 0080'              	movwf	(sqrt@grs+2)^(0+128)
  2359  00A9' 3000               	movlw	0
  2360  00AA' 0080'              	movwf	(sqrt@grs+1)^(0+128)
  2361  00AB' 3000               	movlw	0
  2362  00AC' 0080'              	movwf	sqrt@grs^(0+128)
  2363  00AD'                    l4755:
  2364  00AD' 0800'              	movf	sqrt@p^(0+128),w
  2365  00AE' 1903               	btfsc	3,2
  2366  00AF' 2800'              	goto	u6731
  2367  00B0' 2800'              	goto	u6730
  2368  00B1'                    u6731:
  2369  00B1' 2800'              	goto	l4759
  2370  00B2'                    u6730:
  2371  00B2'                    l4757:
  2372  00B2' 3001               	movlw	1
  2373  00B3' 0080'              	movwf	??_sqrt^(0+128)
  2374  00B4'                    u6745:
  2375  00B4' 1003               	clrc
  2376  00B5' 0D80'              	rlf	sqrt@tfrac^(0+128),f
  2377  00B6' 0D80'              	rlf	(sqrt@tfrac+1)^(0+128),f
  2378  00B7' 0D80'              	rlf	(sqrt@tfrac+2)^(0+128),f
  2379  00B8' 0D80'              	rlf	(sqrt@tfrac+3)^(0+128),f
  2380  00B9' 0B80'              	decfsz	??_sqrt^(0+128),f
  2381  00BA' 2800'              	goto	u6745
  2382  00BB'                    l4759:
  2383  00BB' 0180'              	clrf	sqrt@i^(0+128)
  2384  00BC' 2800'              	goto	l4767
  2385  00BD'                    l4761:
  2386  00BD' 0800'              	movf	sqrt@grs^(0+128),w
  2387  00BE' 0480'              	iorwf	sqrt@frac^(0+128),f
  2388  00BF' 0800'              	movf	(sqrt@grs+1)^(0+128),w
  2389  00C0' 0480'              	iorwf	(sqrt@frac+1)^(0+128),f
  2390  00C1' 0800'              	movf	(sqrt@grs+2)^(0+128),w
  2391  00C2' 0480'              	iorwf	(sqrt@frac+2)^(0+128),f
  2392  00C3' 0800'              	movf	(sqrt@grs+3)^(0+128),w
  2393  00C4' 0480'              	iorwf	(sqrt@frac+3)^(0+128),f
  2394  00C5' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2395  00C6' 0200'              	subwf	(sqrt@tfrac+3)^(0+128),w
  2396  00C7' 1D03               	skipz
  2397  00C8' 2800'              	goto	u6755
  2398  00C9' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2399  00CA' 0200'              	subwf	(sqrt@tfrac+2)^(0+128),w
  2400  00CB' 1D03               	skipz
  2401  00CC' 2800'              	goto	u6755
  2402  00CD' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2403  00CE' 0200'              	subwf	(sqrt@tfrac+1)^(0+128),w
  2404  00CF' 1D03               	skipz
  2405  00D0' 2800'              	goto	u6755
  2406  00D1' 0800'              	movf	sqrt@frac^(0+128),w
  2407  00D2' 0200'              	subwf	sqrt@tfrac^(0+128),w
  2408  00D3'                    u6755:
  2409  00D3' 1C03               	skipc
  2410  00D4' 2800'              	goto	u6751
  2411  00D5' 2800'              	goto	u6750
  2412  00D6'                    u6751:
  2413  00D6' 2800'              	goto	l4765
  2414  00D7'                    u6750:
  2415  00D7'                    l4763:
  2416  00D7' 0800'              	movf	sqrt@frac^(0+128),w
  2417  00D8' 0280'              	subwf	sqrt@tfrac^(0+128),f
  2418  00D9' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2419  00DA' 1C03               	skipc
  2420  00DB' 0F00'              	incfsz	(sqrt@frac+1)^(0+128),w
  2421  00DC' 0280'              	subwf	(sqrt@tfrac+1)^(0+128),f
  2422  00DD' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2423  00DE' 1C03               	skipc
  2424  00DF' 0F00'              	incfsz	(sqrt@frac+2)^(0+128),w
  2425  00E0' 0280'              	subwf	(sqrt@tfrac+2)^(0+128),f
  2426  00E1' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2427  00E2' 1C03               	skipc
  2428  00E3' 0F00'              	incfsz	(sqrt@frac+3)^(0+128),w
  2429  00E4' 0280'              	subwf	(sqrt@tfrac+3)^(0+128),f
  2430  00E5' 0800'              	movf	sqrt@grs^(0+128),w
  2431  00E6' 0780'              	addwf	sqrt@frac^(0+128),f
  2432  00E7' 0800'              	movf	(sqrt@grs+1)^(0+128),w
  2433  00E8' 1103               	clrz
  2434  00E9' 1803               	skipnc
  2435  00EA' 3E01               	addlw	1
  2436  00EB' 1903               	skipnz
  2437  00EC' 2800'              	goto	u6761
  2438  00ED' 0780'              	addwf	(sqrt@frac+1)^(0+128),f
  2439  00EE'                    u6761:
  2440  00EE' 0800'              	movf	(sqrt@grs+2)^(0+128),w
  2441  00EF' 1103               	clrz
  2442  00F0' 1803               	skipnc
  2443  00F1' 3E01               	addlw	1
  2444  00F2' 1903               	skipnz
  2445  00F3' 2800'              	goto	u6762
  2446  00F4' 0780'              	addwf	(sqrt@frac+2)^(0+128),f
  2447  00F5'                    u6762:
  2448  00F5' 0800'              	movf	(sqrt@grs+3)^(0+128),w
  2449  00F6' 1103               	clrz
  2450  00F7' 1803               	skipnc
  2451  00F8' 3E01               	addlw	1
  2452  00F9' 1903               	skipnz
  2453  00FA' 2800'              	goto	u6763
  2454  00FB' 0780'              	addwf	(sqrt@frac+3)^(0+128),f
  2455  00FC'                    u6763:
  2456  00FC' 2800'              	goto	l795
  2457  00FD'                    l4765:
  2458  00FD' 0900'              	comf	sqrt@grs^(0+128),w
  2459  00FE' 0080'              	movwf	??_sqrt^(0+128)
  2460  00FF' 0900'              	comf	(sqrt@grs+1)^(0+128),w
  2461  0100' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2462  0101' 0900'              	comf	(sqrt@grs+2)^(0+128),w
  2463  0102' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2464  0103' 0900'              	comf	(sqrt@grs+3)^(0+128),w
  2465  0104' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2466  0105' 0800'              	movf	??_sqrt^(0+128),w
  2467  0106' 0580'              	andwf	sqrt@frac^(0+128),f
  2468  0107' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2469  0108' 0580'              	andwf	(sqrt@frac+1)^(0+128),f
  2470  0109' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2471  010A' 0580'              	andwf	(sqrt@frac+2)^(0+128),f
  2472  010B' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2473  010C' 0580'              	andwf	(sqrt@frac+3)^(0+128),f
  2474  010D'                    l795:
  2475  010D' 0800'              	movf	sqrt@grs^(0+128),w
  2476  010E' 0080'              	movwf	??_sqrt^(0+128)
  2477  010F' 0800'              	movf	(sqrt@grs+1)^(0+128),w
  2478  0110' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2479  0111' 0800'              	movf	(sqrt@grs+2)^(0+128),w
  2480  0112' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2481  0113' 0800'              	movf	(sqrt@grs+3)^(0+128),w
  2482  0114' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2483  0115' 3001               	movlw	1
  2484  0116'                    u6775:
  2485  0116' 1003               	clrc
  2486  0117' 0C83'              	rrf	(??_sqrt^(0+128)+3),f
  2487  0118' 0C82'              	rrf	(??_sqrt^(0+128)+2),f
  2488  0119' 0C81'              	rrf	(??_sqrt^(0+128)+1),f
  2489  011A' 0C80'              	rrf	??_sqrt^(0+128),f
  2490  011B'                    u6770:
  2491  011B' 3EFF               	addlw	-1
  2492  011C' 1D03               	skipz
  2493  011D' 2800'              	goto	u6775
  2494  011E' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2495  011F' 0080'              	movwf	(sqrt@grs+3)^(0+128)
  2496  0120' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2497  0121' 0080'              	movwf	(sqrt@grs+2)^(0+128)
  2498  0122' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2499  0123' 0080'              	movwf	(sqrt@grs+1)^(0+128)
  2500  0124' 0800'              	movf	??_sqrt^(0+128),w
  2501  0125' 0080'              	movwf	sqrt@grs^(0+128)
  2502  0126' 3001               	movlw	1
  2503  0127' 0080'              	movwf	??_sqrt^(0+128)
  2504  0128'                    u6785:
  2505  0128' 1003               	clrc
  2506  0129' 0D80'              	rlf	sqrt@tfrac^(0+128),f
  2507  012A' 0D80'              	rlf	(sqrt@tfrac+1)^(0+128),f
  2508  012B' 0D80'              	rlf	(sqrt@tfrac+2)^(0+128),f
  2509  012C' 0D80'              	rlf	(sqrt@tfrac+3)^(0+128),f
  2510  012D' 0B80'              	decfsz	??_sqrt^(0+128),f
  2511  012E' 2800'              	goto	u6785
  2512  012F' 3001               	movlw	1
  2513  0130' 0080'              	movwf	??_sqrt^(0+128)
  2514  0131' 0800'              	movf	??_sqrt^(0+128),w
  2515  0132' 0780'              	addwf	sqrt@i^(0+128),f
  2516  0133'                    l4767:
  2517  0133' 3019               	movlw	25
  2518  0134' 0200'              	subwf	sqrt@i^(0+128),w
  2519  0135' 1C03               	skipc
  2520  0136' 2800'              	goto	u6791
  2521  0137' 2800'              	goto	u6790
  2522  0138'                    u6791:
  2523  0138' 2800'              	goto	l4761
  2524  0139'                    u6790:
  2525  0139'                    l4769:
  2526  0139' 0800'              	movf	sqrt@frac^(0+128),w
  2527  013A' 0080'              	movwf	??_sqrt^(0+128)
  2528  013B' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2529  013C' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2530  013D' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2531  013E' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2532  013F' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2533  0140' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2534  0141' 3001               	movlw	1
  2535  0142'                    u6805:
  2536  0142' 1003               	clrc
  2537  0143' 0C83'              	rrf	(??_sqrt^(0+128)+3),f
  2538  0144' 0C82'              	rrf	(??_sqrt^(0+128)+2),f
  2539  0145' 0C81'              	rrf	(??_sqrt^(0+128)+1),f
  2540  0146' 0C80'              	rrf	??_sqrt^(0+128),f
  2541  0147'                    u6800:
  2542  0147' 3EFF               	addlw	-1
  2543  0148' 1D03               	skipz
  2544  0149' 2800'              	goto	u6805
  2545  014A' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2546  014B' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2547  014C' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2548  014D' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2549  014E' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2550  014F' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2551  0150' 0800'              	movf	??_sqrt^(0+128),w
  2552  0151' 0080'              	movwf	sqrt@frac^(0+128)
  2553  0152'                    l4771:
  2554  0152' 3001               	movlw	1
  2555  0153' 0500'              	andwf	sqrt@frac^(0+128),w
  2556  0154' 0080'              	movwf	sqrt@grs^(0+128)
  2557  0155' 3000               	movlw	0
  2558  0156' 0500'              	andwf	(sqrt@frac+1)^(0+128),w
  2559  0157' 0080'              	movwf	(sqrt@grs+1)^(0+128)
  2560  0158' 3000               	movlw	0
  2561  0159' 0500'              	andwf	(sqrt@frac+2)^(0+128),w
  2562  015A' 0080'              	movwf	(sqrt@grs+2)^(0+128)
  2563  015B' 3000               	movlw	0
  2564  015C' 0500'              	andwf	(sqrt@frac+3)^(0+128),w
  2565  015D' 0080'              	movwf	(sqrt@grs+3)^(0+128)
  2566  015E'                    l4773:
  2567  015E' 0800'              	movf	sqrt@frac^(0+128),w
  2568  015F' 0080'              	movwf	??_sqrt^(0+128)
  2569  0160' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2570  0161' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2571  0162' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2572  0163' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2573  0164' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2574  0165' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2575  0166' 3001               	movlw	1
  2576  0167'                    u6815:
  2577  0167' 1003               	clrc
  2578  0168' 0C83'              	rrf	(??_sqrt^(0+128)+3),f
  2579  0169' 0C82'              	rrf	(??_sqrt^(0+128)+2),f
  2580  016A' 0C81'              	rrf	(??_sqrt^(0+128)+1),f
  2581  016B' 0C80'              	rrf	??_sqrt^(0+128),f
  2582  016C'                    u6810:
  2583  016C' 3EFF               	addlw	-1
  2584  016D' 1D03               	skipz
  2585  016E' 2800'              	goto	u6815
  2586  016F' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2587  0170' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2588  0171' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2589  0172' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2590  0173' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2591  0174' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2592  0175' 0800'              	movf	??_sqrt^(0+128),w
  2593  0176' 0080'              	movwf	sqrt@frac^(0+128)
  2594  0177' 0800'              	movf	sqrt@grs^(0+128),w
  2595  0178' 0780'              	addwf	sqrt@frac^(0+128),f
  2596  0179' 0800'              	movf	(sqrt@grs+1)^(0+128),w
  2597  017A' 1103               	clrz
  2598  017B' 1803               	skipnc
  2599  017C' 3E01               	addlw	1
  2600  017D' 1903               	skipnz
  2601  017E' 2800'              	goto	u6821
  2602  017F' 0780'              	addwf	(sqrt@frac+1)^(0+128),f
  2603  0180'                    u6821:
  2604  0180' 0800'              	movf	(sqrt@grs+2)^(0+128),w
  2605  0181' 1103               	clrz
  2606  0182' 1803               	skipnc
  2607  0183' 3E01               	addlw	1
  2608  0184' 1903               	skipnz
  2609  0185' 2800'              	goto	u6822
  2610  0186' 0780'              	addwf	(sqrt@frac+2)^(0+128),f
  2611  0187'                    u6822:
  2612  0187' 0800'              	movf	(sqrt@grs+3)^(0+128),w
  2613  0188' 1103               	clrz
  2614  0189' 1803               	skipnc
  2615  018A' 3E01               	addlw	1
  2616  018B' 1903               	skipnz
  2617  018C' 2800'              	goto	u6823
  2618  018D' 0780'              	addwf	(sqrt@frac+3)^(0+128),f
  2619  018E'                    u6823:
  2620  018E'                    l4775:
  2621  018E' 1C00'              	btfss	(sqrt@frac+3)^(0+128),0
  2622  018F' 2800'              	goto	u6831
  2623  0190' 2800'              	goto	u6830
  2624  0191'                    u6831:
  2625  0191' 2800'              	goto	l4781
  2626  0192'                    u6830:
  2627  0192'                    l4777:
  2628  0192' 0800'              	movf	sqrt@frac^(0+128),w
  2629  0193' 0080'              	movwf	??_sqrt^(0+128)
  2630  0194' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2631  0195' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2632  0196' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2633  0197' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2634  0198' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2635  0199' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2636  019A' 3001               	movlw	1
  2637  019B'                    u6845:
  2638  019B' 1003               	clrc
  2639  019C' 0C83'              	rrf	(??_sqrt^(0+128)+3),f
  2640  019D' 0C82'              	rrf	(??_sqrt^(0+128)+2),f
  2641  019E' 0C81'              	rrf	(??_sqrt^(0+128)+1),f
  2642  019F' 0C80'              	rrf	??_sqrt^(0+128),f
  2643  01A0'                    u6840:
  2644  01A0' 3EFF               	addlw	-1
  2645  01A1' 1D03               	skipz
  2646  01A2' 2800'              	goto	u6845
  2647  01A3' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2648  01A4' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2649  01A5' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2650  01A6' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2651  01A7' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2652  01A8' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2653  01A9' 0800'              	movf	??_sqrt^(0+128),w
  2654  01AA' 0080'              	movwf	sqrt@frac^(0+128)
  2655  01AB'                    l4779:
  2656  01AB' 3001               	movlw	1
  2657  01AC' 0780'              	addwf	sqrt@exp^(0+128),f
  2658  01AD' 1803               	skipnc
  2659  01AE' 0A80'              	incf	(sqrt@exp+1)^(0+128),f
  2660  01AF' 3000               	movlw	0
  2661  01B0' 0780'              	addwf	(sqrt@exp+1)^(0+128),f
  2662  01B1'                    l4781:
  2663  01B1' 30FF               	movlw	255
  2664  01B2' 0500'              	andwf	sqrt@frac^(0+128),w
  2665  01B3' 0080'              	movwf	sqrt@root^(0+128)
  2666  01B4' 30FF               	movlw	255
  2667  01B5' 0500'              	andwf	(sqrt@frac+1)^(0+128),w
  2668  01B6' 0080'              	movwf	(sqrt@root+1)^(0+128)
  2669  01B7' 307F               	movlw	127
  2670  01B8' 0500'              	andwf	(sqrt@frac+2)^(0+128),w
  2671  01B9' 0080'              	movwf	(sqrt@root+2)^(0+128)
  2672  01BA' 3000               	movlw	0
  2673  01BB' 0500'              	andwf	(sqrt@frac+3)^(0+128),w
  2674  01BC' 0080'              	movwf	(sqrt@root+3)^(0+128)
  2675  01BD'                    l4783:
  2676  01BD' 0800'              	movf	sqrt@exp^(0+128),w
  2677  01BE' 0080'              	movwf	sqrt@p^(0+128)
  2678  01BF'                    l4785:
  2679  01BF' 1C00'              	btfss	sqrt@p^(0+128),0
  2680  01C0' 2800'              	goto	u6851
  2681  01C1' 2800'              	goto	u6850
  2682  01C2'                    u6851:
  2683  01C2' 2800'              	goto	l4789
  2684  01C3'                    u6850:
  2685  01C3'                    l4787:
  2686  01C3' 1782'              	bsf	(sqrt@root^(0+128)+2),7
  2687  01C4'                    l4789:
  2688  01C4' 0800'              	movf	sqrt@p^(0+128),w
  2689  01C5' 0080'              	movwf	??_sqrt^(0+128)
  2690  01C6' 1003               	clrc
  2691  01C7' 0C00'              	rrf	??_sqrt^(0+128),w
  2692  01C8' 0083'              	movwf	(sqrt@root^(0+128)+3)
  2693  01C9' 307F               	movlw	127
  2694  01CA' 0080'              	movwf	??_sqrt^(0+128)
  2695  01CB' 0800'              	movf	??_sqrt^(0+128),w
  2696  01CC' 0583'              	andwf	(sqrt@root^(0+128)+3),f
  2697  01CD'                    l4791:
  2698  01CD' 0800'              	movf	(sqrt@root+3)^(0+128),w
  2699  01CE' 0080'              	movwf	(?_sqrt+3)^(0+128)
  2700  01CF' 0800'              	movf	(sqrt@root+2)^(0+128),w
  2701  01D0' 0080'              	movwf	(?_sqrt+2)^(0+128)
  2702  01D1' 0800'              	movf	(sqrt@root+1)^(0+128),w
  2703  01D2' 0080'              	movwf	(?_sqrt+1)^(0+128)
  2704  01D3' 0800'              	movf	sqrt@root^(0+128),w
  2705  01D4' 0080'              	movwf	?_sqrt^(0+128)
  2706  01D5'                    l788:
  2707  01D5' 0008               	return
  2708  01D6'                    __end_of_sqrt:
  2709                           
  2710                           	psect	text6
  2711  0000'                    __ptext6:	
  2712 ;; *************** function _pow *****************
  2713 ;; Defined at:
  2714 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/pow.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  x               4   30[BANK1 ] unsigned char 
  2717 ;;  y               4   34[BANK1 ] unsigned char 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  yi              4   47[BANK1 ] unsigned long 
  2720 ;;  sign            1   46[BANK1 ] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  4   30[BANK1 ] unsigned char 
  2723 ;; Registers used:
  2724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2730 ;;      Params:         0       0       8       0
  2731 ;;      Locals:         0       0      13       0
  2732 ;;      Temps:          0       0       0       0
  2733 ;;      Totals:         0       0      21       0
  2734 ;;Total ram usage:       21 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; Hardware stack levels required when called: 4
  2737 ;; This function calls:
  2738 ;;		___fleq
  2739 ;;		___flge
  2740 ;;		___flmul
  2741 ;;		___flneg
  2742 ;;		___fltol
  2743 ;;		___xxtofl
  2744 ;;		_exp
  2745 ;;		_log
  2746 ;; This function is called by:
  2747 ;;		_vector_length
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751  0000'                    _pow:	
  2752                           ;psect for function _pow
  2753                           
  2754  0000'                    l4663:	
  2755                           ;incstack = 0
  2756                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2757                           
  2758  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2759  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2760  0002' 0180'              	clrf	pow@sign^(0+128)
  2761  0003'                    l4665:
  2762  0003' 0800'              	movf	(pow@x+3)^(0+128),w
  2763  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  2764  0005' 1303               	bcf	3,6	;RP1=0, select bank0
  2765  0006' 008D'              	movwf	___fleq@ff1+3
  2766  0007' 1683               	bsf	3,5	;RP0=1, select bank1
  2767  0008' 1303               	bcf	3,6	;RP1=0, select bank1
  2768  0009' 0800'              	movf	(pow@x+2)^(0+128),w
  2769  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  2770  000B' 1303               	bcf	3,6	;RP1=0, select bank0
  2771  000C' 008C'              	movwf	___fleq@ff1+2
  2772  000D' 1683               	bsf	3,5	;RP0=1, select bank1
  2773  000E' 1303               	bcf	3,6	;RP1=0, select bank1
  2774  000F' 0800'              	movf	(pow@x+1)^(0+128),w
  2775  0010' 1283               	bcf	3,5	;RP0=0, select bank0
  2776  0011' 1303               	bcf	3,6	;RP1=0, select bank0
  2777  0012' 008B'              	movwf	___fleq@ff1+1
  2778  0013' 1683               	bsf	3,5	;RP0=1, select bank1
  2779  0014' 1303               	bcf	3,6	;RP1=0, select bank1
  2780  0015' 0800'              	movf	pow@x^(0+128),w
  2781  0016' 1283               	bcf	3,5	;RP0=0, select bank0
  2782  0017' 1303               	bcf	3,6	;RP1=0, select bank0
  2783  0018' 008A'              	movwf	___fleq@ff1
  2784  0019' 3000               	movlw	0
  2785  001A' 0091'              	movwf	___fleq@ff2+3
  2786  001B' 3000               	movlw	0
  2787  001C' 0090'              	movwf	___fleq@ff2+2
  2788  001D' 3000               	movlw	0
  2789  001E' 008F'              	movwf	___fleq@ff2+1
  2790  001F' 3000               	movlw	0
  2791  0020' 008E'              	movwf	___fleq@ff2
  2792  0021' 118A' 2000' 118A'  	fcall	___fleq
  2793  0024' 1C03               	btfss	3,0
  2794  0025' 2800'              	goto	u6601
  2795  0026' 2800'              	goto	u6600
  2796  0027'                    u6601:
  2797  0027' 2800'              	goto	l4673
  2798  0028'                    u6600:
  2799  0028'                    l4667:
  2800  0028' 3000               	movlw	0
  2801  0029' 0083'              	movwf	___flge@ff1+3
  2802  002A' 3000               	movlw	0
  2803  002B' 0082'              	movwf	___flge@ff1+2
  2804  002C' 3000               	movlw	0
  2805  002D' 0081'              	movwf	___flge@ff1+1
  2806  002E' 3000               	movlw	0
  2807  002F' 0080'              	movwf	___flge@ff1
  2808  0030' 1683               	bsf	3,5	;RP0=1, select bank1
  2809  0031' 1303               	bcf	3,6	;RP1=0, select bank1
  2810  0032' 0800'              	movf	(pow@y+3)^(0+128),w
  2811  0033' 0087'              	movwf	___flge@ff2+3
  2812  0034' 0800'              	movf	(pow@y+2)^(0+128),w
  2813  0035' 0086'              	movwf	___flge@ff2+2
  2814  0036' 0800'              	movf	(pow@y+1)^(0+128),w
  2815  0037' 0085'              	movwf	___flge@ff2+1
  2816  0038' 0800'              	movf	pow@y^(0+128),w
  2817  0039' 0084'              	movwf	___flge@ff2
  2818  003A' 118A' 2000' 118A'  	fcall	___flge
  2819  003D' 1C03               	btfss	3,0
  2820  003E' 2800'              	goto	u6611
  2821  003F' 2800'              	goto	u6610
  2822  0040'                    u6611:
  2823  0040' 2800'              	goto	l852
  2824  0041'                    u6610:
  2825  0041'                    l4669:
  2826  0041' 3021               	movlw	33
  2827  0042' 1283               	bcf	3,5	;RP0=0, select bank2
  2828  0043' 1703               	bsf	3,6	;RP1=1, select bank2
  2829  0044' 0080'              	movwf	_errno^(0+256)
  2830  0045' 3000               	movlw	0
  2831  0046' 0081'              	movwf	(_errno^(0+256)+1)
  2832  0047'                    l852:
  2833  0047' 3000               	movlw	0
  2834  0048' 1683               	bsf	3,5	;RP0=1, select bank1
  2835  0049' 1303               	bcf	3,6	;RP1=0, select bank1
  2836  004A' 0080'              	movwf	(?_pow+3)^(0+128)
  2837  004B' 3000               	movlw	0
  2838  004C' 0080'              	movwf	(?_pow+2)^(0+128)
  2839  004D' 3000               	movlw	0
  2840  004E' 0080'              	movwf	(?_pow+1)^(0+128)
  2841  004F' 3000               	movlw	0
  2842  0050' 0080'              	movwf	?_pow^(0+128)
  2843  0051' 2800'              	goto	l853
  2844  0052'                    l4673:
  2845  0052' 1683               	bsf	3,5	;RP0=1, select bank1
  2846  0053' 1303               	bcf	3,6	;RP1=0, select bank1
  2847  0054' 0800'              	movf	(pow@y+3)^(0+128),w
  2848  0055' 1283               	bcf	3,5	;RP0=0, select bank0
  2849  0056' 1303               	bcf	3,6	;RP1=0, select bank0
  2850  0057' 008D'              	movwf	___fleq@ff1+3
  2851  0058' 1683               	bsf	3,5	;RP0=1, select bank1
  2852  0059' 1303               	bcf	3,6	;RP1=0, select bank1
  2853  005A' 0800'              	movf	(pow@y+2)^(0+128),w
  2854  005B' 1283               	bcf	3,5	;RP0=0, select bank0
  2855  005C' 1303               	bcf	3,6	;RP1=0, select bank0
  2856  005D' 008C'              	movwf	___fleq@ff1+2
  2857  005E' 1683               	bsf	3,5	;RP0=1, select bank1
  2858  005F' 1303               	bcf	3,6	;RP1=0, select bank1
  2859  0060' 0800'              	movf	(pow@y+1)^(0+128),w
  2860  0061' 1283               	bcf	3,5	;RP0=0, select bank0
  2861  0062' 1303               	bcf	3,6	;RP1=0, select bank0
  2862  0063' 008B'              	movwf	___fleq@ff1+1
  2863  0064' 1683               	bsf	3,5	;RP0=1, select bank1
  2864  0065' 1303               	bcf	3,6	;RP1=0, select bank1
  2865  0066' 0800'              	movf	pow@y^(0+128),w
  2866  0067' 1283               	bcf	3,5	;RP0=0, select bank0
  2867  0068' 1303               	bcf	3,6	;RP1=0, select bank0
  2868  0069' 008A'              	movwf	___fleq@ff1
  2869  006A' 3000               	movlw	0
  2870  006B' 0091'              	movwf	___fleq@ff2+3
  2871  006C' 3000               	movlw	0
  2872  006D' 0090'              	movwf	___fleq@ff2+2
  2873  006E' 3000               	movlw	0
  2874  006F' 008F'              	movwf	___fleq@ff2+1
  2875  0070' 3000               	movlw	0
  2876  0071' 008E'              	movwf	___fleq@ff2
  2877  0072' 118A' 2000' 118A'  	fcall	___fleq
  2878  0075' 1C03               	btfss	3,0
  2879  0076' 2800'              	goto	u6621
  2880  0077' 2800'              	goto	u6620
  2881  0078'                    u6621:
  2882  0078' 2800'              	goto	l4679
  2883  0079'                    u6620:
  2884  0079'                    l4675:
  2885  0079' 303F               	movlw	63
  2886  007A' 1683               	bsf	3,5	;RP0=1, select bank1
  2887  007B' 1303               	bcf	3,6	;RP1=0, select bank1
  2888  007C' 0080'              	movwf	(?_pow+3)^(0+128)
  2889  007D' 3080               	movlw	128
  2890  007E' 0080'              	movwf	(?_pow+2)^(0+128)
  2891  007F' 3000               	movlw	0
  2892  0080' 0080'              	movwf	(?_pow+1)^(0+128)
  2893  0081' 3000               	movlw	0
  2894  0082' 0080'              	movwf	?_pow^(0+128)
  2895  0083' 2800'              	goto	l853
  2896  0084'                    l4679:
  2897  0084' 1683               	bsf	3,5	;RP0=1, select bank1
  2898  0085' 1303               	bcf	3,6	;RP1=0, select bank1
  2899  0086' 0800'              	movf	(pow@x+3)^(0+128),w
  2900  0087' 0083'              	movwf	___flge@ff1+3
  2901  0088' 0800'              	movf	(pow@x+2)^(0+128),w
  2902  0089' 0082'              	movwf	___flge@ff1+2
  2903  008A' 0800'              	movf	(pow@x+1)^(0+128),w
  2904  008B' 0081'              	movwf	___flge@ff1+1
  2905  008C' 0800'              	movf	pow@x^(0+128),w
  2906  008D' 0080'              	movwf	___flge@ff1
  2907  008E' 3000               	movlw	0
  2908  008F' 0087'              	movwf	___flge@ff2+3
  2909  0090' 3000               	movlw	0
  2910  0091' 0086'              	movwf	___flge@ff2+2
  2911  0092' 3000               	movlw	0
  2912  0093' 0085'              	movwf	___flge@ff2+1
  2913  0094' 3000               	movlw	0
  2914  0095' 0084'              	movwf	___flge@ff2
  2915  0096' 118A' 2000' 118A'  	fcall	___flge
  2916  0099' 1803               	btfsc	3,0
  2917  009A' 2800'              	goto	u6631
  2918  009B' 2800'              	goto	u6630
  2919  009C'                    u6631:
  2920  009C' 2800'              	goto	l4691
  2921  009D'                    u6630:
  2922  009D'                    l4681:
  2923  009D' 1683               	bsf	3,5	;RP0=1, select bank1
  2924  009E' 1303               	bcf	3,6	;RP1=0, select bank1
  2925  009F' 0800'              	movf	(pow@y+3)^(0+128),w
  2926  00A0' 0083'              	movwf	___fltol@f1+3
  2927  00A1' 0800'              	movf	(pow@y+2)^(0+128),w
  2928  00A2' 0082'              	movwf	___fltol@f1+2
  2929  00A3' 0800'              	movf	(pow@y+1)^(0+128),w
  2930  00A4' 0081'              	movwf	___fltol@f1+1
  2931  00A5' 0800'              	movf	pow@y^(0+128),w
  2932  00A6' 0080'              	movwf	___fltol@f1
  2933  00A7' 118A' 2000' 118A'  	fcall	___fltol
  2934  00AA' 0803'              	movf	?___fltol+3,w
  2935  00AB' 1683               	bsf	3,5	;RP0=1, select bank1
  2936  00AC' 1303               	bcf	3,6	;RP1=0, select bank1
  2937  00AD' 0080'              	movwf	(pow@yi+3)^(0+128)
  2938  00AE' 0802'              	movf	?___fltol+2,w
  2939  00AF' 0080'              	movwf	(pow@yi+2)^(0+128)
  2940  00B0' 0801'              	movf	?___fltol+1,w
  2941  00B1' 0080'              	movwf	(pow@yi+1)^(0+128)
  2942  00B2' 0800'              	movf	?___fltol,w
  2943  00B3' 0080'              	movwf	pow@yi^(0+128)
  2944  00B4' 0800'              	movf	(pow@yi+3)^(0+128),w
  2945  00B5' 008D'              	movwf	___xxtofl@val+3
  2946  00B6' 0800'              	movf	(pow@yi+2)^(0+128),w
  2947  00B7' 008C'              	movwf	___xxtofl@val+2
  2948  00B8' 0800'              	movf	(pow@yi+1)^(0+128),w
  2949  00B9' 008B'              	movwf	___xxtofl@val+1
  2950  00BA' 0800'              	movf	pow@yi^(0+128),w
  2951  00BB' 008A'              	movwf	___xxtofl@val
  2952  00BC' 3000               	movlw	0
  2953  00BD' 118A' 2000' 118A'  	fcall	___xxtofl
  2954  00C0' 080D'              	movf	?___xxtofl+3,w
  2955  00C1' 1283               	bcf	3,5	;RP0=0, select bank0
  2956  00C2' 1303               	bcf	3,6	;RP1=0, select bank0
  2957  00C3' 008D'              	movwf	___fleq@ff1+3
  2958  00C4' 080C'              	movf	?___xxtofl+2,w
  2959  00C5' 008C'              	movwf	___fleq@ff1+2
  2960  00C6' 080B'              	movf	?___xxtofl+1,w
  2961  00C7' 008B'              	movwf	___fleq@ff1+1
  2962  00C8' 080A'              	movf	?___xxtofl,w
  2963  00C9' 008A'              	movwf	___fleq@ff1
  2964  00CA' 1683               	bsf	3,5	;RP0=1, select bank1
  2965  00CB' 1303               	bcf	3,6	;RP1=0, select bank1
  2966  00CC' 0800'              	movf	(pow@y+3)^(0+128),w
  2967  00CD' 1283               	bcf	3,5	;RP0=0, select bank0
  2968  00CE' 1303               	bcf	3,6	;RP1=0, select bank0
  2969  00CF' 0091'              	movwf	___fleq@ff2+3
  2970  00D0' 1683               	bsf	3,5	;RP0=1, select bank1
  2971  00D1' 1303               	bcf	3,6	;RP1=0, select bank1
  2972  00D2' 0800'              	movf	(pow@y+2)^(0+128),w
  2973  00D3' 1283               	bcf	3,5	;RP0=0, select bank0
  2974  00D4' 1303               	bcf	3,6	;RP1=0, select bank0
  2975  00D5' 0090'              	movwf	___fleq@ff2+2
  2976  00D6' 1683               	bsf	3,5	;RP0=1, select bank1
  2977  00D7' 1303               	bcf	3,6	;RP1=0, select bank1
  2978  00D8' 0800'              	movf	(pow@y+1)^(0+128),w
  2979  00D9' 1283               	bcf	3,5	;RP0=0, select bank0
  2980  00DA' 1303               	bcf	3,6	;RP1=0, select bank0
  2981  00DB' 008F'              	movwf	___fleq@ff2+1
  2982  00DC' 1683               	bsf	3,5	;RP0=1, select bank1
  2983  00DD' 1303               	bcf	3,6	;RP1=0, select bank1
  2984  00DE' 0800'              	movf	pow@y^(0+128),w
  2985  00DF' 1283               	bcf	3,5	;RP0=0, select bank0
  2986  00E0' 1303               	bcf	3,6	;RP1=0, select bank0
  2987  00E1' 008E'              	movwf	___fleq@ff2
  2988  00E2' 118A' 2000' 118A'  	fcall	___fleq
  2989  00E5' 1803               	btfsc	3,0
  2990  00E6' 2800'              	goto	u6641
  2991  00E7' 2800'              	goto	u6640
  2992  00E8'                    u6641:
  2993  00E8' 2800'              	goto	l4687
  2994  00E9'                    u6640:
  2995  00E9'                    l4683:
  2996  00E9' 3021               	movlw	33
  2997  00EA' 1283               	bcf	3,5	;RP0=0, select bank2
  2998  00EB' 1703               	bsf	3,6	;RP1=1, select bank2
  2999  00EC' 0080'              	movwf	_errno^(0+256)
  3000  00ED' 3000               	movlw	0
  3001  00EE' 0081'              	movwf	(_errno^(0+256)+1)
  3002  00EF' 3000               	movlw	0
  3003  00F0' 1683               	bsf	3,5	;RP0=1, select bank1
  3004  00F1' 1303               	bcf	3,6	;RP1=0, select bank1
  3005  00F2' 0080'              	movwf	(?_pow+3)^(0+128)
  3006  00F3' 3000               	movlw	0
  3007  00F4' 0080'              	movwf	(?_pow+2)^(0+128)
  3008  00F5' 3000               	movlw	0
  3009  00F6' 0080'              	movwf	(?_pow+1)^(0+128)
  3010  00F7' 3000               	movlw	0
  3011  00F8' 0080'              	movwf	?_pow^(0+128)
  3012  00F9' 2800'              	goto	l853
  3013  00FA'                    l4687:
  3014  00FA' 1683               	bsf	3,5	;RP0=1, select bank1
  3015  00FB' 1303               	bcf	3,6	;RP1=0, select bank1
  3016  00FC' 0800'              	movf	pow@yi^(0+128),w
  3017  00FD' 3901               	andlw	1
  3018  00FE' 0080'              	movwf	pow@sign^(0+128)
  3019  00FF'                    l4689:
  3020  00FF' 0800'              	movf	(pow@x+3)^(0+128),w
  3021  0100' 0083'              	movwf	___flneg@f1+3
  3022  0101' 0800'              	movf	(pow@x+2)^(0+128),w
  3023  0102' 0082'              	movwf	___flneg@f1+2
  3024  0103' 0800'              	movf	(pow@x+1)^(0+128),w
  3025  0104' 0081'              	movwf	___flneg@f1+1
  3026  0105' 0800'              	movf	pow@x^(0+128),w
  3027  0106' 0080'              	movwf	___flneg@f1
  3028  0107' 118A' 2000' 118A'  	fcall	___flneg
  3029  010A' 0803'              	movf	?___flneg+3,w
  3030  010B' 1683               	bsf	3,5	;RP0=1, select bank1
  3031  010C' 1303               	bcf	3,6	;RP1=0, select bank1
  3032  010D' 0080'              	movwf	(pow@x+3)^(0+128)
  3033  010E' 0802'              	movf	?___flneg+2,w
  3034  010F' 0080'              	movwf	(pow@x+2)^(0+128)
  3035  0110' 0801'              	movf	?___flneg+1,w
  3036  0111' 0080'              	movwf	(pow@x+1)^(0+128)
  3037  0112' 0800'              	movf	?___flneg,w
  3038  0113' 0080'              	movwf	pow@x^(0+128)
  3039  0114'                    l4691:
  3040  0114' 1683               	bsf	3,5	;RP0=1, select bank1
  3041  0115' 1303               	bcf	3,6	;RP1=0, select bank1
  3042  0116' 0800'              	movf	(pow@x+3)^(0+128),w
  3043  0117' 0080'              	movwf	(log@x+3)^(0+128)
  3044  0118' 0800'              	movf	(pow@x+2)^(0+128),w
  3045  0119' 0080'              	movwf	(log@x+2)^(0+128)
  3046  011A' 0800'              	movf	(pow@x+1)^(0+128),w
  3047  011B' 0080'              	movwf	(log@x+1)^(0+128)
  3048  011C' 0800'              	movf	pow@x^(0+128),w
  3049  011D' 0080'              	movwf	log@x^(0+128)
  3050  011E' 118A' 2000' 118A'  	fcall	_log
  3051  0121' 1683               	bsf	3,5	;RP0=1, select bank1
  3052  0122' 1303               	bcf	3,6	;RP1=0, select bank1
  3053  0123' 0800'              	movf	(?_log+3)^(0+128),w
  3054  0124' 0080'              	movwf	(_pow$1246+3)^(0+128)
  3055  0125' 0800'              	movf	(?_log+2)^(0+128),w
  3056  0126' 0080'              	movwf	(_pow$1246+2)^(0+128)
  3057  0127' 0800'              	movf	(?_log+1)^(0+128),w
  3058  0128' 0080'              	movwf	(_pow$1246+1)^(0+128)
  3059  0129' 0800'              	movf	?_log^(0+128),w
  3060  012A' 0080'              	movwf	_pow$1246^(0+128)
  3061  012B'                    l4693:
  3062  012B' 0800'              	movf	(pow@y+3)^(0+128),w
  3063  012C' 1283               	bcf	3,5	;RP0=0, select bank0
  3064  012D' 1303               	bcf	3,6	;RP1=0, select bank0
  3065  012E' 00A0'              	movwf	___flmul@b+3
  3066  012F' 1683               	bsf	3,5	;RP0=1, select bank1
  3067  0130' 1303               	bcf	3,6	;RP1=0, select bank1
  3068  0131' 0800'              	movf	(pow@y+2)^(0+128),w
  3069  0132' 1283               	bcf	3,5	;RP0=0, select bank0
  3070  0133' 1303               	bcf	3,6	;RP1=0, select bank0
  3071  0134' 009F'              	movwf	___flmul@b+2
  3072  0135' 1683               	bsf	3,5	;RP0=1, select bank1
  3073  0136' 1303               	bcf	3,6	;RP1=0, select bank1
  3074  0137' 0800'              	movf	(pow@y+1)^(0+128),w
  3075  0138' 1283               	bcf	3,5	;RP0=0, select bank0
  3076  0139' 1303               	bcf	3,6	;RP1=0, select bank0
  3077  013A' 009E'              	movwf	___flmul@b+1
  3078  013B' 1683               	bsf	3,5	;RP0=1, select bank1
  3079  013C' 1303               	bcf	3,6	;RP1=0, select bank1
  3080  013D' 0800'              	movf	pow@y^(0+128),w
  3081  013E' 1283               	bcf	3,5	;RP0=0, select bank0
  3082  013F' 1303               	bcf	3,6	;RP1=0, select bank0
  3083  0140' 009D'              	movwf	___flmul@b
  3084  0141' 1683               	bsf	3,5	;RP0=1, select bank1
  3085  0142' 1303               	bcf	3,6	;RP1=0, select bank1
  3086  0143' 0800'              	movf	(_pow$1246+3)^(0+128),w
  3087  0144' 1283               	bcf	3,5	;RP0=0, select bank0
  3088  0145' 1303               	bcf	3,6	;RP1=0, select bank0
  3089  0146' 00A4'              	movwf	___flmul@a+3
  3090  0147' 1683               	bsf	3,5	;RP0=1, select bank1
  3091  0148' 1303               	bcf	3,6	;RP1=0, select bank1
  3092  0149' 0800'              	movf	(_pow$1246+2)^(0+128),w
  3093  014A' 1283               	bcf	3,5	;RP0=0, select bank0
  3094  014B' 1303               	bcf	3,6	;RP1=0, select bank0
  3095  014C' 00A3'              	movwf	___flmul@a+2
  3096  014D' 1683               	bsf	3,5	;RP0=1, select bank1
  3097  014E' 1303               	bcf	3,6	;RP1=0, select bank1
  3098  014F' 0800'              	movf	(_pow$1246+1)^(0+128),w
  3099  0150' 1283               	bcf	3,5	;RP0=0, select bank0
  3100  0151' 1303               	bcf	3,6	;RP1=0, select bank0
  3101  0152' 00A2'              	movwf	___flmul@a+1
  3102  0153' 1683               	bsf	3,5	;RP0=1, select bank1
  3103  0154' 1303               	bcf	3,6	;RP1=0, select bank1
  3104  0155' 0800'              	movf	_pow$1246^(0+128),w
  3105  0156' 1283               	bcf	3,5	;RP0=0, select bank0
  3106  0157' 1303               	bcf	3,6	;RP1=0, select bank0
  3107  0158' 00A1'              	movwf	___flmul@a
  3108  0159' 118A' 2000' 118A'  	fcall	___flmul
  3109  015C' 1283               	bcf	3,5	;RP0=0, select bank0
  3110  015D' 1303               	bcf	3,6	;RP1=0, select bank0
  3111  015E' 0820'              	movf	?___flmul+3,w
  3112  015F' 1683               	bsf	3,5	;RP0=1, select bank1
  3113  0160' 1303               	bcf	3,6	;RP1=0, select bank1
  3114  0161' 0080'              	movwf	(_pow$1247+3)^(0+128)
  3115  0162' 1283               	bcf	3,5	;RP0=0, select bank0
  3116  0163' 1303               	bcf	3,6	;RP1=0, select bank0
  3117  0164' 081F'              	movf	?___flmul+2,w
  3118  0165' 1683               	bsf	3,5	;RP0=1, select bank1
  3119  0166' 1303               	bcf	3,6	;RP1=0, select bank1
  3120  0167' 0080'              	movwf	(_pow$1247+2)^(0+128)
  3121  0168' 1283               	bcf	3,5	;RP0=0, select bank0
  3122  0169' 1303               	bcf	3,6	;RP1=0, select bank0
  3123  016A' 081E'              	movf	?___flmul+1,w
  3124  016B' 1683               	bsf	3,5	;RP0=1, select bank1
  3125  016C' 1303               	bcf	3,6	;RP1=0, select bank1
  3126  016D' 0080'              	movwf	(_pow$1247+1)^(0+128)
  3127  016E' 1283               	bcf	3,5	;RP0=0, select bank0
  3128  016F' 1303               	bcf	3,6	;RP1=0, select bank0
  3129  0170' 081D'              	movf	?___flmul,w
  3130  0171' 1683               	bsf	3,5	;RP0=1, select bank1
  3131  0172' 1303               	bcf	3,6	;RP1=0, select bank1
  3132  0173' 0080'              	movwf	_pow$1247^(0+128)
  3133  0174'                    l4695:
  3134  0174' 0800'              	movf	(_pow$1247+3)^(0+128),w
  3135  0175' 0080'              	movwf	(exp@x+3)^(0+128)
  3136  0176' 0800'              	movf	(_pow$1247+2)^(0+128),w
  3137  0177' 0080'              	movwf	(exp@x+2)^(0+128)
  3138  0178' 0800'              	movf	(_pow$1247+1)^(0+128),w
  3139  0179' 0080'              	movwf	(exp@x+1)^(0+128)
  3140  017A' 0800'              	movf	_pow$1247^(0+128),w
  3141  017B' 0080'              	movwf	exp@x^(0+128)
  3142  017C' 118A' 2000' 118A'  	fcall	_exp
  3143  017F' 1683               	bsf	3,5	;RP0=1, select bank1
  3144  0180' 1303               	bcf	3,6	;RP1=0, select bank1
  3145  0181' 0800'              	movf	(?_exp+3)^(0+128),w
  3146  0182' 0080'              	movwf	(pow@x+3)^(0+128)
  3147  0183' 0800'              	movf	(?_exp+2)^(0+128),w
  3148  0184' 0080'              	movwf	(pow@x+2)^(0+128)
  3149  0185' 0800'              	movf	(?_exp+1)^(0+128),w
  3150  0186' 0080'              	movwf	(pow@x+1)^(0+128)
  3151  0187' 0800'              	movf	?_exp^(0+128),w
  3152  0188' 0080'              	movwf	pow@x^(0+128)
  3153  0189'                    l4697:
  3154  0189' 0800'              	movf	pow@sign^(0+128),w
  3155  018A' 1903               	btfsc	3,2
  3156  018B' 2800'              	goto	u6651
  3157  018C' 2800'              	goto	u6650
  3158  018D'                    u6651:
  3159  018D' 2800'              	goto	l857
  3160  018E'                    u6650:
  3161  018E'                    l4699:
  3162  018E' 0800'              	movf	(pow@x+3)^(0+128),w
  3163  018F' 0083'              	movwf	___flneg@f1+3
  3164  0190' 0800'              	movf	(pow@x+2)^(0+128),w
  3165  0191' 0082'              	movwf	___flneg@f1+2
  3166  0192' 0800'              	movf	(pow@x+1)^(0+128),w
  3167  0193' 0081'              	movwf	___flneg@f1+1
  3168  0194' 0800'              	movf	pow@x^(0+128),w
  3169  0195' 0080'              	movwf	___flneg@f1
  3170  0196' 118A' 2000' 118A'  	fcall	___flneg
  3171  0199' 0803'              	movf	?___flneg+3,w
  3172  019A' 1683               	bsf	3,5	;RP0=1, select bank1
  3173  019B' 1303               	bcf	3,6	;RP1=0, select bank1
  3174  019C' 0080'              	movwf	(?_pow+3)^(0+128)
  3175  019D' 0802'              	movf	?___flneg+2,w
  3176  019E' 0080'              	movwf	(?_pow+2)^(0+128)
  3177  019F' 0801'              	movf	?___flneg+1,w
  3178  01A0' 0080'              	movwf	(?_pow+1)^(0+128)
  3179  01A1' 0800'              	movf	?___flneg,w
  3180  01A2' 0080'              	movwf	?_pow^(0+128)
  3181  01A3' 2800'              	goto	l853
  3182  01A4'                    l857:
  3183  01A4'                    l853:
  3184  01A4' 0008               	return
  3185  01A5'                    __end_of_pow:
  3186                           
  3187                           	psect	text7
  3188  0000'                    __ptext7:	
  3189 ;; *************** function _log *****************
  3190 ;; Defined at:
  3191 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/log.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  x               4   11[BANK1 ] unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  exponent        2   15[BANK1 ] int 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  4   11[BANK1 ] int 
  3198 ;; Registers used:
  3199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3205 ;;      Params:         0       0       4       0
  3206 ;;      Locals:         0       0       2       0
  3207 ;;      Temps:          0       0       0       0
  3208 ;;      Totals:         0       0       6       0
  3209 ;;Total ram usage:        6 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 3
  3212 ;; This function calls:
  3213 ;;		___fladd
  3214 ;;		___fleq
  3215 ;;		___flge
  3216 ;;		___flmul
  3217 ;;		___xxtofl
  3218 ;;		_eval_poly
  3219 ;;		_frexp
  3220 ;; This function is called by:
  3221 ;;		_pow
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225  0000'                    _log:	
  3226                           ;psect for function _log
  3227                           
  3228  0000'                    l4595:	
  3229                           ;incstack = 0
  3230                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3231                           
  3232  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  3233  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  3234  0002' 0800'              	movf	(log@x+3)^(0+128),w
  3235  0003' 0083'              	movwf	___flge@ff1+3
  3236  0004' 0800'              	movf	(log@x+2)^(0+128),w
  3237  0005' 0082'              	movwf	___flge@ff1+2
  3238  0006' 0800'              	movf	(log@x+1)^(0+128),w
  3239  0007' 0081'              	movwf	___flge@ff1+1
  3240  0008' 0800'              	movf	log@x^(0+128),w
  3241  0009' 0080'              	movwf	___flge@ff1
  3242  000A' 3000               	movlw	0
  3243  000B' 0087'              	movwf	___flge@ff2+3
  3244  000C' 3000               	movlw	0
  3245  000D' 0086'              	movwf	___flge@ff2+2
  3246  000E' 3000               	movlw	0
  3247  000F' 0085'              	movwf	___flge@ff2+1
  3248  0010' 3000               	movlw	0
  3249  0011' 0084'              	movwf	___flge@ff2
  3250  0012' 118A' 2000' 118A'  	fcall	___flge
  3251  0015' 1803               	btfsc	3,0
  3252  0016' 2800'              	goto	u6501
  3253  0017' 2800'              	goto	u6500
  3254  0018'                    u6501:
  3255  0018' 2800'              	goto	l4601
  3256  0019'                    u6500:
  3257  0019'                    l4597:
  3258  0019' 3021               	movlw	33
  3259  001A' 1283               	bcf	3,5	;RP0=0, select bank2
  3260  001B' 1703               	bsf	3,6	;RP1=1, select bank2
  3261  001C' 0080'              	movwf	_errno^(0+256)
  3262  001D' 3000               	movlw	0
  3263  001E' 0081'              	movwf	(_errno^(0+256)+1)
  3264  001F' 3000               	movlw	0
  3265  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  3266  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  3267  0022' 0080'              	movwf	(?_log+3)^(0+128)
  3268  0023' 3000               	movlw	0
  3269  0024' 0080'              	movwf	(?_log+2)^(0+128)
  3270  0025' 3000               	movlw	0
  3271  0026' 0080'              	movwf	(?_log+1)^(0+128)
  3272  0027' 3000               	movlw	0
  3273  0028' 0080'              	movwf	?_log^(0+128)
  3274  0029' 2800'              	goto	l919
  3275  002A'                    l4601:
  3276  002A' 1683               	bsf	3,5	;RP0=1, select bank1
  3277  002B' 1303               	bcf	3,6	;RP1=0, select bank1
  3278  002C' 0800'              	movf	(log@x+3)^(0+128),w
  3279  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  3280  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  3281  002F' 008D'              	movwf	___fleq@ff1+3
  3282  0030' 1683               	bsf	3,5	;RP0=1, select bank1
  3283  0031' 1303               	bcf	3,6	;RP1=0, select bank1
  3284  0032' 0800'              	movf	(log@x+2)^(0+128),w
  3285  0033' 1283               	bcf	3,5	;RP0=0, select bank0
  3286  0034' 1303               	bcf	3,6	;RP1=0, select bank0
  3287  0035' 008C'              	movwf	___fleq@ff1+2
  3288  0036' 1683               	bsf	3,5	;RP0=1, select bank1
  3289  0037' 1303               	bcf	3,6	;RP1=0, select bank1
  3290  0038' 0800'              	movf	(log@x+1)^(0+128),w
  3291  0039' 1283               	bcf	3,5	;RP0=0, select bank0
  3292  003A' 1303               	bcf	3,6	;RP1=0, select bank0
  3293  003B' 008B'              	movwf	___fleq@ff1+1
  3294  003C' 1683               	bsf	3,5	;RP0=1, select bank1
  3295  003D' 1303               	bcf	3,6	;RP1=0, select bank1
  3296  003E' 0800'              	movf	log@x^(0+128),w
  3297  003F' 1283               	bcf	3,5	;RP0=0, select bank0
  3298  0040' 1303               	bcf	3,6	;RP1=0, select bank0
  3299  0041' 008A'              	movwf	___fleq@ff1
  3300  0042' 3000               	movlw	0
  3301  0043' 0091'              	movwf	___fleq@ff2+3
  3302  0044' 3000               	movlw	0
  3303  0045' 0090'              	movwf	___fleq@ff2+2
  3304  0046' 3000               	movlw	0
  3305  0047' 008F'              	movwf	___fleq@ff2+1
  3306  0048' 3000               	movlw	0
  3307  0049' 008E'              	movwf	___fleq@ff2
  3308  004A' 118A' 2000' 118A'  	fcall	___fleq
  3309  004D' 1C03               	btfss	3,0
  3310  004E' 2800'              	goto	u6511
  3311  004F' 2800'              	goto	u6510
  3312  0050'                    u6511:
  3313  0050' 2800'              	goto	l4607
  3314  0051'                    u6510:
  3315  0051'                    l4603:
  3316  0051' 3022               	movlw	34
  3317  0052' 1283               	bcf	3,5	;RP0=0, select bank2
  3318  0053' 1703               	bsf	3,6	;RP1=1, select bank2
  3319  0054' 0080'              	movwf	_errno^(0+256)
  3320  0055' 3000               	movlw	0
  3321  0056' 0081'              	movwf	(_errno^(0+256)+1)
  3322  0057' 3000               	movlw	0
  3323  0058' 1683               	bsf	3,5	;RP0=1, select bank1
  3324  0059' 1303               	bcf	3,6	;RP1=0, select bank1
  3325  005A' 0080'              	movwf	(?_log+3)^(0+128)
  3326  005B' 3000               	movlw	0
  3327  005C' 0080'              	movwf	(?_log+2)^(0+128)
  3328  005D' 3000               	movlw	0
  3329  005E' 0080'              	movwf	(?_log+1)^(0+128)
  3330  005F' 3000               	movlw	0
  3331  0060' 0080'              	movwf	?_log^(0+128)
  3332  0061' 2800'              	goto	l919
  3333  0062'                    l4607:
  3334  0062' 30BF               	movlw	191
  3335  0063' 1283               	bcf	3,5	;RP0=0, select bank0
  3336  0064' 1303               	bcf	3,6	;RP1=0, select bank0
  3337  0065' 00BA'              	movwf	___fladd@b+3
  3338  0066' 3080               	movlw	128
  3339  0067' 00B9'              	movwf	___fladd@b+2
  3340  0068' 3000               	movlw	0
  3341  0069' 00B8'              	movwf	___fladd@b+1
  3342  006A' 3000               	movlw	0
  3343  006B' 00B7'              	movwf	___fladd@b
  3344  006C' 3040               	movlw	64
  3345  006D' 00A0'              	movwf	___flmul@b+3
  3346  006E' 3000               	movlw	0
  3347  006F' 009F'              	movwf	___flmul@b+2
  3348  0070' 3000               	movlw	0
  3349  0071' 009E'              	movwf	___flmul@b+1
  3350  0072' 3000               	movlw	0
  3351  0073' 009D'              	movwf	___flmul@b
  3352  0074' 3000'              	movlw	(low (log@exponent| 0))& (0+255)
  3353  0075' 009A'              	movwf	frexp@eptr
  3354  0076' 1683               	bsf	3,5	;RP0=1, select bank1
  3355  0077' 1303               	bcf	3,6	;RP1=0, select bank1
  3356  0078' 0800'              	movf	(log@x+3)^(0+128),w
  3357  0079' 1283               	bcf	3,5	;RP0=0, select bank0
  3358  007A' 1303               	bcf	3,6	;RP1=0, select bank0
  3359  007B' 0099'              	movwf	frexp@value+3
  3360  007C' 1683               	bsf	3,5	;RP0=1, select bank1
  3361  007D' 1303               	bcf	3,6	;RP1=0, select bank1
  3362  007E' 0800'              	movf	(log@x+2)^(0+128),w
  3363  007F' 1283               	bcf	3,5	;RP0=0, select bank0
  3364  0080' 1303               	bcf	3,6	;RP1=0, select bank0
  3365  0081' 0098'              	movwf	frexp@value+2
  3366  0082' 1683               	bsf	3,5	;RP0=1, select bank1
  3367  0083' 1303               	bcf	3,6	;RP1=0, select bank1
  3368  0084' 0800'              	movf	(log@x+1)^(0+128),w
  3369  0085' 1283               	bcf	3,5	;RP0=0, select bank0
  3370  0086' 1303               	bcf	3,6	;RP1=0, select bank0
  3371  0087' 0097'              	movwf	frexp@value+1
  3372  0088' 1683               	bsf	3,5	;RP0=1, select bank1
  3373  0089' 1303               	bcf	3,6	;RP1=0, select bank1
  3374  008A' 0800'              	movf	log@x^(0+128),w
  3375  008B' 1283               	bcf	3,5	;RP0=0, select bank0
  3376  008C' 1303               	bcf	3,6	;RP1=0, select bank0
  3377  008D' 0096'              	movwf	frexp@value
  3378  008E' 118A' 2000' 118A'  	fcall	_frexp
  3379  0091' 1283               	bcf	3,5	;RP0=0, select bank0
  3380  0092' 1303               	bcf	3,6	;RP1=0, select bank0
  3381  0093' 0819'              	movf	?_frexp+3,w
  3382  0094' 00A4'              	movwf	___flmul@a+3
  3383  0095' 0818'              	movf	?_frexp+2,w
  3384  0096' 00A3'              	movwf	___flmul@a+2
  3385  0097' 0817'              	movf	?_frexp+1,w
  3386  0098' 00A2'              	movwf	___flmul@a+1
  3387  0099' 0816'              	movf	?_frexp,w
  3388  009A' 00A1'              	movwf	___flmul@a
  3389  009B' 118A' 2000' 118A'  	fcall	___flmul
  3390  009E' 1283               	bcf	3,5	;RP0=0, select bank0
  3391  009F' 1303               	bcf	3,6	;RP1=0, select bank0
  3392  00A0' 0820'              	movf	?___flmul+3,w
  3393  00A1' 00BE'              	movwf	___fladd@a+3
  3394  00A2' 081F'              	movf	?___flmul+2,w
  3395  00A3' 00BD'              	movwf	___fladd@a+2
  3396  00A4' 081E'              	movf	?___flmul+1,w
  3397  00A5' 00BC'              	movwf	___fladd@a+1
  3398  00A6' 081D'              	movf	?___flmul,w
  3399  00A7' 00BB'              	movwf	___fladd@a
  3400  00A8' 118A' 2000' 118A'  	fcall	___fladd
  3401  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
  3402  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
  3403  00AD' 083A'              	movf	?___fladd+3,w
  3404  00AE' 1683               	bsf	3,5	;RP0=1, select bank1
  3405  00AF' 1303               	bcf	3,6	;RP1=0, select bank1
  3406  00B0' 0080'              	movwf	(log@x+3)^(0+128)
  3407  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
  3408  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
  3409  00B3' 0839'              	movf	?___fladd+2,w
  3410  00B4' 1683               	bsf	3,5	;RP0=1, select bank1
  3411  00B5' 1303               	bcf	3,6	;RP1=0, select bank1
  3412  00B6' 0080'              	movwf	(log@x+2)^(0+128)
  3413  00B7' 1283               	bcf	3,5	;RP0=0, select bank0
  3414  00B8' 1303               	bcf	3,6	;RP1=0, select bank0
  3415  00B9' 0838'              	movf	?___fladd+1,w
  3416  00BA' 1683               	bsf	3,5	;RP0=1, select bank1
  3417  00BB' 1303               	bcf	3,6	;RP1=0, select bank1
  3418  00BC' 0080'              	movwf	(log@x+1)^(0+128)
  3419  00BD' 1283               	bcf	3,5	;RP0=0, select bank0
  3420  00BE' 1303               	bcf	3,6	;RP1=0, select bank0
  3421  00BF' 0837'              	movf	?___fladd,w
  3422  00C0' 1683               	bsf	3,5	;RP0=1, select bank1
  3423  00C1' 1303               	bcf	3,6	;RP1=0, select bank1
  3424  00C2' 0080'              	movwf	log@x^(0+128)
  3425  00C3'                    l4609:
  3426  00C3' 30FF               	movlw	255
  3427  00C4' 0780'              	addwf	log@exponent^(0+128),f
  3428  00C5' 1803               	skipnc
  3429  00C6' 0A80'              	incf	(log@exponent+1)^(0+128),f
  3430  00C7' 30FF               	movlw	255
  3431  00C8' 0780'              	addwf	(log@exponent+1)^(0+128),f
  3432  00C9'                    l4611:
  3433  00C9' 0800'              	movf	(log@x+3)^(0+128),w
  3434  00CA' 0080'              	movwf	(eval_poly@x+3)^(0+128)
  3435  00CB' 0800'              	movf	(log@x+2)^(0+128),w
  3436  00CC' 0080'              	movwf	(eval_poly@x+2)^(0+128)
  3437  00CD' 0800'              	movf	(log@x+1)^(0+128),w
  3438  00CE' 0080'              	movwf	(eval_poly@x+1)^(0+128)
  3439  00CF' 0800'              	movf	log@x^(0+128),w
  3440  00D0' 0080'              	movwf	eval_poly@x^(0+128)
  3441  00D1' 3029               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  3442  00D2' 0080'              	movwf	eval_poly@d^(0+128)
  3443  00D3' 3008               	movlw	8
  3444  00D4' 0080'              	movwf	eval_poly@n^(0+128)
  3445  00D5' 3000               	movlw	0
  3446  00D6' 0081'              	movwf	(eval_poly@n^(0+128)+1)
  3447  00D7' 118A' 2000' 118A'  	fcall	_eval_poly
  3448  00DA' 1683               	bsf	3,5	;RP0=1, select bank1
  3449  00DB' 1303               	bcf	3,6	;RP1=0, select bank1
  3450  00DC' 0800'              	movf	(?_eval_poly+3)^(0+128),w
  3451  00DD' 0080'              	movwf	(log@x+3)^(0+128)
  3452  00DE' 0800'              	movf	(?_eval_poly+2)^(0+128),w
  3453  00DF' 0080'              	movwf	(log@x+2)^(0+128)
  3454  00E0' 0800'              	movf	(?_eval_poly+1)^(0+128),w
  3455  00E1' 0080'              	movwf	(log@x+1)^(0+128)
  3456  00E2' 0800'              	movf	?_eval_poly^(0+128),w
  3457  00E3' 0080'              	movwf	log@x^(0+128)
  3458  00E4'                    l4613:
  3459  00E4' 0800'              	movf	(log@x+3)^(0+128),w
  3460  00E5' 1283               	bcf	3,5	;RP0=0, select bank0
  3461  00E6' 1303               	bcf	3,6	;RP1=0, select bank0
  3462  00E7' 00BA'              	movwf	___fladd@b+3
  3463  00E8' 1683               	bsf	3,5	;RP0=1, select bank1
  3464  00E9' 1303               	bcf	3,6	;RP1=0, select bank1
  3465  00EA' 0800'              	movf	(log@x+2)^(0+128),w
  3466  00EB' 1283               	bcf	3,5	;RP0=0, select bank0
  3467  00EC' 1303               	bcf	3,6	;RP1=0, select bank0
  3468  00ED' 00B9'              	movwf	___fladd@b+2
  3469  00EE' 1683               	bsf	3,5	;RP0=1, select bank1
  3470  00EF' 1303               	bcf	3,6	;RP1=0, select bank1
  3471  00F0' 0800'              	movf	(log@x+1)^(0+128),w
  3472  00F1' 1283               	bcf	3,5	;RP0=0, select bank0
  3473  00F2' 1303               	bcf	3,6	;RP1=0, select bank0
  3474  00F3' 00B8'              	movwf	___fladd@b+1
  3475  00F4' 1683               	bsf	3,5	;RP0=1, select bank1
  3476  00F5' 1303               	bcf	3,6	;RP1=0, select bank1
  3477  00F6' 0800'              	movf	log@x^(0+128),w
  3478  00F7' 1283               	bcf	3,5	;RP0=0, select bank0
  3479  00F8' 1303               	bcf	3,6	;RP1=0, select bank0
  3480  00F9' 00B7'              	movwf	___fladd@b
  3481  00FA' 303F               	movlw	63
  3482  00FB' 00A0'              	movwf	___flmul@b+3
  3483  00FC' 3031               	movlw	49
  3484  00FD' 009F'              	movwf	___flmul@b+2
  3485  00FE' 3072               	movlw	114
  3486  00FF' 009E'              	movwf	___flmul@b+1
  3487  0100' 3018               	movlw	24
  3488  0101' 009D'              	movwf	___flmul@b
  3489  0102' 1683               	bsf	3,5	;RP0=1, select bank1
  3490  0103' 1303               	bcf	3,6	;RP1=0, select bank1
  3491  0104' 0800'              	movf	log@exponent^(0+128),w
  3492  0105' 008A'              	movwf	___xxtofl@val
  3493  0106' 0800'              	movf	(log@exponent+1)^(0+128),w
  3494  0107' 008B'              	movwf	___xxtofl@val+1
  3495  0108' 3000               	movlw	0
  3496  0109' 1B8B'              	btfsc	___xxtofl@val+1,7
  3497  010A' 30FF               	movlw	255
  3498  010B' 008C'              	movwf	___xxtofl@val+2
  3499  010C' 008D'              	movwf	___xxtofl@val+3
  3500  010D' 3001               	movlw	1
  3501  010E' 118A' 2000' 118A'  	fcall	___xxtofl
  3502  0111' 080D'              	movf	?___xxtofl+3,w
  3503  0112' 1283               	bcf	3,5	;RP0=0, select bank0
  3504  0113' 1303               	bcf	3,6	;RP1=0, select bank0
  3505  0114' 00A4'              	movwf	___flmul@a+3
  3506  0115' 080C'              	movf	?___xxtofl+2,w
  3507  0116' 00A3'              	movwf	___flmul@a+2
  3508  0117' 080B'              	movf	?___xxtofl+1,w
  3509  0118' 00A2'              	movwf	___flmul@a+1
  3510  0119' 080A'              	movf	?___xxtofl,w
  3511  011A' 00A1'              	movwf	___flmul@a
  3512  011B' 118A' 2000' 118A'  	fcall	___flmul
  3513  011E' 1283               	bcf	3,5	;RP0=0, select bank0
  3514  011F' 1303               	bcf	3,6	;RP1=0, select bank0
  3515  0120' 0820'              	movf	?___flmul+3,w
  3516  0121' 00BE'              	movwf	___fladd@a+3
  3517  0122' 081F'              	movf	?___flmul+2,w
  3518  0123' 00BD'              	movwf	___fladd@a+2
  3519  0124' 081E'              	movf	?___flmul+1,w
  3520  0125' 00BC'              	movwf	___fladd@a+1
  3521  0126' 081D'              	movf	?___flmul,w
  3522  0127' 00BB'              	movwf	___fladd@a
  3523  0128' 118A' 2000' 118A'  	fcall	___fladd
  3524  012B' 1283               	bcf	3,5	;RP0=0, select bank0
  3525  012C' 1303               	bcf	3,6	;RP1=0, select bank0
  3526  012D' 083A'              	movf	?___fladd+3,w
  3527  012E' 1683               	bsf	3,5	;RP0=1, select bank1
  3528  012F' 1303               	bcf	3,6	;RP1=0, select bank1
  3529  0130' 0080'              	movwf	(?_log+3)^(0+128)
  3530  0131' 1283               	bcf	3,5	;RP0=0, select bank0
  3531  0132' 1303               	bcf	3,6	;RP1=0, select bank0
  3532  0133' 0839'              	movf	?___fladd+2,w
  3533  0134' 1683               	bsf	3,5	;RP0=1, select bank1
  3534  0135' 1303               	bcf	3,6	;RP1=0, select bank1
  3535  0136' 0080'              	movwf	(?_log+2)^(0+128)
  3536  0137' 1283               	bcf	3,5	;RP0=0, select bank0
  3537  0138' 1303               	bcf	3,6	;RP1=0, select bank0
  3538  0139' 0838'              	movf	?___fladd+1,w
  3539  013A' 1683               	bsf	3,5	;RP0=1, select bank1
  3540  013B' 1303               	bcf	3,6	;RP1=0, select bank1
  3541  013C' 0080'              	movwf	(?_log+1)^(0+128)
  3542  013D' 1283               	bcf	3,5	;RP0=0, select bank0
  3543  013E' 1303               	bcf	3,6	;RP1=0, select bank0
  3544  013F' 0837'              	movf	?___fladd,w
  3545  0140' 1683               	bsf	3,5	;RP0=1, select bank1
  3546  0141' 1303               	bcf	3,6	;RP1=0, select bank1
  3547  0142' 0080'              	movwf	?_log^(0+128)
  3548  0143'                    l919:
  3549  0143' 0008               	return
  3550  0144'                    __end_of_log:
  3551                           
  3552                           	psect	text8
  3553  0000'                    __ptext8:	
  3554 ;; *************** function _exp *****************
  3555 ;; Defined at:
  3556 ;;		line 12 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/exp.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  x               4   19[BANK1 ] int 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;  exponent        2   27[BANK1 ] int 
  3561 ;;  sign            1   29[BANK1 ] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  4   19[BANK1 ] unsigned char 
  3564 ;; Registers used:
  3565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3571 ;;      Params:         0       0       4       0
  3572 ;;      Locals:         0       0       7       0
  3573 ;;      Temps:          0       0       0       0
  3574 ;;      Totals:         0       0      11       0
  3575 ;;Total ram usage:       11 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; Hardware stack levels required when called: 3
  3578 ;; This function calls:
  3579 ;;		___fldiv
  3580 ;;		___fleq
  3581 ;;		___flge
  3582 ;;		___flmul
  3583 ;;		___flneg
  3584 ;;		___flsub
  3585 ;;		___fltol
  3586 ;;		___xxtofl
  3587 ;;		_eval_poly
  3588 ;;		_floor
  3589 ;;		_ldexp
  3590 ;; This function is called by:
  3591 ;;		_pow
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595  0000'                    _exp:	
  3596                           ;psect for function _exp
  3597                           
  3598  0000'                    l4617:	
  3599                           ;incstack = 0
  3600                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3601                           
  3602  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  3603  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  3604  0002' 0800'              	movf	(exp@x+3)^(0+128),w
  3605  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  3606  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  3607  0005' 008D'              	movwf	___fleq@ff1+3
  3608  0006' 1683               	bsf	3,5	;RP0=1, select bank1
  3609  0007' 1303               	bcf	3,6	;RP1=0, select bank1
  3610  0008' 0800'              	movf	(exp@x+2)^(0+128),w
  3611  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  3612  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  3613  000B' 008C'              	movwf	___fleq@ff1+2
  3614  000C' 1683               	bsf	3,5	;RP0=1, select bank1
  3615  000D' 1303               	bcf	3,6	;RP1=0, select bank1
  3616  000E' 0800'              	movf	(exp@x+1)^(0+128),w
  3617  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  3618  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  3619  0011' 008B'              	movwf	___fleq@ff1+1
  3620  0012' 1683               	bsf	3,5	;RP0=1, select bank1
  3621  0013' 1303               	bcf	3,6	;RP1=0, select bank1
  3622  0014' 0800'              	movf	exp@x^(0+128),w
  3623  0015' 1283               	bcf	3,5	;RP0=0, select bank0
  3624  0016' 1303               	bcf	3,6	;RP1=0, select bank0
  3625  0017' 008A'              	movwf	___fleq@ff1
  3626  0018' 3000               	movlw	0
  3627  0019' 0091'              	movwf	___fleq@ff2+3
  3628  001A' 3000               	movlw	0
  3629  001B' 0090'              	movwf	___fleq@ff2+2
  3630  001C' 3000               	movlw	0
  3631  001D' 008F'              	movwf	___fleq@ff2+1
  3632  001E' 3000               	movlw	0
  3633  001F' 008E'              	movwf	___fleq@ff2
  3634  0020' 118A' 2000' 118A'  	fcall	___fleq
  3635  0023' 1C03               	btfss	3,0
  3636  0024' 2800'              	goto	u6521
  3637  0025' 2800'              	goto	u6520
  3638  0026'                    u6521:
  3639  0026' 2800'              	goto	l4623
  3640  0027'                    u6520:
  3641  0027'                    l4619:
  3642  0027' 303F               	movlw	63
  3643  0028' 1683               	bsf	3,5	;RP0=1, select bank1
  3644  0029' 1303               	bcf	3,6	;RP1=0, select bank1
  3645  002A' 0080'              	movwf	(?_exp+3)^(0+128)
  3646  002B' 3080               	movlw	128
  3647  002C' 0080'              	movwf	(?_exp+2)^(0+128)
  3648  002D' 3000               	movlw	0
  3649  002E' 0080'              	movwf	(?_exp+1)^(0+128)
  3650  002F' 3000               	movlw	0
  3651  0030' 0080'              	movwf	?_exp^(0+128)
  3652  0031' 2800'              	goto	l871
  3653  0032'                    l4623:
  3654  0032' 3044               	movlw	68
  3655  0033' 0083'              	movwf	___flge@ff1+3
  3656  0034' 3031               	movlw	49
  3657  0035' 0082'              	movwf	___flge@ff1+2
  3658  0036' 3072               	movlw	114
  3659  0037' 0081'              	movwf	___flge@ff1+1
  3660  0038' 3018               	movlw	24
  3661  0039' 0080'              	movwf	___flge@ff1
  3662  003A' 1683               	bsf	3,5	;RP0=1, select bank1
  3663  003B' 1303               	bcf	3,6	;RP1=0, select bank1
  3664  003C' 0800'              	movf	(exp@x+3)^(0+128),w
  3665  003D' 0087'              	movwf	___flge@ff2+3
  3666  003E' 0800'              	movf	(exp@x+2)^(0+128),w
  3667  003F' 0086'              	movwf	___flge@ff2+2
  3668  0040' 0800'              	movf	(exp@x+1)^(0+128),w
  3669  0041' 0085'              	movwf	___flge@ff2+1
  3670  0042' 0800'              	movf	exp@x^(0+128),w
  3671  0043' 0084'              	movwf	___flge@ff2
  3672  0044' 118A' 2000' 118A'  	fcall	___flge
  3673  0047' 1803               	btfsc	3,0
  3674  0048' 2800'              	goto	u6531
  3675  0049' 2800'              	goto	u6530
  3676  004A'                    u6531:
  3677  004A' 2800'              	goto	l4629
  3678  004B'                    u6530:
  3679  004B'                    l4625:
  3680  004B' 3022               	movlw	34
  3681  004C' 1283               	bcf	3,5	;RP0=0, select bank2
  3682  004D' 1703               	bsf	3,6	;RP1=1, select bank2
  3683  004E' 0080'              	movwf	_errno^(0+256)
  3684  004F' 3000               	movlw	0
  3685  0050' 0081'              	movwf	(_errno^(0+256)+1)
  3686  0051' 307F               	movlw	127
  3687  0052' 1683               	bsf	3,5	;RP0=1, select bank1
  3688  0053' 1303               	bcf	3,6	;RP1=0, select bank1
  3689  0054' 0080'              	movwf	(?_exp+3)^(0+128)
  3690  0055' 307F               	movlw	127
  3691  0056' 0080'              	movwf	(?_exp+2)^(0+128)
  3692  0057' 30FF               	movlw	255
  3693  0058' 0080'              	movwf	(?_exp+1)^(0+128)
  3694  0059' 30FF               	movlw	255
  3695  005A' 0080'              	movwf	?_exp^(0+128)
  3696  005B' 2800'              	goto	l871
  3697  005C'                    l4629:
  3698  005C' 1683               	bsf	3,5	;RP0=1, select bank1
  3699  005D' 1303               	bcf	3,6	;RP1=0, select bank1
  3700  005E' 0800'              	movf	(exp@x+3)^(0+128),w
  3701  005F' 0083'              	movwf	___flge@ff1+3
  3702  0060' 0800'              	movf	(exp@x+2)^(0+128),w
  3703  0061' 0082'              	movwf	___flge@ff1+2
  3704  0062' 0800'              	movf	(exp@x+1)^(0+128),w
  3705  0063' 0081'              	movwf	___flge@ff1+1
  3706  0064' 0800'              	movf	exp@x^(0+128),w
  3707  0065' 0080'              	movwf	___flge@ff1
  3708  0066' 30C4               	movlw	196
  3709  0067' 0087'              	movwf	___flge@ff2+3
  3710  0068' 303A               	movlw	58
  3711  0069' 0086'              	movwf	___flge@ff2+2
  3712  006A' 3048               	movlw	72
  3713  006B' 0085'              	movwf	___flge@ff2+1
  3714  006C' 3087               	movlw	135
  3715  006D' 0084'              	movwf	___flge@ff2
  3716  006E' 118A' 2000' 118A'  	fcall	___flge
  3717  0071' 1803               	btfsc	3,0
  3718  0072' 2800'              	goto	u6541
  3719  0073' 2800'              	goto	u6540
  3720  0074'                    u6541:
  3721  0074' 2800'              	goto	l4635
  3722  0075'                    u6540:
  3723  0075'                    l4631:
  3724  0075' 3022               	movlw	34
  3725  0076' 1283               	bcf	3,5	;RP0=0, select bank2
  3726  0077' 1703               	bsf	3,6	;RP1=1, select bank2
  3727  0078' 0080'              	movwf	_errno^(0+256)
  3728  0079' 3000               	movlw	0
  3729  007A' 0081'              	movwf	(_errno^(0+256)+1)
  3730  007B' 3000               	movlw	0
  3731  007C' 1683               	bsf	3,5	;RP0=1, select bank1
  3732  007D' 1303               	bcf	3,6	;RP1=0, select bank1
  3733  007E' 0080'              	movwf	(?_exp+3)^(0+128)
  3734  007F' 3000               	movlw	0
  3735  0080' 0080'              	movwf	(?_exp+2)^(0+128)
  3736  0081' 3000               	movlw	0
  3737  0082' 0080'              	movwf	(?_exp+1)^(0+128)
  3738  0083' 3000               	movlw	0
  3739  0084' 0080'              	movwf	?_exp^(0+128)
  3740  0085' 2800'              	goto	l871
  3741  0086'                    l4635:
  3742  0086' 1683               	bsf	3,5	;RP0=1, select bank1
  3743  0087' 1303               	bcf	3,6	;RP1=0, select bank1
  3744  0088' 0800'              	movf	(exp@x+3)^(0+128),w
  3745  0089' 0083'              	movwf	___flge@ff1+3
  3746  008A' 0800'              	movf	(exp@x+2)^(0+128),w
  3747  008B' 0082'              	movwf	___flge@ff1+2
  3748  008C' 0800'              	movf	(exp@x+1)^(0+128),w
  3749  008D' 0081'              	movwf	___flge@ff1+1
  3750  008E' 0800'              	movf	exp@x^(0+128),w
  3751  008F' 0080'              	movwf	___flge@ff1
  3752  0090' 3000               	movlw	0
  3753  0091' 0087'              	movwf	___flge@ff2+3
  3754  0092' 3000               	movlw	0
  3755  0093' 0086'              	movwf	___flge@ff2+2
  3756  0094' 3000               	movlw	0
  3757  0095' 0085'              	movwf	___flge@ff2+1
  3758  0096' 3000               	movlw	0
  3759  0097' 0084'              	movwf	___flge@ff2
  3760  0098' 118A' 2000' 118A'  	fcall	___flge
  3761  009B' 1C03               	btfss	3,0
  3762  009C' 2800'              	goto	u6551
  3763  009D' 2800'              	goto	u6550
  3764  009E'                    u6551:
  3765  009E' 3001               	movlw	1
  3766  009F' 2800'              	goto	u6560
  3767  00A0'                    u6550:
  3768  00A0' 3000               	movlw	0
  3769  00A1'                    u6560:
  3770  00A1' 1683               	bsf	3,5	;RP0=1, select bank1
  3771  00A2' 1303               	bcf	3,6	;RP1=0, select bank1
  3772  00A3' 0080'              	movwf	exp@sign^(0+128)
  3773  00A4'                    l4637:
  3774  00A4' 0800'              	movf	exp@sign^(0+128),w
  3775  00A5' 1903               	btfsc	3,2
  3776  00A6' 2800'              	goto	u6571
  3777  00A7' 2800'              	goto	u6570
  3778  00A8'                    u6571:
  3779  00A8' 2800'              	goto	l4641
  3780  00A9'                    u6570:
  3781  00A9'                    l4639:
  3782  00A9' 0800'              	movf	(exp@x+3)^(0+128),w
  3783  00AA' 0083'              	movwf	___flneg@f1+3
  3784  00AB' 0800'              	movf	(exp@x+2)^(0+128),w
  3785  00AC' 0082'              	movwf	___flneg@f1+2
  3786  00AD' 0800'              	movf	(exp@x+1)^(0+128),w
  3787  00AE' 0081'              	movwf	___flneg@f1+1
  3788  00AF' 0800'              	movf	exp@x^(0+128),w
  3789  00B0' 0080'              	movwf	___flneg@f1
  3790  00B1' 118A' 2000' 118A'  	fcall	___flneg
  3791  00B4' 0803'              	movf	?___flneg+3,w
  3792  00B5' 1683               	bsf	3,5	;RP0=1, select bank1
  3793  00B6' 1303               	bcf	3,6	;RP1=0, select bank1
  3794  00B7' 0080'              	movwf	(exp@x+3)^(0+128)
  3795  00B8' 0802'              	movf	?___flneg+2,w
  3796  00B9' 0080'              	movwf	(exp@x+2)^(0+128)
  3797  00BA' 0801'              	movf	?___flneg+1,w
  3798  00BB' 0080'              	movwf	(exp@x+1)^(0+128)
  3799  00BC' 0800'              	movf	?___flneg,w
  3800  00BD' 0080'              	movwf	exp@x^(0+128)
  3801  00BE'                    l4641:
  3802  00BE' 303F               	movlw	63
  3803  00BF' 1283               	bcf	3,5	;RP0=0, select bank0
  3804  00C0' 1303               	bcf	3,6	;RP1=0, select bank0
  3805  00C1' 00A0'              	movwf	___flmul@b+3
  3806  00C2' 30B8               	movlw	184
  3807  00C3' 009F'              	movwf	___flmul@b+2
  3808  00C4' 30AA               	movlw	170
  3809  00C5' 009E'              	movwf	___flmul@b+1
  3810  00C6' 303B               	movlw	59
  3811  00C7' 009D'              	movwf	___flmul@b
  3812  00C8' 1683               	bsf	3,5	;RP0=1, select bank1
  3813  00C9' 1303               	bcf	3,6	;RP1=0, select bank1
  3814  00CA' 0800'              	movf	(exp@x+3)^(0+128),w
  3815  00CB' 1283               	bcf	3,5	;RP0=0, select bank0
  3816  00CC' 1303               	bcf	3,6	;RP1=0, select bank0
  3817  00CD' 00A4'              	movwf	___flmul@a+3
  3818  00CE' 1683               	bsf	3,5	;RP0=1, select bank1
  3819  00CF' 1303               	bcf	3,6	;RP1=0, select bank1
  3820  00D0' 0800'              	movf	(exp@x+2)^(0+128),w
  3821  00D1' 1283               	bcf	3,5	;RP0=0, select bank0
  3822  00D2' 1303               	bcf	3,6	;RP1=0, select bank0
  3823  00D3' 00A3'              	movwf	___flmul@a+2
  3824  00D4' 1683               	bsf	3,5	;RP0=1, select bank1
  3825  00D5' 1303               	bcf	3,6	;RP1=0, select bank1
  3826  00D6' 0800'              	movf	(exp@x+1)^(0+128),w
  3827  00D7' 1283               	bcf	3,5	;RP0=0, select bank0
  3828  00D8' 1303               	bcf	3,6	;RP1=0, select bank0
  3829  00D9' 00A2'              	movwf	___flmul@a+1
  3830  00DA' 1683               	bsf	3,5	;RP0=1, select bank1
  3831  00DB' 1303               	bcf	3,6	;RP1=0, select bank1
  3832  00DC' 0800'              	movf	exp@x^(0+128),w
  3833  00DD' 1283               	bcf	3,5	;RP0=0, select bank0
  3834  00DE' 1303               	bcf	3,6	;RP1=0, select bank0
  3835  00DF' 00A1'              	movwf	___flmul@a
  3836  00E0' 118A' 2000' 118A'  	fcall	___flmul
  3837  00E3' 1283               	bcf	3,5	;RP0=0, select bank0
  3838  00E4' 1303               	bcf	3,6	;RP1=0, select bank0
  3839  00E5' 0820'              	movf	?___flmul+3,w
  3840  00E6' 1683               	bsf	3,5	;RP0=1, select bank1
  3841  00E7' 1303               	bcf	3,6	;RP1=0, select bank1
  3842  00E8' 0080'              	movwf	(exp@x+3)^(0+128)
  3843  00E9' 1283               	bcf	3,5	;RP0=0, select bank0
  3844  00EA' 1303               	bcf	3,6	;RP1=0, select bank0
  3845  00EB' 081F'              	movf	?___flmul+2,w
  3846  00EC' 1683               	bsf	3,5	;RP0=1, select bank1
  3847  00ED' 1303               	bcf	3,6	;RP1=0, select bank1
  3848  00EE' 0080'              	movwf	(exp@x+2)^(0+128)
  3849  00EF' 1283               	bcf	3,5	;RP0=0, select bank0
  3850  00F0' 1303               	bcf	3,6	;RP1=0, select bank0
  3851  00F1' 081E'              	movf	?___flmul+1,w
  3852  00F2' 1683               	bsf	3,5	;RP0=1, select bank1
  3853  00F3' 1303               	bcf	3,6	;RP1=0, select bank1
  3854  00F4' 0080'              	movwf	(exp@x+1)^(0+128)
  3855  00F5' 1283               	bcf	3,5	;RP0=0, select bank0
  3856  00F6' 1303               	bcf	3,6	;RP1=0, select bank0
  3857  00F7' 081D'              	movf	?___flmul,w
  3858  00F8' 1683               	bsf	3,5	;RP0=1, select bank1
  3859  00F9' 1303               	bcf	3,6	;RP1=0, select bank1
  3860  00FA' 0080'              	movwf	exp@x^(0+128)
  3861  00FB'                    l4643:
  3862  00FB' 0800'              	movf	(exp@x+3)^(0+128),w
  3863  00FC' 1283               	bcf	3,5	;RP0=0, select bank0
  3864  00FD' 1303               	bcf	3,6	;RP1=0, select bank0
  3865  00FE' 00CE'              	movwf	floor@x+3
  3866  00FF' 1683               	bsf	3,5	;RP0=1, select bank1
  3867  0100' 1303               	bcf	3,6	;RP1=0, select bank1
  3868  0101' 0800'              	movf	(exp@x+2)^(0+128),w
  3869  0102' 1283               	bcf	3,5	;RP0=0, select bank0
  3870  0103' 1303               	bcf	3,6	;RP1=0, select bank0
  3871  0104' 00CD'              	movwf	floor@x+2
  3872  0105' 1683               	bsf	3,5	;RP0=1, select bank1
  3873  0106' 1303               	bcf	3,6	;RP1=0, select bank1
  3874  0107' 0800'              	movf	(exp@x+1)^(0+128),w
  3875  0108' 1283               	bcf	3,5	;RP0=0, select bank0
  3876  0109' 1303               	bcf	3,6	;RP1=0, select bank0
  3877  010A' 00CC'              	movwf	floor@x+1
  3878  010B' 1683               	bsf	3,5	;RP0=1, select bank1
  3879  010C' 1303               	bcf	3,6	;RP1=0, select bank1
  3880  010D' 0800'              	movf	exp@x^(0+128),w
  3881  010E' 1283               	bcf	3,5	;RP0=0, select bank0
  3882  010F' 1303               	bcf	3,6	;RP1=0, select bank0
  3883  0110' 00CB'              	movwf	floor@x
  3884  0111' 118A' 2000' 118A'  	fcall	_floor
  3885  0114' 1283               	bcf	3,5	;RP0=0, select bank0
  3886  0115' 1303               	bcf	3,6	;RP1=0, select bank0
  3887  0116' 084E'              	movf	?_floor+3,w
  3888  0117' 1683               	bsf	3,5	;RP0=1, select bank1
  3889  0118' 1303               	bcf	3,6	;RP1=0, select bank1
  3890  0119' 0080'              	movwf	(_exp$1248+3)^(0+128)
  3891  011A' 1283               	bcf	3,5	;RP0=0, select bank0
  3892  011B' 1303               	bcf	3,6	;RP1=0, select bank0
  3893  011C' 084D'              	movf	?_floor+2,w
  3894  011D' 1683               	bsf	3,5	;RP0=1, select bank1
  3895  011E' 1303               	bcf	3,6	;RP1=0, select bank1
  3896  011F' 0080'              	movwf	(_exp$1248+2)^(0+128)
  3897  0120' 1283               	bcf	3,5	;RP0=0, select bank0
  3898  0121' 1303               	bcf	3,6	;RP1=0, select bank0
  3899  0122' 084C'              	movf	?_floor+1,w
  3900  0123' 1683               	bsf	3,5	;RP0=1, select bank1
  3901  0124' 1303               	bcf	3,6	;RP1=0, select bank1
  3902  0125' 0080'              	movwf	(_exp$1248+1)^(0+128)
  3903  0126' 1283               	bcf	3,5	;RP0=0, select bank0
  3904  0127' 1303               	bcf	3,6	;RP1=0, select bank0
  3905  0128' 084B'              	movf	?_floor,w
  3906  0129' 1683               	bsf	3,5	;RP0=1, select bank1
  3907  012A' 1303               	bcf	3,6	;RP1=0, select bank1
  3908  012B' 0080'              	movwf	_exp$1248^(0+128)
  3909  012C'                    l4645:
  3910  012C' 0800'              	movf	(_exp$1248+3)^(0+128),w
  3911  012D' 0083'              	movwf	___fltol@f1+3
  3912  012E' 0800'              	movf	(_exp$1248+2)^(0+128),w
  3913  012F' 0082'              	movwf	___fltol@f1+2
  3914  0130' 0800'              	movf	(_exp$1248+1)^(0+128),w
  3915  0131' 0081'              	movwf	___fltol@f1+1
  3916  0132' 0800'              	movf	_exp$1248^(0+128),w
  3917  0133' 0080'              	movwf	___fltol@f1
  3918  0134' 118A' 2000' 118A'  	fcall	___fltol
  3919  0137' 0801'              	movf	?___fltol+1,w
  3920  0138' 1683               	bsf	3,5	;RP0=1, select bank1
  3921  0139' 1303               	bcf	3,6	;RP1=0, select bank1
  3922  013A' 0080'              	movwf	(exp@exponent+1)^(0+128)
  3923  013B' 0800'              	movf	?___fltol,w
  3924  013C' 0080'              	movwf	exp@exponent^(0+128)
  3925  013D'                    l4647:
  3926  013D' 0800'              	movf	exp@exponent^(0+128),w
  3927  013E' 008A'              	movwf	___xxtofl@val
  3928  013F' 0800'              	movf	(exp@exponent+1)^(0+128),w
  3929  0140' 008B'              	movwf	___xxtofl@val+1
  3930  0141' 3000               	movlw	0
  3931  0142' 1B8B'              	btfsc	___xxtofl@val+1,7
  3932  0143' 30FF               	movlw	255
  3933  0144' 008C'              	movwf	___xxtofl@val+2
  3934  0145' 008D'              	movwf	___xxtofl@val+3
  3935  0146' 3001               	movlw	1
  3936  0147' 118A' 2000' 118A'  	fcall	___xxtofl
  3937  014A' 080D'              	movf	?___xxtofl+3,w
  3938  014B' 1683               	bsf	3,5	;RP0=1, select bank1
  3939  014C' 1303               	bcf	3,6	;RP1=0, select bank1
  3940  014D' 0080'              	movwf	(___flsub@a+3)^(0+128)
  3941  014E' 080C'              	movf	?___xxtofl+2,w
  3942  014F' 0080'              	movwf	(___flsub@a+2)^(0+128)
  3943  0150' 080B'              	movf	?___xxtofl+1,w
  3944  0151' 0080'              	movwf	(___flsub@a+1)^(0+128)
  3945  0152' 080A'              	movf	?___xxtofl,w
  3946  0153' 0080'              	movwf	___flsub@a^(0+128)
  3947  0154' 0800'              	movf	(exp@x+3)^(0+128),w
  3948  0155' 0080'              	movwf	(___flsub@b+3)^(0+128)
  3949  0156' 0800'              	movf	(exp@x+2)^(0+128),w
  3950  0157' 0080'              	movwf	(___flsub@b+2)^(0+128)
  3951  0158' 0800'              	movf	(exp@x+1)^(0+128),w
  3952  0159' 0080'              	movwf	(___flsub@b+1)^(0+128)
  3953  015A' 0800'              	movf	exp@x^(0+128),w
  3954  015B' 0080'              	movwf	___flsub@b^(0+128)
  3955  015C' 118A' 2000' 118A'  	fcall	___flsub
  3956  015F' 1683               	bsf	3,5	;RP0=1, select bank1
  3957  0160' 1303               	bcf	3,6	;RP1=0, select bank1
  3958  0161' 0800'              	movf	(?___flsub+3)^(0+128),w
  3959  0162' 0080'              	movwf	(exp@x+3)^(0+128)
  3960  0163' 0800'              	movf	(?___flsub+2)^(0+128),w
  3961  0164' 0080'              	movwf	(exp@x+2)^(0+128)
  3962  0165' 0800'              	movf	(?___flsub+1)^(0+128),w
  3963  0166' 0080'              	movwf	(exp@x+1)^(0+128)
  3964  0167' 0800'              	movf	?___flsub^(0+128),w
  3965  0168' 0080'              	movwf	exp@x^(0+128)
  3966  0169'                    l4649:
  3967  0169' 0800'              	movf	(exp@x+3)^(0+128),w
  3968  016A' 0080'              	movwf	(eval_poly@x+3)^(0+128)
  3969  016B' 0800'              	movf	(exp@x+2)^(0+128),w
  3970  016C' 0080'              	movwf	(eval_poly@x+2)^(0+128)
  3971  016D' 0800'              	movf	(exp@x+1)^(0+128),w
  3972  016E' 0080'              	movwf	(eval_poly@x+1)^(0+128)
  3973  016F' 0800'              	movf	exp@x^(0+128),w
  3974  0170' 0080'              	movwf	eval_poly@x^(0+128)
  3975  0171' 3001               	movlw	(low ((exp@coeff-__stringbase)| (0+32768)))& (0+255)
  3976  0172' 0080'              	movwf	eval_poly@d^(0+128)
  3977  0173' 3009               	movlw	9
  3978  0174' 0080'              	movwf	eval_poly@n^(0+128)
  3979  0175' 3000               	movlw	0
  3980  0176' 0081'              	movwf	(eval_poly@n^(0+128)+1)
  3981  0177' 118A' 2000' 118A'  	fcall	_eval_poly
  3982  017A' 1683               	bsf	3,5	;RP0=1, select bank1
  3983  017B' 1303               	bcf	3,6	;RP1=0, select bank1
  3984  017C' 0800'              	movf	(?_eval_poly+3)^(0+128),w
  3985  017D' 0080'              	movwf	(ldexp@value+3)^(0+128)
  3986  017E' 0800'              	movf	(?_eval_poly+2)^(0+128),w
  3987  017F' 0080'              	movwf	(ldexp@value+2)^(0+128)
  3988  0180' 0800'              	movf	(?_eval_poly+1)^(0+128),w
  3989  0181' 0080'              	movwf	(ldexp@value+1)^(0+128)
  3990  0182' 0800'              	movf	?_eval_poly^(0+128),w
  3991  0183' 0080'              	movwf	ldexp@value^(0+128)
  3992  0184' 0800'              	movf	(exp@exponent+1)^(0+128),w
  3993  0185' 0080'              	movwf	(ldexp@newexp+1)^(0+128)
  3994  0186' 0800'              	movf	exp@exponent^(0+128),w
  3995  0187' 0080'              	movwf	ldexp@newexp^(0+128)
  3996  0188' 118A' 2000' 118A'  	fcall	_ldexp
  3997  018B' 1683               	bsf	3,5	;RP0=1, select bank1
  3998  018C' 1303               	bcf	3,6	;RP1=0, select bank1
  3999  018D' 0800'              	movf	(?_ldexp+3)^(0+128),w
  4000  018E' 0080'              	movwf	(exp@x+3)^(0+128)
  4001  018F' 0800'              	movf	(?_ldexp+2)^(0+128),w
  4002  0190' 0080'              	movwf	(exp@x+2)^(0+128)
  4003  0191' 0800'              	movf	(?_ldexp+1)^(0+128),w
  4004  0192' 0080'              	movwf	(exp@x+1)^(0+128)
  4005  0193' 0800'              	movf	?_ldexp^(0+128),w
  4006  0194' 0080'              	movwf	exp@x^(0+128)
  4007  0195'                    l4651:
  4008  0195' 0800'              	movf	exp@sign^(0+128),w
  4009  0196' 1903               	btfsc	3,2
  4010  0197' 2800'              	goto	u6581
  4011  0198' 2800'              	goto	u6580
  4012  0199'                    u6581:
  4013  0199' 2800'              	goto	l875
  4014  019A'                    u6580:
  4015  019A'                    l4653:
  4016  019A' 0800'              	movf	(exp@x+3)^(0+128),w
  4017  019B' 1283               	bcf	3,5	;RP0=0, select bank0
  4018  019C' 1303               	bcf	3,6	;RP1=0, select bank0
  4019  019D' 008D'              	movwf	___fleq@ff1+3
  4020  019E' 1683               	bsf	3,5	;RP0=1, select bank1
  4021  019F' 1303               	bcf	3,6	;RP1=0, select bank1
  4022  01A0' 0800'              	movf	(exp@x+2)^(0+128),w
  4023  01A1' 1283               	bcf	3,5	;RP0=0, select bank0
  4024  01A2' 1303               	bcf	3,6	;RP1=0, select bank0
  4025  01A3' 008C'              	movwf	___fleq@ff1+2
  4026  01A4' 1683               	bsf	3,5	;RP0=1, select bank1
  4027  01A5' 1303               	bcf	3,6	;RP1=0, select bank1
  4028  01A6' 0800'              	movf	(exp@x+1)^(0+128),w
  4029  01A7' 1283               	bcf	3,5	;RP0=0, select bank0
  4030  01A8' 1303               	bcf	3,6	;RP1=0, select bank0
  4031  01A9' 008B'              	movwf	___fleq@ff1+1
  4032  01AA' 1683               	bsf	3,5	;RP0=1, select bank1
  4033  01AB' 1303               	bcf	3,6	;RP1=0, select bank1
  4034  01AC' 0800'              	movf	exp@x^(0+128),w
  4035  01AD' 1283               	bcf	3,5	;RP0=0, select bank0
  4036  01AE' 1303               	bcf	3,6	;RP1=0, select bank0
  4037  01AF' 008A'              	movwf	___fleq@ff1
  4038  01B0' 307F               	movlw	127
  4039  01B1' 0091'              	movwf	___fleq@ff2+3
  4040  01B2' 307F               	movlw	127
  4041  01B3' 0090'              	movwf	___fleq@ff2+2
  4042  01B4' 30FF               	movlw	255
  4043  01B5' 008F'              	movwf	___fleq@ff2+1
  4044  01B6' 30FF               	movlw	255
  4045  01B7' 008E'              	movwf	___fleq@ff2
  4046  01B8' 118A' 2000' 118A'  	fcall	___fleq
  4047  01BB' 1C03               	btfss	3,0
  4048  01BC' 2800'              	goto	u6591
  4049  01BD' 2800'              	goto	u6590
  4050  01BE'                    u6591:
  4051  01BE' 2800'              	goto	l4659
  4052  01BF'                    u6590:
  4053  01BF'                    l4655:
  4054  01BF' 3000               	movlw	0
  4055  01C0' 1683               	bsf	3,5	;RP0=1, select bank1
  4056  01C1' 1303               	bcf	3,6	;RP1=0, select bank1
  4057  01C2' 0080'              	movwf	(?_exp+3)^(0+128)
  4058  01C3' 3000               	movlw	0
  4059  01C4' 0080'              	movwf	(?_exp+2)^(0+128)
  4060  01C5' 3000               	movlw	0
  4061  01C6' 0080'              	movwf	(?_exp+1)^(0+128)
  4062  01C7' 3000               	movlw	0
  4063  01C8' 0080'              	movwf	?_exp^(0+128)
  4064  01C9' 2800'              	goto	l871
  4065  01CA'                    l4659:
  4066  01CA' 1683               	bsf	3,5	;RP0=1, select bank1
  4067  01CB' 1303               	bcf	3,6	;RP1=0, select bank1
  4068  01CC' 0800'              	movf	(exp@x+3)^(0+128),w
  4069  01CD' 0083'              	movwf	___fldiv@a+3
  4070  01CE' 0800'              	movf	(exp@x+2)^(0+128),w
  4071  01CF' 0082'              	movwf	___fldiv@a+2
  4072  01D0' 0800'              	movf	(exp@x+1)^(0+128),w
  4073  01D1' 0081'              	movwf	___fldiv@a+1
  4074  01D2' 0800'              	movf	exp@x^(0+128),w
  4075  01D3' 0080'              	movwf	___fldiv@a
  4076  01D4' 303F               	movlw	63
  4077  01D5' 0087'              	movwf	___fldiv@b+3
  4078  01D6' 3080               	movlw	128
  4079  01D7' 0086'              	movwf	___fldiv@b+2
  4080  01D8' 3000               	movlw	0
  4081  01D9' 0085'              	movwf	___fldiv@b+1
  4082  01DA' 3000               	movlw	0
  4083  01DB' 0084'              	movwf	___fldiv@b
  4084  01DC' 118A' 2000' 118A'  	fcall	___fldiv
  4085  01DF' 0803'              	movf	?___fldiv+3,w
  4086  01E0' 1683               	bsf	3,5	;RP0=1, select bank1
  4087  01E1' 1303               	bcf	3,6	;RP1=0, select bank1
  4088  01E2' 0080'              	movwf	(?_exp+3)^(0+128)
  4089  01E3' 0802'              	movf	?___fldiv+2,w
  4090  01E4' 0080'              	movwf	(?_exp+2)^(0+128)
  4091  01E5' 0801'              	movf	?___fldiv+1,w
  4092  01E6' 0080'              	movwf	(?_exp+1)^(0+128)
  4093  01E7' 0800'              	movf	?___fldiv,w
  4094  01E8' 0080'              	movwf	?_exp^(0+128)
  4095  01E9' 2800'              	goto	l871
  4096  01EA'                    l875:
  4097  01EA'                    l871:
  4098  01EA' 0008               	return
  4099  01EB'                    __end_of_exp:
  4100                           
  4101                           	psect	text9
  4102  0000'                    __ptext9:	
  4103 ;; *************** function _ldexp *****************
  4104 ;; Defined at:
  4105 ;;		line 277 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/frexp.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  value           4   11[BANK1 ] unsigned char 
  4108 ;;  newexp          2   15[BANK1 ] int 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  4   11[BANK1 ] int 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4120 ;;      Params:         0       0       6       0
  4121 ;;      Locals:         0       0       0       0
  4122 ;;      Temps:          0       0       2       0
  4123 ;;      Totals:         0       0       8       0
  4124 ;;Total ram usage:        8 bytes
  4125 ;; Hardware stack levels used: 1
  4126 ;; Hardware stack levels required when called: 1
  4127 ;; This function calls:
  4128 ;;		___fleq
  4129 ;;		___flge
  4130 ;; This function is called by:
  4131 ;;		_exp
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135  0000'                    _ldexp:	
  4136                           ;psect for function _ldexp
  4137                           
  4138  0000'                    l4557:	
  4139                           ;incstack = 0
  4140                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4141                           
  4142  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  4143  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  4144  0002' 0800'              	movf	(ldexp@value+3)^(0+128),w
  4145  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  4146  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  4147  0005' 008D'              	movwf	___fleq@ff1+3
  4148  0006' 1683               	bsf	3,5	;RP0=1, select bank1
  4149  0007' 1303               	bcf	3,6	;RP1=0, select bank1
  4150  0008' 0800'              	movf	(ldexp@value+2)^(0+128),w
  4151  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  4152  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  4153  000B' 008C'              	movwf	___fleq@ff1+2
  4154  000C' 1683               	bsf	3,5	;RP0=1, select bank1
  4155  000D' 1303               	bcf	3,6	;RP1=0, select bank1
  4156  000E' 0800'              	movf	(ldexp@value+1)^(0+128),w
  4157  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  4158  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  4159  0011' 008B'              	movwf	___fleq@ff1+1
  4160  0012' 1683               	bsf	3,5	;RP0=1, select bank1
  4161  0013' 1303               	bcf	3,6	;RP1=0, select bank1
  4162  0014' 0800'              	movf	ldexp@value^(0+128),w
  4163  0015' 1283               	bcf	3,5	;RP0=0, select bank0
  4164  0016' 1303               	bcf	3,6	;RP1=0, select bank0
  4165  0017' 008A'              	movwf	___fleq@ff1
  4166  0018' 3000               	movlw	0
  4167  0019' 0091'              	movwf	___fleq@ff2+3
  4168  001A' 3000               	movlw	0
  4169  001B' 0090'              	movwf	___fleq@ff2+2
  4170  001C' 3000               	movlw	0
  4171  001D' 008F'              	movwf	___fleq@ff2+1
  4172  001E' 3000               	movlw	0
  4173  001F' 008E'              	movwf	___fleq@ff2
  4174  0020' 118A' 2000' 118A'  	fcall	___fleq
  4175  0023' 1C03               	btfss	3,0
  4176  0024' 2800'              	goto	u6461
  4177  0025' 2800'              	goto	u6460
  4178  0026'                    u6461:
  4179  0026' 2800'              	goto	l4563
  4180  0027'                    u6460:
  4181  0027'                    l4559:
  4182  0027' 3000               	movlw	0
  4183  0028' 1683               	bsf	3,5	;RP0=1, select bank1
  4184  0029' 1303               	bcf	3,6	;RP1=0, select bank1
  4185  002A' 0080'              	movwf	(?_ldexp+3)^(0+128)
  4186  002B' 3000               	movlw	0
  4187  002C' 0080'              	movwf	(?_ldexp+2)^(0+128)
  4188  002D' 3000               	movlw	0
  4189  002E' 0080'              	movwf	(?_ldexp+1)^(0+128)
  4190  002F' 3000               	movlw	0
  4191  0030' 0080'              	movwf	?_ldexp^(0+128)
  4192  0031' 2800'              	goto	l901
  4193  0032'                    l4563:
  4194  0032' 1683               	bsf	3,5	;RP0=1, select bank1
  4195  0033' 1303               	bcf	3,6	;RP1=0, select bank1
  4196  0034' 0803'              	movf	(ldexp@value^(0+128)+3),w
  4197  0035' 397F               	andlw	127
  4198  0036' 0080'              	movwf	??_ldexp^(0+128)
  4199  0037' 0181'              	clrf	(??_ldexp^(0+128)+1)
  4200  0038' 1003               	clrc
  4201  0039' 0D80'              	rlf	??_ldexp^(0+128),f
  4202  003A' 0D81'              	rlf	(??_ldexp^(0+128)+1),f
  4203  003B' 0800'              	movf	??_ldexp^(0+128),w
  4204  003C' 0780'              	addwf	ldexp@newexp^(0+128),f
  4205  003D' 1803               	skipnc
  4206  003E' 0A80'              	incf	(ldexp@newexp+1)^(0+128),f
  4207  003F' 0800'              	movf	(??_ldexp+1)^(0+128),w
  4208  0040' 0780'              	addwf	(ldexp@newexp+1)^(0+128),f
  4209  0041' 0D02'              	rlf	(ldexp@value^(0+128)+2),w
  4210  0042' 0D02'              	rlf	(ldexp@value^(0+128)+2),w
  4211  0043' 3901               	andlw	1
  4212  0044' 0080'              	movwf	??_ldexp^(0+128)
  4213  0045' 0181'              	clrf	(??_ldexp^(0+128)+1)
  4214  0046' 0800'              	movf	??_ldexp^(0+128),w
  4215  0047' 0780'              	addwf	ldexp@newexp^(0+128),f
  4216  0048' 1803               	skipnc
  4217  0049' 0A80'              	incf	(ldexp@newexp+1)^(0+128),f
  4218  004A' 0800'              	movf	(??_ldexp+1)^(0+128),w
  4219  004B' 0780'              	addwf	(ldexp@newexp+1)^(0+128),f
  4220  004C'                    l4565:
  4221  004C' 1F80'              	btfss	(ldexp@newexp+1)^(0+128),7
  4222  004D' 2800'              	goto	u6471
  4223  004E' 2800'              	goto	u6470
  4224  004F'                    u6471:
  4225  004F' 2800'              	goto	l4573
  4226  0050'                    u6470:
  4227  0050'                    l4567:
  4228  0050' 3022               	movlw	34
  4229  0051' 1283               	bcf	3,5	;RP0=0, select bank2
  4230  0052' 1703               	bsf	3,6	;RP1=1, select bank2
  4231  0053' 0080'              	movwf	_errno^(0+256)
  4232  0054' 3000               	movlw	0
  4233  0055' 0081'              	movwf	(_errno^(0+256)+1)
  4234  0056' 3000               	movlw	0
  4235  0057' 1683               	bsf	3,5	;RP0=1, select bank1
  4236  0058' 1303               	bcf	3,6	;RP1=0, select bank1
  4237  0059' 0080'              	movwf	(?_ldexp+3)^(0+128)
  4238  005A' 3000               	movlw	0
  4239  005B' 0080'              	movwf	(?_ldexp+2)^(0+128)
  4240  005C' 3000               	movlw	0
  4241  005D' 0080'              	movwf	(?_ldexp+1)^(0+128)
  4242  005E' 3000               	movlw	0
  4243  005F' 0080'              	movwf	?_ldexp^(0+128)
  4244  0060' 2800'              	goto	l901
  4245  0061'                    l4573:
  4246  0061' 0800'              	movf	(ldexp@newexp+1)^(0+128),w
  4247  0062' 3A80               	xorlw	128
  4248  0063' 00FF               	movwf	btemp+1
  4249  0064' 3081               	movlw	129
  4250  0065' 027F               	subwf	btemp+1,w
  4251  0066' 1D03               	skipz
  4252  0067' 2800'              	goto	u6485
  4253  0068' 3000               	movlw	0
  4254  0069' 0200'              	subwf	ldexp@newexp^(0+128),w
  4255  006A'                    u6485:
  4256  006A' 1C03               	skipc
  4257  006B' 2800'              	goto	u6481
  4258  006C' 2800'              	goto	u6480
  4259  006D'                    u6481:
  4260  006D' 2800'              	goto	l4589
  4261  006E'                    u6480:
  4262  006E'                    l4575:
  4263  006E' 3022               	movlw	34
  4264  006F' 1283               	bcf	3,5	;RP0=0, select bank2
  4265  0070' 1703               	bsf	3,6	;RP1=1, select bank2
  4266  0071' 0080'              	movwf	_errno^(0+256)
  4267  0072' 3000               	movlw	0
  4268  0073' 0081'              	movwf	(_errno^(0+256)+1)
  4269  0074'                    l4577:
  4270  0074' 1683               	bsf	3,5	;RP0=1, select bank1
  4271  0075' 1303               	bcf	3,6	;RP1=0, select bank1
  4272  0076' 0800'              	movf	(ldexp@value+3)^(0+128),w
  4273  0077' 0083'              	movwf	___flge@ff1+3
  4274  0078' 0800'              	movf	(ldexp@value+2)^(0+128),w
  4275  0079' 0082'              	movwf	___flge@ff1+2
  4276  007A' 0800'              	movf	(ldexp@value+1)^(0+128),w
  4277  007B' 0081'              	movwf	___flge@ff1+1
  4278  007C' 0800'              	movf	ldexp@value^(0+128),w
  4279  007D' 0080'              	movwf	___flge@ff1
  4280  007E' 3000               	movlw	0
  4281  007F' 0087'              	movwf	___flge@ff2+3
  4282  0080' 3000               	movlw	0
  4283  0081' 0086'              	movwf	___flge@ff2+2
  4284  0082' 3000               	movlw	0
  4285  0083' 0085'              	movwf	___flge@ff2+1
  4286  0084' 3000               	movlw	0
  4287  0085' 0084'              	movwf	___flge@ff2
  4288  0086' 118A' 2000' 118A'  	fcall	___flge
  4289  0089' 1803               	btfsc	3,0
  4290  008A' 2800'              	goto	u6491
  4291  008B' 2800'              	goto	u6490
  4292  008C'                    u6491:
  4293  008C' 2800'              	goto	l4585
  4294  008D'                    u6490:
  4295  008D'                    l4579:
  4296  008D' 30FF               	movlw	255
  4297  008E' 1683               	bsf	3,5	;RP0=1, select bank1
  4298  008F' 1303               	bcf	3,6	;RP1=0, select bank1
  4299  0090' 0080'              	movwf	(?_ldexp+3)^(0+128)
  4300  0091' 307F               	movlw	127
  4301  0092' 0080'              	movwf	(?_ldexp+2)^(0+128)
  4302  0093' 30FF               	movlw	255
  4303  0094' 0080'              	movwf	(?_ldexp+1)^(0+128)
  4304  0095' 30FF               	movlw	255
  4305  0096' 0080'              	movwf	?_ldexp^(0+128)
  4306  0097' 2800'              	goto	l901
  4307  0098'                    l4585:
  4308  0098' 307F               	movlw	127
  4309  0099' 1683               	bsf	3,5	;RP0=1, select bank1
  4310  009A' 1303               	bcf	3,6	;RP1=0, select bank1
  4311  009B' 0080'              	movwf	(?_ldexp+3)^(0+128)
  4312  009C' 307F               	movlw	127
  4313  009D' 0080'              	movwf	(?_ldexp+2)^(0+128)
  4314  009E' 30FF               	movlw	255
  4315  009F' 0080'              	movwf	(?_ldexp+1)^(0+128)
  4316  00A0' 30FF               	movlw	255
  4317  00A1' 0080'              	movwf	?_ldexp^(0+128)
  4318  00A2' 2800'              	goto	l901
  4319  00A3'                    l4589:
  4320  00A3' 1683               	bsf	3,5	;RP0=1, select bank1
  4321  00A4' 1303               	bcf	3,6	;RP1=0, select bank1
  4322  00A5' 0800'              	movf	(ldexp@newexp+1)^(0+128),w
  4323  00A6' 0081'              	movwf	(??_ldexp^(0+128)+1)
  4324  00A7' 0800'              	movf	ldexp@newexp^(0+128),w
  4325  00A8' 0080'              	movwf	??_ldexp^(0+128)
  4326  00A9' 0D01'              	rlf	(??_ldexp^(0+128)+1),w
  4327  00AA' 0C81'              	rrf	(??_ldexp^(0+128)+1),f
  4328  00AB' 0C80'              	rrf	??_ldexp^(0+128),f
  4329  00AC' 0803'              	movf	(ldexp@value^(0+128)+3),w
  4330  00AD' 0600'              	xorwf	??_ldexp^(0+128),w
  4331  00AE' 3980               	andlw	-128
  4332  00AF' 0600'              	xorwf	??_ldexp^(0+128),w
  4333  00B0' 0083'              	movwf	(ldexp@value^(0+128)+3)
  4334  00B1' 0800'              	movf	ldexp@newexp^(0+128),w
  4335  00B2' 3901               	andlw	1
  4336  00B3' 0080'              	movwf	??_ldexp^(0+128)
  4337  00B4' 0C80'              	rrf	??_ldexp^(0+128),f
  4338  00B5' 0C80'              	rrf	??_ldexp^(0+128),f
  4339  00B6' 0802'              	movf	(ldexp@value^(0+128)+2),w
  4340  00B7' 0600'              	xorwf	??_ldexp^(0+128),w
  4341  00B8' 397F               	andlw	-129
  4342  00B9' 0600'              	xorwf	??_ldexp^(0+128),w
  4343  00BA' 0082'              	movwf	(ldexp@value^(0+128)+2)
  4344  00BB'                    l4591:
  4345  00BB'                    l901:
  4346  00BB' 0008               	return
  4347  00BC'                    __end_of_ldexp:
  4348                           
  4349                           	psect	text10
  4350  0000'                    __ptext10:	
  4351 ;; *************** function _floor *****************
  4352 ;; Defined at:
  4353 ;;		line 13 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/floor.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  x               4   75[BANK0 ] int 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  i               4    0[BANK1 ] int 
  4358 ;;  expon           2    4[BANK1 ] int 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  4   75[BANK0 ] int 
  4361 ;; Registers used:
  4362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4368 ;;      Params:         0       4       0       0
  4369 ;;      Locals:         0       0       6       0
  4370 ;;      Temps:          0       0       0       0
  4371 ;;      Totals:         0       4       6       0
  4372 ;;Total ram usage:       10 bytes
  4373 ;; Hardware stack levels used: 1
  4374 ;; Hardware stack levels required when called: 2
  4375 ;; This function calls:
  4376 ;;		___fladd
  4377 ;;		___flge
  4378 ;;		___fltol
  4379 ;;		___xxtofl
  4380 ;;		_frexp
  4381 ;; This function is called by:
  4382 ;;		_exp
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386  0000'                    _floor:	
  4387                           ;psect for function _floor
  4388                           
  4389  0000'                    l4519:	
  4390                           ;incstack = 0
  4391                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4392                           
  4393  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4394  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4395  0002' 084E'              	movf	floor@x+3,w
  4396  0003' 0099'              	movwf	frexp@value+3
  4397  0004' 084D'              	movf	floor@x+2,w
  4398  0005' 0098'              	movwf	frexp@value+2
  4399  0006' 084C'              	movf	floor@x+1,w
  4400  0007' 0097'              	movwf	frexp@value+1
  4401  0008' 084B'              	movf	floor@x,w
  4402  0009' 0096'              	movwf	frexp@value
  4403  000A' 3000'              	movlw	(low (floor@expon| 0))& (0+255)
  4404  000B' 009A'              	movwf	frexp@eptr
  4405  000C' 118A' 2000' 118A'  	fcall	_frexp
  4406  000F'                    l4521:
  4407  000F' 1683               	bsf	3,5	;RP0=1, select bank1
  4408  0010' 1303               	bcf	3,6	;RP1=0, select bank1
  4409  0011' 1F80'              	btfss	(floor@expon+1)^(0+128),7
  4410  0012' 2800'              	goto	u6391
  4411  0013' 2800'              	goto	u6390
  4412  0014'                    u6391:
  4413  0014' 2800'              	goto	l4533
  4414  0015'                    u6390:
  4415  0015'                    l4523:
  4416  0015' 1283               	bcf	3,5	;RP0=0, select bank0
  4417  0016' 1303               	bcf	3,6	;RP1=0, select bank0
  4418  0017' 084E'              	movf	floor@x+3,w
  4419  0018' 0083'              	movwf	___flge@ff1+3
  4420  0019' 084D'              	movf	floor@x+2,w
  4421  001A' 0082'              	movwf	___flge@ff1+2
  4422  001B' 084C'              	movf	floor@x+1,w
  4423  001C' 0081'              	movwf	___flge@ff1+1
  4424  001D' 084B'              	movf	floor@x,w
  4425  001E' 0080'              	movwf	___flge@ff1
  4426  001F' 3000               	movlw	0
  4427  0020' 0087'              	movwf	___flge@ff2+3
  4428  0021' 3000               	movlw	0
  4429  0022' 0086'              	movwf	___flge@ff2+2
  4430  0023' 3000               	movlw	0
  4431  0024' 0085'              	movwf	___flge@ff2+1
  4432  0025' 3000               	movlw	0
  4433  0026' 0084'              	movwf	___flge@ff2
  4434  0027' 118A' 2000' 118A'  	fcall	___flge
  4435  002A' 1803               	btfsc	3,0
  4436  002B' 2800'              	goto	u6401
  4437  002C' 2800'              	goto	u6400
  4438  002D'                    u6401:
  4439  002D' 2800'              	goto	l4529
  4440  002E'                    u6400:
  4441  002E'                    l4525:
  4442  002E' 30BF               	movlw	191
  4443  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  4444  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  4445  0031' 00CE'              	movwf	?_floor+3
  4446  0032' 3080               	movlw	128
  4447  0033' 00CD'              	movwf	?_floor+2
  4448  0034' 3000               	movlw	0
  4449  0035' 00CC'              	movwf	?_floor+1
  4450  0036' 3000               	movlw	0
  4451  0037' 00CB'              	movwf	?_floor
  4452  0038' 2800'              	goto	l889
  4453  0039'                    l4529:
  4454  0039' 3000               	movlw	0
  4455  003A' 1283               	bcf	3,5	;RP0=0, select bank0
  4456  003B' 1303               	bcf	3,6	;RP1=0, select bank0
  4457  003C' 00CE'              	movwf	?_floor+3
  4458  003D' 3000               	movlw	0
  4459  003E' 00CD'              	movwf	?_floor+2
  4460  003F' 3000               	movlw	0
  4461  0040' 00CC'              	movwf	?_floor+1
  4462  0041' 3000               	movlw	0
  4463  0042' 00CB'              	movwf	?_floor
  4464  0043' 2800'              	goto	l889
  4465  0044'                    l4533:
  4466  0044' 3000               	movlw	0
  4467  0045' 0200'              	subwf	(floor@expon+1)^(0+128),w
  4468  0046' 301D               	movlw	29
  4469  0047' 1903               	skipnz
  4470  0048' 0200'              	subwf	floor@expon^(0+128),w
  4471  0049' 1C03               	skipc
  4472  004A' 2800'              	goto	u6411
  4473  004B' 2800'              	goto	u6410
  4474  004C'                    u6411:
  4475  004C' 2800'              	goto	l4537
  4476  004D'                    u6410:
  4477  004D'                    l4535:
  4478  004D' 2800'              	goto	l889
  4479  004E'                    l4537:
  4480  004E' 1283               	bcf	3,5	;RP0=0, select bank0
  4481  004F' 1303               	bcf	3,6	;RP1=0, select bank0
  4482  0050' 084E'              	movf	floor@x+3,w
  4483  0051' 0083'              	movwf	___fltol@f1+3
  4484  0052' 084D'              	movf	floor@x+2,w
  4485  0053' 0082'              	movwf	___fltol@f1+2
  4486  0054' 084C'              	movf	floor@x+1,w
  4487  0055' 0081'              	movwf	___fltol@f1+1
  4488  0056' 084B'              	movf	floor@x,w
  4489  0057' 0080'              	movwf	___fltol@f1
  4490  0058' 118A' 2000' 118A'  	fcall	___fltol
  4491  005B' 0803'              	movf	?___fltol+3,w
  4492  005C' 008D'              	movwf	___xxtofl@val+3
  4493  005D' 0802'              	movf	?___fltol+2,w
  4494  005E' 008C'              	movwf	___xxtofl@val+2
  4495  005F' 0801'              	movf	?___fltol+1,w
  4496  0060' 008B'              	movwf	___xxtofl@val+1
  4497  0061' 0800'              	movf	?___fltol,w
  4498  0062' 008A'              	movwf	___xxtofl@val
  4499  0063' 3001               	movlw	1
  4500  0064' 118A' 2000' 118A'  	fcall	___xxtofl
  4501  0067' 080D'              	movf	?___xxtofl+3,w
  4502  0068' 1683               	bsf	3,5	;RP0=1, select bank1
  4503  0069' 1303               	bcf	3,6	;RP1=0, select bank1
  4504  006A' 0080'              	movwf	(floor@i+3)^(0+128)
  4505  006B' 080C'              	movf	?___xxtofl+2,w
  4506  006C' 0080'              	movwf	(floor@i+2)^(0+128)
  4507  006D' 080B'              	movf	?___xxtofl+1,w
  4508  006E' 0080'              	movwf	(floor@i+1)^(0+128)
  4509  006F' 080A'              	movf	?___xxtofl,w
  4510  0070' 0080'              	movwf	floor@i^(0+128)
  4511  0071' 1283               	bcf	3,5	;RP0=0, select bank0
  4512  0072' 1303               	bcf	3,6	;RP1=0, select bank0
  4513  0073' 084E'              	movf	floor@x+3,w
  4514  0074' 0083'              	movwf	___flge@ff1+3
  4515  0075' 084D'              	movf	floor@x+2,w
  4516  0076' 0082'              	movwf	___flge@ff1+2
  4517  0077' 084C'              	movf	floor@x+1,w
  4518  0078' 0081'              	movwf	___flge@ff1+1
  4519  0079' 084B'              	movf	floor@x,w
  4520  007A' 0080'              	movwf	___flge@ff1
  4521  007B' 1683               	bsf	3,5	;RP0=1, select bank1
  4522  007C' 1303               	bcf	3,6	;RP1=0, select bank1
  4523  007D' 0800'              	movf	(floor@i+3)^(0+128),w
  4524  007E' 0087'              	movwf	___flge@ff2+3
  4525  007F' 0800'              	movf	(floor@i+2)^(0+128),w
  4526  0080' 0086'              	movwf	___flge@ff2+2
  4527  0081' 0800'              	movf	(floor@i+1)^(0+128),w
  4528  0082' 0085'              	movwf	___flge@ff2+1
  4529  0083' 0800'              	movf	floor@i^(0+128),w
  4530  0084' 0084'              	movwf	___flge@ff2
  4531  0085' 118A' 2000' 118A'  	fcall	___flge
  4532  0088' 1803               	btfsc	3,0
  4533  0089' 2800'              	goto	u6421
  4534  008A' 2800'              	goto	u6420
  4535  008B'                    u6421:
  4536  008B' 2800'              	goto	l4543
  4537  008C'                    u6420:
  4538  008C'                    l4539:
  4539  008C' 30BF               	movlw	191
  4540  008D' 1283               	bcf	3,5	;RP0=0, select bank0
  4541  008E' 1303               	bcf	3,6	;RP1=0, select bank0
  4542  008F' 00BA'              	movwf	___fladd@b+3
  4543  0090' 3080               	movlw	128
  4544  0091' 00B9'              	movwf	___fladd@b+2
  4545  0092' 3000               	movlw	0
  4546  0093' 00B8'              	movwf	___fladd@b+1
  4547  0094' 3000               	movlw	0
  4548  0095' 00B7'              	movwf	___fladd@b
  4549  0096' 1683               	bsf	3,5	;RP0=1, select bank1
  4550  0097' 1303               	bcf	3,6	;RP1=0, select bank1
  4551  0098' 0800'              	movf	(floor@i+3)^(0+128),w
  4552  0099' 1283               	bcf	3,5	;RP0=0, select bank0
  4553  009A' 1303               	bcf	3,6	;RP1=0, select bank0
  4554  009B' 00BE'              	movwf	___fladd@a+3
  4555  009C' 1683               	bsf	3,5	;RP0=1, select bank1
  4556  009D' 1303               	bcf	3,6	;RP1=0, select bank1
  4557  009E' 0800'              	movf	(floor@i+2)^(0+128),w
  4558  009F' 1283               	bcf	3,5	;RP0=0, select bank0
  4559  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
  4560  00A1' 00BD'              	movwf	___fladd@a+2
  4561  00A2' 1683               	bsf	3,5	;RP0=1, select bank1
  4562  00A3' 1303               	bcf	3,6	;RP1=0, select bank1
  4563  00A4' 0800'              	movf	(floor@i+1)^(0+128),w
  4564  00A5' 1283               	bcf	3,5	;RP0=0, select bank0
  4565  00A6' 1303               	bcf	3,6	;RP1=0, select bank0
  4566  00A7' 00BC'              	movwf	___fladd@a+1
  4567  00A8' 1683               	bsf	3,5	;RP0=1, select bank1
  4568  00A9' 1303               	bcf	3,6	;RP1=0, select bank1
  4569  00AA' 0800'              	movf	floor@i^(0+128),w
  4570  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
  4571  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
  4572  00AD' 00BB'              	movwf	___fladd@a
  4573  00AE' 118A' 2000' 118A'  	fcall	___fladd
  4574  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
  4575  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
  4576  00B3' 083A'              	movf	?___fladd+3,w
  4577  00B4' 00CE'              	movwf	?_floor+3
  4578  00B5' 0839'              	movf	?___fladd+2,w
  4579  00B6' 00CD'              	movwf	?_floor+2
  4580  00B7' 0838'              	movf	?___fladd+1,w
  4581  00B8' 00CC'              	movwf	?_floor+1
  4582  00B9' 0837'              	movf	?___fladd,w
  4583  00BA' 00CB'              	movwf	?_floor
  4584  00BB' 2800'              	goto	l889
  4585  00BC'                    l4543:
  4586  00BC' 1683               	bsf	3,5	;RP0=1, select bank1
  4587  00BD' 1303               	bcf	3,6	;RP1=0, select bank1
  4588  00BE' 0800'              	movf	(floor@i+3)^(0+128),w
  4589  00BF' 1283               	bcf	3,5	;RP0=0, select bank0
  4590  00C0' 1303               	bcf	3,6	;RP1=0, select bank0
  4591  00C1' 00CE'              	movwf	?_floor+3
  4592  00C2' 1683               	bsf	3,5	;RP0=1, select bank1
  4593  00C3' 1303               	bcf	3,6	;RP1=0, select bank1
  4594  00C4' 0800'              	movf	(floor@i+2)^(0+128),w
  4595  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  4596  00C6' 1303               	bcf	3,6	;RP1=0, select bank0
  4597  00C7' 00CD'              	movwf	?_floor+2
  4598  00C8' 1683               	bsf	3,5	;RP0=1, select bank1
  4599  00C9' 1303               	bcf	3,6	;RP1=0, select bank1
  4600  00CA' 0800'              	movf	(floor@i+1)^(0+128),w
  4601  00CB' 1283               	bcf	3,5	;RP0=0, select bank0
  4602  00CC' 1303               	bcf	3,6	;RP1=0, select bank0
  4603  00CD' 00CC'              	movwf	?_floor+1
  4604  00CE' 1683               	bsf	3,5	;RP0=1, select bank1
  4605  00CF' 1303               	bcf	3,6	;RP1=0, select bank1
  4606  00D0' 0800'              	movf	floor@i^(0+128),w
  4607  00D1' 1283               	bcf	3,5	;RP0=0, select bank0
  4608  00D2' 1303               	bcf	3,6	;RP1=0, select bank0
  4609  00D3' 00CB'              	movwf	?_floor
  4610  00D4'                    l889:
  4611  00D4' 0008               	return
  4612  00D5'                    __end_of_floor:
  4613                           
  4614                           	psect	text11
  4615  0000'                    __ptext11:	
  4616 ;; *************** function _frexp *****************
  4617 ;; Defined at:
  4618 ;;		line 254 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/frexp.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  value           4   22[BANK0 ] int 
  4621 ;;  eptr            1   26[BANK0 ] PTR int 
  4622 ;;		 -> log@exponent(2), floor@expon(2), 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;		None
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  4   22[BANK0 ] PTR int 
  4627 ;; Registers used:
  4628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4634 ;;      Params:         0       5       0       0
  4635 ;;      Locals:         0       0       0       0
  4636 ;;      Temps:          0       2       0       0
  4637 ;;      Totals:         0       7       0       0
  4638 ;;Total ram usage:        7 bytes
  4639 ;; Hardware stack levels used: 1
  4640 ;; Hardware stack levels required when called: 1
  4641 ;; This function calls:
  4642 ;;		___fleq
  4643 ;; This function is called by:
  4644 ;;		_floor
  4645 ;;		_log
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649  0000'                    _frexp:	
  4650                           ;psect for function _frexp
  4651                           
  4652  0000'                    l4343:	
  4653                           ;incstack = 0
  4654                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4655                           
  4656  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4657  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4658  0002' 0819'              	movf	frexp@value+3,w
  4659  0003' 008D'              	movwf	___fleq@ff1+3
  4660  0004' 0818'              	movf	frexp@value+2,w
  4661  0005' 008C'              	movwf	___fleq@ff1+2
  4662  0006' 0817'              	movf	frexp@value+1,w
  4663  0007' 008B'              	movwf	___fleq@ff1+1
  4664  0008' 0816'              	movf	frexp@value,w
  4665  0009' 008A'              	movwf	___fleq@ff1
  4666  000A' 3000               	movlw	0
  4667  000B' 0091'              	movwf	___fleq@ff2+3
  4668  000C' 3000               	movlw	0
  4669  000D' 0090'              	movwf	___fleq@ff2+2
  4670  000E' 3000               	movlw	0
  4671  000F' 008F'              	movwf	___fleq@ff2+1
  4672  0010' 3000               	movlw	0
  4673  0011' 008E'              	movwf	___fleq@ff2
  4674  0012' 118A' 2000' 118A'  	fcall	___fleq
  4675  0015' 1C03               	btfss	3,0
  4676  0016' 2800'              	goto	u6071
  4677  0017' 2800'              	goto	u6070
  4678  0018'                    u6071:
  4679  0018' 2800'              	goto	l4351
  4680  0019'                    u6070:
  4681  0019'                    l4345:
  4682  0019' 1283               	bcf	3,5	;RP0=0, select bank0
  4683  001A' 1303               	bcf	3,6	;RP1=0, select bank0
  4684  001B' 081A'              	movf	frexp@eptr,w
  4685  001C' 0084               	movwf	4
  4686  001D' 1383               	bcf	3,7	;select IRP bank0
  4687  001E' 0180               	clrf	0
  4688  001F' 0A84               	incf	4,f
  4689  0020' 0180               	clrf	0
  4690  0021'                    l4347:
  4691  0021' 3000               	movlw	0
  4692  0022' 0099'              	movwf	?_frexp+3
  4693  0023' 3000               	movlw	0
  4694  0024' 0098'              	movwf	?_frexp+2
  4695  0025' 3000               	movlw	0
  4696  0026' 0097'              	movwf	?_frexp+1
  4697  0027' 3000               	movlw	0
  4698  0028' 0096'              	movwf	?_frexp
  4699  0029' 2800'              	goto	l897
  4700  002A'                    l4351:
  4701  002A' 1283               	bcf	3,5	;RP0=0, select bank0
  4702  002B' 1303               	bcf	3,6	;RP1=0, select bank0
  4703  002C' 0819'              	movf	frexp@value+3,w
  4704  002D' 397F               	andlw	127
  4705  002E' 009B'              	movwf	??_frexp
  4706  002F' 019C'              	clrf	??_frexp+1
  4707  0030' 1003               	clrc
  4708  0031' 0D9B'              	rlf	??_frexp,f
  4709  0032' 0D9C'              	rlf	??_frexp+1,f
  4710  0033' 081A'              	movf	frexp@eptr,w
  4711  0034' 0084               	movwf	4
  4712  0035' 081B'              	movf	??_frexp,w
  4713  0036' 1383               	bcf	3,7	;select IRP bank0
  4714  0037' 0080               	movwf	0
  4715  0038' 0A84               	incf	4,f
  4716  0039' 081C'              	movf	??_frexp+1,w
  4717  003A' 0080               	movwf	0
  4718  003B' 0D18'              	rlf	frexp@value+2,w
  4719  003C' 0D18'              	rlf	frexp@value+2,w
  4720  003D' 3901               	andlw	1
  4721  003E' 009B'              	movwf	??_frexp
  4722  003F' 019C'              	clrf	??_frexp+1
  4723  0040' 081A'              	movf	frexp@eptr,w
  4724  0041' 0084               	movwf	4
  4725  0042' 081B'              	movf	??_frexp,w
  4726  0043' 0480               	iorwf	0,f
  4727  0044' 0A84               	incf	4,f
  4728  0045' 081C'              	movf	??_frexp+1,w
  4729  0046' 0480               	iorwf	0,f
  4730  0047'                    l4353:
  4731  0047' 081A'              	movf	frexp@eptr,w
  4732  0048' 0084               	movwf	4
  4733  0049' 3082               	movlw	130
  4734  004A' 0780               	addwf	0,f
  4735  004B' 0F84               	incfsz	4,f
  4736  004C' 0800               	movf	0,w
  4737  004D' 1803               	skipnc
  4738  004E' 0A00               	incf	0,w
  4739  004F' 00FF               	movwf	btemp+1
  4740  0050' 30FF               	movlw	255
  4741  0051' 077F               	addwf	btemp+1,w
  4742  0052' 0080               	movwf	0
  4743  0053' 0384               	decf	4,f
  4744  0054'                    l4355:
  4745  0054' 0819'              	movf	frexp@value+3,w
  4746  0055' 3980               	andlw	-128
  4747  0056' 383F               	iorlw	63
  4748  0057' 0099'              	movwf	frexp@value+3
  4749  0058'                    l4357:
  4750  0058' 1398'              	bcf	frexp@value+2,7
  4751  0059'                    l4359:
  4752  0059'                    l897:
  4753  0059' 0008               	return
  4754  005A'                    __end_of_frexp:
  4755                           
  4756                           	psect	text12
  4757  0000'                    __ptext12:	
  4758 ;; *************** function ___fleq *****************
  4759 ;; Defined at:
  4760 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/fleq.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  ff1             4   10[BANK0 ] PTR int 
  4763 ;;  ff2             4   14[BANK0 ] PTR int 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;		None               void
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4775 ;;      Params:         0       8       0       0
  4776 ;;      Locals:         0       0       0       0
  4777 ;;      Temps:          0       4       0       0
  4778 ;;      Totals:         0      12       0       0
  4779 ;;Total ram usage:       12 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_pow
  4785 ;;		_exp
  4786 ;;		_frexp
  4787 ;;		_ldexp
  4788 ;;		_log
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792  0000'                    ___fleq:	
  4793                           ;psect for function ___fleq
  4794                           
  4795  0000'                    l3883:	
  4796                           ;incstack = 0
  4797                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  4798                           
  4799  0000' 3000               	movlw	0
  4800  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  4801  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  4802  0003' 050A'              	andwf	___fleq@ff1,w
  4803  0004' 0092'              	movwf	??___fleq
  4804  0005' 3000               	movlw	0
  4805  0006' 050B'              	andwf	___fleq@ff1+1,w
  4806  0007' 0093'              	movwf	??___fleq+1
  4807  0008' 3080               	movlw	128
  4808  0009' 050C'              	andwf	___fleq@ff1+2,w
  4809  000A' 0094'              	movwf	??___fleq+2
  4810  000B' 307F               	movlw	127
  4811  000C' 050D'              	andwf	___fleq@ff1+3,w
  4812  000D' 0095'              	movwf	??___fleq+3
  4813  000E' 0815'              	movf	??___fleq+3,w
  4814  000F' 0414'              	iorwf	??___fleq+2,w
  4815  0010' 0413'              	iorwf	??___fleq+1,w
  4816  0011' 0412'              	iorwf	??___fleq,w
  4817  0012' 1D03               	skipz
  4818  0013' 2800'              	goto	u4871
  4819  0014' 2800'              	goto	u4870
  4820  0015'                    u4871:
  4821  0015' 2800'              	goto	l537
  4822  0016'                    u4870:
  4823  0016'                    l3885:
  4824  0016' 3000               	movlw	0
  4825  0017' 008D'              	movwf	___fleq@ff1+3
  4826  0018' 3000               	movlw	0
  4827  0019' 008C'              	movwf	___fleq@ff1+2
  4828  001A' 3000               	movlw	0
  4829  001B' 008B'              	movwf	___fleq@ff1+1
  4830  001C' 3000               	movlw	0
  4831  001D' 008A'              	movwf	___fleq@ff1
  4832  001E'                    l537:
  4833  001E' 3000               	movlw	0
  4834  001F' 050E'              	andwf	___fleq@ff2,w
  4835  0020' 0092'              	movwf	??___fleq
  4836  0021' 3000               	movlw	0
  4837  0022' 050F'              	andwf	___fleq@ff2+1,w
  4838  0023' 0093'              	movwf	??___fleq+1
  4839  0024' 3080               	movlw	128
  4840  0025' 0510'              	andwf	___fleq@ff2+2,w
  4841  0026' 0094'              	movwf	??___fleq+2
  4842  0027' 307F               	movlw	127
  4843  0028' 0511'              	andwf	___fleq@ff2+3,w
  4844  0029' 0095'              	movwf	??___fleq+3
  4845  002A' 0815'              	movf	??___fleq+3,w
  4846  002B' 0414'              	iorwf	??___fleq+2,w
  4847  002C' 0413'              	iorwf	??___fleq+1,w
  4848  002D' 0412'              	iorwf	??___fleq,w
  4849  002E' 1D03               	skipz
  4850  002F' 2800'              	goto	u4881
  4851  0030' 2800'              	goto	u4880
  4852  0031'                    u4881:
  4853  0031' 2800'              	goto	l538
  4854  0032'                    u4880:
  4855  0032'                    l3887:
  4856  0032' 3000               	movlw	0
  4857  0033' 0091'              	movwf	___fleq@ff2+3
  4858  0034' 3000               	movlw	0
  4859  0035' 0090'              	movwf	___fleq@ff2+2
  4860  0036' 3000               	movlw	0
  4861  0037' 008F'              	movwf	___fleq@ff2+1
  4862  0038' 3000               	movlw	0
  4863  0039' 008E'              	movwf	___fleq@ff2
  4864  003A'                    l538:
  4865  003A' 0811'              	movf	___fleq@ff2+3,w
  4866  003B' 060D'              	xorwf	___fleq@ff1+3,w
  4867  003C' 1D03               	skipz
  4868  003D' 2800'              	goto	u4895
  4869  003E' 0810'              	movf	___fleq@ff2+2,w
  4870  003F' 060C'              	xorwf	___fleq@ff1+2,w
  4871  0040' 1D03               	skipz
  4872  0041' 2800'              	goto	u4895
  4873  0042' 080F'              	movf	___fleq@ff2+1,w
  4874  0043' 060B'              	xorwf	___fleq@ff1+1,w
  4875  0044' 1D03               	skipz
  4876  0045' 2800'              	goto	u4895
  4877  0046' 080E'              	movf	___fleq@ff2,w
  4878  0047' 060A'              	xorwf	___fleq@ff1,w
  4879  0048'                    u4895:
  4880  0048' 1903               	skipnz
  4881  0049' 2800'              	goto	u4891
  4882  004A' 2800'              	goto	u4890
  4883  004B'                    u4891:
  4884  004B' 2800'              	goto	l3891
  4885  004C'                    u4890:
  4886  004C'                    l3889:
  4887  004C' 1003               	clrc
  4888  004D' 2800'              	goto	l539
  4889  004E'                    l3891:
  4890  004E' 1403               	setc
  4891  004F'                    l539:
  4892  004F' 0008               	return
  4893  0050'                    __end_of___fleq:
  4894                           
  4895                           	psect	text13
  4896  0000'                    __ptext13:	
  4897 ;; *************** function ___xxtofl *****************
  4898 ;; Defined at:
  4899 ;;		line 10 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/xxtofl.c"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;  sign            1    wreg     unsigned char 
  4902 ;;  val             4   10[COMMON] long 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  sign            1    4[BANK0 ] unsigned char 
  4905 ;;  arg             4    6[BANK0 ] unsigned long 
  4906 ;;  exp             1    5[BANK0 ] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  4   10[COMMON] unsigned char 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4916 ;;      Params:         4       0       0       0
  4917 ;;      Locals:         0       6       0       0
  4918 ;;      Temps:          0       4       0       0
  4919 ;;      Totals:         4      10       0       0
  4920 ;;Total ram usage:       14 bytes
  4921 ;; Hardware stack levels used: 1
  4922 ;; This function calls:
  4923 ;;		Nothing
  4924 ;; This function is called by:
  4925 ;;		_pow
  4926 ;;		_exp
  4927 ;;		_floor
  4928 ;;		_log
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932  0000'                    ___xxtofl:	
  4933                           ;psect for function ___xxtofl
  4934                           
  4935                           
  4936                           ;incstack = 0
  4937                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4938                           ;___xxtofl@sign stored from wreg
  4939  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4940  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4941  0002' 0084'              	movwf	___xxtofl@sign
  4942  0003'                    l4299:
  4943  0003' 0804'              	movf	___xxtofl@sign,w
  4944  0004' 1903               	btfsc	3,2
  4945  0005' 2800'              	goto	u5931
  4946  0006' 2800'              	goto	u5930
  4947  0007'                    u5931:
  4948  0007' 2800'              	goto	l4305
  4949  0008'                    u5930:
  4950  0008'                    l4301:
  4951  0008' 1F8D'              	btfss	___xxtofl@val+3,7
  4952  0009' 2800'              	goto	u5941
  4953  000A' 2800'              	goto	u5940
  4954  000B'                    u5941:
  4955  000B' 2800'              	goto	l4305
  4956  000C'                    u5940:
  4957  000C'                    l4303:
  4958  000C' 090A'              	comf	___xxtofl@val,w
  4959  000D' 0086'              	movwf	___xxtofl@arg
  4960  000E' 090B'              	comf	___xxtofl@val+1,w
  4961  000F' 0087'              	movwf	___xxtofl@arg+1
  4962  0010' 090C'              	comf	___xxtofl@val+2,w
  4963  0011' 0088'              	movwf	___xxtofl@arg+2
  4964  0012' 090D'              	comf	___xxtofl@val+3,w
  4965  0013' 0089'              	movwf	___xxtofl@arg+3
  4966  0014' 0A86'              	incf	___xxtofl@arg,f
  4967  0015' 1903               	skipnz
  4968  0016' 0A87'              	incf	___xxtofl@arg+1,f
  4969  0017' 1903               	skipnz
  4970  0018' 0A88'              	incf	___xxtofl@arg+2,f
  4971  0019' 1903               	skipnz
  4972  001A' 0A89'              	incf	___xxtofl@arg+3,f
  4973  001B' 2800'              	goto	l821
  4974  001C'                    l4305:
  4975  001C' 080D'              	movf	___xxtofl@val+3,w
  4976  001D' 0089'              	movwf	___xxtofl@arg+3
  4977  001E' 080C'              	movf	___xxtofl@val+2,w
  4978  001F' 0088'              	movwf	___xxtofl@arg+2
  4979  0020' 080B'              	movf	___xxtofl@val+1,w
  4980  0021' 0087'              	movwf	___xxtofl@arg+1
  4981  0022' 080A'              	movf	___xxtofl@val,w
  4982  0023' 0086'              	movwf	___xxtofl@arg
  4983  0024'                    l821:
  4984  0024' 080D'              	movf	___xxtofl@val+3,w
  4985  0025' 040C'              	iorwf	___xxtofl@val+2,w
  4986  0026' 040B'              	iorwf	___xxtofl@val+1,w
  4987  0027' 040A'              	iorwf	___xxtofl@val,w
  4988  0028' 1D03               	skipz
  4989  0029' 2800'              	goto	u5951
  4990  002A' 2800'              	goto	u5950
  4991  002B'                    u5951:
  4992  002B' 2800'              	goto	l4311
  4993  002C'                    u5950:
  4994  002C'                    l4307:
  4995  002C' 3000               	movlw	0
  4996  002D' 008D'              	movwf	?___xxtofl+3
  4997  002E' 3000               	movlw	0
  4998  002F' 008C'              	movwf	?___xxtofl+2
  4999  0030' 3000               	movlw	0
  5000  0031' 008B'              	movwf	?___xxtofl+1
  5001  0032' 3000               	movlw	0
  5002  0033' 008A'              	movwf	?___xxtofl
  5003  0034' 2800'              	goto	l823
  5004  0035'                    l4311:
  5005  0035' 3096               	movlw	150
  5006  0036' 0085'              	movwf	___xxtofl@exp
  5007  0037' 2800'              	goto	l4315
  5008  0038'                    l4313:
  5009  0038' 3001               	movlw	1
  5010  0039' 0080'              	movwf	??___xxtofl
  5011  003A' 0800'              	movf	??___xxtofl,w
  5012  003B' 0785'              	addwf	___xxtofl@exp,f
  5013  003C' 3001               	movlw	1
  5014  003D'                    u5965:
  5015  003D' 1003               	clrc
  5016  003E' 0C89'              	rrf	___xxtofl@arg+3,f
  5017  003F' 0C88'              	rrf	___xxtofl@arg+2,f
  5018  0040' 0C87'              	rrf	___xxtofl@arg+1,f
  5019  0041' 0C86'              	rrf	___xxtofl@arg,f
  5020  0042' 3EFF               	addlw	-1
  5021  0043' 1D03               	skipz
  5022  0044' 2800'              	goto	u5965
  5023  0045'                    l4315:
  5024  0045' 30FE               	movlw	254
  5025  0046' 0509'              	andwf	___xxtofl@arg+3,w
  5026  0047' 1D03               	btfss	3,2
  5027  0048' 2800'              	goto	u5971
  5028  0049' 2800'              	goto	u5970
  5029  004A'                    u5971:
  5030  004A' 2800'              	goto	l4313
  5031  004B'                    u5970:
  5032  004B' 2800'              	goto	l827
  5033  004C'                    l4317:
  5034  004C' 3001               	movlw	1
  5035  004D' 0080'              	movwf	??___xxtofl
  5036  004E' 0800'              	movf	??___xxtofl,w
  5037  004F' 0785'              	addwf	___xxtofl@exp,f
  5038  0050'                    l4319:
  5039  0050' 3001               	movlw	1
  5040  0051' 0786'              	addwf	___xxtofl@arg,f
  5041  0052' 3000               	movlw	0
  5042  0053' 1803               	skipnc
  5043  0054' 3001               	movlw	1
  5044  0055' 0787'              	addwf	___xxtofl@arg+1,f
  5045  0056' 3000               	movlw	0
  5046  0057' 1803               	skipnc
  5047  0058' 3001               	movlw	1
  5048  0059' 0788'              	addwf	___xxtofl@arg+2,f
  5049  005A' 3000               	movlw	0
  5050  005B' 1803               	skipnc
  5051  005C' 3001               	movlw	1
  5052  005D' 0789'              	addwf	___xxtofl@arg+3,f
  5053  005E'                    l4321:
  5054  005E' 3001               	movlw	1
  5055  005F'                    u5985:
  5056  005F' 1003               	clrc
  5057  0060' 0C89'              	rrf	___xxtofl@arg+3,f
  5058  0061' 0C88'              	rrf	___xxtofl@arg+2,f
  5059  0062' 0C87'              	rrf	___xxtofl@arg+1,f
  5060  0063' 0C86'              	rrf	___xxtofl@arg,f
  5061  0064' 3EFF               	addlw	-1
  5062  0065' 1D03               	skipz
  5063  0066' 2800'              	goto	u5985
  5064  0067'                    l827:
  5065  0067' 30FF               	movlw	255
  5066  0068' 0509'              	andwf	___xxtofl@arg+3,w
  5067  0069' 1D03               	btfss	3,2
  5068  006A' 2800'              	goto	u5991
  5069  006B' 2800'              	goto	u5990
  5070  006C'                    u5991:
  5071  006C' 2800'              	goto	l4317
  5072  006D'                    u5990:
  5073  006D' 2800'              	goto	l4325
  5074  006E'                    l4323:
  5075  006E' 3001               	movlw	1
  5076  006F' 0285'              	subwf	___xxtofl@exp,f
  5077  0070' 3001               	movlw	1
  5078  0071' 0080'              	movwf	??___xxtofl
  5079  0072'                    u6005:
  5080  0072' 1003               	clrc
  5081  0073' 0D86'              	rlf	___xxtofl@arg,f
  5082  0074' 0D87'              	rlf	___xxtofl@arg+1,f
  5083  0075' 0D88'              	rlf	___xxtofl@arg+2,f
  5084  0076' 0D89'              	rlf	___xxtofl@arg+3,f
  5085  0077' 0B80'              	decfsz	??___xxtofl,f
  5086  0078' 2800'              	goto	u6005
  5087  0079'                    l4325:
  5088  0079' 1B88'              	btfsc	___xxtofl@arg+2,7
  5089  007A' 2800'              	goto	u6011
  5090  007B' 2800'              	goto	u6010
  5091  007C'                    u6011:
  5092  007C' 2800'              	goto	l834
  5093  007D'                    u6010:
  5094  007D'                    l4327:
  5095  007D' 3002               	movlw	2
  5096  007E' 0205'              	subwf	___xxtofl@exp,w
  5097  007F' 1803               	skipnc
  5098  0080' 2800'              	goto	u6021
  5099  0081' 2800'              	goto	u6020
  5100  0082'                    u6021:
  5101  0082' 2800'              	goto	l4323
  5102  0083'                    u6020:
  5103  0083'                    l834:
  5104  0083' 1805'              	btfsc	___xxtofl@exp,0
  5105  0084' 2800'              	goto	u6031
  5106  0085' 2800'              	goto	u6030
  5107  0086'                    u6031:
  5108  0086' 2800'              	goto	l835
  5109  0087'                    u6030:
  5110  0087'                    l4329:
  5111  0087' 30FF               	movlw	255
  5112  0088' 0586'              	andwf	___xxtofl@arg,f
  5113  0089' 30FF               	movlw	255
  5114  008A' 0587'              	andwf	___xxtofl@arg+1,f
  5115  008B' 307F               	movlw	127
  5116  008C' 0588'              	andwf	___xxtofl@arg+2,f
  5117  008D' 30FF               	movlw	255
  5118  008E' 0589'              	andwf	___xxtofl@arg+3,f
  5119  008F'                    l835:
  5120  008F' 1003               	clrc
  5121  0090' 0C85'              	rrf	___xxtofl@exp,f
  5122  0091'                    l4331:
  5123  0091' 0805'              	movf	___xxtofl@exp,w
  5124  0092' 0080'              	movwf	??___xxtofl
  5125  0093' 0181'              	clrf	??___xxtofl+1
  5126  0094' 0182'              	clrf	??___xxtofl+2
  5127  0095' 0183'              	clrf	??___xxtofl+3
  5128  0096' 3018               	movlw	24
  5129  0097'                    u6045:
  5130  0097' 1003               	clrc
  5131  0098' 0D80'              	rlf	??___xxtofl,f
  5132  0099' 0D81'              	rlf	??___xxtofl+1,f
  5133  009A' 0D82'              	rlf	??___xxtofl+2,f
  5134  009B' 0D83'              	rlf	??___xxtofl+3,f
  5135  009C'                    u6040:
  5136  009C' 3EFF               	addlw	-1
  5137  009D' 1D03               	skipz
  5138  009E' 2800'              	goto	u6045
  5139  009F' 0800'              	movf	??___xxtofl,w
  5140  00A0' 0486'              	iorwf	___xxtofl@arg,f
  5141  00A1' 0801'              	movf	??___xxtofl+1,w
  5142  00A2' 0487'              	iorwf	___xxtofl@arg+1,f
  5143  00A3' 0802'              	movf	??___xxtofl+2,w
  5144  00A4' 0488'              	iorwf	___xxtofl@arg+2,f
  5145  00A5' 0803'              	movf	??___xxtofl+3,w
  5146  00A6' 0489'              	iorwf	___xxtofl@arg+3,f
  5147  00A7'                    l4333:
  5148  00A7' 0804'              	movf	___xxtofl@sign,w
  5149  00A8' 1903               	btfsc	3,2
  5150  00A9' 2800'              	goto	u6051
  5151  00AA' 2800'              	goto	u6050
  5152  00AB'                    u6051:
  5153  00AB' 2800'              	goto	l4339
  5154  00AC'                    u6050:
  5155  00AC'                    l4335:
  5156  00AC' 1F8D'              	btfss	___xxtofl@val+3,7
  5157  00AD' 2800'              	goto	u6061
  5158  00AE' 2800'              	goto	u6060
  5159  00AF'                    u6061:
  5160  00AF' 2800'              	goto	l4339
  5161  00B0'                    u6060:
  5162  00B0'                    l4337:
  5163  00B0' 1789'              	bsf	___xxtofl@arg+3,7
  5164  00B1'                    l4339:
  5165  00B1' 0809'              	movf	___xxtofl@arg+3,w
  5166  00B2' 008D'              	movwf	?___xxtofl+3
  5167  00B3' 0808'              	movf	___xxtofl@arg+2,w
  5168  00B4' 008C'              	movwf	?___xxtofl+2
  5169  00B5' 0807'              	movf	___xxtofl@arg+1,w
  5170  00B6' 008B'              	movwf	?___xxtofl+1
  5171  00B7' 0806'              	movf	___xxtofl@arg,w
  5172  00B8' 008A'              	movwf	?___xxtofl
  5173  00B9'                    l823:
  5174  00B9' 0008               	return
  5175  00BA'                    __end_of___xxtofl:
  5176                           
  5177                           	psect	text14
  5178  0000'                    __ptext14:	
  5179 ;; *************** function ___flge *****************
  5180 ;; Defined at:
  5181 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/flge.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  ff1             4    0[COMMON] unsigned char 
  5184 ;;  ff2             4    4[COMMON] unsigned char 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;		None
  5187 ;; Return value:  Size  Location     Type
  5188 ;;		None               void
  5189 ;; Registers used:
  5190 ;;		wreg, status,2, status,0
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5196 ;;      Params:         8       0       0       0
  5197 ;;      Locals:         0       0       0       0
  5198 ;;      Temps:          4       0       0       0
  5199 ;;      Totals:        12       0       0       0
  5200 ;;Total ram usage:       12 bytes
  5201 ;; Hardware stack levels used: 1
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_pow
  5206 ;;		_exp
  5207 ;;		_floor
  5208 ;;		_ldexp
  5209 ;;		_log
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213  0000'                    ___flge:	
  5214                           ;psect for function ___flge
  5215                           
  5216  0000'                    l3909:	
  5217                           ;incstack = 0
  5218                           ; Regs used in ___flge: [wreg+status,2+status,0]
  5219                           
  5220  0000' 3000               	movlw	0
  5221  0001' 0500'              	andwf	___flge@ff1,w
  5222  0002' 0088'              	movwf	??___flge
  5223  0003' 3000               	movlw	0
  5224  0004' 0501'              	andwf	___flge@ff1+1,w
  5225  0005' 0089'              	movwf	??___flge+1
  5226  0006' 3080               	movlw	128
  5227  0007' 0502'              	andwf	___flge@ff1+2,w
  5228  0008' 008A'              	movwf	??___flge+2
  5229  0009' 307F               	movlw	127
  5230  000A' 0503'              	andwf	___flge@ff1+3,w
  5231  000B' 008B'              	movwf	??___flge+3
  5232  000C' 080B'              	movf	??___flge+3,w
  5233  000D' 040A'              	iorwf	??___flge+2,w
  5234  000E' 0409'              	iorwf	??___flge+1,w
  5235  000F' 0408'              	iorwf	??___flge,w
  5236  0010' 1D03               	skipz
  5237  0011' 2800'              	goto	u4931
  5238  0012' 2800'              	goto	u4930
  5239  0013'                    u4931:
  5240  0013' 2800'              	goto	l542
  5241  0014'                    u4930:
  5242  0014'                    l3911:
  5243  0014' 3000               	movlw	0
  5244  0015' 0083'              	movwf	___flge@ff1+3
  5245  0016' 3000               	movlw	0
  5246  0017' 0082'              	movwf	___flge@ff1+2
  5247  0018' 3000               	movlw	0
  5248  0019' 0081'              	movwf	___flge@ff1+1
  5249  001A' 3000               	movlw	0
  5250  001B' 0080'              	movwf	___flge@ff1
  5251  001C'                    l542:
  5252  001C' 3000               	movlw	0
  5253  001D' 0504'              	andwf	___flge@ff2,w
  5254  001E' 0088'              	movwf	??___flge
  5255  001F' 3000               	movlw	0
  5256  0020' 0505'              	andwf	___flge@ff2+1,w
  5257  0021' 0089'              	movwf	??___flge+1
  5258  0022' 3080               	movlw	128
  5259  0023' 0506'              	andwf	___flge@ff2+2,w
  5260  0024' 008A'              	movwf	??___flge+2
  5261  0025' 307F               	movlw	127
  5262  0026' 0507'              	andwf	___flge@ff2+3,w
  5263  0027' 008B'              	movwf	??___flge+3
  5264  0028' 080B'              	movf	??___flge+3,w
  5265  0029' 040A'              	iorwf	??___flge+2,w
  5266  002A' 0409'              	iorwf	??___flge+1,w
  5267  002B' 0408'              	iorwf	??___flge,w
  5268  002C' 1D03               	skipz
  5269  002D' 2800'              	goto	u4941
  5270  002E' 2800'              	goto	u4940
  5271  002F'                    u4941:
  5272  002F' 2800'              	goto	l3915
  5273  0030'                    u4940:
  5274  0030'                    l3913:
  5275  0030' 3000               	movlw	0
  5276  0031' 0087'              	movwf	___flge@ff2+3
  5277  0032' 3000               	movlw	0
  5278  0033' 0086'              	movwf	___flge@ff2+2
  5279  0034' 3000               	movlw	0
  5280  0035' 0085'              	movwf	___flge@ff2+1
  5281  0036' 3000               	movlw	0
  5282  0037' 0084'              	movwf	___flge@ff2
  5283  0038'                    l3915:
  5284  0038' 1F83'              	btfss	___flge@ff1+3,7
  5285  0039' 2800'              	goto	u4951
  5286  003A' 2800'              	goto	u4950
  5287  003B'                    u4951:
  5288  003B' 2800'              	goto	l3919
  5289  003C'                    u4950:
  5290  003C'                    l3917:
  5291  003C' 3000               	movlw	0
  5292  003D' 0088'              	movwf	??___flge
  5293  003E' 3000               	movlw	0
  5294  003F' 0089'              	movwf	??___flge+1
  5295  0040' 3000               	movlw	0
  5296  0041' 008A'              	movwf	??___flge+2
  5297  0042' 3080               	movlw	128
  5298  0043' 008B'              	movwf	??___flge+3
  5299  0044' 0800'              	movf	___flge@ff1,w
  5300  0045' 0288'              	subwf	??___flge,f
  5301  0046' 0801'              	movf	___flge@ff1+1,w
  5302  0047' 1C03               	skipc
  5303  0048' 0F01'              	incfsz	___flge@ff1+1,w
  5304  0049' 2800'              	goto	u4961
  5305  004A' 2800'              	goto	u4962
  5306  004B'                    u4961:
  5307  004B' 0289'              	subwf	??___flge+1,f
  5308  004C'                    u4962:
  5309  004C' 0802'              	movf	___flge@ff1+2,w
  5310  004D' 1C03               	skipc
  5311  004E' 0F02'              	incfsz	___flge@ff1+2,w
  5312  004F' 2800'              	goto	u4963
  5313  0050' 2800'              	goto	u4964
  5314  0051'                    u4963:
  5315  0051' 028A'              	subwf	??___flge+2,f
  5316  0052'                    u4964:
  5317  0052' 0803'              	movf	___flge@ff1+3,w
  5318  0053' 1C03               	skipc
  5319  0054' 0F03'              	incfsz	___flge@ff1+3,w
  5320  0055' 2800'              	goto	u4965
  5321  0056' 2800'              	goto	u4966
  5322  0057'                    u4965:
  5323  0057' 028B'              	subwf	??___flge+3,f
  5324  0058'                    u4966:
  5325  0058' 080B'              	movf	??___flge+3,w
  5326  0059' 0083'              	movwf	___flge@ff1+3
  5327  005A' 080A'              	movf	??___flge+2,w
  5328  005B' 0082'              	movwf	___flge@ff1+2
  5329  005C' 0809'              	movf	??___flge+1,w
  5330  005D' 0081'              	movwf	___flge@ff1+1
  5331  005E' 0808'              	movf	??___flge,w
  5332  005F' 0080'              	movwf	___flge@ff1
  5333  0060'                    l3919:
  5334  0060' 1F87'              	btfss	___flge@ff2+3,7
  5335  0061' 2800'              	goto	u4971
  5336  0062' 2800'              	goto	u4970
  5337  0063'                    u4971:
  5338  0063' 2800'              	goto	l545
  5339  0064'                    u4970:
  5340  0064'                    l3921:
  5341  0064' 3000               	movlw	0
  5342  0065' 0088'              	movwf	??___flge
  5343  0066' 3000               	movlw	0
  5344  0067' 0089'              	movwf	??___flge+1
  5345  0068' 3000               	movlw	0
  5346  0069' 008A'              	movwf	??___flge+2
  5347  006A' 3080               	movlw	128
  5348  006B' 008B'              	movwf	??___flge+3
  5349  006C' 0804'              	movf	___flge@ff2,w
  5350  006D' 0288'              	subwf	??___flge,f
  5351  006E' 0805'              	movf	___flge@ff2+1,w
  5352  006F' 1C03               	skipc
  5353  0070' 0F05'              	incfsz	___flge@ff2+1,w
  5354  0071' 2800'              	goto	u4981
  5355  0072' 2800'              	goto	u4982
  5356  0073'                    u4981:
  5357  0073' 0289'              	subwf	??___flge+1,f
  5358  0074'                    u4982:
  5359  0074' 0806'              	movf	___flge@ff2+2,w
  5360  0075' 1C03               	skipc
  5361  0076' 0F06'              	incfsz	___flge@ff2+2,w
  5362  0077' 2800'              	goto	u4983
  5363  0078' 2800'              	goto	u4984
  5364  0079'                    u4983:
  5365  0079' 028A'              	subwf	??___flge+2,f
  5366  007A'                    u4984:
  5367  007A' 0807'              	movf	___flge@ff2+3,w
  5368  007B' 1C03               	skipc
  5369  007C' 0F07'              	incfsz	___flge@ff2+3,w
  5370  007D' 2800'              	goto	u4985
  5371  007E' 2800'              	goto	u4986
  5372  007F'                    u4985:
  5373  007F' 028B'              	subwf	??___flge+3,f
  5374  0080'                    u4986:
  5375  0080' 080B'              	movf	??___flge+3,w
  5376  0081' 0087'              	movwf	___flge@ff2+3
  5377  0082' 080A'              	movf	??___flge+2,w
  5378  0083' 0086'              	movwf	___flge@ff2+2
  5379  0084' 0809'              	movf	??___flge+1,w
  5380  0085' 0085'              	movwf	___flge@ff2+1
  5381  0086' 0808'              	movf	??___flge,w
  5382  0087' 0084'              	movwf	___flge@ff2
  5383  0088'                    l545:
  5384  0088' 3080               	movlw	128
  5385  0089' 0683'              	xorwf	___flge@ff1+3,f
  5386  008A' 3080               	movlw	128
  5387  008B' 0687'              	xorwf	___flge@ff2+3,f
  5388  008C' 0807'              	movf	___flge@ff2+3,w
  5389  008D' 0203'              	subwf	___flge@ff1+3,w
  5390  008E' 1D03               	skipz
  5391  008F' 2800'              	goto	u4995
  5392  0090' 0806'              	movf	___flge@ff2+2,w
  5393  0091' 0202'              	subwf	___flge@ff1+2,w
  5394  0092' 1D03               	skipz
  5395  0093' 2800'              	goto	u4995
  5396  0094' 0805'              	movf	___flge@ff2+1,w
  5397  0095' 0201'              	subwf	___flge@ff1+1,w
  5398  0096' 1D03               	skipz
  5399  0097' 2800'              	goto	u4995
  5400  0098' 0804'              	movf	___flge@ff2,w
  5401  0099' 0200'              	subwf	___flge@ff1,w
  5402  009A'                    u4995:
  5403  009A' 1803               	skipnc
  5404  009B' 2800'              	goto	u4991
  5405  009C' 2800'              	goto	u4990
  5406  009D'                    u4991:
  5407  009D' 2800'              	goto	l3925
  5408  009E'                    u4990:
  5409  009E'                    l3923:
  5410  009E' 1003               	clrc
  5411  009F' 2800'              	goto	l546
  5412  00A0'                    l3925:
  5413  00A0' 1403               	setc
  5414  00A1'                    l546:
  5415  00A1' 0008               	return
  5416  00A2'                    __end_of___flge:
  5417                           
  5418                           	psect	text15
  5419  0000'                    __ptext15:	
  5420 ;; *************** function _eval_poly *****************
  5421 ;; Defined at:
  5422 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/evalpoly.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;  x               4    0[BANK1 ] unsigned char 
  5425 ;;  d               1    4[BANK1 ] PTR const 
  5426 ;;		 -> log@coeff(36), exp@coeff(40), 
  5427 ;;  n               2    5[BANK1 ] int 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;  res             4    7[BANK1 ] int 
  5430 ;; Return value:  Size  Location     Type
  5431 ;;                  4    0[BANK1 ] int 
  5432 ;; Registers used:
  5433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5434 ;; Tracked objects:
  5435 ;;		On entry : 0/0
  5436 ;;		On exit  : 0/0
  5437 ;;		Unchanged: 0/0
  5438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5439 ;;      Params:         0       0       7       0
  5440 ;;      Locals:         0       0       4       0
  5441 ;;      Temps:          0       5       0       0
  5442 ;;      Totals:         0       5      11       0
  5443 ;;Total ram usage:       16 bytes
  5444 ;; Hardware stack levels used: 1
  5445 ;; Hardware stack levels required when called: 2
  5446 ;; This function calls:
  5447 ;;		___fladd
  5448 ;;		___flmul
  5449 ;; This function is called by:
  5450 ;;		_exp
  5451 ;;		_log
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455  0000'                    _eval_poly:	
  5456                           ;psect for function _eval_poly
  5457                           
  5458  0000'                    l4547:	
  5459                           ;incstack = 0
  5460 ;; using string table level
  5461                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5462                           
  5463  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  5464  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  5465  0002' 0800'              	movf	eval_poly@n^(0+128),w
  5466  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  5467  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  5468  0005' 00CB'              	movwf	??_eval_poly
  5469  0006' 3001               	movlw	1
  5470  0007'                    u6435:
  5471  0007' 1003               	clrc
  5472  0008' 0DCB'              	rlf	??_eval_poly,f
  5473  0009' 3EFF               	addlw	-1
  5474  000A' 1D03               	skipz
  5475  000B' 2800'              	goto	u6435
  5476  000C' 1003               	clrc
  5477  000D' 0D4B'              	rlf	??_eval_poly,w
  5478  000E' 1683               	bsf	3,5	;RP0=1, select bank1
  5479  000F' 1303               	bcf	3,6	;RP1=0, select bank1
  5480  0010' 0700'              	addwf	eval_poly@d^(0+128),w
  5481  0011' 0084               	movwf	4
  5482  0012' 118A' 2000' 118A'  	fcall	stringdir
  5483  0015' 1283               	bcf	3,5	;RP0=0, select bank0
  5484  0016' 1303               	bcf	3,6	;RP1=0, select bank0
  5485  0017' 00CC'              	movwf	??_eval_poly+1
  5486  0018' 118A' 2000' 118A'  	fcall	stringdir
  5487  001B' 00CD'              	movwf	??_eval_poly+2
  5488  001C' 118A' 2000' 118A'  	fcall	stringdir
  5489  001F' 00CE'              	movwf	??_eval_poly+3
  5490  0020' 118A' 2000' 118A'  	fcall	stringdir
  5491  0023' 00CF'              	movwf	??_eval_poly+4
  5492  0024' 084F'              	movf	??_eval_poly+4,w
  5493  0025' 1683               	bsf	3,5	;RP0=1, select bank1
  5494  0026' 1303               	bcf	3,6	;RP1=0, select bank1
  5495  0027' 0080'              	movwf	(eval_poly@res+3)^(0+128)
  5496  0028' 1283               	bcf	3,5	;RP0=0, select bank0
  5497  0029' 1303               	bcf	3,6	;RP1=0, select bank0
  5498  002A' 084E'              	movf	??_eval_poly+3,w
  5499  002B' 1683               	bsf	3,5	;RP0=1, select bank1
  5500  002C' 1303               	bcf	3,6	;RP1=0, select bank1
  5501  002D' 0080'              	movwf	(eval_poly@res+2)^(0+128)
  5502  002E' 1283               	bcf	3,5	;RP0=0, select bank0
  5503  002F' 1303               	bcf	3,6	;RP1=0, select bank0
  5504  0030' 084D'              	movf	??_eval_poly+2,w
  5505  0031' 1683               	bsf	3,5	;RP0=1, select bank1
  5506  0032' 1303               	bcf	3,6	;RP1=0, select bank1
  5507  0033' 0080'              	movwf	(eval_poly@res+1)^(0+128)
  5508  0034' 1283               	bcf	3,5	;RP0=0, select bank0
  5509  0035' 1303               	bcf	3,6	;RP1=0, select bank0
  5510  0036' 084C'              	movf	??_eval_poly+1,w
  5511  0037' 1683               	bsf	3,5	;RP0=1, select bank1
  5512  0038' 1303               	bcf	3,6	;RP1=0, select bank1
  5513  0039' 0080'              	movwf	eval_poly@res^(0+128)
  5514  003A' 2800'              	goto	l4551
  5515  003B'                    l4549:
  5516  003B' 30FF               	movlw	255
  5517  003C' 0780'              	addwf	eval_poly@n^(0+128),f
  5518  003D' 1803               	skipnc
  5519  003E' 0A80'              	incf	(eval_poly@n+1)^(0+128),f
  5520  003F' 30FF               	movlw	255
  5521  0040' 0780'              	addwf	(eval_poly@n+1)^(0+128),f
  5522  0041' 0800'              	movf	eval_poly@n^(0+128),w
  5523  0042' 1283               	bcf	3,5	;RP0=0, select bank0
  5524  0043' 1303               	bcf	3,6	;RP1=0, select bank0
  5525  0044' 00CB'              	movwf	??_eval_poly
  5526  0045' 3001               	movlw	1
  5527  0046'                    u6445:
  5528  0046' 1003               	clrc
  5529  0047' 0DCB'              	rlf	??_eval_poly,f
  5530  0048' 3EFF               	addlw	-1
  5531  0049' 1D03               	skipz
  5532  004A' 2800'              	goto	u6445
  5533  004B' 1003               	clrc
  5534  004C' 0D4B'              	rlf	??_eval_poly,w
  5535  004D' 1683               	bsf	3,5	;RP0=1, select bank1
  5536  004E' 1303               	bcf	3,6	;RP1=0, select bank1
  5537  004F' 0700'              	addwf	eval_poly@d^(0+128),w
  5538  0050' 0084               	movwf	4
  5539  0051' 118A' 2000' 118A'  	fcall	stringdir
  5540  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  5541  0055' 1303               	bcf	3,6	;RP1=0, select bank0
  5542  0056' 00CC'              	movwf	??_eval_poly+1
  5543  0057' 118A' 2000' 118A'  	fcall	stringdir
  5544  005A' 00CD'              	movwf	??_eval_poly+2
  5545  005B' 118A' 2000' 118A'  	fcall	stringdir
  5546  005E' 00CE'              	movwf	??_eval_poly+3
  5547  005F' 118A' 2000' 118A'  	fcall	stringdir
  5548  0062' 00CF'              	movwf	??_eval_poly+4
  5549  0063' 084F'              	movf	??_eval_poly+4,w
  5550  0064' 00BA'              	movwf	___fladd@b+3
  5551  0065' 084E'              	movf	??_eval_poly+3,w
  5552  0066' 00B9'              	movwf	___fladd@b+2
  5553  0067' 084D'              	movf	??_eval_poly+2,w
  5554  0068' 00B8'              	movwf	___fladd@b+1
  5555  0069' 084C'              	movf	??_eval_poly+1,w
  5556  006A' 00B7'              	movwf	___fladd@b
  5557  006B' 1683               	bsf	3,5	;RP0=1, select bank1
  5558  006C' 1303               	bcf	3,6	;RP1=0, select bank1
  5559  006D' 0800'              	movf	(eval_poly@res+3)^(0+128),w
  5560  006E' 1283               	bcf	3,5	;RP0=0, select bank0
  5561  006F' 1303               	bcf	3,6	;RP1=0, select bank0
  5562  0070' 00A0'              	movwf	___flmul@b+3
  5563  0071' 1683               	bsf	3,5	;RP0=1, select bank1
  5564  0072' 1303               	bcf	3,6	;RP1=0, select bank1
  5565  0073' 0800'              	movf	(eval_poly@res+2)^(0+128),w
  5566  0074' 1283               	bcf	3,5	;RP0=0, select bank0
  5567  0075' 1303               	bcf	3,6	;RP1=0, select bank0
  5568  0076' 009F'              	movwf	___flmul@b+2
  5569  0077' 1683               	bsf	3,5	;RP0=1, select bank1
  5570  0078' 1303               	bcf	3,6	;RP1=0, select bank1
  5571  0079' 0800'              	movf	(eval_poly@res+1)^(0+128),w
  5572  007A' 1283               	bcf	3,5	;RP0=0, select bank0
  5573  007B' 1303               	bcf	3,6	;RP1=0, select bank0
  5574  007C' 009E'              	movwf	___flmul@b+1
  5575  007D' 1683               	bsf	3,5	;RP0=1, select bank1
  5576  007E' 1303               	bcf	3,6	;RP1=0, select bank1
  5577  007F' 0800'              	movf	eval_poly@res^(0+128),w
  5578  0080' 1283               	bcf	3,5	;RP0=0, select bank0
  5579  0081' 1303               	bcf	3,6	;RP1=0, select bank0
  5580  0082' 009D'              	movwf	___flmul@b
  5581  0083' 1683               	bsf	3,5	;RP0=1, select bank1
  5582  0084' 1303               	bcf	3,6	;RP1=0, select bank1
  5583  0085' 0800'              	movf	(eval_poly@x+3)^(0+128),w
  5584  0086' 1283               	bcf	3,5	;RP0=0, select bank0
  5585  0087' 1303               	bcf	3,6	;RP1=0, select bank0
  5586  0088' 00A4'              	movwf	___flmul@a+3
  5587  0089' 1683               	bsf	3,5	;RP0=1, select bank1
  5588  008A' 1303               	bcf	3,6	;RP1=0, select bank1
  5589  008B' 0800'              	movf	(eval_poly@x+2)^(0+128),w
  5590  008C' 1283               	bcf	3,5	;RP0=0, select bank0
  5591  008D' 1303               	bcf	3,6	;RP1=0, select bank0
  5592  008E' 00A3'              	movwf	___flmul@a+2
  5593  008F' 1683               	bsf	3,5	;RP0=1, select bank1
  5594  0090' 1303               	bcf	3,6	;RP1=0, select bank1
  5595  0091' 0800'              	movf	(eval_poly@x+1)^(0+128),w
  5596  0092' 1283               	bcf	3,5	;RP0=0, select bank0
  5597  0093' 1303               	bcf	3,6	;RP1=0, select bank0
  5598  0094' 00A2'              	movwf	___flmul@a+1
  5599  0095' 1683               	bsf	3,5	;RP0=1, select bank1
  5600  0096' 1303               	bcf	3,6	;RP1=0, select bank1
  5601  0097' 0800'              	movf	eval_poly@x^(0+128),w
  5602  0098' 1283               	bcf	3,5	;RP0=0, select bank0
  5603  0099' 1303               	bcf	3,6	;RP1=0, select bank0
  5604  009A' 00A1'              	movwf	___flmul@a
  5605  009B' 118A' 2000' 118A'  	fcall	___flmul
  5606  009E' 1283               	bcf	3,5	;RP0=0, select bank0
  5607  009F' 1303               	bcf	3,6	;RP1=0, select bank0
  5608  00A0' 0820'              	movf	?___flmul+3,w
  5609  00A1' 00BE'              	movwf	___fladd@a+3
  5610  00A2' 081F'              	movf	?___flmul+2,w
  5611  00A3' 00BD'              	movwf	___fladd@a+2
  5612  00A4' 081E'              	movf	?___flmul+1,w
  5613  00A5' 00BC'              	movwf	___fladd@a+1
  5614  00A6' 081D'              	movf	?___flmul,w
  5615  00A7' 00BB'              	movwf	___fladd@a
  5616  00A8' 118A' 2000' 118A'  	fcall	___fladd
  5617  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
  5618  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
  5619  00AD' 083A'              	movf	?___fladd+3,w
  5620  00AE' 1683               	bsf	3,5	;RP0=1, select bank1
  5621  00AF' 1303               	bcf	3,6	;RP1=0, select bank1
  5622  00B0' 0080'              	movwf	(eval_poly@res+3)^(0+128)
  5623  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
  5624  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
  5625  00B3' 0839'              	movf	?___fladd+2,w
  5626  00B4' 1683               	bsf	3,5	;RP0=1, select bank1
  5627  00B5' 1303               	bcf	3,6	;RP1=0, select bank1
  5628  00B6' 0080'              	movwf	(eval_poly@res+2)^(0+128)
  5629  00B7' 1283               	bcf	3,5	;RP0=0, select bank0
  5630  00B8' 1303               	bcf	3,6	;RP1=0, select bank0
  5631  00B9' 0838'              	movf	?___fladd+1,w
  5632  00BA' 1683               	bsf	3,5	;RP0=1, select bank1
  5633  00BB' 1303               	bcf	3,6	;RP1=0, select bank1
  5634  00BC' 0080'              	movwf	(eval_poly@res+1)^(0+128)
  5635  00BD' 1283               	bcf	3,5	;RP0=0, select bank0
  5636  00BE' 1303               	bcf	3,6	;RP1=0, select bank0
  5637  00BF' 0837'              	movf	?___fladd,w
  5638  00C0' 1683               	bsf	3,5	;RP0=1, select bank1
  5639  00C1' 1303               	bcf	3,6	;RP1=0, select bank1
  5640  00C2' 0080'              	movwf	eval_poly@res^(0+128)
  5641  00C3'                    l4551:
  5642  00C3' 0800'              	movf	eval_poly@n^(0+128),w
  5643  00C4' 0400'              	iorwf	(eval_poly@n+1)^(0+128),w
  5644  00C5' 1D03               	btfss	3,2
  5645  00C6' 2800'              	goto	u6451
  5646  00C7' 2800'              	goto	u6450
  5647  00C8'                    u6451:
  5648  00C8' 2800'              	goto	l4549
  5649  00C9'                    u6450:
  5650  00C9'                    l4553:
  5651  00C9' 0800'              	movf	(eval_poly@res+3)^(0+128),w
  5652  00CA' 0080'              	movwf	(?_eval_poly+3)^(0+128)
  5653  00CB' 0800'              	movf	(eval_poly@res+2)^(0+128),w
  5654  00CC' 0080'              	movwf	(?_eval_poly+2)^(0+128)
  5655  00CD' 0800'              	movf	(eval_poly@res+1)^(0+128),w
  5656  00CE' 0080'              	movwf	(?_eval_poly+1)^(0+128)
  5657  00CF' 0800'              	movf	eval_poly@res^(0+128),w
  5658  00D0' 0080'              	movwf	?_eval_poly^(0+128)
  5659  00D1'                    l882:
  5660  00D1' 0008               	return
  5661  00D2'                    __end_of_eval_poly:
  5662                           
  5663                           	psect	text16
  5664  0000'                    __ptext16:	
  5665 ;; *************** function ___flmul *****************
  5666 ;; Defined at:
  5667 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcmul.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  b               4   29[BANK0 ] int 
  5670 ;;  a               4   33[BANK0 ] int 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  prod            4   49[BANK0 ] struct .
  5673 ;;  grs             4   44[BANK0 ] unsigned long 
  5674 ;;  temp            2   53[BANK0 ] struct .
  5675 ;;  bexp            1   48[BANK0 ] unsigned char 
  5676 ;;  aexp            1   43[BANK0 ] unsigned char 
  5677 ;;  sign            1   42[BANK0 ] unsigned char 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  4   29[BANK0 ] unsigned char 
  5680 ;; Registers used:
  5681 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5687 ;;      Params:         0       8       0       0
  5688 ;;      Locals:         0      13       0       0
  5689 ;;      Temps:          0       5       0       0
  5690 ;;      Totals:         0      26       0       0
  5691 ;;Total ram usage:       26 bytes
  5692 ;; Hardware stack levels used: 1
  5693 ;; Hardware stack levels required when called: 1
  5694 ;; This function calls:
  5695 ;;		__Umul8_16
  5696 ;; This function is called by:
  5697 ;;		_vector_length
  5698 ;;		_pow
  5699 ;;		_exp
  5700 ;;		_eval_poly
  5701 ;;		_log
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705  0000'                    ___flmul:	
  5706                           ;psect for function ___flmul
  5707                           
  5708  0000'                    l4159:	
  5709                           ;incstack = 0
  5710                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5711                           
  5712  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5713  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5714  0002' 0820'              	movf	___flmul@b+3,w
  5715  0003' 3980               	andlw	128
  5716  0004' 00AA'              	movwf	___flmul@sign
  5717  0005'                    l4161:
  5718  0005' 0820'              	movf	___flmul@b+3,w
  5719  0006' 00A5'              	movwf	??___flmul
  5720  0007' 0725'              	addwf	??___flmul,w
  5721  0008' 00B0'              	movwf	___flmul@bexp
  5722  0009'                    l4163:
  5723  0009' 1F9F'              	btfss	___flmul@b+2,7
  5724  000A' 2800'              	goto	u5561
  5725  000B' 2800'              	goto	u5560
  5726  000C'                    u5561:
  5727  000C' 2800'              	goto	l4167
  5728  000D'                    u5560:
  5729  000D'                    l4165:
  5730  000D' 1430'              	bsf	___flmul@bexp,0
  5731  000E'                    l4167:
  5732  000E' 0830'              	movf	___flmul@bexp,w
  5733  000F' 1903               	btfsc	3,2
  5734  0010' 2800'              	goto	u5571
  5735  0011' 2800'              	goto	u5570
  5736  0012'                    u5571:
  5737  0012' 2800'              	goto	l4175
  5738  0013'                    u5570:
  5739  0013'                    l4169:
  5740  0013' 0A30'              	incf	___flmul@bexp,w
  5741  0014' 1D03               	btfss	3,2
  5742  0015' 2800'              	goto	u5581
  5743  0016' 2800'              	goto	u5580
  5744  0017'                    u5581:
  5745  0017' 2800'              	goto	l4173
  5746  0018'                    u5580:
  5747  0018'                    l4171:
  5748  0018' 3000               	movlw	0
  5749  0019' 00A0'              	movwf	___flmul@b+3
  5750  001A' 3000               	movlw	0
  5751  001B' 009F'              	movwf	___flmul@b+2
  5752  001C' 3000               	movlw	0
  5753  001D' 009E'              	movwf	___flmul@b+1
  5754  001E' 3000               	movlw	0
  5755  001F' 009D'              	movwf	___flmul@b
  5756  0020'                    l4173:
  5757  0020' 179F'              	bsf	___flmul@b+2,7
  5758  0021' 2800'              	goto	l4177
  5759  0022'                    l4175:
  5760  0022' 3000               	movlw	0
  5761  0023' 00A0'              	movwf	___flmul@b+3
  5762  0024' 3000               	movlw	0
  5763  0025' 009F'              	movwf	___flmul@b+2
  5764  0026' 3000               	movlw	0
  5765  0027' 009E'              	movwf	___flmul@b+1
  5766  0028' 3000               	movlw	0
  5767  0029' 009D'              	movwf	___flmul@b
  5768  002A'                    l4177:
  5769  002A' 0824'              	movf	___flmul@a+3,w
  5770  002B' 3980               	andlw	128
  5771  002C' 00A5'              	movwf	??___flmul
  5772  002D' 0825'              	movf	??___flmul,w
  5773  002E' 06AA'              	xorwf	___flmul@sign,f
  5774  002F'                    l4179:
  5775  002F' 0824'              	movf	___flmul@a+3,w
  5776  0030' 00A5'              	movwf	??___flmul
  5777  0031' 0725'              	addwf	??___flmul,w
  5778  0032' 00AB'              	movwf	___flmul@aexp
  5779  0033'                    l4181:
  5780  0033' 1FA3'              	btfss	___flmul@a+2,7
  5781  0034' 2800'              	goto	u5591
  5782  0035' 2800'              	goto	u5590
  5783  0036'                    u5591:
  5784  0036' 2800'              	goto	l4185
  5785  0037'                    u5590:
  5786  0037'                    l4183:
  5787  0037' 142B'              	bsf	___flmul@aexp,0
  5788  0038'                    l4185:
  5789  0038' 082B'              	movf	___flmul@aexp,w
  5790  0039' 1903               	btfsc	3,2
  5791  003A' 2800'              	goto	u5601
  5792  003B' 2800'              	goto	u5600
  5793  003C'                    u5601:
  5794  003C' 2800'              	goto	l4193
  5795  003D'                    u5600:
  5796  003D'                    l4187:
  5797  003D' 0A2B'              	incf	___flmul@aexp,w
  5798  003E' 1D03               	btfss	3,2
  5799  003F' 2800'              	goto	u5611
  5800  0040' 2800'              	goto	u5610
  5801  0041'                    u5611:
  5802  0041' 2800'              	goto	l4191
  5803  0042'                    u5610:
  5804  0042'                    l4189:
  5805  0042' 3000               	movlw	0
  5806  0043' 00A4'              	movwf	___flmul@a+3
  5807  0044' 3000               	movlw	0
  5808  0045' 00A3'              	movwf	___flmul@a+2
  5809  0046' 3000               	movlw	0
  5810  0047' 00A2'              	movwf	___flmul@a+1
  5811  0048' 3000               	movlw	0
  5812  0049' 00A1'              	movwf	___flmul@a
  5813  004A'                    l4191:
  5814  004A' 17A3'              	bsf	___flmul@a+2,7
  5815  004B' 2800'              	goto	l4195
  5816  004C'                    l4193:
  5817  004C' 3000               	movlw	0
  5818  004D' 00A4'              	movwf	___flmul@a+3
  5819  004E' 3000               	movlw	0
  5820  004F' 00A3'              	movwf	___flmul@a+2
  5821  0050' 3000               	movlw	0
  5822  0051' 00A2'              	movwf	___flmul@a+1
  5823  0052' 3000               	movlw	0
  5824  0053' 00A1'              	movwf	___flmul@a
  5825  0054'                    l4195:
  5826  0054' 082B'              	movf	___flmul@aexp,w
  5827  0055' 1903               	btfsc	3,2
  5828  0056' 2800'              	goto	u5621
  5829  0057' 2800'              	goto	u5620
  5830  0058'                    u5621:
  5831  0058' 2800'              	goto	l4199
  5832  0059'                    u5620:
  5833  0059'                    l4197:
  5834  0059' 0830'              	movf	___flmul@bexp,w
  5835  005A' 1D03               	btfss	3,2
  5836  005B' 2800'              	goto	u5631
  5837  005C' 2800'              	goto	u5630
  5838  005D'                    u5631:
  5839  005D' 2800'              	goto	l4203
  5840  005E'                    u5630:
  5841  005E'                    l4199:
  5842  005E' 3000               	movlw	0
  5843  005F' 00A0'              	movwf	?___flmul+3
  5844  0060' 3000               	movlw	0
  5845  0061' 009F'              	movwf	?___flmul+2
  5846  0062' 3000               	movlw	0
  5847  0063' 009E'              	movwf	?___flmul+1
  5848  0064' 3000               	movlw	0
  5849  0065' 009D'              	movwf	?___flmul
  5850  0066' 2800'              	goto	l757
  5851  0067'                    l4203:
  5852  0067' 081D'              	movf	___flmul@b,w
  5853  0068' 0080'              	movwf	__Umul8_16@multiplicand
  5854  0069' 0823'              	movf	___flmul@a+2,w
  5855  006A' 118A' 2000' 118A'  	fcall	__Umul8_16
  5856  006D' 0801'              	movf	?__Umul8_16+1,w
  5857  006E' 1283               	bcf	3,5	;RP0=0, select bank0
  5858  006F' 1303               	bcf	3,6	;RP1=0, select bank0
  5859  0070' 00B6'              	movwf	___flmul@temp+1
  5860  0071' 0800'              	movf	?__Umul8_16,w
  5861  0072' 00B5'              	movwf	___flmul@temp
  5862  0073'                    l4205:
  5863  0073' 0835'              	movf	___flmul@temp,w
  5864  0074' 00A5'              	movwf	??___flmul
  5865  0075' 01A6'              	clrf	??___flmul+1
  5866  0076' 01A7'              	clrf	??___flmul+2
  5867  0077' 01A8'              	clrf	??___flmul+3
  5868  0078' 0828'              	movf	??___flmul+3,w
  5869  0079' 00AF'              	movwf	___flmul@grs+3
  5870  007A' 0827'              	movf	??___flmul+2,w
  5871  007B' 00AE'              	movwf	___flmul@grs+2
  5872  007C' 0826'              	movf	??___flmul+1,w
  5873  007D' 00AD'              	movwf	___flmul@grs+1
  5874  007E' 0825'              	movf	??___flmul,w
  5875  007F' 00AC'              	movwf	___flmul@grs
  5876  0080'                    l4207:
  5877  0080' 0836'              	movf	___flmul@temp+1,w
  5878  0081' 00A5'              	movwf	??___flmul
  5879  0082' 01A6'              	clrf	??___flmul+1
  5880  0083' 01A7'              	clrf	??___flmul+2
  5881  0084' 01A8'              	clrf	??___flmul+3
  5882  0085' 0828'              	movf	??___flmul+3,w
  5883  0086' 00B4'              	movwf	___flmul@prod+3
  5884  0087' 0827'              	movf	??___flmul+2,w
  5885  0088' 00B3'              	movwf	___flmul@prod+2
  5886  0089' 0826'              	movf	??___flmul+1,w
  5887  008A' 00B2'              	movwf	___flmul@prod+1
  5888  008B' 0825'              	movf	??___flmul,w
  5889  008C' 00B1'              	movwf	___flmul@prod
  5890  008D' 081E'              	movf	___flmul@b+1,w
  5891  008E' 0080'              	movwf	__Umul8_16@multiplicand
  5892  008F' 0822'              	movf	___flmul@a+1,w
  5893  0090' 118A' 2000' 118A'  	fcall	__Umul8_16
  5894  0093' 0801'              	movf	?__Umul8_16+1,w
  5895  0094' 1283               	bcf	3,5	;RP0=0, select bank0
  5896  0095' 1303               	bcf	3,6	;RP1=0, select bank0
  5897  0096' 00B6'              	movwf	___flmul@temp+1
  5898  0097' 0800'              	movf	?__Umul8_16,w
  5899  0098' 00B5'              	movwf	___flmul@temp
  5900  0099'                    l4209:
  5901  0099' 0835'              	movf	___flmul@temp,w
  5902  009A' 00A5'              	movwf	??___flmul
  5903  009B' 01A6'              	clrf	??___flmul+1
  5904  009C' 01A7'              	clrf	??___flmul+2
  5905  009D' 01A8'              	clrf	??___flmul+3
  5906  009E' 0825'              	movf	??___flmul,w
  5907  009F' 07AC'              	addwf	___flmul@grs,f
  5908  00A0' 0826'              	movf	??___flmul+1,w
  5909  00A1' 1103               	clrz
  5910  00A2' 1803               	skipnc
  5911  00A3' 3E01               	addlw	1
  5912  00A4' 1903               	skipnz
  5913  00A5' 2800'              	goto	u5641
  5914  00A6' 07AD'              	addwf	___flmul@grs+1,f
  5915  00A7'                    u5641:
  5916  00A7' 0827'              	movf	??___flmul+2,w
  5917  00A8' 1103               	clrz
  5918  00A9' 1803               	skipnc
  5919  00AA' 3E01               	addlw	1
  5920  00AB' 1903               	skipnz
  5921  00AC' 2800'              	goto	u5642
  5922  00AD' 07AE'              	addwf	___flmul@grs+2,f
  5923  00AE'                    u5642:
  5924  00AE' 0828'              	movf	??___flmul+3,w
  5925  00AF' 1103               	clrz
  5926  00B0' 1803               	skipnc
  5927  00B1' 3E01               	addlw	1
  5928  00B2' 1903               	skipnz
  5929  00B3' 2800'              	goto	u5643
  5930  00B4' 07AF'              	addwf	___flmul@grs+3,f
  5931  00B5'                    u5643:
  5932  00B5'                    l4211:
  5933  00B5' 0836'              	movf	___flmul@temp+1,w
  5934  00B6' 00A5'              	movwf	??___flmul
  5935  00B7' 01A6'              	clrf	??___flmul+1
  5936  00B8' 01A7'              	clrf	??___flmul+2
  5937  00B9' 01A8'              	clrf	??___flmul+3
  5938  00BA' 0825'              	movf	??___flmul,w
  5939  00BB' 07B1'              	addwf	___flmul@prod,f
  5940  00BC' 0826'              	movf	??___flmul+1,w
  5941  00BD' 1103               	clrz
  5942  00BE' 1803               	skipnc
  5943  00BF' 3E01               	addlw	1
  5944  00C0' 1903               	skipnz
  5945  00C1' 2800'              	goto	u5651
  5946  00C2' 07B2'              	addwf	___flmul@prod+1,f
  5947  00C3'                    u5651:
  5948  00C3' 0827'              	movf	??___flmul+2,w
  5949  00C4' 1103               	clrz
  5950  00C5' 1803               	skipnc
  5951  00C6' 3E01               	addlw	1
  5952  00C7' 1903               	skipnz
  5953  00C8' 2800'              	goto	u5652
  5954  00C9' 07B3'              	addwf	___flmul@prod+2,f
  5955  00CA'                    u5652:
  5956  00CA' 0828'              	movf	??___flmul+3,w
  5957  00CB' 1103               	clrz
  5958  00CC' 1803               	skipnc
  5959  00CD' 3E01               	addlw	1
  5960  00CE' 1903               	skipnz
  5961  00CF' 2800'              	goto	u5653
  5962  00D0' 07B4'              	addwf	___flmul@prod+3,f
  5963  00D1'                    u5653:
  5964  00D1' 081F'              	movf	___flmul@b+2,w
  5965  00D2' 0080'              	movwf	__Umul8_16@multiplicand
  5966  00D3' 0821'              	movf	___flmul@a,w
  5967  00D4' 118A' 2000' 118A'  	fcall	__Umul8_16
  5968  00D7' 0801'              	movf	?__Umul8_16+1,w
  5969  00D8' 1283               	bcf	3,5	;RP0=0, select bank0
  5970  00D9' 1303               	bcf	3,6	;RP1=0, select bank0
  5971  00DA' 00B6'              	movwf	___flmul@temp+1
  5972  00DB' 0800'              	movf	?__Umul8_16,w
  5973  00DC' 00B5'              	movwf	___flmul@temp
  5974  00DD'                    l4213:
  5975  00DD' 0835'              	movf	___flmul@temp,w
  5976  00DE' 00A5'              	movwf	??___flmul
  5977  00DF' 01A6'              	clrf	??___flmul+1
  5978  00E0' 01A7'              	clrf	??___flmul+2
  5979  00E1' 01A8'              	clrf	??___flmul+3
  5980  00E2' 0825'              	movf	??___flmul,w
  5981  00E3' 07AC'              	addwf	___flmul@grs,f
  5982  00E4' 0826'              	movf	??___flmul+1,w
  5983  00E5' 1103               	clrz
  5984  00E6' 1803               	skipnc
  5985  00E7' 3E01               	addlw	1
  5986  00E8' 1903               	skipnz
  5987  00E9' 2800'              	goto	u5661
  5988  00EA' 07AD'              	addwf	___flmul@grs+1,f
  5989  00EB'                    u5661:
  5990  00EB' 0827'              	movf	??___flmul+2,w
  5991  00EC' 1103               	clrz
  5992  00ED' 1803               	skipnc
  5993  00EE' 3E01               	addlw	1
  5994  00EF' 1903               	skipnz
  5995  00F0' 2800'              	goto	u5662
  5996  00F1' 07AE'              	addwf	___flmul@grs+2,f
  5997  00F2'                    u5662:
  5998  00F2' 0828'              	movf	??___flmul+3,w
  5999  00F3' 1103               	clrz
  6000  00F4' 1803               	skipnc
  6001  00F5' 3E01               	addlw	1
  6002  00F6' 1903               	skipnz
  6003  00F7' 2800'              	goto	u5663
  6004  00F8' 07AF'              	addwf	___flmul@grs+3,f
  6005  00F9'                    u5663:
  6006  00F9'                    l4215:
  6007  00F9' 0836'              	movf	___flmul@temp+1,w
  6008  00FA' 00A5'              	movwf	??___flmul
  6009  00FB' 01A6'              	clrf	??___flmul+1
  6010  00FC' 01A7'              	clrf	??___flmul+2
  6011  00FD' 01A8'              	clrf	??___flmul+3
  6012  00FE' 0825'              	movf	??___flmul,w
  6013  00FF' 07B1'              	addwf	___flmul@prod,f
  6014  0100' 0826'              	movf	??___flmul+1,w
  6015  0101' 1103               	clrz
  6016  0102' 1803               	skipnc
  6017  0103' 3E01               	addlw	1
  6018  0104' 1903               	skipnz
  6019  0105' 2800'              	goto	u5671
  6020  0106' 07B2'              	addwf	___flmul@prod+1,f
  6021  0107'                    u5671:
  6022  0107' 0827'              	movf	??___flmul+2,w
  6023  0108' 1103               	clrz
  6024  0109' 1803               	skipnc
  6025  010A' 3E01               	addlw	1
  6026  010B' 1903               	skipnz
  6027  010C' 2800'              	goto	u5672
  6028  010D' 07B3'              	addwf	___flmul@prod+2,f
  6029  010E'                    u5672:
  6030  010E' 0828'              	movf	??___flmul+3,w
  6031  010F' 1103               	clrz
  6032  0110' 1803               	skipnc
  6033  0111' 3E01               	addlw	1
  6034  0112' 1903               	skipnz
  6035  0113' 2800'              	goto	u5673
  6036  0114' 07B4'              	addwf	___flmul@prod+3,f
  6037  0115'                    u5673:
  6038  0115'                    l4217:
  6039  0115' 3008               	movlw	8
  6040  0116' 00A5'              	movwf	??___flmul
  6041  0117'                    u5685:
  6042  0117' 1003               	clrc
  6043  0118' 0DAC'              	rlf	___flmul@grs,f
  6044  0119' 0DAD'              	rlf	___flmul@grs+1,f
  6045  011A' 0DAE'              	rlf	___flmul@grs+2,f
  6046  011B' 0DAF'              	rlf	___flmul@grs+3,f
  6047  011C' 0BA5'              	decfsz	??___flmul,f
  6048  011D' 2800'              	goto	u5685
  6049  011E'                    l4219:
  6050  011E' 081E'              	movf	___flmul@b+1,w
  6051  011F' 0080'              	movwf	__Umul8_16@multiplicand
  6052  0120' 0821'              	movf	___flmul@a,w
  6053  0121' 118A' 2000' 118A'  	fcall	__Umul8_16
  6054  0124' 0801'              	movf	?__Umul8_16+1,w
  6055  0125' 1283               	bcf	3,5	;RP0=0, select bank0
  6056  0126' 1303               	bcf	3,6	;RP1=0, select bank0
  6057  0127' 00B6'              	movwf	___flmul@temp+1
  6058  0128' 0800'              	movf	?__Umul8_16,w
  6059  0129' 00B5'              	movwf	___flmul@temp
  6060  012A'                    l4221:
  6061  012A' 0835'              	movf	___flmul@temp,w
  6062  012B' 00A5'              	movwf	??___flmul
  6063  012C' 0836'              	movf	___flmul@temp+1,w
  6064  012D' 00A6'              	movwf	??___flmul+1
  6065  012E' 01A7'              	clrf	??___flmul+2
  6066  012F' 01A8'              	clrf	??___flmul+3
  6067  0130' 0825'              	movf	??___flmul,w
  6068  0131' 07AC'              	addwf	___flmul@grs,f
  6069  0132' 0826'              	movf	??___flmul+1,w
  6070  0133' 1103               	clrz
  6071  0134' 1803               	skipnc
  6072  0135' 3E01               	addlw	1
  6073  0136' 1903               	skipnz
  6074  0137' 2800'              	goto	u5691
  6075  0138' 07AD'              	addwf	___flmul@grs+1,f
  6076  0139'                    u5691:
  6077  0139' 0827'              	movf	??___flmul+2,w
  6078  013A' 1103               	clrz
  6079  013B' 1803               	skipnc
  6080  013C' 3E01               	addlw	1
  6081  013D' 1903               	skipnz
  6082  013E' 2800'              	goto	u5692
  6083  013F' 07AE'              	addwf	___flmul@grs+2,f
  6084  0140'                    u5692:
  6085  0140' 0828'              	movf	??___flmul+3,w
  6086  0141' 1103               	clrz
  6087  0142' 1803               	skipnc
  6088  0143' 3E01               	addlw	1
  6089  0144' 1903               	skipnz
  6090  0145' 2800'              	goto	u5693
  6091  0146' 07AF'              	addwf	___flmul@grs+3,f
  6092  0147'                    u5693:
  6093  0147'                    l4223:
  6094  0147' 081D'              	movf	___flmul@b,w
  6095  0148' 0080'              	movwf	__Umul8_16@multiplicand
  6096  0149' 0822'              	movf	___flmul@a+1,w
  6097  014A' 118A' 2000' 118A'  	fcall	__Umul8_16
  6098  014D' 0801'              	movf	?__Umul8_16+1,w
  6099  014E' 1283               	bcf	3,5	;RP0=0, select bank0
  6100  014F' 1303               	bcf	3,6	;RP1=0, select bank0
  6101  0150' 00B6'              	movwf	___flmul@temp+1
  6102  0151' 0800'              	movf	?__Umul8_16,w
  6103  0152' 00B5'              	movwf	___flmul@temp
  6104  0153'                    l4225:
  6105  0153' 0835'              	movf	___flmul@temp,w
  6106  0154' 00A5'              	movwf	??___flmul
  6107  0155' 0836'              	movf	___flmul@temp+1,w
  6108  0156' 00A6'              	movwf	??___flmul+1
  6109  0157' 01A7'              	clrf	??___flmul+2
  6110  0158' 01A8'              	clrf	??___flmul+3
  6111  0159' 0825'              	movf	??___flmul,w
  6112  015A' 07AC'              	addwf	___flmul@grs,f
  6113  015B' 0826'              	movf	??___flmul+1,w
  6114  015C' 1103               	clrz
  6115  015D' 1803               	skipnc
  6116  015E' 3E01               	addlw	1
  6117  015F' 1903               	skipnz
  6118  0160' 2800'              	goto	u5701
  6119  0161' 07AD'              	addwf	___flmul@grs+1,f
  6120  0162'                    u5701:
  6121  0162' 0827'              	movf	??___flmul+2,w
  6122  0163' 1103               	clrz
  6123  0164' 1803               	skipnc
  6124  0165' 3E01               	addlw	1
  6125  0166' 1903               	skipnz
  6126  0167' 2800'              	goto	u5702
  6127  0168' 07AE'              	addwf	___flmul@grs+2,f
  6128  0169'                    u5702:
  6129  0169' 0828'              	movf	??___flmul+3,w
  6130  016A' 1103               	clrz
  6131  016B' 1803               	skipnc
  6132  016C' 3E01               	addlw	1
  6133  016D' 1903               	skipnz
  6134  016E' 2800'              	goto	u5703
  6135  016F' 07AF'              	addwf	___flmul@grs+3,f
  6136  0170'                    u5703:
  6137  0170'                    l4227:
  6138  0170' 3008               	movlw	8
  6139  0171' 00A5'              	movwf	??___flmul
  6140  0172'                    u5715:
  6141  0172' 1003               	clrc
  6142  0173' 0DAC'              	rlf	___flmul@grs,f
  6143  0174' 0DAD'              	rlf	___flmul@grs+1,f
  6144  0175' 0DAE'              	rlf	___flmul@grs+2,f
  6145  0176' 0DAF'              	rlf	___flmul@grs+3,f
  6146  0177' 0BA5'              	decfsz	??___flmul,f
  6147  0178' 2800'              	goto	u5715
  6148  0179' 081D'              	movf	___flmul@b,w
  6149  017A' 0080'              	movwf	__Umul8_16@multiplicand
  6150  017B' 0821'              	movf	___flmul@a,w
  6151  017C' 118A' 2000' 118A'  	fcall	__Umul8_16
  6152  017F' 0801'              	movf	?__Umul8_16+1,w
  6153  0180' 1283               	bcf	3,5	;RP0=0, select bank0
  6154  0181' 1303               	bcf	3,6	;RP1=0, select bank0
  6155  0182' 00B6'              	movwf	___flmul@temp+1
  6156  0183' 0800'              	movf	?__Umul8_16,w
  6157  0184' 00B5'              	movwf	___flmul@temp
  6158  0185'                    l4229:
  6159  0185' 0835'              	movf	___flmul@temp,w
  6160  0186' 00A5'              	movwf	??___flmul
  6161  0187' 0836'              	movf	___flmul@temp+1,w
  6162  0188' 00A6'              	movwf	??___flmul+1
  6163  0189' 01A7'              	clrf	??___flmul+2
  6164  018A' 01A8'              	clrf	??___flmul+3
  6165  018B' 0825'              	movf	??___flmul,w
  6166  018C' 07AC'              	addwf	___flmul@grs,f
  6167  018D' 0826'              	movf	??___flmul+1,w
  6168  018E' 1103               	clrz
  6169  018F' 1803               	skipnc
  6170  0190' 3E01               	addlw	1
  6171  0191' 1903               	skipnz
  6172  0192' 2800'              	goto	u5721
  6173  0193' 07AD'              	addwf	___flmul@grs+1,f
  6174  0194'                    u5721:
  6175  0194' 0827'              	movf	??___flmul+2,w
  6176  0195' 1103               	clrz
  6177  0196' 1803               	skipnc
  6178  0197' 3E01               	addlw	1
  6179  0198' 1903               	skipnz
  6180  0199' 2800'              	goto	u5722
  6181  019A' 07AE'              	addwf	___flmul@grs+2,f
  6182  019B'                    u5722:
  6183  019B' 0828'              	movf	??___flmul+3,w
  6184  019C' 1103               	clrz
  6185  019D' 1803               	skipnc
  6186  019E' 3E01               	addlw	1
  6187  019F' 1903               	skipnz
  6188  01A0' 2800'              	goto	u5723
  6189  01A1' 07AF'              	addwf	___flmul@grs+3,f
  6190  01A2'                    u5723:
  6191  01A2'                    l4231:
  6192  01A2' 081E'              	movf	___flmul@b+1,w
  6193  01A3' 0080'              	movwf	__Umul8_16@multiplicand
  6194  01A4' 0823'              	movf	___flmul@a+2,w
  6195  01A5' 118A' 2000' 118A'  	fcall	__Umul8_16
  6196  01A8' 0801'              	movf	?__Umul8_16+1,w
  6197  01A9' 1283               	bcf	3,5	;RP0=0, select bank0
  6198  01AA' 1303               	bcf	3,6	;RP1=0, select bank0
  6199  01AB' 00B6'              	movwf	___flmul@temp+1
  6200  01AC' 0800'              	movf	?__Umul8_16,w
  6201  01AD' 00B5'              	movwf	___flmul@temp
  6202  01AE' 0835'              	movf	___flmul@temp,w
  6203  01AF' 00A5'              	movwf	??___flmul
  6204  01B0' 0836'              	movf	___flmul@temp+1,w
  6205  01B1' 00A6'              	movwf	??___flmul+1
  6206  01B2' 01A7'              	clrf	??___flmul+2
  6207  01B3' 01A8'              	clrf	??___flmul+3
  6208  01B4' 0825'              	movf	??___flmul,w
  6209  01B5' 07B1'              	addwf	___flmul@prod,f
  6210  01B6' 0826'              	movf	??___flmul+1,w
  6211  01B7' 1103               	clrz
  6212  01B8' 1803               	skipnc
  6213  01B9' 3E01               	addlw	1
  6214  01BA' 1903               	skipnz
  6215  01BB' 2800'              	goto	u5731
  6216  01BC' 07B2'              	addwf	___flmul@prod+1,f
  6217  01BD'                    u5731:
  6218  01BD' 0827'              	movf	??___flmul+2,w
  6219  01BE' 1103               	clrz
  6220  01BF' 1803               	skipnc
  6221  01C0' 3E01               	addlw	1
  6222  01C1' 1903               	skipnz
  6223  01C2' 2800'              	goto	u5732
  6224  01C3' 07B3'              	addwf	___flmul@prod+2,f
  6225  01C4'                    u5732:
  6226  01C4' 0828'              	movf	??___flmul+3,w
  6227  01C5' 1103               	clrz
  6228  01C6' 1803               	skipnc
  6229  01C7' 3E01               	addlw	1
  6230  01C8' 1903               	skipnz
  6231  01C9' 2800'              	goto	u5733
  6232  01CA' 07B4'              	addwf	___flmul@prod+3,f
  6233  01CB'                    u5733:
  6234  01CB'                    l4233:
  6235  01CB' 081F'              	movf	___flmul@b+2,w
  6236  01CC' 0080'              	movwf	__Umul8_16@multiplicand
  6237  01CD' 0822'              	movf	___flmul@a+1,w
  6238  01CE' 118A' 2000' 118A'  	fcall	__Umul8_16
  6239  01D1' 0801'              	movf	?__Umul8_16+1,w
  6240  01D2' 1283               	bcf	3,5	;RP0=0, select bank0
  6241  01D3' 1303               	bcf	3,6	;RP1=0, select bank0
  6242  01D4' 00B6'              	movwf	___flmul@temp+1
  6243  01D5' 0800'              	movf	?__Umul8_16,w
  6244  01D6' 00B5'              	movwf	___flmul@temp
  6245  01D7'                    l4235:
  6246  01D7' 0835'              	movf	___flmul@temp,w
  6247  01D8' 00A5'              	movwf	??___flmul
  6248  01D9' 0836'              	movf	___flmul@temp+1,w
  6249  01DA' 00A6'              	movwf	??___flmul+1
  6250  01DB' 01A7'              	clrf	??___flmul+2
  6251  01DC' 01A8'              	clrf	??___flmul+3
  6252  01DD' 0825'              	movf	??___flmul,w
  6253  01DE' 07B1'              	addwf	___flmul@prod,f
  6254  01DF' 0826'              	movf	??___flmul+1,w
  6255  01E0' 1103               	clrz
  6256  01E1' 1803               	skipnc
  6257  01E2' 3E01               	addlw	1
  6258  01E3' 1903               	skipnz
  6259  01E4' 2800'              	goto	u5741
  6260  01E5' 07B2'              	addwf	___flmul@prod+1,f
  6261  01E6'                    u5741:
  6262  01E6' 0827'              	movf	??___flmul+2,w
  6263  01E7' 1103               	clrz
  6264  01E8' 1803               	skipnc
  6265  01E9' 3E01               	addlw	1
  6266  01EA' 1903               	skipnz
  6267  01EB' 2800'              	goto	u5742
  6268  01EC' 07B3'              	addwf	___flmul@prod+2,f
  6269  01ED'                    u5742:
  6270  01ED' 0828'              	movf	??___flmul+3,w
  6271  01EE' 1103               	clrz
  6272  01EF' 1803               	skipnc
  6273  01F0' 3E01               	addlw	1
  6274  01F1' 1903               	skipnz
  6275  01F2' 2800'              	goto	u5743
  6276  01F3' 07B4'              	addwf	___flmul@prod+3,f
  6277  01F4'                    u5743:
  6278  01F4' 081F'              	movf	___flmul@b+2,w
  6279  01F5' 0080'              	movwf	__Umul8_16@multiplicand
  6280  01F6' 0823'              	movf	___flmul@a+2,w
  6281  01F7' 118A' 2000' 118A'  	fcall	__Umul8_16
  6282  01FA' 0801'              	movf	?__Umul8_16+1,w
  6283  01FB' 1283               	bcf	3,5	;RP0=0, select bank0
  6284  01FC' 1303               	bcf	3,6	;RP1=0, select bank0
  6285  01FD' 00B6'              	movwf	___flmul@temp+1
  6286  01FE' 0800'              	movf	?__Umul8_16,w
  6287  01FF' 00B5'              	movwf	___flmul@temp
  6288  0200'                    l4237:
  6289  0200' 0835'              	movf	___flmul@temp,w
  6290  0201' 00A5'              	movwf	??___flmul
  6291  0202' 0836'              	movf	___flmul@temp+1,w
  6292  0203' 00A6'              	movwf	??___flmul+1
  6293  0204' 01A7'              	clrf	??___flmul+2
  6294  0205' 01A8'              	clrf	??___flmul+3
  6295  0206' 3008               	movlw	8
  6296  0207'                    u5755:
  6297  0207' 1003               	clrc
  6298  0208' 0DA5'              	rlf	??___flmul,f
  6299  0209' 0DA6'              	rlf	??___flmul+1,f
  6300  020A' 0DA7'              	rlf	??___flmul+2,f
  6301  020B' 0DA8'              	rlf	??___flmul+3,f
  6302  020C'                    u5750:
  6303  020C' 3EFF               	addlw	-1
  6304  020D' 1D03               	skipz
  6305  020E' 2800'              	goto	u5755
  6306  020F' 0825'              	movf	??___flmul,w
  6307  0210' 07B1'              	addwf	___flmul@prod,f
  6308  0211' 0826'              	movf	??___flmul+1,w
  6309  0212' 1103               	clrz
  6310  0213' 1803               	skipnc
  6311  0214' 3E01               	addlw	1
  6312  0215' 1903               	skipnz
  6313  0216' 2800'              	goto	u5761
  6314  0217' 07B2'              	addwf	___flmul@prod+1,f
  6315  0218'                    u5761:
  6316  0218' 0827'              	movf	??___flmul+2,w
  6317  0219' 1103               	clrz
  6318  021A' 1803               	skipnc
  6319  021B' 3E01               	addlw	1
  6320  021C' 1903               	skipnz
  6321  021D' 2800'              	goto	u5762
  6322  021E' 07B3'              	addwf	___flmul@prod+2,f
  6323  021F'                    u5762:
  6324  021F' 0828'              	movf	??___flmul+3,w
  6325  0220' 1103               	clrz
  6326  0221' 1803               	skipnc
  6327  0222' 3E01               	addlw	1
  6328  0223' 1903               	skipnz
  6329  0224' 2800'              	goto	u5763
  6330  0225' 07B4'              	addwf	___flmul@prod+3,f
  6331  0226'                    u5763:
  6332  0226'                    l4239:
  6333  0226' 082C'              	movf	___flmul@grs,w
  6334  0227' 00A5'              	movwf	??___flmul
  6335  0228' 082D'              	movf	___flmul@grs+1,w
  6336  0229' 00A6'              	movwf	??___flmul+1
  6337  022A' 082E'              	movf	___flmul@grs+2,w
  6338  022B' 00A7'              	movwf	??___flmul+2
  6339  022C' 082F'              	movf	___flmul@grs+3,w
  6340  022D' 00A8'              	movwf	??___flmul+3
  6341  022E' 3018               	movlw	24
  6342  022F'                    u5775:
  6343  022F' 1003               	clrc
  6344  0230' 0CA8'              	rrf	??___flmul+3,f
  6345  0231' 0CA7'              	rrf	??___flmul+2,f
  6346  0232' 0CA6'              	rrf	??___flmul+1,f
  6347  0233' 0CA5'              	rrf	??___flmul,f
  6348  0234'                    u5770:
  6349  0234' 3EFF               	addlw	-1
  6350  0235' 1D03               	skipz
  6351  0236' 2800'              	goto	u5775
  6352  0237' 0825'              	movf	??___flmul,w
  6353  0238' 07B1'              	addwf	___flmul@prod,f
  6354  0239' 0826'              	movf	??___flmul+1,w
  6355  023A' 1103               	clrz
  6356  023B' 1803               	skipnc
  6357  023C' 3E01               	addlw	1
  6358  023D' 1903               	skipnz
  6359  023E' 2800'              	goto	u5781
  6360  023F' 07B2'              	addwf	___flmul@prod+1,f
  6361  0240'                    u5781:
  6362  0240' 0827'              	movf	??___flmul+2,w
  6363  0241' 1103               	clrz
  6364  0242' 1803               	skipnc
  6365  0243' 3E01               	addlw	1
  6366  0244' 1903               	skipnz
  6367  0245' 2800'              	goto	u5782
  6368  0246' 07B3'              	addwf	___flmul@prod+2,f
  6369  0247'                    u5782:
  6370  0247' 0828'              	movf	??___flmul+3,w
  6371  0248' 1103               	clrz
  6372  0249' 1803               	skipnc
  6373  024A' 3E01               	addlw	1
  6374  024B' 1903               	skipnz
  6375  024C' 2800'              	goto	u5783
  6376  024D' 07B4'              	addwf	___flmul@prod+3,f
  6377  024E'                    u5783:
  6378  024E'                    l4241:
  6379  024E' 3008               	movlw	8
  6380  024F' 00A5'              	movwf	??___flmul
  6381  0250'                    u5795:
  6382  0250' 1003               	clrc
  6383  0251' 0DAC'              	rlf	___flmul@grs,f
  6384  0252' 0DAD'              	rlf	___flmul@grs+1,f
  6385  0253' 0DAE'              	rlf	___flmul@grs+2,f
  6386  0254' 0DAF'              	rlf	___flmul@grs+3,f
  6387  0255' 0BA5'              	decfsz	??___flmul,f
  6388  0256' 2800'              	goto	u5795
  6389  0257'                    l4243:
  6390  0257' 0830'              	movf	___flmul@bexp,w
  6391  0258' 072B'              	addwf	___flmul@aexp,w
  6392  0259' 00A5'              	movwf	??___flmul
  6393  025A' 01A6'              	clrf	??___flmul+1
  6394  025B' 0DA6'              	rlf	??___flmul+1,f
  6395  025C' 0825'              	movf	??___flmul,w
  6396  025D' 3E82               	addlw	130
  6397  025E' 00B5'              	movwf	___flmul@temp
  6398  025F' 0826'              	movf	??___flmul+1,w
  6399  0260' 1803               	skipnc
  6400  0261' 3E01               	addlw	1
  6401  0262' 3EFF               	addlw	255
  6402  0263' 00B6'              	movwf	___flmul@temp+1
  6403  0264' 2800'              	goto	l4255
  6404  0265'                    l4245:
  6405  0265' 3001               	movlw	1
  6406  0266' 00A5'              	movwf	??___flmul
  6407  0267'                    u5805:
  6408  0267' 1003               	clrc
  6409  0268' 0DB1'              	rlf	___flmul@prod,f
  6410  0269' 0DB2'              	rlf	___flmul@prod+1,f
  6411  026A' 0DB3'              	rlf	___flmul@prod+2,f
  6412  026B' 0DB4'              	rlf	___flmul@prod+3,f
  6413  026C' 0BA5'              	decfsz	??___flmul,f
  6414  026D' 2800'              	goto	u5805
  6415  026E'                    l4247:
  6416  026E' 1FAF'              	btfss	___flmul@grs+3,7
  6417  026F' 2800'              	goto	u5811
  6418  0270' 2800'              	goto	u5810
  6419  0271'                    u5811:
  6420  0271' 2800'              	goto	l4251
  6421  0272'                    u5810:
  6422  0272'                    l4249:
  6423  0272' 1431'              	bsf	___flmul@prod,0
  6424  0273'                    l4251:
  6425  0273' 3001               	movlw	1
  6426  0274' 00A5'              	movwf	??___flmul
  6427  0275'                    u5825:
  6428  0275' 1003               	clrc
  6429  0276' 0DAC'              	rlf	___flmul@grs,f
  6430  0277' 0DAD'              	rlf	___flmul@grs+1,f
  6431  0278' 0DAE'              	rlf	___flmul@grs+2,f
  6432  0279' 0DAF'              	rlf	___flmul@grs+3,f
  6433  027A' 0BA5'              	decfsz	??___flmul,f
  6434  027B' 2800'              	goto	u5825
  6435  027C'                    l4253:
  6436  027C' 30FF               	movlw	255
  6437  027D' 07B5'              	addwf	___flmul@temp,f
  6438  027E' 1803               	skipnc
  6439  027F' 0AB6'              	incf	___flmul@temp+1,f
  6440  0280' 30FF               	movlw	255
  6441  0281' 07B6'              	addwf	___flmul@temp+1,f
  6442  0282'                    l4255:
  6443  0282' 1FB3'              	btfss	___flmul@prod+2,7
  6444  0283' 2800'              	goto	u5831
  6445  0284' 2800'              	goto	u5830
  6446  0285'                    u5831:
  6447  0285' 2800'              	goto	l4245
  6448  0286'                    u5830:
  6449  0286'                    l4257:
  6450  0286' 01AB'              	clrf	___flmul@aexp
  6451  0287'                    l4259:
  6452  0287' 1FAF'              	btfss	___flmul@grs+3,7
  6453  0288' 2800'              	goto	u5841
  6454  0289' 2800'              	goto	u5840
  6455  028A'                    u5841:
  6456  028A' 2800'              	goto	l4267
  6457  028B'                    u5840:
  6458  028B'                    l4261:
  6459  028B' 30FF               	movlw	255
  6460  028C' 052C'              	andwf	___flmul@grs,w
  6461  028D' 00A5'              	movwf	??___flmul
  6462  028E' 30FF               	movlw	255
  6463  028F' 052D'              	andwf	___flmul@grs+1,w
  6464  0290' 00A6'              	movwf	??___flmul+1
  6465  0291' 30FF               	movlw	255
  6466  0292' 052E'              	andwf	___flmul@grs+2,w
  6467  0293' 00A7'              	movwf	??___flmul+2
  6468  0294' 307F               	movlw	127
  6469  0295' 052F'              	andwf	___flmul@grs+3,w
  6470  0296' 00A8'              	movwf	??___flmul+3
  6471  0297' 0828'              	movf	??___flmul+3,w
  6472  0298' 0427'              	iorwf	??___flmul+2,w
  6473  0299' 0426'              	iorwf	??___flmul+1,w
  6474  029A' 0425'              	iorwf	??___flmul,w
  6475  029B' 1903               	skipnz
  6476  029C' 2800'              	goto	u5851
  6477  029D' 2800'              	goto	u5850
  6478  029E'                    u5851:
  6479  029E' 2800'              	goto	l763
  6480  029F'                    u5850:
  6481  029F'                    l4263:
  6482  029F' 01AB'              	clrf	___flmul@aexp
  6483  02A0' 0AAB'              	incf	___flmul@aexp,f
  6484  02A1' 2800'              	goto	l4267
  6485  02A2'                    l763:
  6486  02A2' 1C31'              	btfss	___flmul@prod,0
  6487  02A3' 2800'              	goto	u5861
  6488  02A4' 2800'              	goto	u5860
  6489  02A5'                    u5861:
  6490  02A5' 2800'              	goto	l4267
  6491  02A6'                    u5860:
  6492  02A6' 2800'              	goto	l4263
  6493  02A7'                    l4267:
  6494  02A7' 082B'              	movf	___flmul@aexp,w
  6495  02A8' 1903               	btfsc	3,2
  6496  02A9' 2800'              	goto	u5871
  6497  02AA' 2800'              	goto	u5870
  6498  02AB'                    u5871:
  6499  02AB' 2800'              	goto	l4277
  6500  02AC'                    u5870:
  6501  02AC'                    l4269:
  6502  02AC' 3001               	movlw	1
  6503  02AD' 07B1'              	addwf	___flmul@prod,f
  6504  02AE' 3000               	movlw	0
  6505  02AF' 1803               	skipnc
  6506  02B0' 3001               	movlw	1
  6507  02B1' 07B2'              	addwf	___flmul@prod+1,f
  6508  02B2' 3000               	movlw	0
  6509  02B3' 1803               	skipnc
  6510  02B4' 3001               	movlw	1
  6511  02B5' 07B3'              	addwf	___flmul@prod+2,f
  6512  02B6' 3000               	movlw	0
  6513  02B7' 1803               	skipnc
  6514  02B8' 3001               	movlw	1
  6515  02B9' 07B4'              	addwf	___flmul@prod+3,f
  6516  02BA'                    l4271:
  6517  02BA' 1C34'              	btfss	___flmul@prod+3,0
  6518  02BB' 2800'              	goto	u5881
  6519  02BC' 2800'              	goto	u5880
  6520  02BD'                    u5881:
  6521  02BD' 2800'              	goto	l4277
  6522  02BE'                    u5880:
  6523  02BE'                    l4273:
  6524  02BE' 0831'              	movf	___flmul@prod,w
  6525  02BF' 00A5'              	movwf	??___flmul
  6526  02C0' 0832'              	movf	___flmul@prod+1,w
  6527  02C1' 00A6'              	movwf	??___flmul+1
  6528  02C2' 0833'              	movf	___flmul@prod+2,w
  6529  02C3' 00A7'              	movwf	??___flmul+2
  6530  02C4' 0834'              	movf	___flmul@prod+3,w
  6531  02C5' 00A8'              	movwf	??___flmul+3
  6532  02C6' 3001               	movlw	1
  6533  02C7' 00A9'              	movwf	??___flmul+4
  6534  02C8'                    u5895:
  6535  02C8' 0D28'              	rlf	??___flmul+3,w
  6536  02C9' 0CA8'              	rrf	??___flmul+3,f
  6537  02CA' 0CA7'              	rrf	??___flmul+2,f
  6538  02CB' 0CA6'              	rrf	??___flmul+1,f
  6539  02CC' 0CA5'              	rrf	??___flmul,f
  6540  02CD'                    u5890:
  6541  02CD' 0BA9'              	decfsz	??___flmul+4,f
  6542  02CE' 2800'              	goto	u5895
  6543  02CF' 0828'              	movf	??___flmul+3,w
  6544  02D0' 00B4'              	movwf	___flmul@prod+3
  6545  02D1' 0827'              	movf	??___flmul+2,w
  6546  02D2' 00B3'              	movwf	___flmul@prod+2
  6547  02D3' 0826'              	movf	??___flmul+1,w
  6548  02D4' 00B2'              	movwf	___flmul@prod+1
  6549  02D5' 0825'              	movf	??___flmul,w
  6550  02D6' 00B1'              	movwf	___flmul@prod
  6551  02D7'                    l4275:
  6552  02D7' 3001               	movlw	1
  6553  02D8' 07B5'              	addwf	___flmul@temp,f
  6554  02D9' 1803               	skipnc
  6555  02DA' 0AB6'              	incf	___flmul@temp+1,f
  6556  02DB' 3000               	movlw	0
  6557  02DC' 07B6'              	addwf	___flmul@temp+1,f
  6558  02DD'                    l4277:
  6559  02DD' 0836'              	movf	___flmul@temp+1,w
  6560  02DE' 3A80               	xorlw	128
  6561  02DF' 00FF               	movwf	btemp+1
  6562  02E0' 3080               	movlw	128
  6563  02E1' 027F               	subwf	btemp+1,w
  6564  02E2' 1D03               	skipz
  6565  02E3' 2800'              	goto	u5905
  6566  02E4' 30FF               	movlw	255
  6567  02E5' 0235'              	subwf	___flmul@temp,w
  6568  02E6'                    u5905:
  6569  02E6' 1C03               	skipc
  6570  02E7' 2800'              	goto	u5901
  6571  02E8' 2800'              	goto	u5900
  6572  02E9'                    u5901:
  6573  02E9' 2800'              	goto	l4281
  6574  02EA'                    u5900:
  6575  02EA'                    l4279:
  6576  02EA' 307F               	movlw	127
  6577  02EB' 1283               	bcf	3,5	;RP0=0, select bank0
  6578  02EC' 1303               	bcf	3,6	;RP1=0, select bank0
  6579  02ED' 00B4'              	movwf	___flmul@prod+3
  6580  02EE' 3080               	movlw	128
  6581  02EF' 00B3'              	movwf	___flmul@prod+2
  6582  02F0' 3000               	movlw	0
  6583  02F1' 00B2'              	movwf	___flmul@prod+1
  6584  02F2' 3000               	movlw	0
  6585  02F3' 00B1'              	movwf	___flmul@prod
  6586  02F4' 2800'              	goto	l769
  6587  02F5'                    l4281:
  6588  02F5' 1283               	bcf	3,5	;RP0=0, select bank0
  6589  02F6' 1303               	bcf	3,6	;RP1=0, select bank0
  6590  02F7' 0836'              	movf	___flmul@temp+1,w
  6591  02F8' 3A80               	xorlw	128
  6592  02F9' 00FF               	movwf	btemp+1
  6593  02FA' 3080               	movlw	128
  6594  02FB' 027F               	subwf	btemp+1,w
  6595  02FC' 1D03               	skipz
  6596  02FD' 2800'              	goto	u5915
  6597  02FE' 3001               	movlw	1
  6598  02FF' 0235'              	subwf	___flmul@temp,w
  6599  0300'                    u5915:
  6600  0300' 1803               	skipnc
  6601  0301' 2800'              	goto	u5911
  6602  0302' 2800'              	goto	u5910
  6603  0303'                    u5911:
  6604  0303' 2800'              	goto	l4287
  6605  0304'                    u5910:
  6606  0304'                    l4283:
  6607  0304' 3000               	movlw	0
  6608  0305' 1283               	bcf	3,5	;RP0=0, select bank0
  6609  0306' 1303               	bcf	3,6	;RP1=0, select bank0
  6610  0307' 00B4'              	movwf	___flmul@prod+3
  6611  0308' 3000               	movlw	0
  6612  0309' 00B3'              	movwf	___flmul@prod+2
  6613  030A' 3000               	movlw	0
  6614  030B' 00B2'              	movwf	___flmul@prod+1
  6615  030C' 3000               	movlw	0
  6616  030D' 00B1'              	movwf	___flmul@prod
  6617  030E'                    l4285:
  6618  030E' 01AA'              	clrf	___flmul@sign
  6619  030F' 2800'              	goto	l769
  6620  0310'                    l4287:
  6621  0310' 1283               	bcf	3,5	;RP0=0, select bank0
  6622  0311' 1303               	bcf	3,6	;RP1=0, select bank0
  6623  0312' 0835'              	movf	___flmul@temp,w
  6624  0313' 00B0'              	movwf	___flmul@bexp
  6625  0314' 30FF               	movlw	255
  6626  0315' 05B1'              	andwf	___flmul@prod,f
  6627  0316' 30FF               	movlw	255
  6628  0317' 05B2'              	andwf	___flmul@prod+1,f
  6629  0318' 307F               	movlw	127
  6630  0319' 05B3'              	andwf	___flmul@prod+2,f
  6631  031A' 3000               	movlw	0
  6632  031B' 05B4'              	andwf	___flmul@prod+3,f
  6633  031C'                    l4289:
  6634  031C' 1C30'              	btfss	___flmul@bexp,0
  6635  031D' 2800'              	goto	u5921
  6636  031E' 2800'              	goto	u5920
  6637  031F'                    u5921:
  6638  031F' 2800'              	goto	l4293
  6639  0320'                    u5920:
  6640  0320'                    l4291:
  6641  0320' 17B3'              	bsf	___flmul@prod+2,7
  6642  0321'                    l4293:
  6643  0321' 0830'              	movf	___flmul@bexp,w
  6644  0322' 00A5'              	movwf	??___flmul
  6645  0323' 1003               	clrc
  6646  0324' 0C25'              	rrf	??___flmul,w
  6647  0325' 00B4'              	movwf	___flmul@prod+3
  6648  0326'                    l769:
  6649  0326' 082A'              	movf	___flmul@sign,w
  6650  0327' 00A5'              	movwf	??___flmul
  6651  0328' 0825'              	movf	??___flmul,w
  6652  0329' 04B4'              	iorwf	___flmul@prod+3,f
  6653  032A'                    l4295:
  6654  032A' 0834'              	movf	___flmul@prod+3,w
  6655  032B' 00A0'              	movwf	?___flmul+3
  6656  032C' 0833'              	movf	___flmul@prod+2,w
  6657  032D' 009F'              	movwf	?___flmul+2
  6658  032E' 0832'              	movf	___flmul@prod+1,w
  6659  032F' 009E'              	movwf	?___flmul+1
  6660  0330' 0831'              	movf	___flmul@prod,w
  6661  0331' 009D'              	movwf	?___flmul
  6662  0332'                    l757:
  6663  0332' 0008               	return
  6664  0333'                    __end_of___flmul:
  6665                           
  6666                           	psect	text17
  6667  0000'                    __ptext17:	
  6668 ;; *************** function __Umul8_16 *****************
  6669 ;; Defined at:
  6670 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul8_16.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  multiplier      1    wreg     unsigned char 
  6673 ;;  multiplicand    1    0[COMMON] unsigned char 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  multiplier      1    8[COMMON] unsigned char 
  6676 ;;  word_mpld       2    6[COMMON] unsigned int 
  6677 ;;  product         2    4[COMMON] unsigned int 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  2    0[COMMON] unsigned int 
  6680 ;; Registers used:
  6681 ;;		wreg, status,2, status,0
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6687 ;;      Params:         2       0       0       0
  6688 ;;      Locals:         5       0       0       0
  6689 ;;      Temps:          2       0       0       0
  6690 ;;      Totals:         9       0       0       0
  6691 ;;Total ram usage:        9 bytes
  6692 ;; Hardware stack levels used: 1
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		___flmul
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700  0000'                    __Umul8_16:	
  6701                           ;psect for function __Umul8_16
  6702                           
  6703                           
  6704                           ;incstack = 0
  6705                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6706                           ;__Umul8_16@multiplier stored from wreg
  6707  0000' 0088'              	movwf	__Umul8_16@multiplier
  6708  0001'                    l3895:
  6709  0001' 0184'              	clrf	__Umul8_16@product
  6710  0002' 0185'              	clrf	__Umul8_16@product+1
  6711  0003'                    l3897:
  6712  0003' 0800'              	movf	__Umul8_16@multiplicand,w
  6713  0004' 0082'              	movwf	??__Umul8_16
  6714  0005' 0183'              	clrf	??__Umul8_16+1
  6715  0006' 0802'              	movf	??__Umul8_16,w
  6716  0007' 0086'              	movwf	__Umul8_16@word_mpld
  6717  0008' 0803'              	movf	??__Umul8_16+1,w
  6718  0009' 0087'              	movwf	__Umul8_16@word_mpld+1
  6719  000A'                    l3899:
  6720  000A' 1C08'              	btfss	__Umul8_16@multiplier,0
  6721  000B' 2800'              	goto	u4901
  6722  000C' 2800'              	goto	u4900
  6723  000D'                    u4901:
  6724  000D' 2800'              	goto	l776
  6725  000E'                    u4900:
  6726  000E'                    l3901:
  6727  000E' 0806'              	movf	__Umul8_16@word_mpld,w
  6728  000F' 0784'              	addwf	__Umul8_16@product,f
  6729  0010' 1803               	skipnc
  6730  0011' 0A85'              	incf	__Umul8_16@product+1,f
  6731  0012' 0807'              	movf	__Umul8_16@word_mpld+1,w
  6732  0013' 0785'              	addwf	__Umul8_16@product+1,f
  6733  0014'                    l776:
  6734  0014' 3001               	movlw	1
  6735  0015'                    u4915:
  6736  0015' 1003               	clrc
  6737  0016' 0D86'              	rlf	__Umul8_16@word_mpld,f
  6738  0017' 0D87'              	rlf	__Umul8_16@word_mpld+1,f
  6739  0018' 3EFF               	addlw	-1
  6740  0019' 1D03               	skipz
  6741  001A' 2800'              	goto	u4915
  6742  001B' 1003               	clrc
  6743  001C' 0C88'              	rrf	__Umul8_16@multiplier,f
  6744  001D'                    l3903:
  6745  001D' 0808'              	movf	__Umul8_16@multiplier,w
  6746  001E' 1D03               	btfss	3,2
  6747  001F' 2800'              	goto	u4921
  6748  0020' 2800'              	goto	u4920
  6749  0021'                    u4921:
  6750  0021' 2800'              	goto	l3899
  6751  0022'                    u4920:
  6752  0022'                    l3905:
  6753  0022' 0805'              	movf	__Umul8_16@product+1,w
  6754  0023' 0081'              	movwf	?__Umul8_16+1
  6755  0024' 0804'              	movf	__Umul8_16@product,w
  6756  0025' 0080'              	movwf	?__Umul8_16
  6757  0026'                    l778:
  6758  0026' 0008               	return
  6759  0027'                    __end_of__Umul8_16:
  6760                           
  6761                           	psect	text18
  6762  0000'                    __ptext18:	
  6763 ;; *************** function ___flsub *****************
  6764 ;; Defined at:
  6765 ;;		line 242 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcadd.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  a               4    0[BANK1 ] unsigned int 
  6768 ;;  b               4    4[BANK1 ] unsigned int 
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;		None
  6771 ;; Return value:  Size  Location     Type
  6772 ;;                  4    0[BANK1 ] unsigned int 
  6773 ;; Registers used:
  6774 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6775 ;; Tracked objects:
  6776 ;;		On entry : 0/0
  6777 ;;		On exit  : 0/0
  6778 ;;		Unchanged: 0/0
  6779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6780 ;;      Params:         0       0       8       0
  6781 ;;      Locals:         0       0       0       0
  6782 ;;      Temps:          0       0       0       0
  6783 ;;      Totals:         0       0       8       0
  6784 ;;Total ram usage:        8 bytes
  6785 ;; Hardware stack levels used: 1
  6786 ;; Hardware stack levels required when called: 1
  6787 ;; This function calls:
  6788 ;;		___fladd
  6789 ;; This function is called by:
  6790 ;;		_exp
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794  0000'                    ___flsub:	
  6795                           ;psect for function ___flsub
  6796                           
  6797  0000'                    l4371:	
  6798                           ;incstack = 0
  6799                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6800                           
  6801  0000' 3080               	movlw	128
  6802  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  6803  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  6804  0003' 0680'              	xorwf	(___flsub@a+3)^(0+128),f
  6805  0004'                    l4373:
  6806  0004' 0800'              	movf	(___flsub@b+3)^(0+128),w
  6807  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  6808  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  6809  0007' 00BA'              	movwf	___fladd@b+3
  6810  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  6811  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  6812  000A' 0800'              	movf	(___flsub@b+2)^(0+128),w
  6813  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  6814  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  6815  000D' 00B9'              	movwf	___fladd@b+2
  6816  000E' 1683               	bsf	3,5	;RP0=1, select bank1
  6817  000F' 1303               	bcf	3,6	;RP1=0, select bank1
  6818  0010' 0800'              	movf	(___flsub@b+1)^(0+128),w
  6819  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  6820  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  6821  0013' 00B8'              	movwf	___fladd@b+1
  6822  0014' 1683               	bsf	3,5	;RP0=1, select bank1
  6823  0015' 1303               	bcf	3,6	;RP1=0, select bank1
  6824  0016' 0800'              	movf	___flsub@b^(0+128),w
  6825  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  6826  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  6827  0019' 00B7'              	movwf	___fladd@b
  6828  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  6829  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  6830  001C' 0800'              	movf	(___flsub@a+3)^(0+128),w
  6831  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  6832  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  6833  001F' 00BE'              	movwf	___fladd@a+3
  6834  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  6835  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  6836  0022' 0800'              	movf	(___flsub@a+2)^(0+128),w
  6837  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  6838  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  6839  0025' 00BD'              	movwf	___fladd@a+2
  6840  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  6841  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  6842  0028' 0800'              	movf	(___flsub@a+1)^(0+128),w
  6843  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  6844  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  6845  002B' 00BC'              	movwf	___fladd@a+1
  6846  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  6847  002D' 1303               	bcf	3,6	;RP1=0, select bank1
  6848  002E' 0800'              	movf	___flsub@a^(0+128),w
  6849  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  6850  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  6851  0031' 00BB'              	movwf	___fladd@a
  6852  0032' 118A' 2000' 118A'  	fcall	___fladd
  6853  0035' 1283               	bcf	3,5	;RP0=0, select bank0
  6854  0036' 1303               	bcf	3,6	;RP1=0, select bank0
  6855  0037' 083A'              	movf	?___fladd+3,w
  6856  0038' 1683               	bsf	3,5	;RP0=1, select bank1
  6857  0039' 1303               	bcf	3,6	;RP1=0, select bank1
  6858  003A' 0080'              	movwf	(?___flsub+3)^(0+128)
  6859  003B' 1283               	bcf	3,5	;RP0=0, select bank0
  6860  003C' 1303               	bcf	3,6	;RP1=0, select bank0
  6861  003D' 0839'              	movf	?___fladd+2,w
  6862  003E' 1683               	bsf	3,5	;RP0=1, select bank1
  6863  003F' 1303               	bcf	3,6	;RP1=0, select bank1
  6864  0040' 0080'              	movwf	(?___flsub+2)^(0+128)
  6865  0041' 1283               	bcf	3,5	;RP0=0, select bank0
  6866  0042' 1303               	bcf	3,6	;RP1=0, select bank0
  6867  0043' 0838'              	movf	?___fladd+1,w
  6868  0044' 1683               	bsf	3,5	;RP0=1, select bank1
  6869  0045' 1303               	bcf	3,6	;RP1=0, select bank1
  6870  0046' 0080'              	movwf	(?___flsub+1)^(0+128)
  6871  0047' 1283               	bcf	3,5	;RP0=0, select bank0
  6872  0048' 1303               	bcf	3,6	;RP1=0, select bank0
  6873  0049' 0837'              	movf	?___fladd,w
  6874  004A' 1683               	bsf	3,5	;RP0=1, select bank1
  6875  004B' 1303               	bcf	3,6	;RP1=0, select bank1
  6876  004C' 0080'              	movwf	?___flsub^(0+128)
  6877  004D'                    l707:
  6878  004D' 0008               	return
  6879  004E'                    __end_of___flsub:
  6880                           
  6881                           	psect	text19
  6882  0000'                    __ptext19:	
  6883 ;; *************** function ___fladd *****************
  6884 ;; Defined at:
  6885 ;;		line 10 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcadd.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  b               4   55[BANK0 ] unsigned int 
  6888 ;;  a               4   59[BANK0 ] unsigned int 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  grs             1   74[BANK0 ] unsigned char 
  6891 ;;  bexp            1   73[BANK0 ] unsigned char 
  6892 ;;  aexp            1   72[BANK0 ] unsigned char 
  6893 ;;  signs           1   71[BANK0 ] unsigned char 
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  4   55[BANK0 ] unsigned char 
  6896 ;; Registers used:
  6897 ;;		wreg, status,2, status,0, btemp+1
  6898 ;; Tracked objects:
  6899 ;;		On entry : 0/0
  6900 ;;		On exit  : 0/0
  6901 ;;		Unchanged: 0/0
  6902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6903 ;;      Params:         0       8       0       0
  6904 ;;      Locals:         0       4       0       0
  6905 ;;      Temps:          0       8       0       0
  6906 ;;      Totals:         0      20       0       0
  6907 ;;Total ram usage:       20 bytes
  6908 ;; Hardware stack levels used: 1
  6909 ;; This function calls:
  6910 ;;		Nothing
  6911 ;; This function is called by:
  6912 ;;		_vector_length
  6913 ;;		___flsub
  6914 ;;		_eval_poly
  6915 ;;		_floor
  6916 ;;		_log
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920  0000'                    ___fladd:	
  6921                           ;psect for function ___fladd
  6922                           
  6923  0000'                    l3965:	
  6924                           ;incstack = 0
  6925                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6926                           
  6927  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  6928  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  6929  0002' 083A'              	movf	___fladd@b+3,w
  6930  0003' 3980               	andlw	128
  6931  0004' 00C7'              	movwf	___fladd@signs
  6932  0005'                    l3967:
  6933  0005' 083A'              	movf	___fladd@b+3,w
  6934  0006' 00BF'              	movwf	??___fladd
  6935  0007' 073F'              	addwf	??___fladd,w
  6936  0008' 00C9'              	movwf	___fladd@bexp
  6937  0009'                    l3969:
  6938  0009' 1FB9'              	btfss	___fladd@b+2,7
  6939  000A' 2800'              	goto	u5101
  6940  000B' 2800'              	goto	u5100
  6941  000C'                    u5101:
  6942  000C' 2800'              	goto	l3973
  6943  000D'                    u5100:
  6944  000D'                    l3971:
  6945  000D' 1449'              	bsf	___fladd@bexp,0
  6946  000E'                    l3973:
  6947  000E' 0849'              	movf	___fladd@bexp,w
  6948  000F' 1903               	btfsc	3,2
  6949  0010' 2800'              	goto	u5111
  6950  0011' 2800'              	goto	u5110
  6951  0012'                    u5111:
  6952  0012' 2800'              	goto	l3983
  6953  0013'                    u5110:
  6954  0013'                    l3975:
  6955  0013' 0A49'              	incf	___fladd@bexp,w
  6956  0014' 1D03               	btfss	3,2
  6957  0015' 2800'              	goto	u5121
  6958  0016' 2800'              	goto	u5120
  6959  0017'                    u5121:
  6960  0017' 2800'              	goto	l3979
  6961  0018'                    u5120:
  6962  0018'                    l3977:
  6963  0018' 3000               	movlw	0
  6964  0019' 00BA'              	movwf	___fladd@b+3
  6965  001A' 3000               	movlw	0
  6966  001B' 00B9'              	movwf	___fladd@b+2
  6967  001C' 3000               	movlw	0
  6968  001D' 00B8'              	movwf	___fladd@b+1
  6969  001E' 3000               	movlw	0
  6970  001F' 00B7'              	movwf	___fladd@b
  6971  0020'                    l3979:
  6972  0020' 17B9'              	bsf	___fladd@b+2,7
  6973  0021'                    l3981:
  6974  0021' 01BA'              	clrf	___fladd@b+3
  6975  0022' 2800'              	goto	l3985
  6976  0023'                    l3983:
  6977  0023' 3000               	movlw	0
  6978  0024' 00BA'              	movwf	___fladd@b+3
  6979  0025' 3000               	movlw	0
  6980  0026' 00B9'              	movwf	___fladd@b+2
  6981  0027' 3000               	movlw	0
  6982  0028' 00B8'              	movwf	___fladd@b+1
  6983  0029' 3000               	movlw	0
  6984  002A' 00B7'              	movwf	___fladd@b
  6985  002B'                    l3985:
  6986  002B' 083E'              	movf	___fladd@a+3,w
  6987  002C' 3980               	andlw	128
  6988  002D' 00C8'              	movwf	___fladd@aexp
  6989  002E'                    l3987:
  6990  002E' 0848'              	movf	___fladd@aexp,w
  6991  002F' 0647'              	xorwf	___fladd@signs,w
  6992  0030' 1903               	skipnz
  6993  0031' 2800'              	goto	u5131
  6994  0032' 2800'              	goto	u5130
  6995  0033'                    u5131:
  6996  0033' 2800'              	goto	l3991
  6997  0034'                    u5130:
  6998  0034'                    l3989:
  6999  0034' 1747'              	bsf	___fladd@signs,6
  7000  0035'                    l3991:
  7001  0035' 083E'              	movf	___fladd@a+3,w
  7002  0036' 00BF'              	movwf	??___fladd
  7003  0037' 073F'              	addwf	??___fladd,w
  7004  0038' 00C8'              	movwf	___fladd@aexp
  7005  0039'                    l3993:
  7006  0039' 1FBD'              	btfss	___fladd@a+2,7
  7007  003A' 2800'              	goto	u5141
  7008  003B' 2800'              	goto	u5140
  7009  003C'                    u5141:
  7010  003C' 2800'              	goto	l3997
  7011  003D'                    u5140:
  7012  003D'                    l3995:
  7013  003D' 1448'              	bsf	___fladd@aexp,0
  7014  003E'                    l3997:
  7015  003E' 0848'              	movf	___fladd@aexp,w
  7016  003F' 1903               	btfsc	3,2
  7017  0040' 2800'              	goto	u5151
  7018  0041' 2800'              	goto	u5150
  7019  0042'                    u5151:
  7020  0042' 2800'              	goto	l4007
  7021  0043'                    u5150:
  7022  0043'                    l3999:
  7023  0043' 0A48'              	incf	___fladd@aexp,w
  7024  0044' 1D03               	btfss	3,2
  7025  0045' 2800'              	goto	u5161
  7026  0046' 2800'              	goto	u5160
  7027  0047'                    u5161:
  7028  0047' 2800'              	goto	l4003
  7029  0048'                    u5160:
  7030  0048'                    l4001:
  7031  0048' 3000               	movlw	0
  7032  0049' 00BE'              	movwf	___fladd@a+3
  7033  004A' 3000               	movlw	0
  7034  004B' 00BD'              	movwf	___fladd@a+2
  7035  004C' 3000               	movlw	0
  7036  004D' 00BC'              	movwf	___fladd@a+1
  7037  004E' 3000               	movlw	0
  7038  004F' 00BB'              	movwf	___fladd@a
  7039  0050'                    l4003:
  7040  0050' 17BD'              	bsf	___fladd@a+2,7
  7041  0051'                    l4005:
  7042  0051' 01BE'              	clrf	___fladd@a+3
  7043  0052' 2800'              	goto	l661
  7044  0053'                    l4007:
  7045  0053' 3000               	movlw	0
  7046  0054' 00BE'              	movwf	___fladd@a+3
  7047  0055' 3000               	movlw	0
  7048  0056' 00BD'              	movwf	___fladd@a+2
  7049  0057' 3000               	movlw	0
  7050  0058' 00BC'              	movwf	___fladd@a+1
  7051  0059' 3000               	movlw	0
  7052  005A' 00BB'              	movwf	___fladd@a
  7053  005B'                    l661:
  7054  005B' 0849'              	movf	___fladd@bexp,w
  7055  005C' 0248'              	subwf	___fladd@aexp,w
  7056  005D' 1803               	skipnc
  7057  005E' 2800'              	goto	u5171
  7058  005F' 2800'              	goto	u5170
  7059  0060'                    u5171:
  7060  0060' 2800'              	goto	l4043
  7061  0061'                    u5170:
  7062  0061'                    l4009:
  7063  0061' 1F47'              	btfss	___fladd@signs,6
  7064  0062' 2800'              	goto	u5181
  7065  0063' 2800'              	goto	u5180
  7066  0064'                    u5181:
  7067  0064' 2800'              	goto	l4013
  7068  0065'                    u5180:
  7069  0065'                    l4011:
  7070  0065' 3080               	movlw	128
  7071  0066' 00BF'              	movwf	??___fladd
  7072  0067' 083F'              	movf	??___fladd,w
  7073  0068' 06C7'              	xorwf	___fladd@signs,f
  7074  0069'                    l4013:
  7075  0069' 0849'              	movf	___fladd@bexp,w
  7076  006A' 00CA'              	movwf	___fladd@grs
  7077  006B'                    l4015:
  7078  006B' 0848'              	movf	___fladd@aexp,w
  7079  006C' 00C9'              	movwf	___fladd@bexp
  7080  006D'                    l4017:
  7081  006D' 084A'              	movf	___fladd@grs,w
  7082  006E' 00C8'              	movwf	___fladd@aexp
  7083  006F'                    l4019:
  7084  006F' 0837'              	movf	___fladd@b,w
  7085  0070' 00CA'              	movwf	___fladd@grs
  7086  0071'                    l4021:
  7087  0071' 083B'              	movf	___fladd@a,w
  7088  0072' 00B7'              	movwf	___fladd@b
  7089  0073'                    l4023:
  7090  0073' 084A'              	movf	___fladd@grs,w
  7091  0074' 00BB'              	movwf	___fladd@a
  7092  0075'                    l4025:
  7093  0075' 0838'              	movf	___fladd@b+1,w
  7094  0076' 00CA'              	movwf	___fladd@grs
  7095  0077'                    l4027:
  7096  0077' 083C'              	movf	___fladd@a+1,w
  7097  0078' 00B8'              	movwf	___fladd@b+1
  7098  0079'                    l4029:
  7099  0079' 084A'              	movf	___fladd@grs,w
  7100  007A' 00BC'              	movwf	___fladd@a+1
  7101  007B'                    l4031:
  7102  007B' 0839'              	movf	___fladd@b+2,w
  7103  007C' 00CA'              	movwf	___fladd@grs
  7104  007D'                    l4033:
  7105  007D' 083D'              	movf	___fladd@a+2,w
  7106  007E' 00B9'              	movwf	___fladd@b+2
  7107  007F'                    l4035:
  7108  007F' 084A'              	movf	___fladd@grs,w
  7109  0080' 00BD'              	movwf	___fladd@a+2
  7110  0081'                    l4037:
  7111  0081' 083A'              	movf	___fladd@b+3,w
  7112  0082' 00CA'              	movwf	___fladd@grs
  7113  0083'                    l4039:
  7114  0083' 083E'              	movf	___fladd@a+3,w
  7115  0084' 00BA'              	movwf	___fladd@b+3
  7116  0085'                    l4041:
  7117  0085' 084A'              	movf	___fladd@grs,w
  7118  0086' 00BE'              	movwf	___fladd@a+3
  7119  0087'                    l4043:
  7120  0087' 01CA'              	clrf	___fladd@grs
  7121  0088'                    l4045:
  7122  0088' 0848'              	movf	___fladd@aexp,w
  7123  0089' 00BF'              	movwf	??___fladd
  7124  008A' 01C0'              	clrf	??___fladd+1
  7125  008B' 0840'              	movf	??___fladd+1,w
  7126  008C' 00C2'              	movwf	??___fladd+3
  7127  008D' 0849'              	movf	___fladd@bexp,w
  7128  008E' 023F'              	subwf	??___fladd,w
  7129  008F' 00C1'              	movwf	??___fladd+2
  7130  0090' 1C03               	skipc
  7131  0091' 03C2'              	decf	??___fladd+3,f
  7132  0092' 0842'              	movf	??___fladd+3,w
  7133  0093' 3A80               	xorlw	128
  7134  0094' 00FF               	movwf	btemp+1
  7135  0095' 3080               	movlw	128
  7136  0096' 027F               	subwf	btemp+1,w
  7137  0097' 1D03               	skipz
  7138  0098' 2800'              	goto	u5195
  7139  0099' 301A               	movlw	26
  7140  009A' 0241'              	subwf	??___fladd+2,w
  7141  009B'                    u5195:
  7142  009B' 1C03               	skipc
  7143  009C' 2800'              	goto	u5191
  7144  009D' 2800'              	goto	u5190
  7145  009E'                    u5191:
  7146  009E' 2800'              	goto	l4061
  7147  009F'                    u5190:
  7148  009F'                    l4047:
  7149  009F' 1283               	bcf	3,5	;RP0=0, select bank0
  7150  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
  7151  00A1' 083A'              	movf	___fladd@b+3,w
  7152  00A2' 0439'              	iorwf	___fladd@b+2,w
  7153  00A3' 0438'              	iorwf	___fladd@b+1,w
  7154  00A4' 0437'              	iorwf	___fladd@b,w
  7155  00A5' 1D03               	skipz
  7156  00A6' 2800'              	goto	u5201
  7157  00A7' 2800'              	goto	u5200
  7158  00A8'                    u5201:
  7159  00A8' 3001               	movlw	1
  7160  00A9' 2800'              	goto	u5210
  7161  00AA'                    u5200:
  7162  00AA' 3000               	movlw	0
  7163  00AB'                    u5210:
  7164  00AB' 00CA'              	movwf	___fladd@grs
  7165  00AC' 3000               	movlw	0
  7166  00AD' 00BA'              	movwf	___fladd@b+3
  7167  00AE' 3000               	movlw	0
  7168  00AF' 00B9'              	movwf	___fladd@b+2
  7169  00B0' 3000               	movlw	0
  7170  00B1' 00B8'              	movwf	___fladd@b+1
  7171  00B2' 3000               	movlw	0
  7172  00B3' 00B7'              	movwf	___fladd@b
  7173  00B4' 0848'              	movf	___fladd@aexp,w
  7174  00B5' 00C9'              	movwf	___fladd@bexp
  7175  00B6' 2800'              	goto	l665
  7176  00B7'                    l667:
  7177  00B7' 1C4A'              	btfss	___fladd@grs,0
  7178  00B8' 2800'              	goto	u5221
  7179  00B9' 2800'              	goto	u5220
  7180  00BA'                    u5221:
  7181  00BA' 2800'              	goto	l4051
  7182  00BB'                    u5220:
  7183  00BB'                    l4049:
  7184  00BB' 084A'              	movf	___fladd@grs,w
  7185  00BC' 00BF'              	movwf	??___fladd
  7186  00BD' 1003               	clrc
  7187  00BE' 0C3F'              	rrf	??___fladd,w
  7188  00BF' 3801               	iorlw	1
  7189  00C0' 00CA'              	movwf	___fladd@grs
  7190  00C1' 2800'              	goto	l4053
  7191  00C2'                    l4051:
  7192  00C2' 1003               	clrc
  7193  00C3' 0CCA'              	rrf	___fladd@grs,f
  7194  00C4'                    l4053:
  7195  00C4' 1C37'              	btfss	___fladd@b,0
  7196  00C5' 2800'              	goto	u5231
  7197  00C6' 2800'              	goto	u5230
  7198  00C7'                    u5231:
  7199  00C7' 2800'              	goto	l4057
  7200  00C8'                    u5230:
  7201  00C8'                    l4055:
  7202  00C8' 17CA'              	bsf	___fladd@grs,7
  7203  00C9'                    l4057:
  7204  00C9' 3001               	movlw	1
  7205  00CA' 00BF'              	movwf	??___fladd
  7206  00CB'                    u5245:
  7207  00CB' 0D3A'              	rlf	___fladd@b+3,w
  7208  00CC' 0CBA'              	rrf	___fladd@b+3,f
  7209  00CD' 0CB9'              	rrf	___fladd@b+2,f
  7210  00CE' 0CB8'              	rrf	___fladd@b+1,f
  7211  00CF' 0CB7'              	rrf	___fladd@b,f
  7212  00D0' 0B80'              	decfsz	??___fladd& (0+127),f
  7213  00D1' 2800'              	goto	u5245
  7214  00D2'                    l4059:
  7215  00D2' 3001               	movlw	1
  7216  00D3' 00BF'              	movwf	??___fladd
  7217  00D4' 083F'              	movf	??___fladd,w
  7218  00D5' 07C9'              	addwf	___fladd@bexp,f
  7219  00D6'                    l4061:
  7220  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
  7221  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
  7222  00D8' 0848'              	movf	___fladd@aexp,w
  7223  00D9' 0249'              	subwf	___fladd@bexp,w
  7224  00DA' 1C03               	skipc
  7225  00DB' 2800'              	goto	u5251
  7226  00DC' 2800'              	goto	u5250
  7227  00DD'                    u5251:
  7228  00DD' 2800'              	goto	l667
  7229  00DE'                    u5250:
  7230  00DE'                    l665:
  7231  00DE' 1B47'              	btfsc	___fladd@signs,6
  7232  00DF' 2800'              	goto	u5261
  7233  00E0' 2800'              	goto	u5260
  7234  00E1'                    u5261:
  7235  00E1' 2800'              	goto	l4087
  7236  00E2'                    u5260:
  7237  00E2'                    l4063:
  7238  00E2' 0849'              	movf	___fladd@bexp,w
  7239  00E3' 1D03               	btfss	3,2
  7240  00E4' 2800'              	goto	u5271
  7241  00E5' 2800'              	goto	u5270
  7242  00E6'                    u5271:
  7243  00E6' 2800'              	goto	l4069
  7244  00E7'                    u5270:
  7245  00E7'                    l4065:
  7246  00E7' 3000               	movlw	0
  7247  00E8' 00BA'              	movwf	?___fladd+3
  7248  00E9' 3000               	movlw	0
  7249  00EA' 00B9'              	movwf	?___fladd+2
  7250  00EB' 3000               	movlw	0
  7251  00EC' 00B8'              	movwf	?___fladd+1
  7252  00ED' 3000               	movlw	0
  7253  00EE' 00B7'              	movwf	?___fladd
  7254  00EF' 2800'              	goto	l674
  7255  00F0'                    l4069:
  7256  00F0' 083B'              	movf	___fladd@a,w
  7257  00F1' 07B7'              	addwf	___fladd@b,f
  7258  00F2' 083C'              	movf	___fladd@a+1,w
  7259  00F3' 1103               	clrz
  7260  00F4' 1803               	skipnc
  7261  00F5' 3E01               	addlw	1
  7262  00F6' 1903               	skipnz
  7263  00F7' 2800'              	goto	u5281
  7264  00F8' 07B8'              	addwf	___fladd@b+1,f
  7265  00F9'                    u5281:
  7266  00F9' 083D'              	movf	___fladd@a+2,w
  7267  00FA' 1103               	clrz
  7268  00FB' 1803               	skipnc
  7269  00FC' 3E01               	addlw	1
  7270  00FD' 1903               	skipnz
  7271  00FE' 2800'              	goto	u5282
  7272  00FF' 07B9'              	addwf	___fladd@b+2,f
  7273  0100'                    u5282:
  7274  0100' 083E'              	movf	___fladd@a+3,w
  7275  0101' 1103               	clrz
  7276  0102' 1803               	skipnc
  7277  0103' 3E01               	addlw	1
  7278  0104' 1903               	skipnz
  7279  0105' 2800'              	goto	u5283
  7280  0106' 07BA'              	addwf	___fladd@b+3,f
  7281  0107'                    u5283:
  7282  0107'                    l4071:
  7283  0107' 1C3A'              	btfss	___fladd@b+3,0
  7284  0108' 2800'              	goto	u5291
  7285  0109' 2800'              	goto	u5290
  7286  010A'                    u5291:
  7287  010A' 2800'              	goto	l4121
  7288  010B'                    u5290:
  7289  010B'                    l4073:
  7290  010B' 1C4A'              	btfss	___fladd@grs,0
  7291  010C' 2800'              	goto	u5301
  7292  010D' 2800'              	goto	u5300
  7293  010E'                    u5301:
  7294  010E' 2800'              	goto	l4077
  7295  010F'                    u5300:
  7296  010F'                    l4075:
  7297  010F' 084A'              	movf	___fladd@grs,w
  7298  0110' 00BF'              	movwf	??___fladd
  7299  0111' 1003               	clrc
  7300  0112' 0C3F'              	rrf	??___fladd,w
  7301  0113' 3801               	iorlw	1
  7302  0114' 00CA'              	movwf	___fladd@grs
  7303  0115' 2800'              	goto	l4079
  7304  0116'                    l4077:
  7305  0116' 1003               	clrc
  7306  0117' 0CCA'              	rrf	___fladd@grs,f
  7307  0118'                    l4079:
  7308  0118' 1C37'              	btfss	___fladd@b,0
  7309  0119' 2800'              	goto	u5311
  7310  011A' 2800'              	goto	u5310
  7311  011B'                    u5311:
  7312  011B' 2800'              	goto	l4083
  7313  011C'                    u5310:
  7314  011C'                    l4081:
  7315  011C' 17CA'              	bsf	___fladd@grs,7
  7316  011D'                    l4083:
  7317  011D' 3001               	movlw	1
  7318  011E' 00BF'              	movwf	??___fladd
  7319  011F'                    u5325:
  7320  011F' 0D3A'              	rlf	___fladd@b+3,w
  7321  0120' 0CBA'              	rrf	___fladd@b+3,f
  7322  0121' 0CB9'              	rrf	___fladd@b+2,f
  7323  0122' 0CB8'              	rrf	___fladd@b+1,f
  7324  0123' 0CB7'              	rrf	___fladd@b,f
  7325  0124' 0B80'              	decfsz	??___fladd& (0+127),f
  7326  0125' 2800'              	goto	u5325
  7327  0126'                    l4085:
  7328  0126' 3001               	movlw	1
  7329  0127' 00BF'              	movwf	??___fladd
  7330  0128' 083F'              	movf	??___fladd,w
  7331  0129' 07C9'              	addwf	___fladd@bexp,f
  7332  012A' 2800'              	goto	l4121
  7333  012B'                    l4087:
  7334  012B' 083A'              	movf	___fladd@b+3,w
  7335  012C' 3A80               	xorlw	128
  7336  012D' 00FF               	movwf	btemp+1
  7337  012E' 083E'              	movf	___fladd@a+3,w
  7338  012F' 3A80               	xorlw	128
  7339  0130' 027F               	subwf	btemp+1,w
  7340  0131' 1D03               	skipz
  7341  0132' 2800'              	goto	u5333
  7342  0133' 083D'              	movf	___fladd@a+2,w
  7343  0134' 0239'              	subwf	___fladd@b+2,w
  7344  0135' 1D03               	skipz
  7345  0136' 2800'              	goto	u5333
  7346  0137' 083C'              	movf	___fladd@a+1,w
  7347  0138' 0238'              	subwf	___fladd@b+1,w
  7348  0139' 1D03               	skipz
  7349  013A' 2800'              	goto	u5333
  7350  013B' 083B'              	movf	___fladd@a,w
  7351  013C' 0237'              	subwf	___fladd@b,w
  7352  013D'                    u5333:
  7353  013D' 1803               	skipnc
  7354  013E' 2800'              	goto	u5331
  7355  013F' 2800'              	goto	u5330
  7356  0140'                    u5331:
  7357  0140' 2800'              	goto	l4097
  7358  0141'                    u5330:
  7359  0141'                    l4089:
  7360  0141' 30FF               	movlw	255
  7361  0142' 00BF'              	movwf	??___fladd
  7362  0143' 30FF               	movlw	255
  7363  0144' 00C0'              	movwf	??___fladd+1
  7364  0145' 30FF               	movlw	255
  7365  0146' 00C1'              	movwf	??___fladd+2
  7366  0147' 30FF               	movlw	255
  7367  0148' 00C2'              	movwf	??___fladd+3
  7368  0149' 083B'              	movf	___fladd@a,w
  7369  014A' 00C3'              	movwf	??___fladd+4
  7370  014B' 083C'              	movf	___fladd@a+1,w
  7371  014C' 00C4'              	movwf	??___fladd+5
  7372  014D' 083D'              	movf	___fladd@a+2,w
  7373  014E' 00C5'              	movwf	??___fladd+6
  7374  014F' 083E'              	movf	___fladd@a+3,w
  7375  0150' 00C6'              	movwf	??___fladd+7
  7376  0151' 0837'              	movf	___fladd@b,w
  7377  0152' 02C3'              	subwf	??___fladd+4,f
  7378  0153' 0838'              	movf	___fladd@b+1,w
  7379  0154' 1C03               	skipc
  7380  0155' 0F38'              	incfsz	___fladd@b+1,w
  7381  0156' 2800'              	goto	u5341
  7382  0157' 2800'              	goto	u5342
  7383  0158'                    u5341:
  7384  0158' 02C4'              	subwf	??___fladd+5,f
  7385  0159'                    u5342:
  7386  0159' 0839'              	movf	___fladd@b+2,w
  7387  015A' 1C03               	skipc
  7388  015B' 0F39'              	incfsz	___fladd@b+2,w
  7389  015C' 2800'              	goto	u5343
  7390  015D' 2800'              	goto	u5344
  7391  015E'                    u5343:
  7392  015E' 02C5'              	subwf	??___fladd+6,f
  7393  015F'                    u5344:
  7394  015F' 083A'              	movf	___fladd@b+3,w
  7395  0160' 1C03               	skipc
  7396  0161' 0F3A'              	incfsz	___fladd@b+3,w
  7397  0162' 2800'              	goto	u5345
  7398  0163' 2800'              	goto	u5346
  7399  0164'                    u5345:
  7400  0164' 02C6'              	subwf	??___fladd+7,f
  7401  0165'                    u5346:
  7402  0165' 0843'              	movf	??___fladd+4,w
  7403  0166' 07BF'              	addwf	??___fladd,f
  7404  0167' 0844'              	movf	??___fladd+5,w
  7405  0168' 1803               	skipnc
  7406  0169' 0F44'              	incfsz	??___fladd+5,w
  7407  016A' 2800'              	goto	u5350
  7408  016B' 2800'              	goto	u5351
  7409  016C'                    u5350:
  7410  016C' 07C0'              	addwf	??___fladd+1,f
  7411  016D'                    u5351:
  7412  016D' 0845'              	movf	??___fladd+6,w
  7413  016E' 1803               	skipnc
  7414  016F' 0F45'              	incfsz	??___fladd+6,w
  7415  0170' 2800'              	goto	u5352
  7416  0171' 2800'              	goto	u5353
  7417  0172'                    u5352:
  7418  0172' 07C1'              	addwf	??___fladd+2,f
  7419  0173'                    u5353:
  7420  0173' 0846'              	movf	??___fladd+7,w
  7421  0174' 1803               	skipnc
  7422  0175' 0A46'              	incf	??___fladd+7,w
  7423  0176' 07C2'              	addwf	??___fladd+3,f
  7424  0177' 0842'              	movf	??___fladd+3,w
  7425  0178' 00BA'              	movwf	___fladd@b+3
  7426  0179' 0841'              	movf	??___fladd+2,w
  7427  017A' 00B9'              	movwf	___fladd@b+2
  7428  017B' 0840'              	movf	??___fladd+1,w
  7429  017C' 00B8'              	movwf	___fladd@b+1
  7430  017D' 083F'              	movf	??___fladd,w
  7431  017E' 00B7'              	movwf	___fladd@b
  7432  017F'                    l4091:
  7433  017F' 3080               	movlw	128
  7434  0180' 00BF'              	movwf	??___fladd
  7435  0181' 083F'              	movf	??___fladd,w
  7436  0182' 06C7'              	xorwf	___fladd@signs,f
  7437  0183' 09CA'              	comf	___fladd@grs,f
  7438  0184' 0ACA'              	incf	___fladd@grs,f
  7439  0185'                    l4093:
  7440  0185' 084A'              	movf	___fladd@grs,w
  7441  0186' 1D03               	btfss	3,2
  7442  0187' 2800'              	goto	u5361
  7443  0188' 2800'              	goto	u5360
  7444  0189'                    u5361:
  7445  0189' 2800'              	goto	l682
  7446  018A'                    u5360:
  7447  018A'                    l4095:
  7448  018A' 3001               	movlw	1
  7449  018B' 07B7'              	addwf	___fladd@b,f
  7450  018C' 3000               	movlw	0
  7451  018D' 1803               	skipnc
  7452  018E' 3001               	movlw	1
  7453  018F' 07B8'              	addwf	___fladd@b+1,f
  7454  0190' 3000               	movlw	0
  7455  0191' 1803               	skipnc
  7456  0192' 3001               	movlw	1
  7457  0193' 07B9'              	addwf	___fladd@b+2,f
  7458  0194' 3000               	movlw	0
  7459  0195' 1803               	skipnc
  7460  0196' 3001               	movlw	1
  7461  0197' 07BA'              	addwf	___fladd@b+3,f
  7462  0198' 2800'              	goto	l682
  7463  0199'                    l4097:
  7464  0199' 083B'              	movf	___fladd@a,w
  7465  019A' 02B7'              	subwf	___fladd@b,f
  7466  019B' 083C'              	movf	___fladd@a+1,w
  7467  019C' 1C03               	skipc
  7468  019D' 0F3C'              	incfsz	___fladd@a+1,w
  7469  019E' 02B8'              	subwf	___fladd@b+1,f
  7470  019F' 083D'              	movf	___fladd@a+2,w
  7471  01A0' 1C03               	skipc
  7472  01A1' 0F3D'              	incfsz	___fladd@a+2,w
  7473  01A2' 02B9'              	subwf	___fladd@b+2,f
  7474  01A3' 083E'              	movf	___fladd@a+3,w
  7475  01A4' 1C03               	skipc
  7476  01A5' 0F3E'              	incfsz	___fladd@a+3,w
  7477  01A6' 02BA'              	subwf	___fladd@b+3,f
  7478  01A7'                    l682:
  7479  01A7' 083A'              	movf	___fladd@b+3,w
  7480  01A8' 0439'              	iorwf	___fladd@b+2,w
  7481  01A9' 0438'              	iorwf	___fladd@b+1,w
  7482  01AA' 0437'              	iorwf	___fladd@b,w
  7483  01AB' 1D03               	skipz
  7484  01AC' 2800'              	goto	u5371
  7485  01AD' 2800'              	goto	u5370
  7486  01AE'                    u5371:
  7487  01AE' 2800'              	goto	l4119
  7488  01AF'                    u5370:
  7489  01AF'                    l4099:
  7490  01AF' 084A'              	movf	___fladd@grs,w
  7491  01B0' 1D03               	btfss	3,2
  7492  01B1' 2800'              	goto	u5381
  7493  01B2' 2800'              	goto	u5380
  7494  01B3'                    u5381:
  7495  01B3' 2800'              	goto	l4119
  7496  01B4'                    u5380:
  7497  01B4'                    l4101:
  7498  01B4' 3000               	movlw	0
  7499  01B5' 00BA'              	movwf	?___fladd+3
  7500  01B6' 3000               	movlw	0
  7501  01B7' 00B9'              	movwf	?___fladd+2
  7502  01B8' 3000               	movlw	0
  7503  01B9' 00B8'              	movwf	?___fladd+1
  7504  01BA' 3000               	movlw	0
  7505  01BB' 00B7'              	movwf	?___fladd
  7506  01BC' 2800'              	goto	l674
  7507  01BD'                    l4105:
  7508  01BD' 3001               	movlw	1
  7509  01BE' 00BF'              	movwf	??___fladd
  7510  01BF'                    u5395:
  7511  01BF' 1003               	clrc
  7512  01C0' 0DB7'              	rlf	___fladd@b,f
  7513  01C1' 0DB8'              	rlf	___fladd@b+1,f
  7514  01C2' 0DB9'              	rlf	___fladd@b+2,f
  7515  01C3' 0DBA'              	rlf	___fladd@b+3,f
  7516  01C4' 0BBF'              	decfsz	??___fladd,f
  7517  01C5' 2800'              	goto	u5395
  7518  01C6'                    l4107:
  7519  01C6' 1FCA'              	btfss	___fladd@grs,7
  7520  01C7' 2800'              	goto	u5401
  7521  01C8' 2800'              	goto	u5400
  7522  01C9'                    u5401:
  7523  01C9' 2800'              	goto	l686
  7524  01CA'                    u5400:
  7525  01CA'                    l4109:
  7526  01CA' 1437'              	bsf	___fladd@b,0
  7527  01CB'                    l686:
  7528  01CB' 1C4A'              	btfss	___fladd@grs,0
  7529  01CC' 2800'              	goto	u5411
  7530  01CD' 2800'              	goto	u5410
  7531  01CE'                    u5411:
  7532  01CE' 2800'              	goto	l4113
  7533  01CF'                    u5410:
  7534  01CF'                    l4111:
  7535  01CF' 1403               	setc
  7536  01D0' 0DCA'              	rlf	___fladd@grs,f
  7537  01D1' 2800'              	goto	l4115
  7538  01D2'                    l4113:
  7539  01D2' 1003               	clrc
  7540  01D3' 0DCA'              	rlf	___fladd@grs,f
  7541  01D4'                    l4115:
  7542  01D4' 0849'              	movf	___fladd@bexp,w
  7543  01D5' 1903               	btfsc	3,2
  7544  01D6' 2800'              	goto	u5421
  7545  01D7' 2800'              	goto	u5420
  7546  01D8'                    u5421:
  7547  01D8' 2800'              	goto	l4119
  7548  01D9'                    u5420:
  7549  01D9'                    l4117:
  7550  01D9' 3001               	movlw	1
  7551  01DA' 02C9'              	subwf	___fladd@bexp,f
  7552  01DB'                    l4119:
  7553  01DB' 1FB9'              	btfss	___fladd@b+2,7
  7554  01DC' 2800'              	goto	u5431
  7555  01DD' 2800'              	goto	u5430
  7556  01DE'                    u5431:
  7557  01DE' 2800'              	goto	l4105
  7558  01DF'                    u5430:
  7559  01DF'                    l4121:
  7560  01DF' 01C8'              	clrf	___fladd@aexp
  7561  01E0'                    l4123:
  7562  01E0' 1FCA'              	btfss	___fladd@grs,7
  7563  01E1' 2800'              	goto	u5441
  7564  01E2' 2800'              	goto	u5440
  7565  01E3'                    u5441:
  7566  01E3' 2800'              	goto	l4131
  7567  01E4'                    u5440:
  7568  01E4'                    l4125:
  7569  01E4' 084A'              	movf	___fladd@grs,w
  7570  01E5' 397F               	andlw	127
  7571  01E6' 1903               	btfsc	3,2
  7572  01E7' 2800'              	goto	u5451
  7573  01E8' 2800'              	goto	u5450
  7574  01E9'                    u5451:
  7575  01E9' 2800'              	goto	l692
  7576  01EA'                    u5450:
  7577  01EA'                    l4127:
  7578  01EA' 01C8'              	clrf	___fladd@aexp
  7579  01EB' 0AC8'              	incf	___fladd@aexp,f
  7580  01EC' 2800'              	goto	l4131
  7581  01ED'                    l692:
  7582  01ED' 1C37'              	btfss	___fladd@b,0
  7583  01EE' 2800'              	goto	u5461
  7584  01EF' 2800'              	goto	u5460
  7585  01F0'                    u5461:
  7586  01F0' 2800'              	goto	l4131
  7587  01F1'                    u5460:
  7588  01F1' 2800'              	goto	l4127
  7589  01F2'                    l4131:
  7590  01F2' 0848'              	movf	___fladd@aexp,w
  7591  01F3' 1903               	btfsc	3,2
  7592  01F4' 2800'              	goto	u5471
  7593  01F5' 2800'              	goto	u5470
  7594  01F6'                    u5471:
  7595  01F6' 2800'              	goto	l695
  7596  01F7'                    u5470:
  7597  01F7'                    l4133:
  7598  01F7' 3001               	movlw	1
  7599  01F8' 07B7'              	addwf	___fladd@b,f
  7600  01F9' 3000               	movlw	0
  7601  01FA' 1803               	skipnc
  7602  01FB' 3001               	movlw	1
  7603  01FC' 07B8'              	addwf	___fladd@b+1,f
  7604  01FD' 3000               	movlw	0
  7605  01FE' 1803               	skipnc
  7606  01FF' 3001               	movlw	1
  7607  0200' 07B9'              	addwf	___fladd@b+2,f
  7608  0201' 3000               	movlw	0
  7609  0202' 1803               	skipnc
  7610  0203' 3001               	movlw	1
  7611  0204' 07BA'              	addwf	___fladd@b+3,f
  7612  0205'                    l4135:
  7613  0205' 1C3A'              	btfss	___fladd@b+3,0
  7614  0206' 2800'              	goto	u5481
  7615  0207' 2800'              	goto	u5480
  7616  0208'                    u5481:
  7617  0208' 2800'              	goto	l695
  7618  0209'                    u5480:
  7619  0209'                    l4137:
  7620  0209' 0837'              	movf	___fladd@b,w
  7621  020A' 00BF'              	movwf	??___fladd
  7622  020B' 0838'              	movf	___fladd@b+1,w
  7623  020C' 00C0'              	movwf	??___fladd+1
  7624  020D' 0839'              	movf	___fladd@b+2,w
  7625  020E' 00C1'              	movwf	??___fladd+2
  7626  020F' 083A'              	movf	___fladd@b+3,w
  7627  0210' 00C2'              	movwf	??___fladd+3
  7628  0211' 3001               	movlw	1
  7629  0212' 00C3'              	movwf	??___fladd+4
  7630  0213'                    u5495:
  7631  0213' 0D42'              	rlf	??___fladd+3,w
  7632  0214' 0CC2'              	rrf	??___fladd+3,f
  7633  0215' 0CC1'              	rrf	??___fladd+2,f
  7634  0216' 0CC0'              	rrf	??___fladd+1,f
  7635  0217' 0CBF'              	rrf	??___fladd,f
  7636  0218'                    u5490:
  7637  0218' 0BC3'              	decfsz	??___fladd+4,f
  7638  0219' 2800'              	goto	u5495
  7639  021A' 0842'              	movf	??___fladd+3,w
  7640  021B' 00BA'              	movwf	___fladd@b+3
  7641  021C' 0841'              	movf	??___fladd+2,w
  7642  021D' 00B9'              	movwf	___fladd@b+2
  7643  021E' 0840'              	movf	??___fladd+1,w
  7644  021F' 00B8'              	movwf	___fladd@b+1
  7645  0220' 083F'              	movf	??___fladd,w
  7646  0221' 00B7'              	movwf	___fladd@b
  7647  0222' 0A49'              	incf	___fladd@bexp,w
  7648  0223' 1903               	btfsc	3,2
  7649  0224' 2800'              	goto	u5501
  7650  0225' 2800'              	goto	u5500
  7651  0226'                    u5501:
  7652  0226' 2800'              	goto	l695
  7653  0227'                    u5500:
  7654  0227'                    l4139:
  7655  0227' 3001               	movlw	1
  7656  0228' 00BF'              	movwf	??___fladd
  7657  0229' 083F'              	movf	??___fladd,w
  7658  022A' 07C9'              	addwf	___fladd@bexp,f
  7659  022B'                    l695:
  7660  022B' 0A49'              	incf	___fladd@bexp,w
  7661  022C' 1903               	btfsc	3,2
  7662  022D' 2800'              	goto	u5511
  7663  022E' 2800'              	goto	u5510
  7664  022F'                    u5511:
  7665  022F' 2800'              	goto	l4143
  7666  0230'                    u5510:
  7667  0230'                    l4141:
  7668  0230' 0849'              	movf	___fladd@bexp,w
  7669  0231' 1D03               	btfss	3,2
  7670  0232' 2800'              	goto	u5521
  7671  0233' 2800'              	goto	u5520
  7672  0234'                    u5521:
  7673  0234' 2800'              	goto	l4149
  7674  0235'                    u5520:
  7675  0235'                    l4143:
  7676  0235' 3000               	movlw	0
  7677  0236' 00BA'              	movwf	___fladd@b+3
  7678  0237' 3000               	movlw	0
  7679  0238' 00B9'              	movwf	___fladd@b+2
  7680  0239' 3000               	movlw	0
  7681  023A' 00B8'              	movwf	___fladd@b+1
  7682  023B' 3000               	movlw	0
  7683  023C' 00B7'              	movwf	___fladd@b
  7684  023D'                    l4145:
  7685  023D' 0849'              	movf	___fladd@bexp,w
  7686  023E' 1D03               	btfss	3,2
  7687  023F' 2800'              	goto	u5531
  7688  0240' 2800'              	goto	u5530
  7689  0241'                    u5531:
  7690  0241' 2800'              	goto	l4149
  7691  0242'                    u5530:
  7692  0242'                    l4147:
  7693  0242' 01C7'              	clrf	___fladd@signs
  7694  0243'                    l4149:
  7695  0243' 1C49'              	btfss	___fladd@bexp,0
  7696  0244' 2800'              	goto	u5541
  7697  0245' 2800'              	goto	u5540
  7698  0246'                    u5541:
  7699  0246' 2800'              	goto	l4153
  7700  0247'                    u5540:
  7701  0247'                    l4151:
  7702  0247' 17B9'              	bsf	___fladd@b+2,7
  7703  0248' 2800'              	goto	l703
  7704  0249'                    l4153:
  7705  0249' 307F               	movlw	127
  7706  024A' 00BF'              	movwf	??___fladd
  7707  024B' 083F'              	movf	??___fladd,w
  7708  024C' 05B9'              	andwf	___fladd@b+2,f
  7709  024D'                    l703:
  7710  024D' 0849'              	movf	___fladd@bexp,w
  7711  024E' 00BF'              	movwf	??___fladd
  7712  024F' 1003               	clrc
  7713  0250' 0C3F'              	rrf	??___fladd,w
  7714  0251' 00BA'              	movwf	___fladd@b+3
  7715  0252'                    l4155:
  7716  0252' 1FC7'              	btfss	___fladd@signs,7
  7717  0253' 2800'              	goto	u5551
  7718  0254' 2800'              	goto	u5550
  7719  0255'                    u5551:
  7720  0255' 2800'              	goto	l704
  7721  0256'                    u5550:
  7722  0256'                    l4157:
  7723  0256' 17BA'              	bsf	___fladd@b+3,7
  7724  0257'                    l704:
  7725  0257'                    l674:
  7726  0257' 0008               	return
  7727  0258'                    __end_of___fladd:
  7728                           
  7729                           	psect	text20
  7730  0000'                    __ptext20:	
  7731 ;; *************** function ___flneg *****************
  7732 ;; Defined at:
  7733 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/flneg.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;  f1              4    0[COMMON] unsigned char 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;		None
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  4    0[COMMON] unsigned char 
  7740 ;; Registers used:
  7741 ;;		wreg
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7747 ;;      Params:         4       0       0       0
  7748 ;;      Locals:         0       0       0       0
  7749 ;;      Temps:          0       0       0       0
  7750 ;;      Totals:         4       0       0       0
  7751 ;;Total ram usage:        4 bytes
  7752 ;; Hardware stack levels used: 1
  7753 ;; This function calls:
  7754 ;;		Nothing
  7755 ;; This function is called by:
  7756 ;;		_pow
  7757 ;;		_exp
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761  0000'                    ___flneg:	
  7762                           ;psect for function ___flneg
  7763                           
  7764  0000'                    l4363:	
  7765                           ;incstack = 0
  7766                           ; Regs used in ___flneg: [wreg]
  7767                           
  7768  0000' 0803'              	movf	___flneg@f1+3,w
  7769  0001' 0402'              	iorwf	___flneg@f1+2,w
  7770  0002' 0401'              	iorwf	___flneg@f1+1,w
  7771  0003' 0400'              	iorwf	___flneg@f1,w
  7772  0004' 1903               	skipnz
  7773  0005' 2800'              	goto	u6081
  7774  0006' 2800'              	goto	u6080
  7775  0007'                    u6081:
  7776  0007' 2800'              	goto	l4367
  7777  0008'                    u6080:
  7778  0008'                    l4365:
  7779  0008' 3080               	movlw	128
  7780  0009' 0683'              	xorwf	___flneg@f1+3,f
  7781  000A'                    l4367:
  7782  000A'                    l550:
  7783  000A' 0008               	return
  7784  000B'                    __end_of___flneg:
  7785                           
  7786                           	psect	text21
  7787  0000'                    __ptext21:	
  7788 ;; *************** function ___fldiv *****************
  7789 ;; Defined at:
  7790 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcdiv.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  a               4    0[COMMON] unsigned char 
  7793 ;;  b               4    4[COMMON] unsigned char 
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;  grs             4    7[BANK0 ] unsigned long 
  7796 ;;  rem             4    0[BANK0 ] unsigned long 
  7797 ;;  new_exp         2    5[BANK0 ] int 
  7798 ;;  aexp            1   12[BANK0 ] unsigned char 
  7799 ;;  bexp            1   11[BANK0 ] unsigned char 
  7800 ;;  sign            1    4[BANK0 ] unsigned char 
  7801 ;; Return value:  Size  Location     Type
  7802 ;;                  4    0[COMMON] unsigned char 
  7803 ;; Registers used:
  7804 ;;		wreg, status,2, status,0, btemp+1
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7810 ;;      Params:         8       0       0       0
  7811 ;;      Locals:         0      13       0       0
  7812 ;;      Temps:          5       0       0       0
  7813 ;;      Totals:        13      13       0       0
  7814 ;;Total ram usage:       26 bytes
  7815 ;; Hardware stack levels used: 1
  7816 ;; This function calls:
  7817 ;;		Nothing
  7818 ;; This function is called by:
  7819 ;;		_normalized
  7820 ;;		_exp
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824  0000'                    ___fldiv:	
  7825                           ;psect for function ___fldiv
  7826                           
  7827  0000'                    l4377:	
  7828                           ;incstack = 0
  7829                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7830                           
  7831  0000' 0807'              	movf	___fldiv@b+3,w
  7832  0001' 3980               	andlw	128
  7833  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  7834  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  7835  0004' 0084'              	movwf	___fldiv@sign
  7836  0005'                    l4379:
  7837  0005' 0807'              	movf	___fldiv@b+3,w
  7838  0006' 0088'              	movwf	??___fldiv
  7839  0007' 0708'              	addwf	??___fldiv,w
  7840  0008' 008B'              	movwf	___fldiv@bexp
  7841  0009'                    l4381:
  7842  0009' 1F86'              	btfss	___fldiv@b+2,7
  7843  000A' 2800'              	goto	u6091
  7844  000B' 2800'              	goto	u6090
  7845  000C'                    u6091:
  7846  000C' 2800'              	goto	l4385
  7847  000D'                    u6090:
  7848  000D'                    l4383:
  7849  000D' 140B'              	bsf	___fldiv@bexp,0
  7850  000E'                    l4385:
  7851  000E' 080B'              	movf	___fldiv@bexp,w
  7852  000F' 1903               	btfsc	3,2
  7853  0010' 2800'              	goto	u6101
  7854  0011' 2800'              	goto	u6100
  7855  0012'                    u6101:
  7856  0012' 2800'              	goto	l4395
  7857  0013'                    u6100:
  7858  0013'                    l4387:
  7859  0013' 0A0B'              	incf	___fldiv@bexp,w
  7860  0014' 1D03               	btfss	3,2
  7861  0015' 2800'              	goto	u6111
  7862  0016' 2800'              	goto	u6110
  7863  0017'                    u6111:
  7864  0017' 2800'              	goto	l4391
  7865  0018'                    u6110:
  7866  0018'                    l4389:
  7867  0018' 3000               	movlw	0
  7868  0019' 0087'              	movwf	___fldiv@b+3
  7869  001A' 3000               	movlw	0
  7870  001B' 0086'              	movwf	___fldiv@b+2
  7871  001C' 3000               	movlw	0
  7872  001D' 0085'              	movwf	___fldiv@b+1
  7873  001E' 3000               	movlw	0
  7874  001F' 0084'              	movwf	___fldiv@b
  7875  0020'                    l4391:
  7876  0020' 1786'              	bsf	___fldiv@b+2,7
  7877  0021'                    l4393:
  7878  0021' 0187'              	clrf	___fldiv@b+3
  7879  0022' 2800'              	goto	l4397
  7880  0023'                    l4395:
  7881  0023' 3000               	movlw	0
  7882  0024' 0087'              	movwf	___fldiv@b+3
  7883  0025' 3000               	movlw	0
  7884  0026' 0086'              	movwf	___fldiv@b+2
  7885  0027' 3000               	movlw	0
  7886  0028' 0085'              	movwf	___fldiv@b+1
  7887  0029' 3000               	movlw	0
  7888  002A' 0084'              	movwf	___fldiv@b
  7889  002B'                    l4397:
  7890  002B' 0803'              	movf	___fldiv@a+3,w
  7891  002C' 3980               	andlw	128
  7892  002D' 0088'              	movwf	??___fldiv
  7893  002E' 0808'              	movf	??___fldiv,w
  7894  002F' 0684'              	xorwf	___fldiv@sign,f
  7895  0030'                    l4399:
  7896  0030' 0803'              	movf	___fldiv@a+3,w
  7897  0031' 0088'              	movwf	??___fldiv
  7898  0032' 0708'              	addwf	??___fldiv,w
  7899  0033' 008C'              	movwf	___fldiv@aexp
  7900  0034'                    l4401:
  7901  0034' 1F82'              	btfss	___fldiv@a+2,7
  7902  0035' 2800'              	goto	u6121
  7903  0036' 2800'              	goto	u6120
  7904  0037'                    u6121:
  7905  0037' 2800'              	goto	l4405
  7906  0038'                    u6120:
  7907  0038'                    l4403:
  7908  0038' 140C'              	bsf	___fldiv@aexp,0
  7909  0039'                    l4405:
  7910  0039' 080C'              	movf	___fldiv@aexp,w
  7911  003A' 1903               	btfsc	3,2
  7912  003B' 2800'              	goto	u6131
  7913  003C' 2800'              	goto	u6130
  7914  003D'                    u6131:
  7915  003D' 2800'              	goto	l4415
  7916  003E'                    u6130:
  7917  003E'                    l4407:
  7918  003E' 0A0C'              	incf	___fldiv@aexp,w
  7919  003F' 1D03               	btfss	3,2
  7920  0040' 2800'              	goto	u6141
  7921  0041' 2800'              	goto	u6140
  7922  0042'                    u6141:
  7923  0042' 2800'              	goto	l4411
  7924  0043'                    u6140:
  7925  0043'                    l4409:
  7926  0043' 3000               	movlw	0
  7927  0044' 0083'              	movwf	___fldiv@a+3
  7928  0045' 3000               	movlw	0
  7929  0046' 0082'              	movwf	___fldiv@a+2
  7930  0047' 3000               	movlw	0
  7931  0048' 0081'              	movwf	___fldiv@a+1
  7932  0049' 3000               	movlw	0
  7933  004A' 0080'              	movwf	___fldiv@a
  7934  004B'                    l4411:
  7935  004B' 1782'              	bsf	___fldiv@a+2,7
  7936  004C'                    l4413:
  7937  004C' 0183'              	clrf	___fldiv@a+3
  7938  004D' 2800'              	goto	l717
  7939  004E'                    l4415:
  7940  004E' 3000               	movlw	0
  7941  004F' 0083'              	movwf	___fldiv@a+3
  7942  0050' 3000               	movlw	0
  7943  0051' 0082'              	movwf	___fldiv@a+2
  7944  0052' 3000               	movlw	0
  7945  0053' 0081'              	movwf	___fldiv@a+1
  7946  0054' 3000               	movlw	0
  7947  0055' 0080'              	movwf	___fldiv@a
  7948  0056'                    l717:
  7949  0056' 0803'              	movf	___fldiv@a+3,w
  7950  0057' 0402'              	iorwf	___fldiv@a+2,w
  7951  0058' 0401'              	iorwf	___fldiv@a+1,w
  7952  0059' 0400'              	iorwf	___fldiv@a,w
  7953  005A' 1D03               	skipz
  7954  005B' 2800'              	goto	u6151
  7955  005C' 2800'              	goto	u6150
  7956  005D'                    u6151:
  7957  005D' 2800'              	goto	l4425
  7958  005E'                    u6150:
  7959  005E'                    l4417:
  7960  005E' 3000               	movlw	0
  7961  005F' 0087'              	movwf	___fldiv@b+3
  7962  0060' 3000               	movlw	0
  7963  0061' 0086'              	movwf	___fldiv@b+2
  7964  0062' 3000               	movlw	0
  7965  0063' 0085'              	movwf	___fldiv@b+1
  7966  0064' 3000               	movlw	0
  7967  0065' 0084'              	movwf	___fldiv@b
  7968  0066' 3080               	movlw	128
  7969  0067' 0486'              	iorwf	___fldiv@b+2,f
  7970  0068' 307F               	movlw	127
  7971  0069' 0487'              	iorwf	___fldiv@b+3,f
  7972  006A'                    l4419:
  7973  006A' 0804'              	movf	___fldiv@sign,w
  7974  006B' 0088'              	movwf	??___fldiv
  7975  006C' 0808'              	movf	??___fldiv,w
  7976  006D' 0487'              	iorwf	___fldiv@b+3,f
  7977  006E'                    l4421:
  7978  006E' 0807'              	movf	___fldiv@b+3,w
  7979  006F' 0083'              	movwf	?___fldiv+3
  7980  0070' 0806'              	movf	___fldiv@b+2,w
  7981  0071' 0082'              	movwf	?___fldiv+2
  7982  0072' 0805'              	movf	___fldiv@b+1,w
  7983  0073' 0081'              	movwf	?___fldiv+1
  7984  0074' 0804'              	movf	___fldiv@b,w
  7985  0075' 0080'              	movwf	?___fldiv
  7986  0076' 2800'              	goto	l719
  7987  0077'                    l4425:
  7988  0077' 080B'              	movf	___fldiv@bexp,w
  7989  0078' 1D03               	btfss	3,2
  7990  0079' 2800'              	goto	u6161
  7991  007A' 2800'              	goto	u6160
  7992  007B'                    u6161:
  7993  007B' 2800'              	goto	l4431
  7994  007C'                    u6160:
  7995  007C'                    l4427:
  7996  007C' 3000               	movlw	0
  7997  007D' 0083'              	movwf	?___fldiv+3
  7998  007E' 3000               	movlw	0
  7999  007F' 0082'              	movwf	?___fldiv+2
  8000  0080' 3000               	movlw	0
  8001  0081' 0081'              	movwf	?___fldiv+1
  8002  0082' 3000               	movlw	0
  8003  0083' 0080'              	movwf	?___fldiv
  8004  0084' 2800'              	goto	l719
  8005  0085'                    l4431:
  8006  0085' 080B'              	movf	___fldiv@bexp,w
  8007  0086' 0088'              	movwf	??___fldiv
  8008  0087' 0189'              	clrf	??___fldiv+1
  8009  0088' 0809'              	movf	??___fldiv+1,w
  8010  0089' 008B'              	movwf	??___fldiv+3
  8011  008A' 080C'              	movf	___fldiv@aexp,w
  8012  008B' 0208'              	subwf	??___fldiv,w
  8013  008C' 008A'              	movwf	??___fldiv+2
  8014  008D' 1C03               	skipc
  8015  008E' 038B'              	decf	??___fldiv+3,f
  8016  008F' 080A'              	movf	??___fldiv+2,w
  8017  0090' 3E7F               	addlw	127
  8018  0091' 0085'              	movwf	___fldiv@new_exp
  8019  0092' 080B'              	movf	??___fldiv+3,w
  8020  0093' 1803               	skipnc
  8021  0094' 3E01               	addlw	1
  8022  0095' 3E00               	addlw	0
  8023  0096' 0086'              	movwf	___fldiv@new_exp+1
  8024  0097'                    l4433:
  8025  0097' 0807'              	movf	___fldiv@b+3,w
  8026  0098' 0083'              	movwf	___fldiv@rem+3
  8027  0099' 0806'              	movf	___fldiv@b+2,w
  8028  009A' 0082'              	movwf	___fldiv@rem+2
  8029  009B' 0805'              	movf	___fldiv@b+1,w
  8030  009C' 0081'              	movwf	___fldiv@rem+1
  8031  009D' 0804'              	movf	___fldiv@b,w
  8032  009E' 0080'              	movwf	___fldiv@rem
  8033  009F'                    l4435:
  8034  009F' 3000               	movlw	0
  8035  00A0' 0087'              	movwf	___fldiv@b+3
  8036  00A1' 3000               	movlw	0
  8037  00A2' 0086'              	movwf	___fldiv@b+2
  8038  00A3' 3000               	movlw	0
  8039  00A4' 0085'              	movwf	___fldiv@b+1
  8040  00A5' 3000               	movlw	0
  8041  00A6' 0084'              	movwf	___fldiv@b
  8042  00A7'                    l4437:
  8043  00A7' 3000               	movlw	0
  8044  00A8' 008A'              	movwf	___fldiv@grs+3
  8045  00A9' 3000               	movlw	0
  8046  00AA' 0089'              	movwf	___fldiv@grs+2
  8047  00AB' 3000               	movlw	0
  8048  00AC' 0088'              	movwf	___fldiv@grs+1
  8049  00AD' 3000               	movlw	0
  8050  00AE' 0087'              	movwf	___fldiv@grs
  8051  00AF'                    l4439:
  8052  00AF' 018C'              	clrf	___fldiv@aexp
  8053  00B0' 2800'              	goto	l4459
  8054  00B1'                    l4441:
  8055  00B1' 080C'              	movf	___fldiv@aexp,w
  8056  00B2' 1903               	btfsc	3,2
  8057  00B3' 2800'              	goto	u6171
  8058  00B4' 2800'              	goto	u6170
  8059  00B5'                    u6171:
  8060  00B5' 2800'              	goto	l4451
  8061  00B6'                    u6170:
  8062  00B6'                    l4443:
  8063  00B6' 3001               	movlw	1
  8064  00B7' 0088'              	movwf	??___fldiv
  8065  00B8'                    u6185:
  8066  00B8' 1003               	clrc
  8067  00B9' 0D80'              	rlf	___fldiv@rem,f
  8068  00BA' 0D81'              	rlf	___fldiv@rem+1,f
  8069  00BB' 0D82'              	rlf	___fldiv@rem+2,f
  8070  00BC' 0D83'              	rlf	___fldiv@rem+3,f
  8071  00BD' 0B88'              	decfsz	??___fldiv,f
  8072  00BE' 2800'              	goto	u6185
  8073  00BF' 3001               	movlw	1
  8074  00C0' 0088'              	movwf	??___fldiv
  8075  00C1'                    u6195:
  8076  00C1' 1003               	clrc
  8077  00C2' 0D84'              	rlf	___fldiv@b,f
  8078  00C3' 0D85'              	rlf	___fldiv@b+1,f
  8079  00C4' 0D86'              	rlf	___fldiv@b+2,f
  8080  00C5' 0D87'              	rlf	___fldiv@b+3,f
  8081  00C6' 0B88'              	decfsz	??___fldiv,f
  8082  00C7' 2800'              	goto	u6195
  8083  00C8'                    l4445:
  8084  00C8' 1F8A'              	btfss	___fldiv@grs+3,7
  8085  00C9' 2800'              	goto	u6201
  8086  00CA' 2800'              	goto	u6200
  8087  00CB'                    u6201:
  8088  00CB' 2800'              	goto	l4449
  8089  00CC'                    u6200:
  8090  00CC'                    l4447:
  8091  00CC' 1404'              	bsf	___fldiv@b,0
  8092  00CD'                    l4449:
  8093  00CD' 3001               	movlw	1
  8094  00CE' 0088'              	movwf	??___fldiv
  8095  00CF'                    u6215:
  8096  00CF' 1003               	clrc
  8097  00D0' 0D87'              	rlf	___fldiv@grs,f
  8098  00D1' 0D88'              	rlf	___fldiv@grs+1,f
  8099  00D2' 0D89'              	rlf	___fldiv@grs+2,f
  8100  00D3' 0D8A'              	rlf	___fldiv@grs+3,f
  8101  00D4' 0B88'              	decfsz	??___fldiv,f
  8102  00D5' 2800'              	goto	u6215
  8103  00D6'                    l4451:
  8104  00D6' 0803'              	movf	___fldiv@a+3,w
  8105  00D7' 0203'              	subwf	___fldiv@rem+3,w
  8106  00D8' 1D03               	skipz
  8107  00D9' 2800'              	goto	u6225
  8108  00DA' 0802'              	movf	___fldiv@a+2,w
  8109  00DB' 0202'              	subwf	___fldiv@rem+2,w
  8110  00DC' 1D03               	skipz
  8111  00DD' 2800'              	goto	u6225
  8112  00DE' 0801'              	movf	___fldiv@a+1,w
  8113  00DF' 0201'              	subwf	___fldiv@rem+1,w
  8114  00E0' 1D03               	skipz
  8115  00E1' 2800'              	goto	u6225
  8116  00E2' 0800'              	movf	___fldiv@a,w
  8117  00E3' 0200'              	subwf	___fldiv@rem,w
  8118  00E4'                    u6225:
  8119  00E4' 1C03               	skipc
  8120  00E5' 2800'              	goto	u6221
  8121  00E6' 2800'              	goto	u6220
  8122  00E7'                    u6221:
  8123  00E7' 2800'              	goto	l4457
  8124  00E8'                    u6220:
  8125  00E8'                    l4453:
  8126  00E8' 170A'              	bsf	___fldiv@grs+3,6
  8127  00E9'                    l4455:
  8128  00E9' 0800'              	movf	___fldiv@a,w
  8129  00EA' 0280'              	subwf	___fldiv@rem,f
  8130  00EB' 0801'              	movf	___fldiv@a+1,w
  8131  00EC' 1C03               	skipc
  8132  00ED' 0F01'              	incfsz	___fldiv@a+1,w
  8133  00EE' 2800'              	goto	u6235
  8134  00EF' 2800'              	goto	u6236
  8135  00F0'                    u6235:
  8136  00F0' 0281'              	subwf	___fldiv@rem+1,f
  8137  00F1'                    u6236:
  8138  00F1' 0802'              	movf	___fldiv@a+2,w
  8139  00F2' 1C03               	skipc
  8140  00F3' 0F02'              	incfsz	___fldiv@a+2,w
  8141  00F4' 2800'              	goto	u6237
  8142  00F5' 2800'              	goto	u6238
  8143  00F6'                    u6237:
  8144  00F6' 0282'              	subwf	___fldiv@rem+2,f
  8145  00F7'                    u6238:
  8146  00F7' 0803'              	movf	___fldiv@a+3,w
  8147  00F8' 1C03               	skipc
  8148  00F9' 0F03'              	incfsz	___fldiv@a+3,w
  8149  00FA' 2800'              	goto	u6239
  8150  00FB' 2800'              	goto	u6230
  8151  00FC'                    u6239:
  8152  00FC' 0283'              	subwf	___fldiv@rem+3,f
  8153  00FD'                    u6230:
  8154  00FD'                    l4457:
  8155  00FD' 3001               	movlw	1
  8156  00FE' 0088'              	movwf	??___fldiv
  8157  00FF' 0808'              	movf	??___fldiv,w
  8158  0100' 078C'              	addwf	___fldiv@aexp,f
  8159  0101'                    l4459:
  8160  0101' 301A               	movlw	26
  8161  0102' 020C'              	subwf	___fldiv@aexp,w
  8162  0103' 1C03               	skipc
  8163  0104' 2800'              	goto	u6241
  8164  0105' 2800'              	goto	u6240
  8165  0106'                    u6241:
  8166  0106' 2800'              	goto	l4441
  8167  0107'                    u6240:
  8168  0107'                    l4461:
  8169  0107' 0803'              	movf	___fldiv@rem+3,w
  8170  0108' 0402'              	iorwf	___fldiv@rem+2,w
  8171  0109' 0401'              	iorwf	___fldiv@rem+1,w
  8172  010A' 0400'              	iorwf	___fldiv@rem,w
  8173  010B' 1903               	skipnz
  8174  010C' 2800'              	goto	u6251
  8175  010D' 2800'              	goto	u6250
  8176  010E'                    u6251:
  8177  010E' 2800'              	goto	l4475
  8178  010F'                    u6250:
  8179  010F'                    l4463:
  8180  010F' 1407'              	bsf	___fldiv@grs,0
  8181  0110' 2800'              	goto	l4475
  8182  0111'                    l4465:
  8183  0111' 3001               	movlw	1
  8184  0112' 0088'              	movwf	??___fldiv
  8185  0113'                    u6265:
  8186  0113' 1003               	clrc
  8187  0114' 0D84'              	rlf	___fldiv@b,f
  8188  0115' 0D85'              	rlf	___fldiv@b+1,f
  8189  0116' 0D86'              	rlf	___fldiv@b+2,f
  8190  0117' 0D87'              	rlf	___fldiv@b+3,f
  8191  0118' 0B88'              	decfsz	??___fldiv,f
  8192  0119' 2800'              	goto	u6265
  8193  011A'                    l4467:
  8194  011A' 1F8A'              	btfss	___fldiv@grs+3,7
  8195  011B' 2800'              	goto	u6271
  8196  011C' 2800'              	goto	u6270
  8197  011D'                    u6271:
  8198  011D' 2800'              	goto	l4471
  8199  011E'                    u6270:
  8200  011E'                    l4469:
  8201  011E' 1404'              	bsf	___fldiv@b,0
  8202  011F'                    l4471:
  8203  011F' 3001               	movlw	1
  8204  0120' 0088'              	movwf	??___fldiv
  8205  0121'                    u6285:
  8206  0121' 1003               	clrc
  8207  0122' 0D87'              	rlf	___fldiv@grs,f
  8208  0123' 0D88'              	rlf	___fldiv@grs+1,f
  8209  0124' 0D89'              	rlf	___fldiv@grs+2,f
  8210  0125' 0D8A'              	rlf	___fldiv@grs+3,f
  8211  0126' 0B88'              	decfsz	??___fldiv,f
  8212  0127' 2800'              	goto	u6285
  8213  0128'                    l4473:
  8214  0128' 30FF               	movlw	255
  8215  0129' 0785'              	addwf	___fldiv@new_exp,f
  8216  012A' 1803               	skipnc
  8217  012B' 0A86'              	incf	___fldiv@new_exp+1,f
  8218  012C' 30FF               	movlw	255
  8219  012D' 0786'              	addwf	___fldiv@new_exp+1,f
  8220  012E'                    l4475:
  8221  012E' 1F86'              	btfss	___fldiv@b+2,7
  8222  012F' 2800'              	goto	u6291
  8223  0130' 2800'              	goto	u6290
  8224  0131'                    u6291:
  8225  0131' 2800'              	goto	l4465
  8226  0132'                    u6290:
  8227  0132'                    l4477:
  8228  0132' 018C'              	clrf	___fldiv@aexp
  8229  0133'                    l4479:
  8230  0133' 1F8A'              	btfss	___fldiv@grs+3,7
  8231  0134' 2800'              	goto	u6301
  8232  0135' 2800'              	goto	u6300
  8233  0136'                    u6301:
  8234  0136' 2800'              	goto	l4487
  8235  0137'                    u6300:
  8236  0137'                    l4481:
  8237  0137' 30FF               	movlw	255
  8238  0138' 0507'              	andwf	___fldiv@grs,w
  8239  0139' 0088'              	movwf	??___fldiv
  8240  013A' 30FF               	movlw	255
  8241  013B' 0508'              	andwf	___fldiv@grs+1,w
  8242  013C' 0089'              	movwf	??___fldiv+1
  8243  013D' 30FF               	movlw	255
  8244  013E' 0509'              	andwf	___fldiv@grs+2,w
  8245  013F' 008A'              	movwf	??___fldiv+2
  8246  0140' 307F               	movlw	127
  8247  0141' 050A'              	andwf	___fldiv@grs+3,w
  8248  0142' 008B'              	movwf	??___fldiv+3
  8249  0143' 080B'              	movf	??___fldiv+3,w
  8250  0144' 040A'              	iorwf	??___fldiv+2,w
  8251  0145' 0409'              	iorwf	??___fldiv+1,w
  8252  0146' 0408'              	iorwf	??___fldiv,w
  8253  0147' 1903               	skipnz
  8254  0148' 2800'              	goto	u6311
  8255  0149' 2800'              	goto	u6310
  8256  014A'                    u6311:
  8257  014A' 2800'              	goto	l733
  8258  014B'                    u6310:
  8259  014B'                    l4483:
  8260  014B' 018C'              	clrf	___fldiv@aexp
  8261  014C' 0A8C'              	incf	___fldiv@aexp,f
  8262  014D' 2800'              	goto	l4487
  8263  014E'                    l733:
  8264  014E' 1C04'              	btfss	___fldiv@b,0
  8265  014F' 2800'              	goto	u6321
  8266  0150' 2800'              	goto	u6320
  8267  0151'                    u6321:
  8268  0151' 2800'              	goto	l4487
  8269  0152'                    u6320:
  8270  0152' 2800'              	goto	l4483
  8271  0153'                    l4487:
  8272  0153' 080C'              	movf	___fldiv@aexp,w
  8273  0154' 1903               	btfsc	3,2
  8274  0155' 2800'              	goto	u6331
  8275  0156' 2800'              	goto	u6330
  8276  0157'                    u6331:
  8277  0157' 2800'              	goto	l4497
  8278  0158'                    u6330:
  8279  0158'                    l4489:
  8280  0158' 3001               	movlw	1
  8281  0159' 0784'              	addwf	___fldiv@b,f
  8282  015A' 3000               	movlw	0
  8283  015B' 1803               	skipnc
  8284  015C' 3001               	movlw	1
  8285  015D' 0785'              	addwf	___fldiv@b+1,f
  8286  015E' 3000               	movlw	0
  8287  015F' 1803               	skipnc
  8288  0160' 3001               	movlw	1
  8289  0161' 0786'              	addwf	___fldiv@b+2,f
  8290  0162' 3000               	movlw	0
  8291  0163' 1803               	skipnc
  8292  0164' 3001               	movlw	1
  8293  0165' 0787'              	addwf	___fldiv@b+3,f
  8294  0166'                    l4491:
  8295  0166' 1C07'              	btfss	___fldiv@b+3,0
  8296  0167' 2800'              	goto	u6341
  8297  0168' 2800'              	goto	u6340
  8298  0169'                    u6341:
  8299  0169' 2800'              	goto	l4497
  8300  016A'                    u6340:
  8301  016A'                    l4493:
  8302  016A' 0804'              	movf	___fldiv@b,w
  8303  016B' 0088'              	movwf	??___fldiv
  8304  016C' 0805'              	movf	___fldiv@b+1,w
  8305  016D' 0089'              	movwf	??___fldiv+1
  8306  016E' 0806'              	movf	___fldiv@b+2,w
  8307  016F' 008A'              	movwf	??___fldiv+2
  8308  0170' 0807'              	movf	___fldiv@b+3,w
  8309  0171' 008B'              	movwf	??___fldiv+3
  8310  0172' 3001               	movlw	1
  8311  0173' 008C'              	movwf	??___fldiv+4
  8312  0174'                    u6355:
  8313  0174' 0D0B'              	rlf	??___fldiv+3,w
  8314  0175' 0C8B'              	rrf	??___fldiv+3,f
  8315  0176' 0C8A'              	rrf	??___fldiv+2,f
  8316  0177' 0C89'              	rrf	??___fldiv+1,f
  8317  0178' 0C88'              	rrf	??___fldiv,f
  8318  0179'                    u6350:
  8319  0179' 0B8C'              	decfsz	??___fldiv+4,f
  8320  017A' 2800'              	goto	u6355
  8321  017B' 080B'              	movf	??___fldiv+3,w
  8322  017C' 0087'              	movwf	___fldiv@b+3
  8323  017D' 080A'              	movf	??___fldiv+2,w
  8324  017E' 0086'              	movwf	___fldiv@b+2
  8325  017F' 0809'              	movf	??___fldiv+1,w
  8326  0180' 0085'              	movwf	___fldiv@b+1
  8327  0181' 0808'              	movf	??___fldiv,w
  8328  0182' 0084'              	movwf	___fldiv@b
  8329  0183'                    l4495:
  8330  0183' 3001               	movlw	1
  8331  0184' 0785'              	addwf	___fldiv@new_exp,f
  8332  0185' 1803               	skipnc
  8333  0186' 0A86'              	incf	___fldiv@new_exp+1,f
  8334  0187' 3000               	movlw	0
  8335  0188' 0786'              	addwf	___fldiv@new_exp+1,f
  8336  0189'                    l4497:
  8337  0189' 0806'              	movf	___fldiv@new_exp+1,w
  8338  018A' 3A80               	xorlw	128
  8339  018B' 00FF               	movwf	btemp+1
  8340  018C' 3080               	movlw	128
  8341  018D' 027F               	subwf	btemp+1,w
  8342  018E' 1D03               	skipz
  8343  018F' 2800'              	goto	u6365
  8344  0190' 30FF               	movlw	255
  8345  0191' 0205'              	subwf	___fldiv@new_exp,w
  8346  0192'                    u6365:
  8347  0192' 1C03               	skipc
  8348  0193' 2800'              	goto	u6361
  8349  0194' 2800'              	goto	u6360
  8350  0195'                    u6361:
  8351  0195' 2800'              	goto	l4501
  8352  0196'                    u6360:
  8353  0196'                    l4499:
  8354  0196' 30FF               	movlw	255
  8355  0197' 1283               	bcf	3,5	;RP0=0, select bank0
  8356  0198' 1303               	bcf	3,6	;RP1=0, select bank0
  8357  0199' 0085'              	movwf	___fldiv@new_exp
  8358  019A' 3000               	movlw	0
  8359  019B' 0086'              	movwf	___fldiv@new_exp+1
  8360  019C' 3000               	movlw	0
  8361  019D' 0087'              	movwf	___fldiv@b+3
  8362  019E' 3000               	movlw	0
  8363  019F' 0086'              	movwf	___fldiv@b+2
  8364  01A0' 3000               	movlw	0
  8365  01A1' 0085'              	movwf	___fldiv@b+1
  8366  01A2' 3000               	movlw	0
  8367  01A3' 0084'              	movwf	___fldiv@b
  8368  01A4'                    l4501:
  8369  01A4' 1283               	bcf	3,5	;RP0=0, select bank0
  8370  01A5' 1303               	bcf	3,6	;RP1=0, select bank0
  8371  01A6' 0806'              	movf	___fldiv@new_exp+1,w
  8372  01A7' 3A80               	xorlw	128
  8373  01A8' 00FF               	movwf	btemp+1
  8374  01A9' 3080               	movlw	128
  8375  01AA' 027F               	subwf	btemp+1,w
  8376  01AB' 1D03               	skipz
  8377  01AC' 2800'              	goto	u6375
  8378  01AD' 3001               	movlw	1
  8379  01AE' 0205'              	subwf	___fldiv@new_exp,w
  8380  01AF'                    u6375:
  8381  01AF' 1803               	skipnc
  8382  01B0' 2800'              	goto	u6371
  8383  01B1' 2800'              	goto	u6370
  8384  01B2'                    u6371:
  8385  01B2' 2800'              	goto	l739
  8386  01B3'                    u6370:
  8387  01B3'                    l4503:
  8388  01B3' 1283               	bcf	3,5	;RP0=0, select bank0
  8389  01B4' 1303               	bcf	3,6	;RP1=0, select bank0
  8390  01B5' 0185'              	clrf	___fldiv@new_exp
  8391  01B6' 0186'              	clrf	___fldiv@new_exp+1
  8392  01B7'                    l4505:
  8393  01B7' 3000               	movlw	0
  8394  01B8' 0087'              	movwf	___fldiv@b+3
  8395  01B9' 3000               	movlw	0
  8396  01BA' 0086'              	movwf	___fldiv@b+2
  8397  01BB' 3000               	movlw	0
  8398  01BC' 0085'              	movwf	___fldiv@b+1
  8399  01BD' 3000               	movlw	0
  8400  01BE' 0084'              	movwf	___fldiv@b
  8401  01BF'                    l4507:
  8402  01BF' 0184'              	clrf	___fldiv@sign
  8403  01C0'                    l739:
  8404  01C0' 1283               	bcf	3,5	;RP0=0, select bank0
  8405  01C1' 1303               	bcf	3,6	;RP1=0, select bank0
  8406  01C2' 0805'              	movf	___fldiv@new_exp,w
  8407  01C3' 008B'              	movwf	___fldiv@bexp
  8408  01C4'                    l4509:
  8409  01C4' 1C0B'              	btfss	___fldiv@bexp,0
  8410  01C5' 2800'              	goto	u6381
  8411  01C6' 2800'              	goto	u6380
  8412  01C7'                    u6381:
  8413  01C7' 2800'              	goto	l4513
  8414  01C8'                    u6380:
  8415  01C8'                    l4511:
  8416  01C8' 1786'              	bsf	___fldiv@b+2,7
  8417  01C9' 2800'              	goto	l741
  8418  01CA'                    l4513:
  8419  01CA' 307F               	movlw	127
  8420  01CB' 0088'              	movwf	??___fldiv
  8421  01CC' 0808'              	movf	??___fldiv,w
  8422  01CD' 0586'              	andwf	___fldiv@b+2,f
  8423  01CE'                    l741:
  8424  01CE' 080B'              	movf	___fldiv@bexp,w
  8425  01CF' 0088'              	movwf	??___fldiv
  8426  01D0' 1003               	clrc
  8427  01D1' 0C08'              	rrf	??___fldiv,w
  8428  01D2' 0087'              	movwf	___fldiv@b+3
  8429  01D3' 0804'              	movf	___fldiv@sign,w
  8430  01D4' 0088'              	movwf	??___fldiv
  8431  01D5' 0808'              	movf	??___fldiv,w
  8432  01D6' 0487'              	iorwf	___fldiv@b+3,f
  8433  01D7' 2800'              	goto	l4421
  8434  01D8'                    l719:
  8435  01D8' 0008               	return
  8436  01D9'                    __end_of___fldiv:
  8437                           
  8438                           	psect	text22
  8439  0000'                    __ptext22:	
  8440 ;; *************** function _my_floor *****************
  8441 ;; Defined at:
  8442 ;;		line 788 in file "main.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  f               4   10[COMMON] float 
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;  n               2    0[BANK0 ] int 
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  2   10[COMMON] int 
  8449 ;; Registers used:
  8450 ;;		wreg, status,2, status,0, pclath, cstack
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8456 ;;      Params:         4       0       0       0
  8457 ;;      Locals:         0       2       0       0
  8458 ;;      Temps:          0       0       0       0
  8459 ;;      Totals:         4       2       0       0
  8460 ;;Total ram usage:        6 bytes
  8461 ;; Hardware stack levels used: 1
  8462 ;; Hardware stack levels required when called: 1
  8463 ;; This function calls:
  8464 ;;		___fltol
  8465 ;; This function is called by:
  8466 ;;		_updateANDset_ball_position
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470  0000'                    _my_floor:	
  8471                           ;psect for function _my_floor
  8472                           
  8473  0000'                    l4807:	
  8474                           ;incstack = 0
  8475                           ; Regs used in _my_floor: [wreg+status,2+status,0+pclath+cstack]
  8476                           
  8477                           
  8478                           ;main.c: 795:     int n = (int)f;
  8479  0000' 080D'              	movf	my_floor@f+3,w
  8480  0001' 0083'              	movwf	___fltol@f1+3
  8481  0002' 080C'              	movf	my_floor@f+2,w
  8482  0003' 0082'              	movwf	___fltol@f1+2
  8483  0004' 080B'              	movf	my_floor@f+1,w
  8484  0005' 0081'              	movwf	___fltol@f1+1
  8485  0006' 080A'              	movf	my_floor@f,w
  8486  0007' 0080'              	movwf	___fltol@f1
  8487  0008' 118A' 2000' 118A'  	fcall	___fltol
  8488  000B' 0801'              	movf	?___fltol+1,w
  8489  000C' 1283               	bcf	3,5	;RP0=0, select bank0
  8490  000D' 1303               	bcf	3,6	;RP1=0, select bank0
  8491  000E' 0081'              	movwf	my_floor@n+1
  8492  000F' 0800'              	movf	?___fltol,w
  8493  0010' 0080'              	movwf	my_floor@n
  8494  0011'                    l4809:
  8495                           
  8496                           ;main.c: 796:     return n;
  8497  0011' 0801'              	movf	my_floor@n+1,w
  8498  0012' 008B'              	movwf	?_my_floor+1
  8499  0013' 0800'              	movf	my_floor@n,w
  8500  0014' 008A'              	movwf	?_my_floor
  8501  0015'                    l256:
  8502  0015' 0008               	return
  8503  0016'                    __end_of_my_floor:
  8504                           
  8505                           	psect	text23
  8506  0000'                    __ptext23:	
  8507 ;; *************** function ___fltol *****************
  8508 ;; Defined at:
  8509 ;;		line 43 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/fltol.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  f1              4    0[COMMON] int 
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;  exp1            1    9[COMMON] unsigned char 
  8514 ;;  sign1           1    8[COMMON] unsigned char 
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  4    0[COMMON] long 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8524 ;;      Params:         4       0       0       0
  8525 ;;      Locals:         2       0       0       0
  8526 ;;      Temps:          4       0       0       0
  8527 ;;      Totals:        10       0       0       0
  8528 ;;Total ram usage:       10 bytes
  8529 ;; Hardware stack levels used: 1
  8530 ;; This function calls:
  8531 ;;		Nothing
  8532 ;; This function is called by:
  8533 ;;		_my_floor
  8534 ;;		_pow
  8535 ;;		_exp
  8536 ;;		_floor
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540  0000'                    ___fltol:	
  8541                           ;psect for function ___fltol
  8542                           
  8543  0000'                    l3929:	
  8544                           ;incstack = 0
  8545                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8546                           
  8547  0000' 1003               	clrc
  8548  0001' 0D02'              	rlf	___fltol@f1+2,w
  8549  0002' 0D03'              	rlf	___fltol@f1+3,w
  8550  0003' 0089'              	movwf	___fltol@exp1
  8551  0004' 0809'              	movf	___fltol@exp1,w
  8552  0005' 1D03               	btfss	3,2
  8553  0006' 2800'              	goto	u5001
  8554  0007' 2800'              	goto	u5000
  8555  0008'                    u5001:
  8556  0008' 2800'              	goto	l3935
  8557  0009'                    u5000:
  8558  0009'                    l3931:
  8559  0009' 3000               	movlw	0
  8560  000A' 0083'              	movwf	?___fltol+3
  8561  000B' 3000               	movlw	0
  8562  000C' 0082'              	movwf	?___fltol+2
  8563  000D' 3000               	movlw	0
  8564  000E' 0081'              	movwf	?___fltol+1
  8565  000F' 3000               	movlw	0
  8566  0010' 0080'              	movwf	?___fltol
  8567  0011' 2800'              	goto	l554
  8568  0012'                    l3935:
  8569  0012' 0800'              	movf	___fltol@f1,w
  8570  0013' 0084'              	movwf	??___fltol
  8571  0014' 0801'              	movf	___fltol@f1+1,w
  8572  0015' 0085'              	movwf	??___fltol+1
  8573  0016' 0802'              	movf	___fltol@f1+2,w
  8574  0017' 0086'              	movwf	??___fltol+2
  8575  0018' 0803'              	movf	___fltol@f1+3,w
  8576  0019' 0087'              	movwf	??___fltol+3
  8577  001A' 301F               	movlw	31
  8578  001B'                    u5015:
  8579  001B' 1003               	clrc
  8580  001C' 0C87'              	rrf	??___fltol+3,f
  8581  001D' 0C86'              	rrf	??___fltol+2,f
  8582  001E' 0C85'              	rrf	??___fltol+1,f
  8583  001F' 0C84'              	rrf	??___fltol,f
  8584  0020'                    u5010:
  8585  0020' 3EFF               	addlw	-1
  8586  0021' 1D03               	skipz
  8587  0022' 2800'              	goto	u5015
  8588  0023' 0804'              	movf	??___fltol,w
  8589  0024' 0088'              	movwf	___fltol@sign1
  8590  0025'                    l3937:
  8591  0025' 1782'              	bsf	___fltol@f1+2,7
  8592  0026'                    l3939:
  8593  0026' 30FF               	movlw	255
  8594  0027' 0580'              	andwf	___fltol@f1,f
  8595  0028' 30FF               	movlw	255
  8596  0029' 0581'              	andwf	___fltol@f1+1,f
  8597  002A' 30FF               	movlw	255
  8598  002B' 0582'              	andwf	___fltol@f1+2,f
  8599  002C' 3000               	movlw	0
  8600  002D' 0583'              	andwf	___fltol@f1+3,f
  8601  002E'                    l3941:
  8602  002E' 3096               	movlw	150
  8603  002F' 0289'              	subwf	___fltol@exp1,f
  8604  0030'                    l3943:
  8605  0030' 1F89'              	btfss	___fltol@exp1,7
  8606  0031' 2800'              	goto	u5021
  8607  0032' 2800'              	goto	u5020
  8608  0033'                    u5021:
  8609  0033' 2800'              	goto	l3953
  8610  0034'                    u5020:
  8611  0034'                    l3945:
  8612  0034' 0809'              	movf	___fltol@exp1,w
  8613  0035' 3A80               	xorlw	128
  8614  0036' 3E97               	addlw	151
  8615  0037' 1803               	skipnc
  8616  0038' 2800'              	goto	u5031
  8617  0039' 2800'              	goto	u5030
  8618  003A'                    u5031:
  8619  003A' 2800'              	goto	l3951
  8620  003B'                    u5030:
  8621  003B' 2800'              	goto	l3931
  8622  003C'                    l3951:
  8623  003C' 3001               	movlw	1
  8624  003D'                    u5045:
  8625  003D' 1003               	clrc
  8626  003E' 0C83'              	rrf	___fltol@f1+3,f
  8627  003F' 0C82'              	rrf	___fltol@f1+2,f
  8628  0040' 0C81'              	rrf	___fltol@f1+1,f
  8629  0041' 0C80'              	rrf	___fltol@f1,f
  8630  0042' 3EFF               	addlw	-1
  8631  0043' 1D03               	skipz
  8632  0044' 2800'              	goto	u5045
  8633  0045' 3001               	movlw	1
  8634  0046' 0084'              	movwf	??___fltol
  8635  0047' 0804'              	movf	??___fltol,w
  8636  0048' 0789'              	addwf	___fltol@exp1,f
  8637  0049' 1D03               	btfss	3,2
  8638  004A' 2800'              	goto	u5051
  8639  004B' 2800'              	goto	u5050
  8640  004C'                    u5051:
  8641  004C' 2800'              	goto	l3951
  8642  004D'                    u5050:
  8643  004D' 2800'              	goto	l3961
  8644  004E'                    l3953:
  8645  004E' 3020               	movlw	32
  8646  004F' 0209'              	subwf	___fltol@exp1,w
  8647  0050' 1C03               	skipc
  8648  0051' 2800'              	goto	u5061
  8649  0052' 2800'              	goto	u5060
  8650  0053'                    u5061:
  8651  0053' 2800'              	goto	l561
  8652  0054'                    u5060:
  8653  0054' 2800'              	goto	l3931
  8654  0055'                    l3959:
  8655  0055' 3001               	movlw	1
  8656  0056' 0084'              	movwf	??___fltol
  8657  0057'                    u5075:
  8658  0057' 1003               	clrc
  8659  0058' 0D80'              	rlf	___fltol@f1,f
  8660  0059' 0D81'              	rlf	___fltol@f1+1,f
  8661  005A' 0D82'              	rlf	___fltol@f1+2,f
  8662  005B' 0D83'              	rlf	___fltol@f1+3,f
  8663  005C' 0B84'              	decfsz	??___fltol,f
  8664  005D' 2800'              	goto	u5075
  8665  005E' 3001               	movlw	1
  8666  005F' 0289'              	subwf	___fltol@exp1,f
  8667  0060'                    l561:
  8668  0060' 0809'              	movf	___fltol@exp1,w
  8669  0061' 1D03               	btfss	3,2
  8670  0062' 2800'              	goto	u5081
  8671  0063' 2800'              	goto	u5080
  8672  0064'                    u5081:
  8673  0064' 2800'              	goto	l3959
  8674  0065'                    u5080:
  8675  0065'                    l3961:
  8676  0065' 0808'              	movf	___fltol@sign1,w
  8677  0066' 1903               	btfsc	3,2
  8678  0067' 2800'              	goto	u5091
  8679  0068' 2800'              	goto	u5090
  8680  0069'                    u5091:
  8681  0069' 2800'              	goto	l564
  8682  006A'                    u5090:
  8683  006A'                    l3963:
  8684  006A' 0980'              	comf	___fltol@f1,f
  8685  006B' 0981'              	comf	___fltol@f1+1,f
  8686  006C' 0982'              	comf	___fltol@f1+2,f
  8687  006D' 0983'              	comf	___fltol@f1+3,f
  8688  006E' 0A80'              	incf	___fltol@f1,f
  8689  006F' 1903               	skipnz
  8690  0070' 0A81'              	incf	___fltol@f1+1,f
  8691  0071' 1903               	skipnz
  8692  0072' 0A82'              	incf	___fltol@f1+2,f
  8693  0073' 1903               	skipnz
  8694  0074' 0A83'              	incf	___fltol@f1+3,f
  8695  0075'                    l564:
  8696  0075'                    l554:
  8697  0075' 0008               	return
  8698  0076'                    __end_of___fltol:
  8699                           
  8700                           	psect	text24
  8701  0000'                    __ptext24:	
  8702 ;; *************** function _setDisplayFillingMode *****************
  8703 ;; Defined at:
  8704 ;;		line 397 in file "main.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  hORv            1    wreg     unsigned char 
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;  hORv            1    7[COMMON] unsigned char 
  8709 ;;  madctl          1    8[COMMON] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  1    wreg      void 
  8712 ;; Registers used:
  8713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8719 ;;      Params:         0       0       0       0
  8720 ;;      Locals:         2       0       0       0
  8721 ;;      Temps:          2       0       0       0
  8722 ;;      Totals:         4       0       0       0
  8723 ;;Total ram usage:        4 bytes
  8724 ;; Hardware stack levels used: 1
  8725 ;; Hardware stack levels required when called: 3
  8726 ;; This function calls:
  8727 ;;		_sendCommand_and_8bit_Data
  8728 ;; This function is called by:
  8729 ;;		_main
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733  0000'                    _setDisplayFillingMode:	
  8734                           ;psect for function _setDisplayFillingMode
  8735                           
  8736                           
  8737                           ;incstack = 0
  8738                           ; Regs used in _setDisplayFillingMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  8739                           ;setDisplayFillingMode@hORv stored from wreg
  8740  0000' 0087'              	movwf	setDisplayFillingMode@hORv
  8741  0001'                    l3513:
  8742                           
  8743                           ;main.c: 406:   uint8_t madctl = 0b00100100;
  8744  0001' 3024               	movlw	36
  8745  0002' 0088'              	movwf	setDisplayFillingMode@madctl
  8746                           
  8747                           ;main.c: 408:   mode = hORv;
  8748  0003' 0807'              	movf	setDisplayFillingMode@hORv,w
  8749  0004' 1283               	bcf	3,5	;RP0=0, select bank2
  8750  0005' 1703               	bsf	3,6	;RP1=1, select bank2
  8751  0006' 0080'              	movwf	_mode^(0+256)
  8752                           
  8753                           ;main.c: 410:   switch (mode) {
  8754  0007' 2800'              	goto	l3521
  8755  0008'                    l121:	
  8756                           ;main.c: 414:     case 1:
  8757                           
  8758                           
  8759                           ;main.c: 415:             madctl |= 0b00010000;
  8760  0008' 1608'              	bsf	setDisplayFillingMode@madctl,4
  8761                           
  8762                           ;main.c: 416:             break;
  8763  0009' 2800'              	goto	l3523
  8764  000A'                    l3515:
  8765                           
  8766                           ;main.c: 418:             madctl |= 0b00010010;
  8767  000A' 3012               	movlw	18
  8768  000B' 0085'              	movwf	??_setDisplayFillingMode
  8769  000C' 0805'              	movf	??_setDisplayFillingMode,w
  8770  000D' 0488'              	iorwf	setDisplayFillingMode@madctl,f
  8771                           
  8772                           ;main.c: 419:             break;
  8773  000E' 2800'              	goto	l3523
  8774  000F'                    l123:	
  8775                           ;main.c: 420:     case 3:
  8776                           
  8777                           
  8778                           ;main.c: 421:             madctl |= 0b00000001;
  8779  000F' 1408'              	bsf	setDisplayFillingMode@madctl,0
  8780                           
  8781                           ;main.c: 422:             break;
  8782  0010' 2800'              	goto	l3523
  8783  0011'                    l3517:
  8784                           
  8785                           ;main.c: 424:             madctl |= 0b00010001;
  8786  0011' 3011               	movlw	17
  8787  0012' 0085'              	movwf	??_setDisplayFillingMode
  8788  0013' 0805'              	movf	??_setDisplayFillingMode,w
  8789  0014' 0488'              	iorwf	setDisplayFillingMode@madctl,f
  8790                           
  8791                           ;main.c: 425:             break;
  8792  0015' 2800'              	goto	l3523
  8793  0016'                    l3521:
  8794  0016' 0800'              	movf	_mode^(0+256),w
  8795  0017' 0085'              	movwf	??_setDisplayFillingMode
  8796  0018' 0186'              	clrf	??_setDisplayFillingMode+1
  8797                           
  8798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8799                           ; Switch size 1, requested type "simple"
  8800                           ; Number of cases is 1, Range of values is 0 to 0
  8801                           ; switch strategies available:
  8802                           ; Name         Instructions Cycles
  8803                           ; simple_byte            4     3 (average)
  8804                           ; direct_byte            9     7 (fixed)
  8805                           ; jumptable            260     6 (fixed)
  8806                           ;	Chosen strategy is simple_byte
  8807  0019' 0806'              	movf	??_setDisplayFillingMode+1,w
  8808  001A' 3A00               	xorlw	0	; case 0
  8809  001B' 1903               	skipnz
  8810  001C' 2800'              	goto	l4889
  8811  001D' 2800'              	goto	l3523
  8812  001E'                    l4889:
  8813                           
  8814                           ; Switch size 1, requested type "simple"
  8815                           ; Number of cases is 5, Range of values is 0 to 4
  8816                           ; switch strategies available:
  8817                           ; Name         Instructions Cycles
  8818                           ; simple_byte           16     9 (average)
  8819                           ; direct_byte           17     7 (fixed)
  8820                           ; jumptable            260     6 (fixed)
  8821                           ;	Chosen strategy is simple_byte
  8822  001E' 0805'              	movf	??_setDisplayFillingMode,w
  8823  001F' 3A00               	xorlw	0	; case 0
  8824  0020' 1903               	skipnz
  8825  0021' 2800'              	goto	l3523
  8826  0022' 3A01               	xorlw	1	; case 1
  8827  0023' 1903               	skipnz
  8828  0024' 2800'              	goto	l121
  8829  0025' 3A03               	xorlw	3	; case 2
  8830  0026' 1903               	skipnz
  8831  0027' 2800'              	goto	l3515
  8832  0028' 3A01               	xorlw	1	; case 3
  8833  0029' 1903               	skipnz
  8834  002A' 2800'              	goto	l123
  8835  002B' 3A07               	xorlw	7	; case 4
  8836  002C' 1903               	skipnz
  8837  002D' 2800'              	goto	l3517
  8838  002E' 2800'              	goto	l3523
  8839  002F'                    l3523:
  8840                           
  8841                           ;main.c: 428:   sendCommand_and_8bit_Data(0xA0, madctl);
  8842  002F' 0808'              	movf	setDisplayFillingMode@madctl,w
  8843  0030' 0083'              	movwf	sendCommand_and_8bit_Data@first_byte
  8844  0031' 30A0               	movlw	160
  8845  0032' 118A' 2000' 118A'  	fcall	_sendCommand_and_8bit_Data
  8846                           
  8847                           ;main.c: 429:   sendCommand_and_8bit_Data(0xA1, 0);
  8848  0035' 0183'              	clrf	sendCommand_and_8bit_Data@first_byte
  8849  0036' 30A1               	movlw	161
  8850  0037' 118A' 2000' 118A'  	fcall	_sendCommand_and_8bit_Data
  8851  003A'                    l125:
  8852  003A' 0008               	return
  8853  003B'                    __end_of_setDisplayFillingMode:
  8854                           
  8855                           	psect	text25
  8856  0000'                    __ptext25:	
  8857 ;; *************** function _sendCommand_and_8bit_Data *****************
  8858 ;; Defined at:
  8859 ;;		line 310 in file "main.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  commandByte     1    wreg     unsigned char 
  8862 ;;  first_byte      1    3[COMMON] unsigned char 
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;  commandByte     1    4[COMMON] unsigned char 
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      void 
  8867 ;; Registers used:
  8868 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8874 ;;      Params:         1       0       0       0
  8875 ;;      Locals:         1       0       0       0
  8876 ;;      Temps:          0       0       0       0
  8877 ;;      Totals:         2       0       0       0
  8878 ;;Total ram usage:        2 bytes
  8879 ;; Hardware stack levels used: 1
  8880 ;; Hardware stack levels required when called: 2
  8881 ;; This function calls:
  8882 ;;		_SPI_CS_HIGH
  8883 ;;		_SPI_CS_LOW
  8884 ;;		_SPI_DC_HIGH
  8885 ;;		_SPI_DC_LOW
  8886 ;;		_spiWrite
  8887 ;; This function is called by:
  8888 ;;		_setDisplayFillingMode
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892  0000'                    _sendCommand_and_8bit_Data:	
  8893                           ;psect for function _sendCommand_and_8bit_Data
  8894                           
  8895                           
  8896                           ;incstack = 0
  8897                           ; Regs used in _sendCommand_and_8bit_Data: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  8898                           ;sendCommand_and_8bit_Data@commandByte stored from wreg
  8899  0000' 0084'              	movwf	sendCommand_and_8bit_Data@commandByte
  8900  0001'                    l3405:
  8901                           
  8902                           ;main.c: 312:   SPI_CS_LOW();
  8903  0001' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  8904                           
  8905                           ;main.c: 314:   SPI_DC_LOW();
  8906  0004' 118A' 2000' 118A'  	fcall	_SPI_DC_LOW
  8907  0007'                    l3407:
  8908                           
  8909                           ;main.c: 315:   spiWrite(commandByte);
  8910  0007' 0804'              	movf	sendCommand_and_8bit_Data@commandByte,w
  8911  0008' 118A' 2000' 118A'  	fcall	_spiWrite
  8912  000B'                    l3409:
  8913                           
  8914                           ;main.c: 316:   SPI_DC_HIGH();
  8915  000B' 118A' 2000' 118A'  	fcall	_SPI_DC_HIGH
  8916                           
  8917                           ;main.c: 318:   spiWrite(first_byte);
  8918  000E' 0803'              	movf	sendCommand_and_8bit_Data@first_byte,w
  8919  000F' 118A' 2000' 118A'  	fcall	_spiWrite
  8920  0012'                    l3411:
  8921                           
  8922                           ;main.c: 320:   SPI_CS_HIGH();
  8923  0012' 118A' 2000' 118A'  	fcall	_SPI_CS_HIGH
  8924  0015'                    l95:
  8925  0015' 0008               	return
  8926  0016'                    __end_of_sendCommand_and_8bit_Data:
  8927                           
  8928                           	psect	text26
  8929  0000'                    __ptext26:	
  8930 ;; *************** function _setAllDisplayPixels_Hard *****************
  8931 ;; Defined at:
  8932 ;;		line 653 in file "main.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  color           2   10[COMMON] unsigned int 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;  y               2    2[BANK0 ] int 
  8937 ;;  x               2    0[BANK0 ] int 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  1    wreg      void 
  8940 ;; Registers used:
  8941 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8947 ;;      Params:         2       0       0       0
  8948 ;;      Locals:         0       4       0       0
  8949 ;;      Temps:          0       0       0       0
  8950 ;;      Totals:         2       4       0       0
  8951 ;;Total ram usage:        6 bytes
  8952 ;; Hardware stack levels used: 1
  8953 ;; Hardware stack levels required when called: 3
  8954 ;; This function calls:
  8955 ;;		_SPI_CS_HIGH
  8956 ;;		_SPI_CS_LOW
  8957 ;;		_SPI_WRITE16_Hard
  8958 ;;		_my_setAddrWindow_Hard
  8959 ;; This function is called by:
  8960 ;;		_main
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964  0000'                    _setAllDisplayPixels_Hard:	
  8965                           ;psect for function _setAllDisplayPixels_Hard
  8966                           
  8967  0000'                    l3555:	
  8968                           ;incstack = 0
  8969                           ; Regs used in _setAllDisplayPixels_Hard: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8970                           
  8971                           
  8972                           ;main.c: 654:     SPI_CS_LOW();
  8973  0000' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  8974  0003'                    l3557:
  8975                           
  8976                           ;main.c: 656:     my_setAddrWindow_Hard(0, 0, 127, 95);
  8977  0003' 3000               	movlw	0
  8978  0004' 0082'              	movwf	my_setAddrWindow_Hard@x_start
  8979  0005' 0083'              	movwf	my_setAddrWindow_Hard@x_start+1
  8980  0006' 3000               	movlw	0
  8981  0007' 0084'              	movwf	my_setAddrWindow_Hard@y_start
  8982  0008' 0085'              	movwf	my_setAddrWindow_Hard@y_start+1
  8983  0009' 307F               	movlw	127
  8984  000A' 0086'              	movwf	my_setAddrWindow_Hard@x_finish
  8985  000B' 3000               	movlw	0
  8986  000C' 0087'              	movwf	my_setAddrWindow_Hard@x_finish+1
  8987  000D' 305F               	movlw	95
  8988  000E' 0088'              	movwf	my_setAddrWindow_Hard@y_finish
  8989  000F' 3000               	movlw	0
  8990  0010' 0089'              	movwf	my_setAddrWindow_Hard@y_finish+1
  8991  0011' 118A' 2000' 118A'  	fcall	_my_setAddrWindow_Hard
  8992  0014'                    l3559:
  8993  0014'                    l3561:
  8994  0014'                    l3563:
  8995                           
  8996                           ;main.c: 660:     for(y = 0; y < 96; y++) {
  8997  0014' 1283               	bcf	3,5	;RP0=0, select bank0
  8998  0015' 1303               	bcf	3,6	;RP1=0, select bank0
  8999  0016' 0182'              	clrf	setAllDisplayPixels_Hard@y
  9000  0017' 0183'              	clrf	setAllDisplayPixels_Hard@y+1
  9001  0018'                    l3569:
  9002                           
  9003                           ;main.c: 661:         for(x = 0; x < 128; x++) {
  9004  0018' 1283               	bcf	3,5	;RP0=0, select bank0
  9005  0019' 1303               	bcf	3,6	;RP1=0, select bank0
  9006  001A' 0180'              	clrf	setAllDisplayPixels_Hard@x
  9007  001B' 0181'              	clrf	setAllDisplayPixels_Hard@x+1
  9008  001C'                    l3575:
  9009                           
  9010                           ;main.c: 662:             SPI_WRITE16_Hard(color);
  9011  001C' 080B'              	movf	setAllDisplayPixels_Hard@color+1,w
  9012  001D' 0082'              	movwf	SPI_WRITE16_Hard@w+1
  9013  001E' 080A'              	movf	setAllDisplayPixels_Hard@color,w
  9014  001F' 0081'              	movwf	SPI_WRITE16_Hard@w
  9015  0020' 118A' 2000' 118A'  	fcall	_SPI_WRITE16_Hard
  9016  0023'                    l3577:
  9017                           
  9018                           ;main.c: 663:         }
  9019  0023' 3001               	movlw	1
  9020  0024' 1283               	bcf	3,5	;RP0=0, select bank0
  9021  0025' 1303               	bcf	3,6	;RP1=0, select bank0
  9022  0026' 0780'              	addwf	setAllDisplayPixels_Hard@x,f
  9023  0027' 1803               	skipnc
  9024  0028' 0A81'              	incf	setAllDisplayPixels_Hard@x+1,f
  9025  0029' 3000               	movlw	0
  9026  002A' 0781'              	addwf	setAllDisplayPixels_Hard@x+1,f
  9027  002B'                    l3579:
  9028  002B' 0801'              	movf	setAllDisplayPixels_Hard@x+1,w
  9029  002C' 3A80               	xorlw	128
  9030  002D' 00FF               	movwf	btemp+1
  9031  002E' 3080               	movlw	128
  9032  002F' 027F               	subwf	btemp+1,w
  9033  0030' 1D03               	skipz
  9034  0031' 2800'              	goto	u4575
  9035  0032' 3080               	movlw	128
  9036  0033' 0200'              	subwf	setAllDisplayPixels_Hard@x,w
  9037  0034'                    u4575:
  9038  0034' 1C03               	skipc
  9039  0035' 2800'              	goto	u4571
  9040  0036' 2800'              	goto	u4570
  9041  0037'                    u4571:
  9042  0037' 2800'              	goto	l3575
  9043  0038'                    u4570:
  9044  0038'                    l3581:
  9045                           
  9046                           ;main.c: 664:     }
  9047  0038' 3001               	movlw	1
  9048  0039' 1283               	bcf	3,5	;RP0=0, select bank0
  9049  003A' 1303               	bcf	3,6	;RP1=0, select bank0
  9050  003B' 0782'              	addwf	setAllDisplayPixels_Hard@y,f
  9051  003C' 1803               	skipnc
  9052  003D' 0A83'              	incf	setAllDisplayPixels_Hard@y+1,f
  9053  003E' 3000               	movlw	0
  9054  003F' 0783'              	addwf	setAllDisplayPixels_Hard@y+1,f
  9055  0040'                    l3583:
  9056  0040' 0803'              	movf	setAllDisplayPixels_Hard@y+1,w
  9057  0041' 3A80               	xorlw	128
  9058  0042' 00FF               	movwf	btemp+1
  9059  0043' 3080               	movlw	128
  9060  0044' 027F               	subwf	btemp+1,w
  9061  0045' 1D03               	skipz
  9062  0046' 2800'              	goto	u4585
  9063  0047' 3060               	movlw	96
  9064  0048' 0202'              	subwf	setAllDisplayPixels_Hard@y,w
  9065  0049'                    u4585:
  9066  0049' 1C03               	skipc
  9067  004A' 2800'              	goto	u4581
  9068  004B' 2800'              	goto	u4580
  9069  004C'                    u4581:
  9070  004C' 2800'              	goto	l3569
  9071  004D'                    u4580:
  9072  004D'                    l3585:
  9073                           
  9074                           ;main.c: 666:     SPI_CS_HIGH();
  9075  004D' 118A' 2000' 118A'  	fcall	_SPI_CS_HIGH
  9076  0050'                    l198:
  9077  0050' 0008               	return
  9078  0051'                    __end_of_setAllDisplayPixels_Hard:
  9079                           
  9080                           	psect	text27
  9081  0000'                    __ptext27:	
  9082 ;; *************** function _sendCommand_Hard *****************
  9083 ;; Defined at:
  9084 ;;		line 605 in file "main.c"
  9085 ;; Parameters:    Size  Location     Type
  9086 ;;  commandByte     1    wreg     unsigned char 
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;  commandByte     1    1[COMMON] unsigned char 
  9089 ;; Return value:  Size  Location     Type
  9090 ;;                  1    wreg      void 
  9091 ;; Registers used:
  9092 ;;		wreg, status,2, status,0, pclath, cstack
  9093 ;; Tracked objects:
  9094 ;;		On entry : 0/0
  9095 ;;		On exit  : 0/0
  9096 ;;		Unchanged: 0/0
  9097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9098 ;;      Params:         0       0       0       0
  9099 ;;      Locals:         1       0       0       0
  9100 ;;      Temps:          0       0       0       0
  9101 ;;      Totals:         1       0       0       0
  9102 ;;Total ram usage:        1 bytes
  9103 ;; Hardware stack levels used: 1
  9104 ;; Hardware stack levels required when called: 1
  9105 ;; This function calls:
  9106 ;;		_SPI_CS_HIGH
  9107 ;;		_SPI_CS_LOW
  9108 ;;		_SPI_DC_HIGH
  9109 ;;		_SPI_DC_LOW
  9110 ;;		_spi_send_recv
  9111 ;; This function is called by:
  9112 ;;		_main
  9113 ;; This function uses a non-reentrant model
  9114 ;;
  9115                           
  9116  0000'                    _sendCommand_Hard:	
  9117                           ;psect for function _sendCommand_Hard
  9118                           
  9119                           
  9120                           ;incstack = 0
  9121                           ; Regs used in _sendCommand_Hard: [wreg+status,2+status,0+pclath+cstack]
  9122                           ;sendCommand_Hard@commandByte stored from wreg
  9123  0000' 0081'              	movwf	sendCommand_Hard@commandByte
  9124  0001'                    l3547:
  9125                           
  9126                           ;main.c: 607:   SPI_CS_LOW();
  9127  0001' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  9128                           
  9129                           ;main.c: 609:   SPI_DC_LOW();
  9130  0004' 118A' 2000' 118A'  	fcall	_SPI_DC_LOW
  9131  0007'                    l3549:
  9132                           
  9133                           ;main.c: 610:   spi_send_recv(commandByte);
  9134  0007' 0801'              	movf	sendCommand_Hard@commandByte,w
  9135  0008' 118A' 2000' 118A'  	fcall	_spi_send_recv
  9136  000B'                    l3551:
  9137                           
  9138                           ;main.c: 611:   SPI_DC_HIGH();
  9139  000B' 118A' 2000' 118A'  	fcall	_SPI_DC_HIGH
  9140  000E'                    l3553:
  9141                           
  9142                           ;main.c: 613:   SPI_CS_HIGH();
  9143  000E' 118A' 2000' 118A'  	fcall	_SPI_CS_HIGH
  9144  0011'                    l173:
  9145  0011' 0008               	return
  9146  0012'                    __end_of_sendCommand_Hard:
  9147                           
  9148                           	psect	text28
  9149  0000'                    __ptext28:	
  9150 ;; *************** function _sendCommand *****************
  9151 ;; Defined at:
  9152 ;;		line 296 in file "main.c"
  9153 ;; Parameters:    Size  Location     Type
  9154 ;;  commandByte     1    wreg     unsigned char 
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;  commandByte     1    3[COMMON] unsigned char 
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  1    wreg      void 
  9159 ;; Registers used:
  9160 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9166 ;;      Params:         0       0       0       0
  9167 ;;      Locals:         1       0       0       0
  9168 ;;      Temps:          0       0       0       0
  9169 ;;      Totals:         1       0       0       0
  9170 ;;Total ram usage:        1 bytes
  9171 ;; Hardware stack levels used: 1
  9172 ;; Hardware stack levels required when called: 2
  9173 ;; This function calls:
  9174 ;;		_SPI_CS_HIGH
  9175 ;;		_SPI_CS_LOW
  9176 ;;		_SPI_DC_HIGH
  9177 ;;		_SPI_DC_LOW
  9178 ;;		_spiWrite
  9179 ;; This function is called by:
  9180 ;;		_main
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184  0000'                    _sendCommand:	
  9185                           ;psect for function _sendCommand
  9186                           
  9187                           
  9188                           ;incstack = 0
  9189                           ; Regs used in _sendCommand: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9190                           ;sendCommand@commandByte stored from wreg
  9191  0000' 0083'              	movwf	sendCommand@commandByte
  9192  0001'                    l3483:
  9193                           
  9194                           ;main.c: 298:   SPI_CS_LOW();
  9195  0001' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  9196                           
  9197                           ;main.c: 300:   SPI_DC_LOW();
  9198  0004' 118A' 2000' 118A'  	fcall	_SPI_DC_LOW
  9199  0007'                    l3485:
  9200                           
  9201                           ;main.c: 301:   spiWrite(commandByte);
  9202  0007' 0803'              	movf	sendCommand@commandByte,w
  9203  0008' 118A' 2000' 118A'  	fcall	_spiWrite
  9204  000B'                    l3487:
  9205                           
  9206                           ;main.c: 302:   SPI_DC_HIGH();
  9207  000B' 118A' 2000' 118A'  	fcall	_SPI_DC_HIGH
  9208  000E'                    l3489:
  9209                           
  9210                           ;main.c: 304:   SPI_CS_HIGH();
  9211  000E' 118A' 2000' 118A'  	fcall	_SPI_CS_HIGH
  9212  0011'                    l92:
  9213  0011' 0008               	return
  9214  0012'                    __end_of_sendCommand:
  9215                           
  9216                           	psect	text29
  9217  0000'                    __ptext29:	
  9218 ;; *************** function _spiWrite *****************
  9219 ;; Defined at:
  9220 ;;		line 358 in file "main.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;  b               1    wreg     unsigned char 
  9223 ;; Auto vars:     Size  Location     Type
  9224 ;;  b               1    0[COMMON] unsigned char 
  9225 ;;  bit             2    1[COMMON] int 
  9226 ;; Return value:  Size  Location     Type
  9227 ;;                  1    wreg      void 
  9228 ;; Registers used:
  9229 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9230 ;; Tracked objects:
  9231 ;;		On entry : 0/0
  9232 ;;		On exit  : 0/0
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9235 ;;      Params:         0       0       0       0
  9236 ;;      Locals:         3       0       0       0
  9237 ;;      Temps:          0       0       0       0
  9238 ;;      Totals:         3       0       0       0
  9239 ;;Total ram usage:        3 bytes
  9240 ;; Hardware stack levels used: 1
  9241 ;; Hardware stack levels required when called: 1
  9242 ;; This function calls:
  9243 ;;		_SPI_MOSI_HIGH
  9244 ;;		_SPI_MOSI_LOW
  9245 ;;		_SPI_SCK_HIGH
  9246 ;;		_SPI_SCK_LOW
  9247 ;; This function is called by:
  9248 ;;		_sendCommand
  9249 ;;		_sendCommand_and_8bit_Data
  9250 ;;		_sendCommand_and_16bit_Data
  9251 ;;		_writeCommand
  9252 ;;		_setAddrWindow
  9253 ;;		_my_setAddrWindow
  9254 ;; This function uses a non-reentrant model
  9255 ;;
  9256                           
  9257  0000'                    _spiWrite:	
  9258                           ;psect for function _spiWrite
  9259                           
  9260                           
  9261                           ;incstack = 0
  9262                           ; Regs used in _spiWrite: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9263                           ;spiWrite@b stored from wreg
  9264  0000' 0080'              	movwf	spiWrite@b
  9265  0001'                    l3377:
  9266                           
  9267                           ;main.c: 359:     int bit = 0;
  9268  0001' 0181'              	clrf	spiWrite@bit
  9269  0002' 0182'              	clrf	spiWrite@bit+1
  9270                           
  9271                           ;main.c: 361:     for (bit = 0; bit < 8; bit++) {
  9272  0003' 0181'              	clrf	spiWrite@bit
  9273  0004' 0182'              	clrf	spiWrite@bit+1
  9274  0005'                    l104:
  9275                           
  9276                           ;main.c: 362:       if (b & 0x80) {
  9277  0005' 1F80'              	btfss	spiWrite@b,7
  9278  0006' 2800'              	goto	u4441
  9279  0007' 2800'              	goto	u4440
  9280  0008'                    u4441:
  9281  0008' 2800'              	goto	l3385
  9282  0009'                    u4440:
  9283  0009'                    l3383:
  9284                           
  9285                           ;main.c: 363:         SPI_MOSI_HIGH();
  9286  0009' 118A' 2000' 118A'  	fcall	_SPI_MOSI_HIGH
  9287                           
  9288                           ;main.c: 364:       } else {
  9289  000C' 2800'              	goto	l107
  9290  000D'                    l3385:
  9291                           
  9292                           ;main.c: 365:         SPI_MOSI_LOW();
  9293  000D' 118A' 2000' 118A'  	fcall	_SPI_MOSI_LOW
  9294  0010'                    l107:	
  9295                           ;main.c: 366:       }
  9296                           
  9297                           
  9298                           ;main.c: 367:       SPI_SCK_HIGH();
  9299  0010' 118A' 2000' 118A'  	fcall	_SPI_SCK_HIGH
  9300  0013'                    l3387:
  9301                           
  9302                           ;main.c: 368:       b <<= 1;
  9303  0013' 1003               	clrc
  9304  0014' 0D80'              	rlf	spiWrite@b,f
  9305  0015'                    l3389:
  9306                           
  9307                           ;main.c: 369:       SPI_SCK_LOW();
  9308  0015' 118A' 2000' 118A'  	fcall	_SPI_SCK_LOW
  9309                           
  9310                           ;main.c: 370:     }
  9311  0018' 3001               	movlw	1
  9312  0019' 0781'              	addwf	spiWrite@bit,f
  9313  001A' 1803               	skipnc
  9314  001B' 0A82'              	incf	spiWrite@bit+1,f
  9315  001C' 3000               	movlw	0
  9316  001D' 0782'              	addwf	spiWrite@bit+1,f
  9317  001E'                    l3391:
  9318  001E' 0802'              	movf	spiWrite@bit+1,w
  9319  001F' 3A80               	xorlw	128
  9320  0020' 00FF               	movwf	btemp+1
  9321  0021' 3080               	movlw	128
  9322  0022' 027F               	subwf	btemp+1,w
  9323  0023' 1D03               	skipz
  9324  0024' 2800'              	goto	u4455
  9325  0025' 3008               	movlw	8
  9326  0026' 0201'              	subwf	spiWrite@bit,w
  9327  0027'                    u4455:
  9328  0027' 1C03               	skipc
  9329  0028' 2800'              	goto	u4451
  9330  0029' 2800'              	goto	u4450
  9331  002A'                    u4451:
  9332  002A' 2800'              	goto	l104
  9333  002B'                    u4450:
  9334  002B'                    l108:
  9335  002B' 0008               	return
  9336  002C'                    __end_of_spiWrite:
  9337                           
  9338                           	psect	text30
  9339  0000'                    __ptext30:	
  9340 ;; *************** function _SPI_SCK_LOW *****************
  9341 ;; Defined at:
  9342 ;;		line 254 in file "main.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;		None
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;		None
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      void 
  9349 ;; Registers used:
  9350 ;;		None
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9356 ;;      Params:         0       0       0       0
  9357 ;;      Locals:         0       0       0       0
  9358 ;;      Temps:          0       0       0       0
  9359 ;;      Totals:         0       0       0       0
  9360 ;;Total ram usage:        0 bytes
  9361 ;; Hardware stack levels used: 1
  9362 ;; This function calls:
  9363 ;;		Nothing
  9364 ;; This function is called by:
  9365 ;;		_spiWrite
  9366 ;;		_SPI_WRITE16
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370  0000'                    _SPI_SCK_LOW:	
  9371                           ;psect for function _SPI_SCK_LOW
  9372                           
  9373  0000'                    l3235:	
  9374                           ;incstack = 0
  9375                           ; Regs used in _SPI_SCK_LOW: []
  9376                           
  9377                           
  9378                           ;main.c: 255:     RC6 = 0;
  9379  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9380  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9381  0002' 1307               	bcf	7,6	;volatile
  9382  0003'                    l83:
  9383  0003' 0008               	return
  9384  0004'                    __end_of_SPI_SCK_LOW:
  9385                           
  9386                           	psect	text31
  9387  0000'                    __ptext31:	
  9388 ;; *************** function _SPI_SCK_HIGH *****************
  9389 ;; Defined at:
  9390 ;;		line 257 in file "main.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;		None
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;		None
  9395 ;; Return value:  Size  Location     Type
  9396 ;;                  1    wreg      void 
  9397 ;; Registers used:
  9398 ;;		None
  9399 ;; Tracked objects:
  9400 ;;		On entry : 0/0
  9401 ;;		On exit  : 0/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9404 ;;      Params:         0       0       0       0
  9405 ;;      Locals:         0       0       0       0
  9406 ;;      Temps:          0       0       0       0
  9407 ;;      Totals:         0       0       0       0
  9408 ;;Total ram usage:        0 bytes
  9409 ;; Hardware stack levels used: 1
  9410 ;; This function calls:
  9411 ;;		Nothing
  9412 ;; This function is called by:
  9413 ;;		_spiWrite
  9414 ;;		_SPI_WRITE16
  9415 ;; This function uses a non-reentrant model
  9416 ;;
  9417                           
  9418  0000'                    _SPI_SCK_HIGH:	
  9419                           ;psect for function _SPI_SCK_HIGH
  9420                           
  9421  0000'                    l3237:	
  9422                           ;incstack = 0
  9423                           ; Regs used in _SPI_SCK_HIGH: []
  9424                           
  9425                           
  9426                           ;main.c: 258:     RC6 = 1;
  9427  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9428  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9429  0002' 1707               	bsf	7,6	;volatile
  9430  0003'                    l86:
  9431  0003' 0008               	return
  9432  0004'                    __end_of_SPI_SCK_HIGH:
  9433                           
  9434                           	psect	text32
  9435  0000'                    __ptext32:	
  9436 ;; *************** function _SPI_MOSI_LOW *****************
  9437 ;; Defined at:
  9438 ;;		line 247 in file "main.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;		None
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;		None
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  1    wreg      void 
  9445 ;; Registers used:
  9446 ;;		None
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9452 ;;      Params:         0       0       0       0
  9453 ;;      Locals:         0       0       0       0
  9454 ;;      Temps:          0       0       0       0
  9455 ;;      Totals:         0       0       0       0
  9456 ;;Total ram usage:        0 bytes
  9457 ;; Hardware stack levels used: 1
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_spiWrite
  9462 ;;		_SPI_WRITE16
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466  0000'                    _SPI_MOSI_LOW:	
  9467                           ;psect for function _SPI_MOSI_LOW
  9468                           
  9469  0000'                    l3231:	
  9470                           ;incstack = 0
  9471                           ; Regs used in _SPI_MOSI_LOW: []
  9472                           
  9473                           
  9474                           ;main.c: 248:     RC4 = 0;
  9475  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9476  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9477  0002' 1207               	bcf	7,4	;volatile
  9478  0003'                    l77:
  9479  0003' 0008               	return
  9480  0004'                    __end_of_SPI_MOSI_LOW:
  9481                           
  9482                           	psect	text33
  9483  0000'                    __ptext33:	
  9484 ;; *************** function _SPI_MOSI_HIGH *****************
  9485 ;; Defined at:
  9486 ;;		line 250 in file "main.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;		None
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;		None
  9491 ;; Return value:  Size  Location     Type
  9492 ;;                  1    wreg      void 
  9493 ;; Registers used:
  9494 ;;		None
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/0
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9500 ;;      Params:         0       0       0       0
  9501 ;;      Locals:         0       0       0       0
  9502 ;;      Temps:          0       0       0       0
  9503 ;;      Totals:         0       0       0       0
  9504 ;;Total ram usage:        0 bytes
  9505 ;; Hardware stack levels used: 1
  9506 ;; This function calls:
  9507 ;;		Nothing
  9508 ;; This function is called by:
  9509 ;;		_spiWrite
  9510 ;;		_SPI_WRITE16
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514  0000'                    _SPI_MOSI_HIGH:	
  9515                           ;psect for function _SPI_MOSI_HIGH
  9516                           
  9517  0000'                    l3233:	
  9518                           ;incstack = 0
  9519                           ; Regs used in _SPI_MOSI_HIGH: []
  9520                           
  9521                           
  9522                           ;main.c: 251:     RC4 = 1;
  9523  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9524  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9525  0002' 1607               	bsf	7,4	;volatile
  9526  0003'                    l80:
  9527  0003' 0008               	return
  9528  0004'                    __end_of_SPI_MOSI_HIGH:
  9529                           
  9530                           	psect	text34
  9531  0000'                    __ptext34:	
  9532 ;; *************** function _init_Softwear_SPI *****************
  9533 ;; Defined at:
  9534 ;;		line 265 in file "main.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;		None
  9537 ;; Auto vars:     Size  Location     Type
  9538 ;;		None
  9539 ;; Return value:  Size  Location     Type
  9540 ;;                  1    wreg      void 
  9541 ;; Registers used:
  9542 ;;		wreg
  9543 ;; Tracked objects:
  9544 ;;		On entry : 0/0
  9545 ;;		On exit  : 0/0
  9546 ;;		Unchanged: 0/0
  9547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9548 ;;      Params:         0       0       0       0
  9549 ;;      Locals:         0       0       0       0
  9550 ;;      Temps:          2       0       0       0
  9551 ;;      Totals:         2       0       0       0
  9552 ;;Total ram usage:        2 bytes
  9553 ;; Hardware stack levels used: 1
  9554 ;; This function calls:
  9555 ;;		Nothing
  9556 ;; This function is called by:
  9557 ;;		_main
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561  0000'                    _init_Softwear_SPI:	
  9562                           ;psect for function _init_Softwear_SPI
  9563                           
  9564  0000'                    l3471:	
  9565                           ;incstack = 0
  9566                           ; Regs used in _init_Softwear_SPI: [wreg]
  9567                           
  9568                           
  9569                           ;main.c: 266:     TRISB0 = 0;
  9570  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  9571  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  9572  0002' 1006               	bcf	6,0	;volatile
  9573                           
  9574                           ;main.c: 267:     RB0 = 1;
  9575  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  9576  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  9577  0005' 1406               	bsf	6,0	;volatile
  9578                           
  9579                           ;main.c: 269:     TRISB2 = 0;
  9580  0006' 1683               	bsf	3,5	;RP0=1, select bank1
  9581  0007' 1303               	bcf	3,6	;RP1=0, select bank1
  9582  0008' 1106               	bcf	6,2	;volatile
  9583                           
  9584                           ;main.c: 270:     RB2 = 1;
  9585  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  9586  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  9587  000B' 1506               	bsf	6,2	;volatile
  9588                           
  9589                           ;main.c: 272:     TRISC6 = 0;
  9590  000C' 1683               	bsf	3,5	;RP0=1, select bank1
  9591  000D' 1303               	bcf	3,6	;RP1=0, select bank1
  9592  000E' 1307               	bcf	7,6	;volatile
  9593                           
  9594                           ;main.c: 273:     RC6 = 0;
  9595  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  9596  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  9597  0011' 1307               	bcf	7,6	;volatile
  9598                           
  9599                           ;main.c: 275:     TRISC4 = 0;
  9600  0012' 1683               	bsf	3,5	;RP0=1, select bank1
  9601  0013' 1303               	bcf	3,6	;RP1=0, select bank1
  9602  0014' 1207               	bcf	7,4	;volatile
  9603                           
  9604                           ;main.c: 276:     RC4 = 0;
  9605  0015' 1283               	bcf	3,5	;RP0=0, select bank0
  9606  0016' 1303               	bcf	3,6	;RP1=0, select bank0
  9607  0017' 1207               	bcf	7,4	;volatile
  9608                           
  9609                           ;main.c: 279:     TRISB1 = 0;
  9610  0018' 1683               	bsf	3,5	;RP0=1, select bank1
  9611  0019' 1303               	bcf	3,6	;RP1=0, select bank1
  9612  001A' 1086               	bcf	6,1	;volatile
  9613                           
  9614                           ;main.c: 280:     RB1 = 1;
  9615  001B' 1283               	bcf	3,5	;RP0=0, select bank0
  9616  001C' 1303               	bcf	3,6	;RP1=0, select bank0
  9617  001D' 1486               	bsf	6,1	;volatile
  9618  001E'                    l3473:
  9619                           
  9620                           ;main.c: 281:      _delay((unsigned long)((5)*(20000000/4000.0)));
  9621  001E' 3021               	movlw	33
  9622  001F' 0081'              	movwf	??_init_Softwear_SPI+1
  9623  0020' 3076               	movlw	118
  9624  0021' 0080'              	movwf	??_init_Softwear_SPI
  9625  0022'                    u6937:
  9626  0022' 0B80'              	decfsz	??_init_Softwear_SPI,f
  9627  0023' 2800'              	goto	u6937
  9628  0024' 0B81'              	decfsz	??_init_Softwear_SPI+1,f
  9629  0025' 2800'              	goto	u6937
  9630  0026' 0000               	nop
  9631  0027'                    l3475:
  9632                           
  9633                           ;main.c: 283:     TRISB4 = 0;
  9634  0027' 1683               	bsf	3,5	;RP0=1, select bank1
  9635  0028' 1303               	bcf	3,6	;RP1=0, select bank1
  9636  0029' 1206               	bcf	6,4	;volatile
  9637  002A'                    l3477:
  9638                           
  9639                           ;main.c: 284:     RB4 = 1;
  9640  002A' 1283               	bcf	3,5	;RP0=0, select bank0
  9641  002B' 1303               	bcf	3,6	;RP1=0, select bank0
  9642  002C' 1606               	bsf	6,4	;volatile
  9643                           
  9644                           ;main.c: 285:     _delay((unsigned long)((1)*(20000000/4000.0)));
  9645  002D' 3007               	movlw	7
  9646  002E' 0081'              	movwf	??_init_Softwear_SPI+1
  9647  002F' 307D               	movlw	125
  9648  0030' 0080'              	movwf	??_init_Softwear_SPI
  9649  0031'                    u6947:
  9650  0031' 0B80'              	decfsz	??_init_Softwear_SPI,f
  9651  0032' 2800'              	goto	u6947
  9652  0033' 0B81'              	decfsz	??_init_Softwear_SPI+1,f
  9653  0034' 2800'              	goto	u6947
  9654  0035'                    l3479:
  9655                           
  9656                           ;main.c: 288:     RB1 = 0;
  9657  0035' 1283               	bcf	3,5	;RP0=0, select bank0
  9658  0036' 1303               	bcf	3,6	;RP1=0, select bank0
  9659  0037' 1086               	bcf	6,1	;volatile
  9660                           
  9661                           ;main.c: 289:     _delay((unsigned long)((2)*(20000000/4000000.0)));
  9662  0038' 3003               	movlw	3
  9663  0039' 0080'              	movwf	??_init_Softwear_SPI
  9664  003A'                    u6957:
  9665  003A' 0B80'              	decfsz	??_init_Softwear_SPI,f
  9666  003B' 2800'              	goto	u6957
  9667  003C'                    l3481:
  9668                           
  9669                           ;main.c: 290:     RB1 = 1;
  9670  003C' 1283               	bcf	3,5	;RP0=0, select bank0
  9671  003D' 1303               	bcf	3,6	;RP1=0, select bank0
  9672  003E' 1486               	bsf	6,1	;volatile
  9673  003F'                    l89:
  9674  003F' 0008               	return
  9675  0040'                    __end_of_init_Softwear_SPI:
  9676                           
  9677                           	psect	text35
  9678  0000'                    __ptext35:	
  9679 ;; *************** function _init_Hardwear_SPI *****************
  9680 ;; Defined at:
  9681 ;;		line 580 in file "main.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;		None
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;		None
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      void 
  9688 ;; Registers used:
  9689 ;;		None
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9695 ;;      Params:         0       0       0       0
  9696 ;;      Locals:         0       0       0       0
  9697 ;;      Temps:          0       0       0       0
  9698 ;;      Totals:         0       0       0       0
  9699 ;;Total ram usage:        0 bytes
  9700 ;; Hardware stack levels used: 1
  9701 ;; This function calls:
  9702 ;;		Nothing
  9703 ;; This function is called by:
  9704 ;;		_main
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708  0000'                    _init_Hardwear_SPI:	
  9709                           ;psect for function _init_Hardwear_SPI
  9710                           
  9711  0000'                    l3545:	
  9712                           ;incstack = 0
  9713                           ; Regs used in _init_Hardwear_SPI: []
  9714                           
  9715                           
  9716                           ;main.c: 583:     TRISC7 = 1;
  9717  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  9718  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  9719  0002' 1787               	bsf	7,7	;volatile
  9720                           
  9721                           ;main.c: 584:     RC7 = 0;
  9722  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  9723  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  9724  0005' 1387               	bcf	7,7	;volatile
  9725                           
  9726                           ;main.c: 588:     SSPCONbits.SSPEN = 0;
  9727  0006' 1294               	bcf	20,5	;volatile
  9728                           
  9729                           ;main.c: 599:     SSPSTATbits.CKE = 1;
  9730  0007' 1683               	bsf	3,5	;RP0=1, select bank1
  9731  0008' 1303               	bcf	3,6	;RP1=0, select bank1
  9732  0009' 1714               	bsf	20,6	;volatile
  9733                           
  9734                           ;main.c: 600:     SSPSTATbits.SMP = 0;
  9735  000A' 1394               	bcf	20,7	;volatile
  9736                           
  9737                           ;main.c: 602:     SSPCONbits.SSPEN = 1;
  9738  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  9739  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  9740  000D' 1694               	bsf	20,5	;volatile
  9741  000E'                    l170:
  9742  000E' 0008               	return
  9743  000F'                    __end_of_init_Hardwear_SPI:
  9744                           
  9745                           	psect	text36
  9746  0000'                    __ptext36:	
  9747 ;; *************** function _drawFastHLine_Hard *****************
  9748 ;; Defined at:
  9749 ;;		line 668 in file "main.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  start_x         1    wreg     char 
  9752 ;;  length          1   10[COMMON] char 
  9753 ;;  in_HLine_y      1   11[COMMON] char 
  9754 ;;  color           2   12[COMMON] unsigned int 
  9755 ;; Auto vars:     Size  Location     Type
  9756 ;;  start_x         1    6[BANK0 ] char 
  9757 ;;  x_colum_hori    2    4[BANK0 ] int 
  9758 ;;  x2              1    3[BANK0 ] unsigned char 
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  1    wreg      void 
  9761 ;; Registers used:
  9762 ;;		wreg, status,2, status,0, pclath, cstack
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9768 ;;      Params:         4       0       0       0
  9769 ;;      Locals:         0       4       0       0
  9770 ;;      Temps:          0       3       0       0
  9771 ;;      Totals:         4       7       0       0
  9772 ;;Total ram usage:       11 bytes
  9773 ;; Hardware stack levels used: 1
  9774 ;; Hardware stack levels required when called: 3
  9775 ;; This function calls:
  9776 ;;		_SPI_CS_HIGH
  9777 ;;		_SPI_CS_LOW
  9778 ;;		_SPI_WRITE16_Hard
  9779 ;;		_my_setAddrWindow_Hard
  9780 ;; This function is called by:
  9781 ;;		_main
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785  0000'                    _drawFastHLine_Hard:	
  9786                           ;psect for function _drawFastHLine_Hard
  9787                           
  9788                           
  9789                           ;incstack = 0
  9790                           ; Regs used in _drawFastHLine_Hard: [wreg+status,2+status,0+pclath+cstack]
  9791                           ;drawFastHLine_Hard@start_x stored from wreg
  9792  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9793  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9794  0002' 0086'              	movwf	drawFastHLine_Hard@start_x
  9795  0003'                    l3587:
  9796                           
  9797                           ;main.c: 669:     SPI_CS_LOW();
  9798  0003' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  9799  0006'                    l3589:
  9800                           
  9801                           ;main.c: 671:     uint8_t x2 = start_x + length - 1;
  9802  0006' 080A'              	movf	drawFastHLine_Hard@length,w
  9803  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  9804  0008' 1303               	bcf	3,6	;RP1=0, select bank0
  9805  0009' 0706'              	addwf	drawFastHLine_Hard@start_x,w
  9806  000A' 3EFF               	addlw	255
  9807  000B' 0083'              	movwf	drawFastHLine_Hard@x2
  9808  000C'                    l3591:
  9809                           
  9810                           ;main.c: 672:     my_setAddrWindow_Hard(start_x, in_HLine_y, x2, in_HLine_y);
  9811  000C' 0806'              	movf	drawFastHLine_Hard@start_x,w
  9812  000D' 0082'              	movwf	my_setAddrWindow_Hard@x_start
  9813  000E' 0183'              	clrf	my_setAddrWindow_Hard@x_start+1
  9814  000F' 1B82'              	btfsc	my_setAddrWindow_Hard@x_start,7
  9815  0010' 0383'              	decf	my_setAddrWindow_Hard@x_start+1,f
  9816  0011' 080B'              	movf	drawFastHLine_Hard@in_HLine_y,w
  9817  0012' 0084'              	movwf	my_setAddrWindow_Hard@y_start
  9818  0013' 0185'              	clrf	my_setAddrWindow_Hard@y_start+1
  9819  0014' 1B84'              	btfsc	my_setAddrWindow_Hard@y_start,7
  9820  0015' 0385'              	decf	my_setAddrWindow_Hard@y_start+1,f
  9821  0016' 0803'              	movf	drawFastHLine_Hard@x2,w
  9822  0017' 0080'              	movwf	??_drawFastHLine_Hard
  9823  0018' 0181'              	clrf	??_drawFastHLine_Hard+1
  9824  0019' 0800'              	movf	??_drawFastHLine_Hard,w
  9825  001A' 0086'              	movwf	my_setAddrWindow_Hard@x_finish
  9826  001B' 0801'              	movf	??_drawFastHLine_Hard+1,w
  9827  001C' 0087'              	movwf	my_setAddrWindow_Hard@x_finish+1
  9828  001D' 080B'              	movf	drawFastHLine_Hard@in_HLine_y,w
  9829  001E' 0088'              	movwf	my_setAddrWindow_Hard@y_finish
  9830  001F' 0189'              	clrf	my_setAddrWindow_Hard@y_finish+1
  9831  0020' 1B88'              	btfsc	my_setAddrWindow_Hard@y_finish,7
  9832  0021' 0389'              	decf	my_setAddrWindow_Hard@y_finish+1,f
  9833  0022' 118A' 2000' 118A'  	fcall	_my_setAddrWindow_Hard
  9834  0025'                    l3593:
  9835  0025'                    l3595:
  9836                           
  9837                           ;main.c: 675:     for(x_colum_horizontal = 0; x_colum_horizontal < length; x_colum_horiz
      +                          ontal++) {
  9838  0025' 1283               	bcf	3,5	;RP0=0, select bank0
  9839  0026' 1303               	bcf	3,6	;RP1=0, select bank0
  9840  0027' 0184'              	clrf	drawFastHLine_Hard@x_colum_horizontal
  9841  0028' 0185'              	clrf	drawFastHLine_Hard@x_colum_horizontal+1
  9842  0029' 2800'              	goto	l3601
  9843  002A'                    l3597:
  9844                           
  9845                           ;main.c: 676:         SPI_WRITE16_Hard(color);
  9846  002A' 080D'              	movf	drawFastHLine_Hard@color+1,w
  9847  002B' 0082'              	movwf	SPI_WRITE16_Hard@w+1
  9848  002C' 080C'              	movf	drawFastHLine_Hard@color,w
  9849  002D' 0081'              	movwf	SPI_WRITE16_Hard@w
  9850  002E' 118A' 2000' 118A'  	fcall	_SPI_WRITE16_Hard
  9851  0031'                    l3599:
  9852                           
  9853                           ;main.c: 677:     }
  9854  0031' 3001               	movlw	1
  9855  0032' 1283               	bcf	3,5	;RP0=0, select bank0
  9856  0033' 1303               	bcf	3,6	;RP1=0, select bank0
  9857  0034' 0784'              	addwf	drawFastHLine_Hard@x_colum_horizontal,f
  9858  0035' 1803               	skipnc
  9859  0036' 0A85'              	incf	drawFastHLine_Hard@x_colum_horizontal+1,f
  9860  0037' 3000               	movlw	0
  9861  0038' 0785'              	addwf	drawFastHLine_Hard@x_colum_horizontal+1,f
  9862  0039'                    l3601:
  9863  0039' 080A'              	movf	drawFastHLine_Hard@length,w
  9864  003A' 0080'              	movwf	??_drawFastHLine_Hard
  9865  003B' 0181'              	clrf	??_drawFastHLine_Hard+1
  9866  003C' 1B80'              	btfsc	??_drawFastHLine_Hard,7
  9867  003D' 0381'              	decf	??_drawFastHLine_Hard+1,f
  9868  003E' 0805'              	movf	drawFastHLine_Hard@x_colum_horizontal+1,w
  9869  003F' 3A80               	xorlw	128
  9870  0040' 0082'              	movwf	??_drawFastHLine_Hard+2
  9871  0041' 0801'              	movf	??_drawFastHLine_Hard+1,w
  9872  0042' 3A80               	xorlw	128
  9873  0043' 0202'              	subwf	??_drawFastHLine_Hard+2,w
  9874  0044' 1D03               	skipz
  9875  0045' 2800'              	goto	u4595
  9876  0046' 0800'              	movf	??_drawFastHLine_Hard,w
  9877  0047' 0204'              	subwf	drawFastHLine_Hard@x_colum_horizontal,w
  9878  0048'                    u4595:
  9879  0048' 1C03               	skipc
  9880  0049' 2800'              	goto	u4591
  9881  004A' 2800'              	goto	u4590
  9882  004B'                    u4591:
  9883  004B' 2800'              	goto	l3597
  9884  004C'                    u4590:
  9885  004C'                    l3603:
  9886                           
  9887                           ;main.c: 679:     SPI_CS_HIGH();
  9888  004C' 118A' 2000' 118A'  	fcall	_SPI_CS_HIGH
  9889  004F'                    l204:
  9890  004F' 0008               	return
  9891  0050'                    __end_of_drawFastHLine_Hard:
  9892                           
  9893                           	psect	text37
  9894  0000'                    __ptext37:	
  9895 ;; *************** function _my_setAddrWindow_Hard *****************
  9896 ;; Defined at:
  9897 ;;		line 643 in file "main.c"
  9898 ;; Parameters:    Size  Location     Type
  9899 ;;  x_start         2    2[COMMON] unsigned int 
  9900 ;;  y_start         2    4[COMMON] unsigned int 
  9901 ;;  x_finish        2    6[COMMON] unsigned int 
  9902 ;;  y_finish        2    8[COMMON] unsigned int 
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;		None
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  1    wreg      void 
  9907 ;; Registers used:
  9908 ;;		wreg, status,2, status,0, pclath, cstack
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/0
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9914 ;;      Params:         8       0       0       0
  9915 ;;      Locals:         0       0       0       0
  9916 ;;      Temps:          0       0       0       0
  9917 ;;      Totals:         8       0       0       0
  9918 ;;Total ram usage:        8 bytes
  9919 ;; Hardware stack levels used: 1
  9920 ;; Hardware stack levels required when called: 2
  9921 ;; This function calls:
  9922 ;;		_spi_send_recv
  9923 ;;		_writeCommand_Hard
  9924 ;; This function is called by:
  9925 ;;		_setAllDisplayPixels_Hard
  9926 ;;		_drawFastHLine_Hard
  9927 ;;		_drawFastVLine_Hard
  9928 ;; This function uses a non-reentrant model
  9929 ;;
  9930                           
  9931  0000'                    _my_setAddrWindow_Hard:	
  9932                           ;psect for function _my_setAddrWindow_Hard
  9933                           
  9934  0000'                    l3437:	
  9935                           ;incstack = 0
  9936                           ; Regs used in _my_setAddrWindow_Hard: [wreg+status,2+status,0+pclath+cstack]
  9937                           
  9938                           
  9939                           ;main.c: 644:     writeCommand_Hard(0x15);
  9940  0000' 3015               	movlw	21
  9941  0001' 118A' 2000' 118A'  	fcall	_writeCommand_Hard
  9942                           
  9943                           ;main.c: 645:     spi_send_recv(x_start);
  9944  0004' 0802'              	movf	my_setAddrWindow_Hard@x_start,w
  9945  0005' 118A' 2000' 118A'  	fcall	_spi_send_recv
  9946                           
  9947                           ;main.c: 646:     spi_send_recv(x_finish);
  9948  0008' 0806'              	movf	my_setAddrWindow_Hard@x_finish,w
  9949  0009' 118A' 2000' 118A'  	fcall	_spi_send_recv
  9950                           
  9951                           ;main.c: 647:     writeCommand_Hard(0x75);
  9952  000C' 3075               	movlw	117
  9953  000D' 118A' 2000' 118A'  	fcall	_writeCommand_Hard
  9954                           
  9955                           ;main.c: 648:     spi_send_recv(y_start);
  9956  0010' 0804'              	movf	my_setAddrWindow_Hard@y_start,w
  9957  0011' 118A' 2000' 118A'  	fcall	_spi_send_recv
  9958                           
  9959                           ;main.c: 649:     spi_send_recv(y_finish);
  9960  0014' 0808'              	movf	my_setAddrWindow_Hard@y_finish,w
  9961  0015' 118A' 2000' 118A'  	fcall	_spi_send_recv
  9962                           
  9963                           ;main.c: 650:     writeCommand_Hard(0x5C);
  9964  0018' 305C               	movlw	92
  9965  0019' 118A' 2000' 118A'  	fcall	_writeCommand_Hard
  9966  001C'                    l191:
  9967  001C' 0008               	return
  9968  001D'                    __end_of_my_setAddrWindow_Hard:
  9969                           
  9970                           	psect	text38
  9971  0000'                    __ptext38:	
  9972 ;; *************** function _writeCommand_Hard *****************
  9973 ;; Defined at:
  9974 ;;		line 615 in file "main.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;  cmd             1    wreg     unsigned char 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;  cmd             1    1[COMMON] unsigned char 
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1    wreg      void 
  9981 ;; Registers used:
  9982 ;;		wreg, status,2, status,0, pclath, cstack
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9988 ;;      Params:         0       0       0       0
  9989 ;;      Locals:         1       0       0       0
  9990 ;;      Temps:          0       0       0       0
  9991 ;;      Totals:         1       0       0       0
  9992 ;;Total ram usage:        1 bytes
  9993 ;; Hardware stack levels used: 1
  9994 ;; Hardware stack levels required when called: 1
  9995 ;; This function calls:
  9996 ;;		_SPI_DC_HIGH
  9997 ;;		_SPI_DC_LOW
  9998 ;;		_spi_send_recv
  9999 ;; This function is called by:
 10000 ;;		_my_setAddrWindow_Hard
 10001 ;;		_setAddrWindow_Hard
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005  0000'                    _writeCommand_Hard:	
 10006                           ;psect for function _writeCommand_Hard
 10007                           
 10008                           
 10009                           ;incstack = 0
 10010                           ; Regs used in _writeCommand_Hard: [wreg+status,2+status,0+pclath+cstack]
 10011                           ;writeCommand_Hard@cmd stored from wreg
 10012  0000' 0081'              	movwf	writeCommand_Hard@cmd
 10013  0001'                    l3393:
 10014                           
 10015                           ;main.c: 616:   SPI_DC_LOW();
 10016  0001' 118A' 2000' 118A'  	fcall	_SPI_DC_LOW
 10017  0004'                    l3395:
 10018                           
 10019                           ;main.c: 617:   spi_send_recv(cmd);
 10020  0004' 0801'              	movf	writeCommand_Hard@cmd,w
 10021  0005' 118A' 2000' 118A'  	fcall	_spi_send_recv
 10022  0008'                    l3397:
 10023                           
 10024                           ;main.c: 618:   SPI_DC_HIGH();
 10025  0008' 118A' 2000' 118A'  	fcall	_SPI_DC_HIGH
 10026  000B'                    l176:
 10027  000B' 0008               	return
 10028  000C'                    __end_of_writeCommand_Hard:
 10029                           
 10030                           	psect	text39
 10031  0000'                    __ptext39:	
 10032 ;; *************** function _SPI_DC_LOW *****************
 10033 ;; Defined at:
 10034 ;;		line 240 in file "main.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;		None
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;		None
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      void 
 10041 ;; Registers used:
 10042 ;;		None
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10048 ;;      Params:         0       0       0       0
 10049 ;;      Locals:         0       0       0       0
 10050 ;;      Temps:          0       0       0       0
 10051 ;;      Totals:         0       0       0       0
 10052 ;;Total ram usage:        0 bytes
 10053 ;; Hardware stack levels used: 1
 10054 ;; This function calls:
 10055 ;;		Nothing
 10056 ;; This function is called by:
 10057 ;;		_sendCommand
 10058 ;;		_sendCommand_and_8bit_Data
 10059 ;;		_sendCommand_Hard
 10060 ;;		_writeCommand_Hard
 10061 ;;		_sendCommand_and_16bit_Data
 10062 ;;		_writeCommand
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           
 10066  0000'                    _SPI_DC_LOW:	
 10067                           ;psect for function _SPI_DC_LOW
 10068                           
 10069  0000'                    l3227:	
 10070                           ;incstack = 0
 10071                           ; Regs used in _SPI_DC_LOW: []
 10072                           
 10073                           
 10074                           ;main.c: 241:     RB2 = 0;
 10075  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10076  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10077  0002' 1106               	bcf	6,2	;volatile
 10078  0003'                    l71:
 10079  0003' 0008               	return
 10080  0004'                    __end_of_SPI_DC_LOW:
 10081                           
 10082                           	psect	text40
 10083  0000'                    __ptext40:	
 10084 ;; *************** function _SPI_DC_HIGH *****************
 10085 ;; Defined at:
 10086 ;;		line 243 in file "main.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;		None
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;		None
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  1    wreg      void 
 10093 ;; Registers used:
 10094 ;;		None
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/0
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10100 ;;      Params:         0       0       0       0
 10101 ;;      Locals:         0       0       0       0
 10102 ;;      Temps:          0       0       0       0
 10103 ;;      Totals:         0       0       0       0
 10104 ;;Total ram usage:        0 bytes
 10105 ;; Hardware stack levels used: 1
 10106 ;; This function calls:
 10107 ;;		Nothing
 10108 ;; This function is called by:
 10109 ;;		_sendCommand
 10110 ;;		_sendCommand_and_8bit_Data
 10111 ;;		_sendCommand_Hard
 10112 ;;		_writeCommand_Hard
 10113 ;;		_sendCommand_and_16bit_Data
 10114 ;;		_writeCommand
 10115 ;; This function uses a non-reentrant model
 10116 ;;
 10117                           
 10118  0000'                    _SPI_DC_HIGH:	
 10119                           ;psect for function _SPI_DC_HIGH
 10120                           
 10121  0000'                    l3229:	
 10122                           ;incstack = 0
 10123                           ; Regs used in _SPI_DC_HIGH: []
 10124                           
 10125                           
 10126                           ;main.c: 244:     RB2 = 1;
 10127  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10128  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10129  0002' 1506               	bsf	6,2	;volatile
 10130  0003'                    l74:
 10131  0003' 0008               	return
 10132  0004'                    __end_of_SPI_DC_HIGH:
 10133                           
 10134                           	psect	text41
 10135  0000'                    __ptext41:	
 10136 ;; *************** function _SPI_WRITE16_Hard *****************
 10137 ;; Defined at:
 10138 ;;		line 625 in file "main.c"
 10139 ;; Parameters:    Size  Location     Type
 10140 ;;  w               2    1[COMMON] unsigned int 
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;  second_B        1    4[COMMON] unsigned char 
 10143 ;;  first_B         1    3[COMMON] unsigned char 
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  1    wreg      void 
 10146 ;; Registers used:
 10147 ;;		wreg, status,2, status,0, pclath, cstack
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10153 ;;      Params:         2       0       0       0
 10154 ;;      Locals:         2       0       0       0
 10155 ;;      Temps:          0       0       0       0
 10156 ;;      Totals:         4       0       0       0
 10157 ;;Total ram usage:        4 bytes
 10158 ;; Hardware stack levels used: 1
 10159 ;; Hardware stack levels required when called: 1
 10160 ;; This function calls:
 10161 ;;		_spi_send_recv
 10162 ;; This function is called by:
 10163 ;;		_setAllDisplayPixels_Hard
 10164 ;;		_drawFastHLine_Hard
 10165 ;;		_drawFastVLine_Hard
 10166 ;;		_drawPixel_Hard
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170  0000'                    _SPI_WRITE16_Hard:	
 10171                           ;psect for function _SPI_WRITE16_Hard
 10172                           
 10173  0000'                    l3413:	
 10174                           ;incstack = 0
 10175                           ; Regs used in _SPI_WRITE16_Hard: [wreg+status,2+status,0+pclath+cstack]
 10176                           
 10177                           
 10178                           ;main.c: 626:     uint8_t first_B = ((w >> 8) & 0xFF) ;
 10179  0000' 0802'              	movf	SPI_WRITE16_Hard@w+1,w
 10180  0001' 0083'              	movwf	SPI_WRITE16_Hard@first_B
 10181  0002'                    l3415:
 10182                           
 10183                           ;main.c: 627:     uint8_t second_B = w & 0xFF;
 10184  0002' 0801'              	movf	SPI_WRITE16_Hard@w,w
 10185  0003' 0084'              	movwf	SPI_WRITE16_Hard@second_B
 10186  0004'                    l3417:
 10187                           
 10188                           ;main.c: 628:     spi_send_recv(first_B);
 10189  0004' 0803'              	movf	SPI_WRITE16_Hard@first_B,w
 10190  0005' 118A' 2000' 118A'  	fcall	_spi_send_recv
 10191  0008'                    l3419:
 10192                           
 10193                           ;main.c: 629:     spi_send_recv(second_B);
 10194  0008' 0804'              	movf	SPI_WRITE16_Hard@second_B,w
 10195  0009' 118A' 2000' 118A'  	fcall	_spi_send_recv
 10196  000C'                    l185:
 10197  000C' 0008               	return
 10198  000D'                    __end_of_SPI_WRITE16_Hard:
 10199                           
 10200                           	psect	text42
 10201  0000'                    __ptext42:	
 10202 ;; *************** function _spi_send_recv *****************
 10203 ;; Defined at:
 10204 ;;		line 620 in file "main.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;  data            1    wreg     unsigned char 
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;  data            1    0[COMMON] unsigned char 
 10209 ;; Return value:  Size  Location     Type
 10210 ;;                  1    wreg      void 
 10211 ;; Registers used:
 10212 ;;		wreg
 10213 ;; Tracked objects:
 10214 ;;		On entry : 0/0
 10215 ;;		On exit  : 0/0
 10216 ;;		Unchanged: 0/0
 10217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10218 ;;      Params:         0       0       0       0
 10219 ;;      Locals:         1       0       0       0
 10220 ;;      Temps:          0       0       0       0
 10221 ;;      Totals:         1       0       0       0
 10222 ;;Total ram usage:        1 bytes
 10223 ;; Hardware stack levels used: 1
 10224 ;; This function calls:
 10225 ;;		Nothing
 10226 ;; This function is called by:
 10227 ;;		_sendCommand_Hard
 10228 ;;		_writeCommand_Hard
 10229 ;;		_SPI_WRITE16_Hard
 10230 ;;		_my_setAddrWindow_Hard
 10231 ;;		_setAddrWindow_Hard
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235  0000'                    _spi_send_recv:	
 10236                           ;psect for function _spi_send_recv
 10237                           
 10238                           
 10239                           ;incstack = 0
 10240                           ; Regs used in _spi_send_recv: [wreg]
 10241                           ;spi_send_recv@data stored from wreg
 10242  0000' 0080'              	movwf	spi_send_recv@data
 10243  0001'                    l3239:
 10244                           
 10245                           ;main.c: 621:     SSPBUF = data;
 10246  0001' 0800'              	movf	spi_send_recv@data,w
 10247  0002' 1283               	bcf	3,5	;RP0=0, select bank0
 10248  0003' 1303               	bcf	3,6	;RP1=0, select bank0
 10249  0004' 0093               	movwf	19	;volatile
 10250  0005'                    l179:	
 10251                           ;main.c: 622:     while(SSPSTATbits.BF == 1);
 10252                           
 10253  0005' 1683               	bsf	3,5	;RP0=1, select bank1
 10254  0006' 1303               	bcf	3,6	;RP1=0, select bank1
 10255  0007' 1814               	btfsc	20,0	;volatile
 10256  0008' 2800'              	goto	u4171
 10257  0009' 2800'              	goto	u4170
 10258  000A'                    u4171:
 10259  000A' 2800'              	goto	l179
 10260  000B'                    u4170:
 10261  000B'                    l182:
 10262  000B' 0008               	return
 10263  000C'                    __end_of_spi_send_recv:
 10264                           
 10265                           	psect	text43
 10266  0000'                    __ptext43:	
 10267 ;; *************** function _SPI_CS_LOW *****************
 10268 ;; Defined at:
 10269 ;;		line 233 in file "main.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;		None
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;		None
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  1    wreg      void 
 10276 ;; Registers used:
 10277 ;;		None
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10283 ;;      Params:         0       0       0       0
 10284 ;;      Locals:         0       0       0       0
 10285 ;;      Temps:          0       0       0       0
 10286 ;;      Totals:         0       0       0       0
 10287 ;;Total ram usage:        0 bytes
 10288 ;; Hardware stack levels used: 1
 10289 ;; This function calls:
 10290 ;;		Nothing
 10291 ;; This function is called by:
 10292 ;;		_sendCommand
 10293 ;;		_sendCommand_and_8bit_Data
 10294 ;;		_sendCommand_Hard
 10295 ;;		_setAllDisplayPixels_Hard
 10296 ;;		_drawFastHLine_Hard
 10297 ;;		_startWrite
 10298 ;;		_sendCommand_and_16bit_Data
 10299 ;;		_setAllDisplayPixels
 10300 ;;		_drawPixel
 10301 ;;		_drawFastHLine
 10302 ;;		_drawFastVLine
 10303 ;;		_drawFastVLine_Hard
 10304 ;;		_drawPixel_Hard
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           
 10308  0000'                    _SPI_CS_LOW:	
 10309                           ;psect for function _SPI_CS_LOW
 10310                           
 10311  0000'                    l3373:	
 10312                           ;incstack = 0
 10313                           ; Regs used in _SPI_CS_LOW: []
 10314                           
 10315                           
 10316                           ;main.c: 234:     RB0 = 0;
 10317  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10318  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10319  0002' 1006               	bcf	6,0	;volatile
 10320  0003'                    l65:
 10321  0003' 0008               	return
 10322  0004'                    __end_of_SPI_CS_LOW:
 10323                           
 10324                           	psect	text44
 10325  0000'                    __ptext44:	
 10326 ;; *************** function _SPI_CS_HIGH *****************
 10327 ;; Defined at:
 10328 ;;		line 236 in file "main.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;		None
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      void 
 10335 ;; Registers used:
 10336 ;;		None
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10342 ;;      Params:         0       0       0       0
 10343 ;;      Locals:         0       0       0       0
 10344 ;;      Temps:          0       0       0       0
 10345 ;;      Totals:         0       0       0       0
 10346 ;;Total ram usage:        0 bytes
 10347 ;; Hardware stack levels used: 1
 10348 ;; This function calls:
 10349 ;;		Nothing
 10350 ;; This function is called by:
 10351 ;;		_sendCommand
 10352 ;;		_sendCommand_and_8bit_Data
 10353 ;;		_sendCommand_Hard
 10354 ;;		_setAllDisplayPixels_Hard
 10355 ;;		_drawFastHLine_Hard
 10356 ;;		_endWrite
 10357 ;;		_sendCommand_and_16bit_Data
 10358 ;;		_setAllDisplayPixels
 10359 ;;		_drawPixel
 10360 ;;		_drawFastHLine
 10361 ;;		_drawFastVLine
 10362 ;;		_drawFastVLine_Hard
 10363 ;;		_drawPixel_Hard
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367  0000'                    _SPI_CS_HIGH:	
 10368                           ;psect for function _SPI_CS_HIGH
 10369                           
 10370  0000'                    l3375:	
 10371                           ;incstack = 0
 10372                           ; Regs used in _SPI_CS_HIGH: []
 10373                           
 10374                           
 10375                           ;main.c: 237:     RB0 = 1;
 10376  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10377  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10378  0002' 1406               	bsf	6,0	;volatile
 10379  0003'                    l68:
 10380  0003' 0008               	return
 10381  0004'                    __end_of_SPI_CS_HIGH:
 10382  007E                     btemp	set	126	;btemp
 10383  007E                     wtemp0	set	126
 10384                           
 10385                           	psect	idloc
 10386                           
 10387                           ;Config register IDLOC0 @ 0x2000
 10388                           ;	unspecified, using default values
 10389  2000                     	org	8192
 10390  2000  3FFF               	dw	16383
 10391                           
 10392                           ;Config register IDLOC1 @ 0x2001
 10393                           ;	unspecified, using default values
 10394  2001                     	org	8193
 10395  2001  3FFF               	dw	16383
 10396                           
 10397                           ;Config register IDLOC2 @ 0x2002
 10398                           ;	unspecified, using default values
 10399  2002                     	org	8194
 10400  2002  3FFF               	dw	16383
 10401                           
 10402                           ;Config register IDLOC3 @ 0x2003
 10403                           ;	unspecified, using default values
 10404  2003                     	org	8195
 10405  2003  3FFF               	dw	16383
 10406                           
 10407                           	psect	config
 10408                           
 10409                           ;Config register CONFIG @ 0x2007
 10410                           ;	Oscillator Selection bits
 10411                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT/T1OSO pin, I/O f
      +                          unction on RA7/OSC1/CLKIN/T1OSI
 10412                           ;	Watchdog Timer Enable bit
 10413                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10414                           ;	Power Up Timer Enable bit
 10415                           ;	PWRTE = ON, PWRT enabled
 10416                           ;	RE3/MCLR pin function select bit
 10417                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
 10418                           ;	Code Protection bit
 10419                           ;	CP = OFF, Program memory code protection is disabled
 10420                           ;	Data Code Protection bit
 10421                           ;	CPD = OFF, Data memory code protection is disabled
 10422                           ;	Brown-out Reset Selection bits
 10423                           ;	BOREN = ON, BOR enabled
 10424                           ;	Internal External Switchover bit
 10425                           ;	IESO = ON, Internal/External Switchover mode is enabled
 10426                           ;	Fail-Safe Clock Monitor Enabled bit
 10427                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 10428                           ;	In-Circuit Debugger Mode bit
 10429                           ;	DEBUG = 0x1, unprogrammed default
 10430  2007                     	org	8199
 10431  2007  3FE4               	dw	16356

Data Sizes:
    Strings     0
    Constant    76
    Data        10
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     34      63

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_drawFastHLine_Hard
    _updateANDset_ball_position->_my_floor
    _pow->___xxtofl
    _log->___xxtofl
    _exp->___xxtofl
    _floor->___xxtofl
    ___fleq->___xxtofl
    ___xxtofl->___fltol
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    _my_floor->___fltol
    _setDisplayFillingMode->_sendCommand_and_8bit_Data
    _sendCommand_and_8bit_Data->_spiWrite
    _setAllDisplayPixels_Hard->_my_setAddrWindow_Hard
    _sendCommand_Hard->_spi_send_recv
    _sendCommand->_spiWrite
    _drawFastHLine_Hard->_my_setAddrWindow_Hard
    _my_setAddrWindow_Hard->_writeCommand_Hard
    _writeCommand_Hard->_spi_send_recv
    _SPI_WRITE16_Hard->_spi_send_recv

Critical Paths under _main in BANK0

    _log->_eval_poly
    _exp->_eval_poly
    _ldexp->_eval_poly
    _floor->___fladd
    _frexp->___fleq
    ___fleq->___xxtofl
    _eval_poly->___fladd
    ___flmul->_frexp
    ___flsub->___fladd
    ___fladd->___flmul

Critical Paths under _main in BANK1

    _vector_length->_sqrt
    _sqrt->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly

Critical Paths under _main in BANK2

    _main->_updateANDset_ball_position
    _updateANDset_ball_position->_normalized
    _normalized->_vector_length

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   93989
                                             31 BANK2      3     3      0
                 _drawFastHLine_Hard
                  _init_Hardwear_SPI
                  _init_Softwear_SPI
                        _sendCommand
                   _sendCommand_Hard
           _setAllDisplayPixels_Hard
              _setDisplayFillingMode
         _updateANDset_ball_position
              _update_ball_direction
 ---------------------------------------------------------------------------------
 (1) _updateANDset_ball_position                           3     3      0   89474
                                             28 BANK2      3     3      0
                           _my_floor
                         _normalized
              _update_ball_direction
 ---------------------------------------------------------------------------------
 (1) _update_ball_direction                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _normalized                                          12     4      8   88030
                                             16 BANK2     12     4      8
                            ___fldiv
                      _vector_length
 ---------------------------------------------------------------------------------
 (3) _vector_length                                       16     8      8   85500
                                              0 BANK2     16     8      8
                            ___fladd
                            ___flmul
                                _pow
                               _sqrt
 ---------------------------------------------------------------------------------
 (4) _sqrt                                                29    25      4    1403
                                             51 BANK1     29    25      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (4) _pow                                                 21    13      8   75372
                                             30 BANK1     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (5) _log                                                  6     2      4   24578
                                             11 BANK1      6     2      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _exp                                                 11     7      4   40200
                                             19 BANK1     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (6) _ldexp                                                8     2      6    3995
                                             11 BANK1      8     2      6
                             ___fleq
                             ___flge
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (6) _floor                                               10     6      4   10151
                                             75 BANK0      4     0      4
                                              0 BANK1      6     6      0
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                7     2      5    2252
                                             22 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8    1570
                                             10 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     836
                                             10 COMMON     4     0      4
                                              0 BANK0     10    10      0
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1886
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) _eval_poly                                           16     9      7    9209
                                             75 BANK0      5     5      0
                                              0 BANK1     11     4      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    4393
                                             29 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     980
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4267
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    4022
                                             55 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2223
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) _my_floor                                             6     2      4     942
                                             10 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___fltol
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     697
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (1) _setDisplayFillingMode                                4     4      0     315
                                              5 COMMON     4     4      0
          _sendCommand_and_8bit_Data
 ---------------------------------------------------------------------------------
 (2) _sendCommand_and_8bit_Data                            2     1      1     266
                                              3 COMMON     2     1      1
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _setAllDisplayPixels_Hard                             6     4      2    1674
                                             10 COMMON     2     0      2
                                              0 BANK0      4     4      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                   _SPI_WRITE16_Hard
              _my_setAddrWindow_Hard
 ---------------------------------------------------------------------------------
 (1) _sendCommand_Hard                                     1     1      0      44
                                              1 COMMON     1     1      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                      _spi_send_recv
 ---------------------------------------------------------------------------------
 (1) _sendCommand                                          1     1      0      92
                                              3 COMMON     1     1      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             3     3      0      70
                                              0 COMMON     3     3      0
                      _SPI_MOSI_HIGH
                       _SPI_MOSI_LOW
                       _SPI_SCK_HIGH
                        _SPI_SCK_LOW
 ---------------------------------------------------------------------------------
 (4) _SPI_SCK_LOW                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SPI_SCK_HIGH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SPI_MOSI_LOW                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SPI_MOSI_HIGH                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Softwear_SPI                                    2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_Hardwear_SPI                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawFastHLine_Hard                                  11     7      4    2390
                                             10 COMMON     4     0      4
                                              0 BANK0      7     7      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                   _SPI_WRITE16_Hard
              _my_setAddrWindow_Hard
 ---------------------------------------------------------------------------------
 (2) _my_setAddrWindow_Hard                                8     0      8    1066
                                              2 COMMON     8     0      8
                      _spi_send_recv
                  _writeCommand_Hard
 ---------------------------------------------------------------------------------
 (3) _writeCommand_Hard                                    1     1      0      44
                                              1 COMMON     1     1      0
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                      _spi_send_recv
 ---------------------------------------------------------------------------------
 (3) _SPI_DC_LOW                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SPI_DC_HIGH                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_WRITE16_Hard                                     4     2      2     416
                                              1 COMMON     4     2      2
                      _spi_send_recv
 ---------------------------------------------------------------------------------
 (4) _spi_send_recv                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_CS_LOW                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SPI_CS_HIGH                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _drawFastHLine_Hard
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_WRITE16_Hard
       _spi_send_recv
     _my_setAddrWindow_Hard
       _spi_send_recv
       _writeCommand_Hard
         _SPI_DC_HIGH
         _SPI_DC_LOW
         _spi_send_recv
   _init_Hardwear_SPI
   _init_Softwear_SPI
   _sendCommand
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_DC_HIGH
     _SPI_DC_LOW
     _spiWrite
       _SPI_MOSI_HIGH
       _SPI_MOSI_LOW
       _SPI_SCK_HIGH
       _SPI_SCK_LOW
   _sendCommand_Hard
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_DC_HIGH
     _SPI_DC_LOW
     _spi_send_recv
   _setAllDisplayPixels_Hard
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_WRITE16_Hard
     _my_setAddrWindow_Hard
   _setDisplayFillingMode
     _sendCommand_and_8bit_Data
       _SPI_CS_HIGH
       _SPI_CS_LOW
       _SPI_DC_HIGH
       _SPI_DC_LOW
       _spiWrite
   _updateANDset_ball_position
     _my_floor
       ___fltol
     _normalized
       ___fldiv
       _vector_length
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flmul
         _pow
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___fltol
           ___xxtofl
           _exp
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
             _eval_poly
               ___fladd
               ___flmul
             _floor
               ___fladd
               ___flge
               ___fltol
               ___xxtofl
               _frexp
             _ldexp
               ___fleq
               ___flge
               _eval_poly (ARG)
             _log (ARG)
               ___fladd
               ___fleq
               ___flge
               ___flmul
               ___xxtofl
               _eval_poly
               _frexp
           _log
         _sqrt
           ___fladd (ARG)
           ___flmul (ARG)
           _pow (ARG)
     _update_ball_direction
   _update_ball_direction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50     22      3F       7       78.8%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     50      50       5      100.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       3      100.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      ED      10        0.0%
ABS                  0      0      ED       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Feb 27 17:55:19 2023

                                  ___fldiv@aexp 000C                                    ___fldiv@bexp 000B  
                                             pc 0002                                    ___fldiv@sign 0004  
                                   _SSPSTATbits 0094                                  ?_spi_send_recv 0000  
                                            l71 0003                                              l80 0003  
                                            l65 0003                                              l74 0003  
                                            l83 0003                                              l68 0003  
                                            l92 0011                                              l77 0003  
                                            l86 0003                                              l95 0015  
                                            l89 003F                                              _dx 000C  
                                            _dy 0008                                              fsr 0004  
                           __Umul8_16@word_mpld 0006                          sendCommand@commandByte 0003  
                  drawFastHLine_Hard@in_HLine_y 000B                                             l104 0005  
                                           l121 0008                                             l107 0010  
                                           l123 000F                                             l204 004F  
                                           l108 002B                                             l125 003A  
                                           l170 000E                                             l250 00F7  
                                           l173 0011                                             l253 0059  
                                           l182 000B                                             l191 001C  
                                           l176 000B                                             l256 0015  
                                           l185 000C                                             l265 001C  
                                           l274 005C                                             l179 0005  
                                           l269 004A                                             l198 0050  
                                           l550 000A                                             l542 001C  
                                           l703 024D                                             l704 0257  
                                           l561 0060                                             l545 0088  
                                           l537 001E                                             l554 0075  
                                           l546 00A1                                             l538 003A  
                                           l707 004D                                             l539 004F  
                                           l564 0075                                             l741 01CE  
                                           l733 014E                                             l717 0056  
                                           l661 005B                                             l821 0024  
                                           l901 00BB                                             l719 01D8  
                                           l823 00B9                                             l665 00DE  
                                           l682 01A7                                             l674 0257  
                                           l834 0083                                             l739 01C0  
                                           l667 00B7                                             l763 02A2  
                                           l835 008F                                             l827 0067  
                                           l692 01ED                                             l852 0047  
                                           l757 0332                                             l853 01A4  
                                           l686 01CB                                             l695 022B  
                                           l871 01EA                                             l919 0143  
                                           l776 0014                                             l769 0326  
                                           l857 01A4                                             l778 0026  
                                           l882 00D1                                             l875 01EA  
                                           l795 010D                                             l788 01D5  
                                           l897 0059                                             l889 00D4  
                                           _RB0 0030                                             _RB1 0031  
                                           _RB2 0032                                             _RB4 0034  
                                           _RC4 003C                                             _RC6 003E  
                                           _RC7 003F                     ??_sendCommand_and_8bit_Data 0004  
                                           _exp 0000                                             _log 0000  
                                           _pow 0000                                             fsr0 0004  
                                           indf 0000                       setDisplayFillingMode@hORv 0007  
                                  ___flmul@aexp 002B                                    ___flmul@bexp 0030  
                                  ___flmul@sign 002A                                    ___flmul@temp 0035  
                                  ___flmul@prod 0031                                    ___fltol@exp1 0009  
                                          l4001 0048                                            l4011 0065  
                                          l4003 0050                                            l4101 01B4  
                                          l4021 0071                                            l4013 0069  
                                          l4005 0051                                            l3231 0000  
                                          l4111 01CF                                            l4031 007B  
                                          l4023 0073                                            l4015 006B  
                                          l4007 0053                                            l3233 0000  
                                          l4113 01D2                                            l4105 01BD  
                                          l4121 01DF                                            l4041 0085  
                                          l4033 007D                                            l4025 0075  
                                          l4017 006D                                            l4009 0061  
                                          l3227 0000                                            l3235 0000  
                                          l3411 0012                                            l4131 01F2  
                                          l4123 01E0                                            l4115 01D4  
                                          l4107 01C6                                            l4051 00C2  
                                          l4035 007F                                            l4027 0077  
                                          l4019 006F                                            l4043 0087  
                                          l4211 00B5                                            l4203 0067  
                                          l3413 0000                                            l3229 0000  
                                          l3237 0000                                            l3405 0001  
                                          l4141 0230                                            l4133 01F7  
                                          l4125 01E4                                            l4117 01D9  
                                          l4109 01CA                                            l4053 00C4  
                                          l4061 00D6                                            l4045 0088  
                                          l4037 0081                                            l4029 0079  
                                          l4221 012A                                            l4213 00DD  
                                          l4205 0073                                            l4301 0008  
                                          l3239 0001                                            l3415 0002  
                                          l3407 0007                                            l4151 0247  
                                          l4143 0235                                            l4135 0205  
                                          l4127 01EA                                            l4119 01DB  
                                          l4071 0107                                            l4063 00E2  
                                          l4055 00C8                                            l4047 009F  
                                          l4039 0083                                            l4231 01A2  
                                          l4223 0147                                            l4215 00F9  
                                          l4207 0080                                            l4311 0035  
                                          l4303 000C                                            l3417 0004  
                                          l3601 0039                                            l3409 000B  
                                          l3521 0016                                            l3513 0001  
                                          l4401 0034                                            l4153 0249  
                                          l4145 023D                                            l4137 0209  
                                          l4081 011C                                            l4073 010B  
                                          l4065 00E7                                            l4057 00C9  
                                          l4049 00BB                                            l4241 024E  
                                          l4233 01CB                                            l4225 0153  
                                          l4217 0115                                            l4209 0099  
                                          l4161 0005                                            l4321 005E  
                                          l4313 0038                                            l4305 001C  
                                          l3419 0008                                            l3603 004C  
                                          l3515 000A                                            l3523 002F  
                                          l4411 004B                                            l4403 0038  
                                          l4155 0252                                            l4147 0242  
                                          l4139 0227                                            l4091 017F  
                                          l4083 011D                                            l4075 010F  
                                          l4059 00D2                                            l4251 0273  
                                          l4243 0257                                            l4235 01D7  
                                          l4227 0170                                            l4219 011E  
                                          l4171 0018                                            l4163 0009  
                                          l4331 0091                                            l4323 006E  
                                          l4315 0045                                            l4307 002C  
                                          l3451 0000                                            l3373 0000  
                                          l3437 0000                                            l3517 0011  
                                          l4501 01A4                                            l4421 006E  
                                          l4413 004C                                            l4405 0039  
                                          l4157 0256                                            l4149 0243  
                                          l4093 0185                                            l4085 0126  
                                          l4077 0116                                            l4069 00F0  
                                          l4261 028B                                            l4253 027C  
                                          l4245 0265                                            l4237 0200  
                                          l4229 0185                                            l4181 0033  
                                          l4173 0020                                            l4165 000D  
                                          l4333 00A7                                            l4325 0079  
                                          l4317 004C                                            l3453 0007  
                                          l3461 000F                                            l3375 0000  
                                          l3471 0000                                            l3391 001E  
                                          l3383 0009                                            l3551 000B  
                                          l4511 01C8                                            l4503 01B3  
                                          l4431 0085                                            l4407 003E  
                                          l4415 004E                                            l4095 018A  
                                          l4079 0118                                            l4087 012B  
                                          l4271 02BA                                            l4263 029F  
                                          l4247 026E                                            l4255 0282  
                                          l4239 0226                                            l4191 004A  
                                          l4183 0037                                            l4175 0022  
                                          l4167 000E                                            l4159 0000  
                                          l4335 00AC                                            l4327 007D  
                                          l4319 0050                                            l4351 002A  
                                          l4343 0000                                            l3463 0014  
                                          l3455 000D                                            l3393 0001  
                                          l3545 0000                                            l3481 003C  
                                          l3473 001E                                            l3385 000D  
                                          l3377 0001                                            l3553 000E  
                                          l3561 0014                                            l4513 01CA  
                                          l4505 01B7                                            l4441 00B1  
                                          l4433 0097                                            l4417 005E  
                                          l4425 0077                                            l4409 0043  
                                          l4089 0141                                            l4097 0199  
                                          l4281 02F5                                            l4273 02BE  
                                          l4257 0286                                            l4249 0272  
                                          l4193 004C                                            l4185 0038  
                                          l4177 002A                                            l4169 0013  
                                          l4337 00B0                                            l4329 0087  
                                          l4353 0047                                            l4345 0019  
                                          l4521 000F                                            l4601 002A  
                                          l3465 001A                                            l3395 0004  
                                          l3475 0027                                            l3387 0013  
                                          l3483 0001                                            l3547 0001  
                                          l3563 0014                                            l3555 0000  
                                          l4507 01BF                                            l4443 00B6  
                                          l4451 00D6                                            l4435 009F  
                                          l4427 007C                                            l4419 006A  
                                          l4363 0000                                            l4099 01AF  
                                          l4371 0000                                            l4291 0320  
                                          l4283 0304                                            l4275 02D7  
                                          l4267 02A7                                            l4259 0287  
                                          l4195 0054                                            l4187 003D  
                                          l4179 002F                                            l4339 00B1  
                                          l4355 0054                                            l4347 0021  
                                          l4523 0015                                            l4611 00C9  
                                          l4603 0051                                            l3397 0008  
                                          l3477 002A                                            l3389 0015  
                                          l3485 0007                                            l3549 0007  
                                          l3581 0038                                            l3557 0003  
                                          l4509 01C4                                            l4461 0107  
                                          l4453 00E8                                            l4445 00C8  
                                          l4437 00A7                                            l4381 0009  
                                          l4365 0008                                            l4373 0004  
                                          l3901 000E                                            l4293 0321  
                                          l4285 030E                                            l4269 02AC  
                                          l4277 02DD                                            l4197 0059  
                                          l4189 0042                                            l4357 0058  
                                          l4525 002E                                            l4533 0044  
                                          l4613 00E4                                            l3591 000C  
                                          l3479 0035                                            l3487 000B  
                                          l3583 0040                                            l3575 001C  
                                          l3559 0014                                            l4471 011F  
                                          l4463 010F                                            l4455 00E9  
                                          l4447 00CC                                            l4439 00AF  
                                          l4391 0020                                            l4383 000D  
                                          l4367 000A                                            l3903 001D  
                                          l4295 032A                                            l4287 0310  
                                          l4279 02EA                                            l4199 005E  
                                          l4551 00C3                                            l3911 0014  
                                          l4359 0059                                            l4543 00BC  
                                          l4535 004D                                            l4519 0000  
                                          l4631 0075                                            l4623 0032  
                                          l4607 0062                                            l4711 000E  
                                          l4703 0000                                            l3593 0025  
                                          l3489 000E                                            l3585 004D  
                                          l3577 0023                                            l3569 0018  
                                          l4481 0137                                            l4473 0128  
                                          l4465 0111                                            l4457 00FD  
                                          l4449 00CD                                            l4393 0021  
                                          l4385 000E                                            l4377 0000  
                                          l3905 0022                                            l4289 031C  
                                          l4553 00C9                                            l3921 0064  
                                          l3913 0030                                            l4537 004E  
                                          l4529 0039                                            l4641 00BE  
                                          l4625 004B                                            l4617 0000  
                                          l4609 00C3                                            l4713 0021  
                                          l4705 0005                                            l4801 0000  
                                          l3595 0025                                            l3587 0003  
                                          l3579 002B                                            l3931 0009  
                                          l4491 0166                                            l4483 014B  
                                          l4467 011A                                            l4475 012E  
                                          l4459 0101                                            l4387 0013  
                                          l4395 0023                                            l4379 0005  
                                          l4547 0000                                            l3923 009E  
                                          l3915 0038                                            l4299 0003  
                                          l4539 008C                                            l4563 0032  
                                          l4651 0195                                            l4643 00FB  
                                          l4635 0086                                            l4619 0027  
                                          l4731 004A                                            l4723 0036  
                                          l4715 0027                                            l4707 0009  
                                          l4803 001F                                            l3597 002A  
                                          l3589 0006                                            l3941 002E  
                                          l4493 016A                                            l4477 0132  
                                          l4469 011E                                            l4397 002B  
                                          l4389 0018                                            l4549 003B  
                                          l3925 00A0                                            l3917 003C  
                                          l3909 0000                                            l4573 0061  
                                          l4565 004C                                            l4557 0000  
                                          l4653 019A                                            l4645 012C  
                                          l4637 00A4                                            l4629 005C  
                                          l4741 007E                                            l4725 003C  
                                          l4717 0028                                            l4709 000D  
                                          l4805 003C                                            l4821 0038  
                                          l4813 0000                                            l3599 0031  
                                          l3951 003C                                            l3943 0030  
                                          l3935 0012                                            l4807 0000  
                                          l4495 0183                                            l4487 0153  
                                          l4479 0133                                            l4399 0030  
                                          l3919 0060                                            l4591 00BB  
                                          l4575 006E                                            l4567 0050  
                                          l4559 0027                                            l4655 01BF  
                                          l4647 013D                                            l4639 00A9  
                                          l4663 0000                                            l4751 009D  
                                          l4743 0084                                            l4735 0067  
                                          l4719 002E                                            l4823 003D  
                                          l4815 0003                                            l4831 0000  
                                          l3961 0065                                            l3945 0034  
                                          l3953 004E                                            l3937 0025  
                                          l3929 0000                                            l4809 0011  
                                          l4489 0158                                            l4497 0189  
                                          l4585 0098                                            l4577 0074  
                                          l4649 0169                                            l4681 009D  
                                          l4673 0052                                            l4665 0003  
                                          l4761 00BD                                            l4753 00A5  
                                          l4745 0087                                            l4737 006D  
                                          l4729 0045                                            l4817 0018  
                                          l4841 001C                                            l4833 0003  
                                          l3963 006A                                            l3939 0026  
                                          l4499 0196                                            l3971 000D  
                                          l3891 004E                                            l3883 0000  
                                          l4579 008D                                            l4659 01CA  
                                          l4595 0000                                            l4683 00E9  
                                          l4691 0114                                            l4675 0079  
                                          l4667 0028                                            l4771 0152  
                                          l4763 00D7                                            l4755 00AD  
                                          l4747 008E                                            l4827 004F  
                                          l4819 0029                                            l4851 004E  
                                          l4843 0020                                            l4835 0007  
                                          ?_exp 0013                                            l3981 0021  
                                          l3973 000E                                            l3965 0000  
                                          l3885 0016                                            l4589 00A3  
                                          l4597 0019                                            l4693 012B  
                                          l4669 0041                                            l4781 01B1  
                                          l4773 015E                                            l4765 00FD  
                                          l4757 00B2                                            l4749 0094  
                                          l4853 0054                                            l4845 002E  
                                          l4837 0015                                            ?_log 000B  
                                          l3959 0055                                            l3991 0035  
                                          l3975 0013                                            l3983 0023  
                                          l3967 0005                                            l3895 0001  
                                          l3887 0032                                            l4695 0174  
                                          l4687 00FA                                            l4679 0084  
                                          l4791 01CD                                            l4783 01BD  
                                          l4775 018E                                            l4767 0133  
                                          l4759 00BB                                            l4855 0063  
                                          l4847 0032                                            l4839 0019  
                                          l3993 0039                                            l3985 002B  
                                          l3977 0018                                            l3969 0009  
                                          l3897 0003                                            l3889 004C  
                                          l4697 0189                                            l4689 00FF  
                                          l4785 01BF                                            l4777 0192  
                                          l4769 0139                                            l4857 0066  
                                          l4849 0040                                            l3995 003D  
                                          l3987 002E                                            l3979 0020  
                                          l3899 000A                                            l4699 018E  
                                          l4787 01C3                                            l4779 01AB  
                                          l4795 0000                                            l3997 003E  
                                          l3989 0034                                            l4789 01C4  
                                          l4797 007A                                            l3999 0043  
                                          l4889 001E                                            ?_pow 001E  
                               ??_vector_length 000E                                            u5000 0009  
                                          u5001 0008                                            u5010 0020  
                                          u5020 0034                                            u5100 000D  
                                          u5021 0033                                            u5101 000C  
                                          u5030 003B                                            u5110 0013  
                                          u5031 003A                                            u5015 001B  
                                          u5111 0012                                            u5200 00AA  
                                          u5120 0018                                            u5201 00A8  
                                          u5121 0017                                            u4170 000B  
                                          u5050 004D                                            u5210 00AB  
                                          u5130 0034                                            u6010 007D  
                                          u4171 000A                                            u5051 004C  
                                          u5131 0033                                            u6011 007C  
                                          u5060 0054                                            u6100 0013  
                                          u5300 010F                                            u5220 00BB  
                                          u5140 003D                                            u6020 0083  
                                          u5061 0053                                            u5045 003D  
                                          u6101 0012                                            u5301 010E  
                                          u5221 00BA                                            u5141 003C  
                                          u6021 0082                                            u6005 0072  
                                          u6110 0018                                            u5310 011C  
                                          u5230 00C8                                            u5150 0043  
                                          u6030 0087                                            u6111 0017  
                                          u5311 011B                                            u5231 00C7  
                                          u5151 0042                                            u6031 0086  
                                          u4440 0009                                            u5080 0065  
                                          u6200 00CC                                            u6120 0038  
                                          u5400 01CA                                            u5160 0048  
                                          u6040 009C                                            u4441 0008  
                                          u5081 0064                                            u6201 00CB  
                                          u6121 0037                                            u5401 01C9  
                                          u5161 0047                                            u4450 002B  
                                          u5090 006A                                            u6130 003E  
                                          u5410 01CF                                            u5330 0141  
                                          u5250 00DE                                            u5170 0061  
                                          u6050 00AC                                            u4451 002A  
                                          u5091 0069                                            u5075 0057  
                                          u6131 003D                                            u5411 01CE  
                                          u5331 0140                                            u5251 00DD  
                                          u5171 0060                                            u6051 00AB  
                                          u6300 0137                                            u6220 00E8  
                                          u6140 0043                                            u5500 0227  
                                          u5420 01D9                                            u5260 00E2  
                                          u5180 0065                                            u6060 00B0  
                                          u4460 0007                                            u6301 0136  
                                          u6221 00E7                                            u6141 0042  
                                          u5501 0226                                            u5421 01D8  
                                          u5341 0158                                            u5333 013D  
                                          u5325 011F                                            u5261 00E1  
                                          u5245 00CB                                            u5181 0064  
                                          u6061 00AF                                            u6045 0097  
                                          u4461 0006                                            u6310 014B  
                                          u6230 00FD                                            u6150 005E  
                                          u5510 0230                                            u5430 01DF  
                                          u5350 016C                                            u5342 0159  
                                          u5270 00E7                                            u5190 009F  
                                          u6070 0019                                            u4470 000D  
                                          u4455 0027                                            u6311 014A  
                                          u6215 00CF                                            u6151 005D  
                                          u5511 022F                                            u5431 01DE  
                                          u5351 016D                                            u5343 015E  
                                          u5271 00E6                                            u5191 009E  
                                          u6071 0018                                            u4471 000C  
                                          u6320 0152                                            u6240 0107  
                                          u6160 007C                                            u6080 0008  
                                          u5520 0235                                            u5440 01E4  
                                          u5360 018A                                            u5352 0172  
                                          u5344 015F                                            u5600 003D  
                                          u6400 002E                                            u4480 0014  
                                          u6321 0151                                            u6241 0106  
                                          u6225 00E4                                            u6161 007B  
                                          u6081 0007                                            u5521 0234  
                                          u5441 01E3                                            u5361 0189  
                                          u5353 0173                                            u5345 0164  
                                          u5281 00F9                                            u5601 003C  
                                          u6401 002D                                            u4481 0013  
                                          u4570 0038                                            u6330 0158  
                                          u6250 010F                                            u6170 00B6  
                                          u6090 000D                                            u5530 0242  
                                          u5450 01EA                                            u5370 01AF  
                                          u5346 0165                                            u5290 010B  
                                          u5282 0100                                            u5610 0042  
                                          u6410 004D                                            u4490 001A  
                                          u4571 0037                                            u6331 0157  
                                          u6251 010E                                            u6235 00F0  
                                          u6171 00B5                                            u6091 000C  
                                          u5531 0241                                            u5451 01E9  
                                          u5371 01AE                                            u5291 010A  
                                          u5283 0107                                            u5195 009B  
                                          u5611 0041                                            u6411 004C  
                                          u4491 0019                                            u4580 004D  
                                          u6340 016A                                            u6236 00F1  
                                          u5540 0247                                            u5460 01F1  
                                          u5380 01B4                                            u4900 000E  
                                          u5620 0059                                            u6420 008C  
                                          u6500 0019                                            u4581 004C  
                                          u6341 0169                                            u6237 00F6  
                                          u5541 0246                                            u5461 01F0  
                                          u5381 01B3                                            u4901 000D  
                                          u5701 0162                                            u5621 0058  
                                          u6421 008B                                            u6501 0018  
                                          u4590 004C                                            u6350 0179  
                                          u6270 011E                                            u6238 00F7  
                                          u5550 0256                                            u5470 01F7  
                                          u5702 0169                                            u5630 005E  
                                          u6510 0051                                            u4591 004B  
                                          u4575 0034                                            u6271 011D  
                                          u6239 00FC                                            u5551 0255  
                                          u5471 01F6                                            u5703 0170  
                                          u5631 005D                                            u6511 0050  
                                          u6360 0196                                            u5480 0209  
                                          u4920 0022                                            u5560 000D  
                                          u6520 0027                                            u6600 0028  
                                          u4585 0049                                            u6361 0195  
                                          u6265 0113                                            u6185 00B8  
                                          u5481 0208                                            u4921 0021  
                                          u5721 0194                                            u5641 00A7  
                                          u5561 000C                                            u6521 0026  
                                          u6601 0027                                            u6370 01B3  
                                          u6290 0132                                            u5490 0218  
                                          u5810 0272                                            u5722 019B  
                                          u5642 00AE                                            u5570 0013  
                                          u6450 00C9                                            u4930 0014  
                                          u6530 004B                                            u6610 0041  
                                          u4595 0048                                            u6371 01B2  
                                          u6355 0174                                            u6291 0131  
                                          u6195 00C1                                            u5395 01BF  
                                          u4915 0015                                            u5811 0271  
                                          u5731 01BD                                            u5723 01A2  
                                          u5715 0172                                            u5651 00C3  
                                          u5643 00B5                                            u5571 0012  
                                          u6451 00C8                                            u6435 0007  
                                          u4931 0013                                            u6531 004A  
                                          u6611 0040                                            u6380 01C8  
                                          u5900 02EA                                            u5732 01C4  
                                          u5652 00CA                                            u5580 0018  
                                          u4940 0030                                            u6460 0027  
                                          u6540 0075                                            u6620 0079  
                                          u6700 004A                                            u6381 01C7  
                                          u6365 0192                                            u6285 0121  
                                          u5901 02E9                                            u5805 0267  
                                          u5741 01E6                                            u5733 01CB  
                                          u5661 00EB                                            u5653 00D1  
                                          u5581 0017                                            u6445 0046  
                                          u4941 002F                                            u6461 0026  
                                          u6541 0074                                            u6621 0078  
                                          u6701 0049                                            u5910 0304  
                                          u5830 0286                                            u5750 020C  
                                          u5742 01ED                                            u5662 00F2  
                                          u5590 0037                                            u4950 003C  
                                          u4870 0016                                            u6390 0015  
                                          u6470 0050                                            u6550 00A0  
                                          u6630 009D                                            u6710 006D  
                                          u6375 01AF                                            u5495 0213  
                                          u5911 0303                                            u5831 0285  
                                          u5743 01F4                                            u5671 0107  
                                          u5663 00F9                                            u5591 0036  
                                          u4951 003B                                            u4871 0015  
                                          u6391 0014                                            u6471 004F  
                                          u6551 009E                                            u6631 009C  
                                          u6711 006C                                            u5920 0320  
                                          u5840 028B                                            u5672 010E  
                                          u4880 0032                                            u6480 006E  
                                          u6560 00A1                                            u6640 00E9  
                                          u6800 0147                                            u5921 031F  
                                          u5905 02E6                                            u5841 028A  
                                          u5825 0275                                            u5761 0218  
                                          u5673 0115                                            u4961 004B  
                                          u4881 0031                                            u6481 006D  
                                          u6641 00E8                                            u5850 029F  
                                          u5770 0234                                            u5762 021F  
                                          u4970 0064                                            u4962 004C  
                                          u5930 0008                                            u4890 004C  
                                          u6490 008D                                            u6570 00A9  
                                          u6650 018E                                            u6810 016C  
                                          u6730 00B2                                            u5915 0300  
                                          u5851 029E                                            u5763 0226  
                                          u5755 0207                                            u5691 0139  
                                          u4971 0063                                            u4963 0051  
                                          u5931 0007                                            u4891 004B  
                                          u6491 008C                                            u6571 00A8  
                                          u6651 018D                                            u6731 00B1  
                                          u5860 02A6                                            u5692 0140  
                                          u4964 0052                                            u5940 000C  
                                          u6580 019A                                            u6660 000D  
                                          u5861 02A5                                            u5781 0240  
                                          u5693 0147                                            u5685 0117  
                                          u4981 0073                                            u4965 0057  
                                          u5941 000B                                            u6485 006A  
                                          u6581 0199                                            u6821 0180  
                                          u6805 0142                                            u6725 0089  
                                          u6661 000C                                            u5870 02AC  
                                          u5782 0247                                            u4990 009E  
                                          u4982 0074                                            u4966 0058  
                                          u5950 002C                                            u6590 01BF  
                                          u6830 0192                                            u6822 0187  
                                          u6750 00D7                                            u6670 0027  
                                          u5871 02AB                                            u5783 024E  
                                          u5775 022F                                            u4991 009D  
                                          u4983 0079                                            u5951 002B  
                                          u4895 0048                                            u6591 01BE  
                                          u6831 0191                                            u6823 018E  
                                          u6815 0167                                            u6751 00D6  
                                          u6671 0026                                            u5880 02BE  
                                          u4984 007A                                            u6840 01A0  
                                          u6680 002E                                            u5881 02BD  
                                          u4985 007F                                            u6761 00EE  
                                          u6745 00B4                                            u6681 002D  
                                          u5890 02CD                                            u4986 0080  
                                          u5970 004B                                            u6850 01C3  
                                          u6770 011B                                            u6762 00F5  
                                          u6690 003C                                            u5795 0250  
                                          u4995 009A                                            u5971 004A  
                                          u6851 01C2                                            u6763 00FC  
                                          u6755 00D3                                            u6691 003B  
                                          u6907 003A                                            u6860 003D  
                                          u5965 003D                                            u6845 019B  
                                          u6861 003C                                            u6917 0048  
                                          u5990 006D                                            u6790 0139  
                                          u6870 004F                                            u5895 02C8  
                                          u5991 006C                                            u6791 0138  
                                          u6775 0116                                            u6871 004E  
                                          u6927 005C                                            u6937 0022  
                                          u5985 005F                                            u6785 0128  
                                          u6947 0031                                            u6957 003A  
                                          u6887 000F                                            u6897 0028  
updateANDset_ball_position@change_in_x_position 001D                    ??_updateANDset_ball_position 001C  
                       ??_my_setAddrWindow_Hard 000A                                            _main 0000  
                                          _mode 0012                                            btemp 007E  
                                          _sqrt 0000                                            exp@x 0013  
                                          log@x 000B  updateANDset_ball_position@change_in_y_position 001E  
                                          pow@x 001E                                            pow@y 0022  
                                          start 0000*                                ___fldiv@new_exp 0005  
                    ??_setAllDisplayPixels_Hard 000C                                           ??_exp 000E  
                                         ??_log 000E                                           ??_pow 000E  
                                 ___fltol@sign1 0008                                 __end_of___fladd 0258  
                               ??_SPI_MOSI_HIGH 0000                                           ?_main 0000  
                               __end_of___fldiv 01D9                                 __end_of___flneg 000B  
                               __end_of___flmul 0333                                 __end_of___flsub 004E  
                               __end_of___fltol 0076                                           ?_sqrt 0033  
                             SPI_WRITE16_Hard@w 0001                                           _floor 0000  
                                         _ldexp 0000                                           _frexp 0000  
                                         _errno 0010                                           pclath 000A  
                                   ?_SPI_DC_LOW 0000                                           pow@yi 002F  
                                   ?_SPI_CS_LOW 0000                                           sqrt@a 0033  
                                         sqrt@i 003C                                           sqrt@p 0041  
                                         status 0003                                           wtemp0 007E  
                     _sendCommand_and_8bit_Data 0000                                     exp@exponent 001B  
                                   ldexp@newexp 000F                                 __initialization 0000  
                                   log@exponent 000F                                 ??_spi_send_recv 0000  
                                  __end_of_main 0096                                    __end_of_sqrt 01D6  
                              _ball_x_direction 0009                                    ?_sendCommand 0000  
                                        ??_main 001F                                          ??_sqrt 0037  
                              _ball_y_direction 0008                       setAllDisplayPixels_Hard@x 0000  
                     setAllDisplayPixels_Hard@y 0002                                          ?_floor 004B  
                                        ?_ldexp 000B                                          ?_frexp 0016  
                                        _TRISB0 0430                                          _TRISB1 0431  
                                        _TRISB2 0432                                          _TRISB4 0434  
                                        _TRISC4 043C                                          _TRISC6 043E  
                                        _TRISC7 043F                                          _SSPBUF 0013  
                              __end_of___xxtofl 00BA                                _sendCommand_Hard 0000  
                       ??_update_ball_direction 0000                                          ___flge 0000  
                                        ___fleq 0000                                       ??___fladd 003F  
                                     ??___fldiv 0008                                       ??___flneg 0004  
                                     ??___flmul 0025                                       ??___flsub 000E  
                                     ??___fltol 0004                                _ball_x_positions 0003  
           sendCommand_and_8bit_Data@first_byte 0003                                          floor@i 0000  
                                        floor@x 004B                                    ?_SPI_DC_HIGH 0000  
                              __end_of_my_floor 0016                                _ball_y_positions 0000  
                     drawFastHLine_Hard@start_x 0006                                __end_of_spiWrite 002C  
                       ??_setDisplayFillingMode 0005                                    ?_SPI_CS_HIGH 0000  
                                  ?_SPI_SCK_LOW 0000              __end_of_updateANDset_ball_position 005D  
                    _updateANDset_ball_position 0000                                      ___flge@ff1 0000  
                                    ___flge@ff2 0004                                    ___xxtofl@arg 0006  
                              __end_ofexp@coeff 002E                                    ___xxtofl@exp 0005  
                                  ___xxtofl@val 000A                                      ___fleq@ff1 000A  
                                    ___fleq@ff2 000E                                __end_oflog@coeff 0052  
                       __end_of__initialization 0012                                      ___flneg@f1 0000  
                                  eval_poly@res 0007                                      ___fltol@f1 0000  
                             _init_Softwear_SPI 0000                                  __pcstackCOMMON 0000  
                                  __pidataBANK2 0000                              ?_init_Softwear_SPI 0000  
              __end_of_setAllDisplayPixels_Hard 0051                                   __end_of_floor 00D5  
                                 __end_of_ldexp 00BC                                   __end_of_frexp 005A  
                           ??_init_Softwear_SPI 0000                     setDisplayFillingMode@madctl 0008  
                                       ??_floor 000E                                         ??_ldexp 0011  
                                       ??_frexp 001B                                      __pbssBANK2 0000  
                     __end_of_init_Softwear_SPI 0040                   __end_of_my_setAddrWindow_Hard 001D  
                             __end_of__Umul8_16 0027                                      __pmaintext 0000  
                                       ?___flge 0000                     sendCommand_Hard@commandByte 0001  
                                       ?___fleq 000A                              _vector_length$1244 0008  
                            _vector_length$1245 000C                                       ?___xxtofl 000A  
                                    __stringtab 0000                                    ??_SPI_DC_LOW 0000  
                                  ??_SPI_CS_LOW 0000                           __end_of_vector_length 00F8  
                                     ?_my_floor 000A                                       ?_spiWrite 0000  
                       drawFastHLine_Hard@color 000C                                         ___fladd 0000  
                                       ___fldiv 0000                                         ___flneg 0000  
                                       ___flmul 0000                                         ___flsub 0000  
                                       ___fltol 0000                               __end_of_eval_poly 00D2  
             __end_of_sendCommand_and_8bit_Data 0016                                         __ptext1 0000  
                                       __ptext2 0000                                         __ptext3 0000  
                                       __ptext4 0000                                         __ptext5 0000  
                                       __ptext6 0000                                         __ptext7 0000  
                                       __ptext8 0000                                         __ptext9 0000  
          drawFastHLine_Hard@x_colum_horizontal 0004                              __end_of_SPI_DC_LOW 0004  
                      __end_of_sendCommand_Hard 0012                              __end_of_SPI_CS_LOW 0004  
                         __end_of_SPI_MOSI_HIGH 0004                                      ??___xxtofl 0000  
                 setAllDisplayPixels_Hard@color 000A                        SPI_WRITE16_Hard@second_B 0004  
                                       clrloop0 0001                       ?_setAllDisplayPixels_Hard 000A  
                          end_of_initialization 0012                                         exp@sign 001D  
                              _SPI_WRITE16_Hard 0000                               _writeCommand_Hard 0000  
                            ?_writeCommand_Hard 0000                                     normalized@x 0010  
                                   normalized@y 0014                                         pow@sign 002E  
                                    ??_my_floor 000E                                      ??_spiWrite 0000  
                 __end_of_update_ball_direction 001D                                      _normalized 0000  
                           ??_writeCommand_Hard 0001                                         sqrt@grs 0042  
                                       sqrt@exp 0046                           __end_of_spi_send_recv 000C  
                                 ?_SPI_SCK_HIGH 0000                                   ?_SPI_MOSI_LOW 0000  
                                   ___fladd@grs 004A                                   ___xxtofl@sign 0004  
                                   ___fldiv@grs 0007                                     ___fldiv@rem 0000  
                 __end_of_setDisplayFillingMode 003B                                     spiWrite@bit 0001  
                     __end_of_writeCommand_Hard 000C                     ?_updateANDset_ball_position 0000  
                                   ___flmul@grs 002C                    my_setAddrWindow_Hard@x_start 0002  
                  my_setAddrWindow_Hard@y_start 0004                                  ??_SPI_SCK_HIGH 0000  
                                __end_of___flge 00A2                                  __end_of___fleq 0050  
                                ??_SPI_MOSI_LOW 0000                                      floor@expon 0004  
                           start_initialization 0000                                      eval_poly@d 0004  
                                    eval_poly@n 0005                                      eval_poly@x 0000  
                                    ldexp@value 000B                                     __end_of_exp 01EB  
                                   __end_of_log 0144                                     __end_of_pow 01A5  
                                    frexp@value 0016                                        ??___flge 0008  
                                      ??___fleq 0012                                 _ball_x_position 0007  
                                   ?_normalized 0010                                      init_fetch0 0000  
                                     __Umul8_16 0000                                     __pdataBANK2 0000  
                    __end_of_drawFastHLine_Hard 0050                                 _ball_y_position 0006  
                                     ___fladd@a 003B                                       ___fladd@b 0037  
                                     ___fldiv@a 0000                                       ___fldiv@b 0004  
                                     ___flmul@a 0021                                       ___flmul@b 001D  
                                     ___flsub@a 0000                                       ___flsub@b 0004  
                                     ___latbits 0001                                   __pcstackBANK0 0000  
                                 __pcstackBANK1 0000                                   __pcstackBANK2 0000  
                 my_setAddrWindow_Hard@x_finish 0006                   my_setAddrWindow_Hard@y_finish 0008  
                             spi_send_recv@data 0000                           _my_setAddrWindow_Hard 0000  
                                      ?___fladd 0037                                        ?___fldiv 0000  
                                      ?___flneg 0000                                        ?___flmul 001D  
                                      ?___flsub 0000                                        ?___fltol 0000  
                                    ?__Umul8_16 0000                                   ??_sendCommand 0003  
                      __end_of_SPI_WRITE16_Hard 000D                                       __pstrings 0000  
                             _init_Hardwear_SPI 0000                               ?_sendCommand_Hard 0000  
                                     _eval_poly 0000                              ?_init_Hardwear_SPI 0000  
                            ??_sendCommand_Hard 0001                         SPI_WRITE16_Hard@first_B 0003  
                          __end_of_SPI_SCK_HIGH 0004                             ??_init_Hardwear_SPI 0000  
                          __end_of_SPI_MOSI_LOW 0004                                       clear_ram0 0000  
                     __end_of_init_Hardwear_SPI 000F                                     __stringbase 0005  
                    ?_sendCommand_and_8bit_Data 0003                                   ??_SPI_DC_HIGH 0000  
                                    ?_eval_poly 0000                             __end_of_sendCommand 0012  
                                 ??_SPI_CS_HIGH 0000                                   ??_SPI_SCK_LOW 0000  
                          writeCommand_Hard@cmd 0001                                normalized@length 0018  
                                     frexp@eptr 001A                                   _normalized_dx 0004  
                                 _normalized_dy 0000                          ?_my_setAddrWindow_Hard 0002  
                          drawFastHLine_Hard@x2 0003                                     ??__Umul8_16 0002  
                      drawFastHLine_Hard@length 000A                           _update_ball_direction 0000  
                            __end_of__stringtab 0006                                        _exp$1248 0017  
                                      ___xxtofl 0000                        _setAllDisplayPixels_Hard 0000  
                                      __ptext10 0000                                        __ptext11 0000  
                                      __ptext20 0000                                        __ptext12 0000  
                                      __ptext21 0000                                        __ptext13 0000  
                                      __ptext30 0000                                        __ptext22 0000  
                                      __ptext14 0000                                        __ptext31 0000  
                                      __ptext23 0000                                        __ptext15 0000  
                                      __ptext40 0000                                        __ptext32 0000  
                                      __ptext24 0000                                        __ptext16 0000  
                                      __ptext41 0000                                        __ptext33 0000  
                                      __ptext25 0000                                        __ptext17 0000  
                                      __ptext42 0000                                        __ptext34 0000  
                                      __ptext26 0000                                        __ptext18 0000  
                                      __ptext43 0000                                        __ptext35 0000  
                                      __ptext27 0000                                        __ptext19 0000  
                                      __ptext44 0000                                        __ptext36 0000  
                                      __ptext28 0000                                        __ptext37 0000  
                                      __ptext29 0000                                        __ptext38 0000  
                                      __ptext39 0000                             __end_of_SPI_DC_HIGH 0004  
                                      _pow$1246 0026                                        _pow$1247 002A  
                         _setDisplayFillingMode 0000                             __end_of_SPI_CS_HIGH 0004  
                                 _vector_length 0000                             __end_of_SPI_SCK_LOW 0004  
                                     my_floor@f 000A                                       my_floor@n 0000  
                                      _my_floor 0000                                        _spiWrite 0000  
                                  ??_normalized 000E                                       spiWrite@b 0000  
                                   _sendCommand 0000                                        exp@coeff 0006  
                                      log@coeff 002E                                     ??_eval_poly 004B  
                                 _SPI_MOSI_HIGH 0000                                        init_ram0 0004  
                            _drawFastHLine_Hard 0000                                       sqrt@tfrac 003D  
                            __end_of_normalized 005A                                  ?_vector_length 0000  
                           ?_drawFastHLine_Hard 000A                                       stringcode 0000  
                        ?_update_ball_direction 0000                                    _SPI_SCK_HIGH 0000  
                                 _spi_send_recv 0000                                    _SPI_MOSI_LOW 0000  
                             ?_SPI_WRITE16_Hard 0001                            ??_drawFastHLine_Hard 0000  
                                      sqrt@frac 004C                                        sqrt@sign 003B  
                                      sqrt@root 0048                          __Umul8_16@multiplicand 0000  
                            ??_SPI_WRITE16_Hard 0003                                  ?_SPI_MOSI_HIGH 0000  
                                   _SPI_DC_HIGH 0000                                  vector_length@x 0000  
                                vector_length@y 0004                                        stringdir 0000  
                                      stringtab 0000            sendCommand_and_8bit_Data@commandByte 0004  
                                   _SPI_CS_HIGH 0000                                   ___fladd@signs 0047  
                                   _SPI_SCK_LOW 0000                          ?_setDisplayFillingMode 0000  
                                    _SPI_DC_LOW 0000                                      _SPI_CS_LOW 0000  
                                  ___fladd@aexp 0048                                    ___fladd@bexp 0049  
                          __Umul8_16@multiplier 0008                                      _SSPCONbits 0014  
                             __Umul8_16@product 0004  
