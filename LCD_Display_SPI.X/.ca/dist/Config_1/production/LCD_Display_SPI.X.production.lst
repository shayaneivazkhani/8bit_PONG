

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Feb 27 17:55:09 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F913
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.40
    65                           ; Generated 17/11/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F913 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  0105                     	;# 
   155  0107                     	;# 
   156  0108                     	;# 
   157  0109                     	;# 
   158  010C                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0110                     	;# 
   165  0111                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0116                     	;# 
   169  0117                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011C                     	;# 
   173  011D                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0110                     	;# 
   242  0111                     	;# 
   243  0113                     	;# 
   244  0114                     	;# 
   245  0116                     	;# 
   246  0117                     	;# 
   247  0119                     	;# 
   248  011A                     	;# 
   249  011C                     	;# 
   250  011D                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253                           
   254                           	psect	idataBANK2
   255  0000'                    __pidataBANK2:
   256                           
   257                           ;initializer for _ball_y_positions
   258  0000' 3404               	retlw	4
   259  0001' 3405               	retlw	5
   260  0002' 3406               	retlw	6
   261                           
   262                           ;initializer for _ball_x_positions
   263  0003' 343B               	retlw	59
   264  0004' 343C               	retlw	60
   265  0005' 343D               	retlw	61
   266                           
   267                           ;initializer for _ball_y_position
   268  0006' 3405               	retlw	5
   269                           
   270                           ;initializer for _ball_x_position
   271  0007' 343C               	retlw	60
   272                           
   273                           ;initializer for _ball_y_direction
   274  0008' 34FF               	retlw	255
   275                           
   276                           ;initializer for _ball_x_direction
   277  0009' 3401               	retlw	1
   278                           
   279                           	psect	strings
   280  0000'                    __pstrings:
   281  0000'                    stringtab:
   282  0000'                    __stringtab:
   283  0000'                    stringcode:	
   284                           ;	String table - string pointers are 1 byte each
   285                           
   286  0000'                    stringdir:
   287  0000' 3000'              	movlw	high stringdir
   288  0001' 008A               	movwf	10
   289  0002' 0804               	movf	4,w
   290  0003' 0A84               	incf	4,f
   291  0004' 0782               	addwf	2,f
   292  0005'                    __stringbase:
   293  0005' 3400               	retlw	0
   294  0006'                    __end_of__stringtab:
   295  0006'                    exp@coeff:
   296  0006' 3400               	retlw	0
   297  0007' 3400               	retlw	0
   298  0008' 3480               	retlw	128
   299  0009' 343F               	retlw	63
   300  000A' 3418               	retlw	24
   301  000B' 3472               	retlw	114
   302  000C' 3431               	retlw	49
   303  000D' 343F               	retlw	63
   304  000E' 34F0               	retlw	240
   305  000F' 34FD               	retlw	253
   306  0010' 3475               	retlw	117
   307  0011' 343E               	retlw	62
   308  0012' 3447               	retlw	71
   309  0013' 3458               	retlw	88
   310  0014' 3463               	retlw	99
   311  0015' 343D               	retlw	61
   312  0016' 3458               	retlw	88
   313  0017' 3495               	retlw	149
   314  0018' 341D               	retlw	29
   315  0019' 343C               	retlw	60
   316  001A' 3482               	retlw	130
   317  001B' 34C4               	retlw	196
   318  001C' 34AE               	retlw	174
   319  001D' 343A               	retlw	58
   320  001E' 34A8               	retlw	168
   321  001F' 3478               	retlw	120
   322  0020' 3421               	retlw	33
   323  0021' 3439               	retlw	57
   324  0022' 34EF               	retlw	239
   325  0023' 3493               	retlw	147
   326  0024' 3480               	retlw	128
   327  0025' 3437               	retlw	55
   328  0026' 34A0               	retlw	160
   329  0027' 3492               	retlw	146
   330  0028' 34A7               	retlw	167
   331  0029' 3435               	retlw	53
   332  002A' 3446               	retlw	70
   333  002B' 3456               	retlw	86
   334  002C' 3415               	retlw	21
   335  002D' 3434               	retlw	52
   336  002E'                    __end_ofexp@coeff:
   337  002E'                    log@coeff:
   338  002E' 3400               	retlw	0
   339  002F' 3400               	retlw	0
   340  0030' 3400               	retlw	0
   341  0031' 3400               	retlw	0
   342  0032' 34C4               	retlw	196
   343  0033' 34FF               	retlw	255
   344  0034' 347F               	retlw	127
   345  0035' 343F               	retlw	63
   346  0036' 3480               	retlw	128
   347  0037' 34EF               	retlw	239
   348  0038' 34FF               	retlw	255
   349  0039' 34BE               	retlw	190
   350  003A' 3490               	retlw	144
   351  003B' 34E1               	retlw	225
   352  003C' 34A9               	retlw	169
   353  003D' 343E               	retlw	62
   354  003E' 34EC               	retlw	236
   355  003F' 3482               	retlw	130
   356  0040' 3476               	retlw	118
   357  0041' 34BE               	retlw	190
   358  0042' 3482               	retlw	130
   359  0043' 34AD               	retlw	173
   360  0044' 342B               	retlw	43
   361  0045' 343E               	retlw	62
   362  0046' 340E               	retlw	14
   363  0047' 343C               	retlw	60
   364  0048' 34C3               	retlw	195
   365  0049' 34BD               	retlw	189
   366  004A' 3487               	retlw	135
   367  004B' 34D1               	retlw	209
   368  004C' 3413               	retlw	19
   369  004D' 343D               	retlw	61
   370  004E' 3441               	retlw	65
   371  004F' 3478               	retlw	120
   372  0050' 34D3               	retlw	211
   373  0051' 34BB               	retlw	187
   374  0052'                    __end_oflog@coeff:
   375  0013                     _SSPBUF	set	19
   376  0014                     _SSPCONbits	set	20
   377  003F                     _RC7	set	63
   378  0034                     _RB4	set	52
   379  0031                     _RB1	set	49
   380  003E                     _RC6	set	62
   381  003C                     _RC4	set	60
   382  0032                     _RB2	set	50
   383  0030                     _RB0	set	48
   384  0094                     _SSPSTATbits	set	148
   385  043F                     _TRISC7	set	1087
   386  0434                     _TRISB4	set	1076
   387  0431                     _TRISB1	set	1073
   388  043C                     _TRISC4	set	1084
   389  043E                     _TRISC6	set	1086
   390  0432                     _TRISB2	set	1074
   391  0430                     _TRISB0	set	1072
   392                           
   393                           	psect	cinit
   394  0000'                    start_initialization:	
   395                           ; #config settings
   396                           
   397  0000'                    __initialization:
   398                           
   399                           ; Initialize objects allocated to BANK2
   400  0000' 1783               	bsf	3,7	;select IRP bank2
   401  0001' 3000'              	movlw	low (__pdataBANK2+10)
   402  0002' 00FD               	movwf	btemp+-1
   403  0003' 3000'              	movlw	high __pidataBANK2
   404  0004' 00FE               	movwf	btemp
   405  0005' 3000'              	movlw	low __pidataBANK2
   406  0006' 00FF               	movwf	btemp+1
   407  0007' 3000'              	movlw	low __pdataBANK2
   408  0008' 0084               	movwf	4
   409  0009' 118A' 2000' 118A'  	fcall	init_ram0
   410                           
   411                           ; Clear objects allocated to BANK2
   412  000C' 3000'              	movlw	low __pbssBANK2
   413  000D' 0084               	movwf	4
   414  000E' 3000'              	movlw	low (__pbssBANK2+19)
   415  000F' 118A' 2000'        	fcall	clear_ram0
   416  0011'                    end_of_initialization:	
   417                           ;End of C runtime variable initialization code
   418                           
   419  0011'                    __end_of__initialization:
   420  0011' 0183               	clrf	3
   421  0012' 118A' 2800'        	ljmp	_main	;jump to C main() function
   422                           
   423                           	psect	bssBANK2
   424  0000'                    __pbssBANK2:
   425  0000'                    _normalized_dy:
   426  0000'                    	ds	4
   427  0004'                    _normalized_dx:
   428  0004'                    	ds	4
   429  0008'                    _dy:
   430  0008'                    	ds	4
   431  000C'                    _dx:
   432  000C'                    	ds	4
   433  0010'                    _errno:
   434  0010'                    	ds	2
   435  0012'                    _mode:
   436  0012'                    	ds	1
   437                           
   438                           	psect	dataBANK2
   439  0000'                    __pdataBANK2:
   440  0000'                    _ball_y_positions:
   441  0000'                    	ds	3
   442  0003'                    _ball_x_positions:
   443  0003'                    	ds	3
   444  0006'                    _ball_y_position:
   445  0006'                    	ds	1
   446  0007'                    _ball_x_position:
   447  0007'                    	ds	1
   448  0008'                    _ball_y_direction:
   449  0008'                    	ds	1
   450  0009'                    _ball_x_direction:
   451  0009'                    	ds	1
   452                           
   453                           	psect	inittext
   454  0000'                    init_fetch0:	
   455                           ;	Called with low address in FSR and high address in W
   456                           
   457  0000' 087E               	movf	126,w
   458  0001' 008A               	movwf	10
   459  0002' 087F               	movf	127,w
   460  0003' 0082               	movwf	2
   461  0004'                    init_ram0:	
   462                           ;Called with:
   463                           ;	high address of idata address in btemp 
   464                           ;	low address of idata address in btemp+1 
   465                           ;	low address of data in FSR
   466                           ;	high address + 1 of data in btemp-1
   467                           
   468  0004' 2000' 118A'        	fcall	init_fetch0
   469  0006' 0080               	movwf	0
   470  0007' 0A84               	incf	4,f
   471  0008' 0804               	movf	4,w
   472  0009' 067D               	xorwf	125,w
   473  000A' 1903               	btfsc	3,2
   474  000B' 3400               	retlw	0
   475  000C' 0AFF               	incf	127,f
   476  000D' 1903               	btfsc	3,2
   477  000E' 0AFE               	incf	126,f
   478  000F' 2800'              	goto	init_ram0
   479                           
   480                           	psect	clrtext
   481  0000'                    clear_ram0:	
   482                           ;	Called with FSR containing the base address, and
   483                           ;	W with the last address+1
   484                           
   485  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   486  0001'                    clrloop0:
   487  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   488  0002' 0A84               	incf	4,f	;increment pointer
   489  0003' 0604               	xorwf	4,w	;XOR with final address
   490  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   491  0005' 3400               	retlw	0	;all done for this memory range, return
   492  0006' 0604               	xorwf	4,w	;XOR again to restore value
   493  0007' 2800'              	goto	clrloop0	;do the next byte
   494                           
   495                           	psect	cstackBANK2
   496  0000'                    __pcstackBANK2:
   497  0000'                    ?_vector_length:
   498  0000'                    vector_length@x:	
   499                           ; 4 bytes @ 0x0
   500                           
   501                           
   502                           ; 4 bytes @ 0x0
   503  0000'                    	ds	4
   504  0004'                    vector_length@y:
   505                           
   506                           ; 4 bytes @ 0x4
   507  0004'                    	ds	4
   508  0008'                    _vector_length$1244:
   509                           
   510                           ; 4 bytes @ 0x8
   511  0008'                    	ds	4
   512  000C'                    _vector_length$1245:
   513                           
   514                           ; 4 bytes @ 0xC
   515  000C'                    	ds	4
   516  0010'                    ?_normalized:
   517  0010'                    normalized@x:	
   518                           ; 1 bytes @ 0x10
   519                           
   520                           
   521                           ; 4 bytes @ 0x10
   522  0010'                    	ds	4
   523  0014'                    normalized@y:
   524                           
   525                           ; 4 bytes @ 0x14
   526  0014'                    	ds	4
   527  0018'                    normalized@length:
   528                           
   529                           ; 4 bytes @ 0x18
   530  0018'                    	ds	4
   531  001C'                    ??_updateANDset_ball_position:
   532                           
   533                           ; 1 bytes @ 0x1C
   534  001C'                    	ds	1
   535  001D'                    updateANDset_ball_position@change_in_x_position:
   536                           
   537                           ; 1 bytes @ 0x1D
   538  001D'                    	ds	1
   539  001E'                    updateANDset_ball_position@change_in_y_position:
   540                           
   541                           ; 1 bytes @ 0x1E
   542  001E'                    	ds	1
   543  001F'                    ??_main:
   544                           
   545                           ; 1 bytes @ 0x1F
   546  001F'                    	ds	3
   547                           
   548                           	psect	cstackBANK1
   549  0000'                    __pcstackBANK1:
   550  0000'                    ?_eval_poly:
   551  0000'                    ?___flsub:	
   552                           ; 4 bytes @ 0x0
   553                           
   554  0000'                    ___flsub@a:	
   555                           ; 4 bytes @ 0x0
   556                           
   557  0000'                    eval_poly@x:	
   558                           ; 4 bytes @ 0x0
   559                           
   560  0000'                    floor@i:	
   561                           ; 4 bytes @ 0x0
   562                           
   563                           
   564                           ; 4 bytes @ 0x0
   565  0000'                    	ds	4
   566  0004'                    eval_poly@d:
   567  0004'                    floor@expon:	
   568                           ; 1 bytes @ 0x4
   569                           
   570  0004'                    ___flsub@b:	
   571                           ; 2 bytes @ 0x4
   572                           
   573                           
   574                           ; 4 bytes @ 0x4
   575  0004'                    	ds	1
   576  0005'                    eval_poly@n:
   577                           
   578                           ; 2 bytes @ 0x5
   579  0005'                    	ds	2
   580  0007'                    eval_poly@res:
   581                           
   582                           ; 4 bytes @ 0x7
   583  0007'                    	ds	4
   584  000B'                    ?_log:
   585  000B'                    ?_ldexp:	
   586                           ; 4 bytes @ 0xB
   587                           
   588  000B'                    ldexp@value:	
   589                           ; 4 bytes @ 0xB
   590                           
   591  000B'                    log@x:	
   592                           ; 4 bytes @ 0xB
   593                           
   594                           
   595                           ; 4 bytes @ 0xB
   596  000B'                    	ds	4
   597  000F'                    ldexp@newexp:
   598  000F'                    log@exponent:	
   599                           ; 2 bytes @ 0xF
   600                           
   601                           
   602                           ; 2 bytes @ 0xF
   603  000F'                    	ds	2
   604  0011'                    ??_ldexp:
   605                           
   606                           ; 1 bytes @ 0x11
   607  0011'                    	ds	2
   608  0013'                    ?_exp:
   609  0013'                    exp@x:	
   610                           ; 4 bytes @ 0x13
   611                           
   612                           
   613                           ; 4 bytes @ 0x13
   614  0013'                    	ds	4
   615  0017'                    _exp$1248:
   616                           
   617                           ; 4 bytes @ 0x17
   618  0017'                    	ds	4
   619  001B'                    exp@exponent:
   620                           
   621                           ; 2 bytes @ 0x1B
   622  001B'                    	ds	2
   623  001D'                    exp@sign:
   624                           
   625                           ; 1 bytes @ 0x1D
   626  001D'                    	ds	1
   627  001E'                    ?_pow:
   628  001E'                    pow@x:	
   629                           ; 4 bytes @ 0x1E
   630                           
   631                           
   632                           ; 4 bytes @ 0x1E
   633  001E'                    	ds	4
   634  0022'                    pow@y:
   635                           
   636                           ; 4 bytes @ 0x22
   637  0022'                    	ds	4
   638  0026'                    _pow$1246:
   639                           
   640                           ; 4 bytes @ 0x26
   641  0026'                    	ds	4
   642  002A'                    _pow$1247:
   643                           
   644                           ; 4 bytes @ 0x2A
   645  002A'                    	ds	4
   646  002E'                    pow@sign:
   647                           
   648                           ; 1 bytes @ 0x2E
   649  002E'                    	ds	1
   650  002F'                    pow@yi:
   651                           
   652                           ; 4 bytes @ 0x2F
   653  002F'                    	ds	4
   654  0033'                    ?_sqrt:
   655  0033'                    sqrt@a:	
   656                           ; 4 bytes @ 0x33
   657                           
   658                           
   659                           ; 4 bytes @ 0x33
   660  0033'                    	ds	4
   661  0037'                    ??_sqrt:
   662                           
   663                           ; 1 bytes @ 0x37
   664  0037'                    	ds	4
   665  003B'                    sqrt@sign:
   666                           
   667                           ; 1 bytes @ 0x3B
   668  003B'                    	ds	1
   669  003C'                    sqrt@i:
   670                           
   671                           ; 1 bytes @ 0x3C
   672  003C'                    	ds	1
   673  003D'                    sqrt@tfrac:
   674                           
   675                           ; 4 bytes @ 0x3D
   676  003D'                    	ds	4
   677  0041'                    sqrt@p:
   678                           
   679                           ; 1 bytes @ 0x41
   680  0041'                    	ds	1
   681  0042'                    sqrt@grs:
   682                           
   683                           ; 4 bytes @ 0x42
   684  0042'                    	ds	4
   685  0046'                    sqrt@exp:
   686                           
   687                           ; 2 bytes @ 0x46
   688  0046'                    	ds	2
   689  0048'                    sqrt@root:
   690                           
   691                           ; 4 bytes @ 0x48
   692  0048'                    	ds	4
   693  004C'                    sqrt@frac:
   694                           
   695                           ; 4 bytes @ 0x4C
   696  004C'                    	ds	4
   697                           
   698                           	psect	cstackCOMMON
   699  0000'                    __pcstackCOMMON:
   700  0000'                    ?___flge:
   701  0000'                    ?_SPI_CS_LOW:	
   702                           ; 1 bit 
   703                           
   704  0000'                    ??_SPI_CS_LOW:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0000'                    ?_SPI_CS_HIGH:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0000'                    ??_SPI_CS_HIGH:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0000'                    ?_spiWrite:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0000'                    ??_spiWrite:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0000'                    ?_spi_send_recv:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0000'                    ??_spi_send_recv:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0000'                    ?_SPI_DC_LOW:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0000'                    ??_SPI_DC_LOW:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0000'                    ?_SPI_DC_HIGH:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0000'                    ??_SPI_DC_HIGH:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0000'                    ?_SPI_MOSI_LOW:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0000'                    ??_SPI_MOSI_LOW:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0000'                    ?_SPI_MOSI_HIGH:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0000'                    ??_SPI_MOSI_HIGH:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0000'                    ?_SPI_SCK_LOW:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0000'                    ??_SPI_SCK_LOW:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0000'                    ?_SPI_SCK_HIGH:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0000'                    ??_SPI_SCK_HIGH:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0000'                    ?_init_Softwear_SPI:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0000'                    ??_init_Softwear_SPI:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0000'                    ?_sendCommand:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0000'                    ?_setDisplayFillingMode:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0000'                    ?_init_Hardwear_SPI:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0000'                    ??_init_Hardwear_SPI:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0000'                    ?_sendCommand_Hard:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0000'                    ?_writeCommand_Hard:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0000'                    ?_update_ball_direction:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0000'                    ??_update_ball_direction:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0000'                    ?_updateANDset_ball_position:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0000'                    ?_main:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0000'                    ?__Umul8_16:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0000'                    ?___flneg:	
   801                           ; 2 bytes @ 0x0
   802                           
   803  0000'                    ?___fltol:	
   804                           ; 4 bytes @ 0x0
   805                           
   806  0000'                    ?___fldiv:	
   807                           ; 4 bytes @ 0x0
   808                           
   809  0000'                    spiWrite@b:	
   810                           ; 4 bytes @ 0x0
   811                           
   812  0000'                    spi_send_recv@data:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0000'                    __Umul8_16@multiplicand:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0000'                    ___flge@ff1:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0000'                    ___flneg@f1:	
   822                           ; 4 bytes @ 0x0
   823                           
   824  0000'                    ___fltol@f1:	
   825                           ; 4 bytes @ 0x0
   826                           
   827  0000'                    ___fldiv@a:	
   828                           ; 4 bytes @ 0x0
   829                           
   830                           
   831                           ; 4 bytes @ 0x0
   832  0000'                    	ds	1
   833  0001'                    ??_sendCommand_Hard:
   834  0001'                    ??_writeCommand_Hard:	
   835                           ; 1 bytes @ 0x1
   836                           
   837  0001'                    ?_SPI_WRITE16_Hard:	
   838                           ; 1 bytes @ 0x1
   839                           
   840  0001'                    sendCommand_Hard@commandByte:	
   841                           ; 1 bytes @ 0x1
   842                           
   843  0001'                    writeCommand_Hard@cmd:	
   844                           ; 1 bytes @ 0x1
   845                           
   846  0001'                    spiWrite@bit:	
   847                           ; 1 bytes @ 0x1
   848                           
   849  0001'                    SPI_WRITE16_Hard@w:	
   850                           ; 2 bytes @ 0x1
   851                           
   852                           
   853                           ; 2 bytes @ 0x1
   854  0001'                    	ds	1
   855  0002'                    ??__Umul8_16:
   856  0002'                    ?_my_setAddrWindow_Hard:	
   857                           ; 1 bytes @ 0x2
   858                           
   859  0002'                    my_setAddrWindow_Hard@x_start:	
   860                           ; 1 bytes @ 0x2
   861                           
   862                           
   863                           ; 2 bytes @ 0x2
   864  0002'                    	ds	1
   865  0003'                    ??_sendCommand:
   866  0003'                    ?_sendCommand_and_8bit_Data:	
   867                           ; 1 bytes @ 0x3
   868                           
   869  0003'                    ??_SPI_WRITE16_Hard:	
   870                           ; 1 bytes @ 0x3
   871                           
   872  0003'                    sendCommand@commandByte:	
   873                           ; 1 bytes @ 0x3
   874                           
   875  0003'                    sendCommand_and_8bit_Data@first_byte:	
   876                           ; 1 bytes @ 0x3
   877                           
   878  0003'                    SPI_WRITE16_Hard@first_B:	
   879                           ; 1 bytes @ 0x3
   880                           
   881                           
   882                           ; 1 bytes @ 0x3
   883  0003'                    	ds	1
   884  0004'                    ??_sendCommand_and_8bit_Data:
   885  0004'                    ??___flneg:	
   886                           ; 1 bytes @ 0x4
   887                           
   888  0004'                    ??___fltol:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0004'                    sendCommand_and_8bit_Data@commandByte:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0004'                    SPI_WRITE16_Hard@second_B:	
   895                           ; 1 bytes @ 0x4
   896                           
   897  0004'                    my_setAddrWindow_Hard@y_start:	
   898                           ; 1 bytes @ 0x4
   899                           
   900  0004'                    __Umul8_16@product:	
   901                           ; 2 bytes @ 0x4
   902                           
   903  0004'                    ___flge@ff2:	
   904                           ; 2 bytes @ 0x4
   905                           
   906  0004'                    ___fldiv@b:	
   907                           ; 4 bytes @ 0x4
   908                           
   909                           
   910                           ; 4 bytes @ 0x4
   911  0004'                    	ds	1
   912  0005'                    ??_setDisplayFillingMode:
   913                           
   914                           ; 1 bytes @ 0x5
   915  0005'                    	ds	1
   916  0006'                    my_setAddrWindow_Hard@x_finish:
   917  0006'                    __Umul8_16@word_mpld:	
   918                           ; 2 bytes @ 0x6
   919                           
   920                           
   921                           ; 2 bytes @ 0x6
   922  0006'                    	ds	1
   923  0007'                    setDisplayFillingMode@hORv:
   924                           
   925                           ; 1 bytes @ 0x7
   926  0007'                    	ds	1
   927  0008'                    ??___flge:
   928  0008'                    ??___fldiv:	
   929                           ; 1 bytes @ 0x8
   930                           
   931  0008'                    setDisplayFillingMode@madctl:	
   932                           ; 1 bytes @ 0x8
   933                           
   934  0008'                    ___fltol@sign1:	
   935                           ; 1 bytes @ 0x8
   936                           
   937  0008'                    __Umul8_16@multiplier:	
   938                           ; 1 bytes @ 0x8
   939                           
   940  0008'                    my_setAddrWindow_Hard@y_finish:	
   941                           ; 1 bytes @ 0x8
   942                           
   943                           
   944                           ; 2 bytes @ 0x8
   945  0008'                    	ds	1
   946  0009'                    ___fltol@exp1:
   947                           
   948                           ; 1 bytes @ 0x9
   949  0009'                    	ds	1
   950  000A'                    ??_my_setAddrWindow_Hard:
   951  000A'                    ?_setAllDisplayPixels_Hard:	
   952                           ; 1 bytes @ 0xA
   953                           
   954  000A'                    ?_drawFastHLine_Hard:	
   955                           ; 1 bytes @ 0xA
   956                           
   957  000A'                    ?_my_floor:	
   958                           ; 1 bytes @ 0xA
   959                           
   960  000A'                    ?___xxtofl:	
   961                           ; 2 bytes @ 0xA
   962                           
   963  000A'                    drawFastHLine_Hard@length:	
   964                           ; 4 bytes @ 0xA
   965                           
   966  000A'                    setAllDisplayPixels_Hard@color:	
   967                           ; 1 bytes @ 0xA
   968                           
   969  000A'                    my_floor@f:	
   970                           ; 2 bytes @ 0xA
   971                           
   972  000A'                    ___xxtofl@val:	
   973                           ; 4 bytes @ 0xA
   974                           
   975                           
   976                           ; 4 bytes @ 0xA
   977  000A'                    	ds	1
   978  000B'                    drawFastHLine_Hard@in_HLine_y:
   979                           
   980                           ; 1 bytes @ 0xB
   981  000B'                    	ds	1
   982  000C'                    ??_setAllDisplayPixels_Hard:
   983  000C'                    drawFastHLine_Hard@color:	
   984                           ; 1 bytes @ 0xC
   985                           
   986                           
   987                           ; 2 bytes @ 0xC
   988  000C'                    	ds	2
   989  000E'                    ??_pow:
   990  000E'                    ??_exp:	
   991                           ; 1 bytes @ 0xE
   992                           
   993  000E'                    ??_log:	
   994                           ; 1 bytes @ 0xE
   995                           
   996  000E'                    ??_floor:	
   997                           ; 1 bytes @ 0xE
   998                           
   999  000E'                    ??_vector_length:	
  1000                           ; 1 bytes @ 0xE
  1001                           
  1002  000E'                    ??_normalized:	
  1003                           ; 1 bytes @ 0xE
  1004                           
  1005  000E'                    ??_my_floor:	
  1006                           ; 1 bytes @ 0xE
  1007                           
  1008  000E'                    ??___flsub:	
  1009                           ; 1 bytes @ 0xE
  1010                           
  1011                           
  1012                           	psect	cstackBANK0
  1013  0000'                    __pcstackBANK0:	
  1014                           ; 1 bytes @ 0xE
  1015                           
  1016  0000'                    ??_drawFastHLine_Hard:
  1017  0000'                    ??___xxtofl:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0000'                    setAllDisplayPixels_Hard@x:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0000'                    my_floor@n:	
  1024                           ; 2 bytes @ 0x0
  1025                           
  1026  0000'                    ___fldiv@rem:	
  1027                           ; 2 bytes @ 0x0
  1028                           
  1029                           
  1030                           ; 4 bytes @ 0x0
  1031  0000'                    	ds	2
  1032  0002'                    setAllDisplayPixels_Hard@y:
  1033                           
  1034                           ; 2 bytes @ 0x2
  1035  0002'                    	ds	1
  1036  0003'                    drawFastHLine_Hard@x2:
  1037                           
  1038                           ; 1 bytes @ 0x3
  1039  0003'                    	ds	1
  1040  0004'                    ___fldiv@sign:
  1041  0004'                    ___xxtofl@sign:	
  1042                           ; 1 bytes @ 0x4
  1043                           
  1044  0004'                    drawFastHLine_Hard@x_colum_horizontal:	
  1045                           ; 1 bytes @ 0x4
  1046                           
  1047                           
  1048                           ; 2 bytes @ 0x4
  1049  0004'                    	ds	1
  1050  0005'                    ___xxtofl@exp:
  1051  0005'                    ___fldiv@new_exp:	
  1052                           ; 1 bytes @ 0x5
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0x5
  1056  0005'                    	ds	1
  1057  0006'                    drawFastHLine_Hard@start_x:
  1058  0006'                    ___xxtofl@arg:	
  1059                           ; 1 bytes @ 0x6
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x6
  1063  0006'                    	ds	1
  1064  0007'                    ___fldiv@grs:
  1065                           
  1066                           ; 4 bytes @ 0x7
  1067  0007'                    	ds	3
  1068  000A'                    ?___fleq:
  1069  000A'                    ___fleq@ff1:	
  1070                           ; 1 bit 
  1071                           
  1072                           
  1073                           ; 4 bytes @ 0xA
  1074  000A'                    	ds	1
  1075  000B'                    ___fldiv@bexp:
  1076                           
  1077                           ; 1 bytes @ 0xB
  1078  000B'                    	ds	1
  1079  000C'                    ___fldiv@aexp:
  1080                           
  1081                           ; 1 bytes @ 0xC
  1082  000C'                    	ds	2
  1083  000E'                    ___fleq@ff2:
  1084                           
  1085                           ; 4 bytes @ 0xE
  1086  000E'                    	ds	4
  1087  0012'                    ??___fleq:
  1088                           
  1089                           ; 1 bytes @ 0x12
  1090  0012'                    	ds	4
  1091  0016'                    ?_frexp:
  1092  0016'                    frexp@value:	
  1093                           ; 4 bytes @ 0x16
  1094                           
  1095                           
  1096                           ; 4 bytes @ 0x16
  1097  0016'                    	ds	4
  1098  001A'                    frexp@eptr:
  1099                           
  1100                           ; 1 bytes @ 0x1A
  1101  001A'                    	ds	1
  1102  001B'                    ??_frexp:
  1103                           
  1104                           ; 1 bytes @ 0x1B
  1105  001B'                    	ds	2
  1106  001D'                    ?___flmul:
  1107  001D'                    ___flmul@b:	
  1108                           ; 4 bytes @ 0x1D
  1109                           
  1110                           
  1111                           ; 4 bytes @ 0x1D
  1112  001D'                    	ds	4
  1113  0021'                    ___flmul@a:
  1114                           
  1115                           ; 4 bytes @ 0x21
  1116  0021'                    	ds	4
  1117  0025'                    ??___flmul:
  1118                           
  1119                           ; 1 bytes @ 0x25
  1120  0025'                    	ds	5
  1121  002A'                    ___flmul@sign:
  1122                           
  1123                           ; 1 bytes @ 0x2A
  1124  002A'                    	ds	1
  1125  002B'                    ___flmul@aexp:
  1126                           
  1127                           ; 1 bytes @ 0x2B
  1128  002B'                    	ds	1
  1129  002C'                    ___flmul@grs:
  1130                           
  1131                           ; 4 bytes @ 0x2C
  1132  002C'                    	ds	4
  1133  0030'                    ___flmul@bexp:
  1134                           
  1135                           ; 1 bytes @ 0x30
  1136  0030'                    	ds	1
  1137  0031'                    ___flmul@prod:
  1138                           
  1139                           ; 4 bytes @ 0x31
  1140  0031'                    	ds	4
  1141  0035'                    ___flmul@temp:
  1142                           
  1143                           ; 2 bytes @ 0x35
  1144  0035'                    	ds	2
  1145  0037'                    ?___fladd:
  1146  0037'                    ___fladd@b:	
  1147                           ; 4 bytes @ 0x37
  1148                           
  1149                           
  1150                           ; 4 bytes @ 0x37
  1151  0037'                    	ds	4
  1152  003B'                    ___fladd@a:
  1153                           
  1154                           ; 4 bytes @ 0x3B
  1155  003B'                    	ds	4
  1156  003F'                    ??___fladd:
  1157                           
  1158                           ; 1 bytes @ 0x3F
  1159  003F'                    	ds	8
  1160  0047'                    ___fladd@signs:
  1161                           
  1162                           ; 1 bytes @ 0x47
  1163  0047'                    	ds	1
  1164  0048'                    ___fladd@aexp:
  1165                           
  1166                           ; 1 bytes @ 0x48
  1167  0048'                    	ds	1
  1168  0049'                    ___fladd@bexp:
  1169                           
  1170                           ; 1 bytes @ 0x49
  1171  0049'                    	ds	1
  1172  004A'                    ___fladd@grs:
  1173                           
  1174                           ; 1 bytes @ 0x4A
  1175  004A'                    	ds	1
  1176  004B'                    ??_eval_poly:
  1177  004B'                    ?_floor:	
  1178                           ; 1 bytes @ 0x4B
  1179                           
  1180  004B'                    floor@x:	
  1181                           ; 4 bytes @ 0x4B
  1182                           
  1183                           
  1184                           ; 4 bytes @ 0x4B
  1185  004B'                    	ds	5
  1186                           
  1187                           	psect	maintext
  1188  0000'                    __pmaintext:	
  1189 ;;
  1190 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1191 ;;
  1192 ;; *************** function _main *****************
  1193 ;; Defined at:
  1194 ;;		line 856 in file "main.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;		None
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : B00/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1208 ;;      Params:         0       0       0       0
  1209 ;;      Locals:         0       0       0       0
  1210 ;;      Temps:          0       0       0       3
  1211 ;;      Totals:         0       0       0       3
  1212 ;;Total ram usage:        3 bytes
  1213 ;; Hardware stack levels required when called: 8
  1214 ;; This function calls:
  1215 ;;		_drawFastHLine_Hard
  1216 ;;		_init_Hardwear_SPI
  1217 ;;		_init_Softwear_SPI
  1218 ;;		_sendCommand
  1219 ;;		_sendCommand_Hard
  1220 ;;		_setAllDisplayPixels_Hard
  1221 ;;		_setDisplayFillingMode
  1222 ;;		_updateANDset_ball_position
  1223 ;;		_update_ball_direction
  1224 ;; This function is called by:
  1225 ;;		Startup code after reset
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229  0000'                    _main:	
  1230                           ;psect for function _main
  1231                           
  1232                           
  1233                           ;main.c: 857:     init_Softwear_SPI();
  1234                           
  1235                           ;incstack = 0
  1236                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1237  0000' 118A' 2000' 118A'  	fcall	_init_Softwear_SPI
  1238                           
  1239                           ;main.c: 858:     sendCommand(0xAF);
  1240  0003' 30AF               	movlw	175
  1241  0004' 118A' 2000' 118A'  	fcall	_sendCommand
  1242                           
  1243                           ;main.c: 860:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1244  0007' 301A               	movlw	26
  1245  0008' 1283               	bcf	3,5	;RP0=0, select bank2
  1246  0009' 1703               	bsf	3,6	;RP1=1, select bank2
  1247  000A' 0082'              	movwf	(??_main^(0+256)+2)
  1248  000B' 305E               	movlw	94
  1249  000C' 0081'              	movwf	(??_main^(0+256)+1)
  1250  000D' 306E               	movlw	110
  1251  000E' 0080'              	movwf	??_main^(0+256)
  1252  000F'                    u6887:
  1253  000F' 0B80'              	decfsz	??_main^(0+256),f
  1254  0010' 2800'              	goto	u6887
  1255  0011' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1256  0012' 2800'              	goto	u6887
  1257  0013' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1258  0014' 2800'              	goto	u6887
  1259                           
  1260                           ;main.c: 861:     setDisplayFillingMode(1);
  1261  0015' 3001               	movlw	1
  1262  0016' 118A' 2000' 118A'  	fcall	_setDisplayFillingMode
  1263                           
  1264                           ;main.c: 871:     init_Hardwear_SPI();
  1265  0019' 118A' 2000' 118A'  	fcall	_init_Hardwear_SPI
  1266                           
  1267                           ;main.c: 872:     sendCommand_Hard(0xAE);
  1268  001C' 30AE               	movlw	174
  1269  001D' 118A' 2000' 118A'  	fcall	_sendCommand_Hard
  1270                           
  1271                           ;main.c: 873:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1272  0020' 300D               	movlw	13
  1273  0021' 1283               	bcf	3,5	;RP0=0, select bank2
  1274  0022' 1703               	bsf	3,6	;RP1=1, select bank2
  1275  0023' 0082'              	movwf	(??_main^(0+256)+2)
  1276  0024' 30AF               	movlw	175
  1277  0025' 0081'              	movwf	(??_main^(0+256)+1)
  1278  0026' 30B6               	movlw	182
  1279  0027' 0080'              	movwf	??_main^(0+256)
  1280  0028'                    u6897:
  1281  0028' 0B80'              	decfsz	??_main^(0+256),f
  1282  0029' 2800'              	goto	u6897
  1283  002A' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1284  002B' 2800'              	goto	u6897
  1285  002C' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1286  002D' 2800'              	goto	u6897
  1287                           
  1288                           ;main.c: 874:     sendCommand_Hard(0xAF);
  1289  002E' 30AF               	movlw	175
  1290  002F' 118A' 2000' 118A'  	fcall	_sendCommand_Hard
  1291                           
  1292                           ;main.c: 875:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1293  0032' 300D               	movlw	13
  1294  0033' 1283               	bcf	3,5	;RP0=0, select bank2
  1295  0034' 1703               	bsf	3,6	;RP1=1, select bank2
  1296  0035' 0082'              	movwf	(??_main^(0+256)+2)
  1297  0036' 30AF               	movlw	175
  1298  0037' 0081'              	movwf	(??_main^(0+256)+1)
  1299  0038' 30B6               	movlw	182
  1300  0039' 0080'              	movwf	??_main^(0+256)
  1301  003A'                    u6907:
  1302  003A' 0B80'              	decfsz	??_main^(0+256),f
  1303  003B' 2800'              	goto	u6907
  1304  003C' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1305  003D' 2800'              	goto	u6907
  1306  003E' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1307  003F' 2800'              	goto	u6907
  1308                           
  1309                           ;main.c: 902:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1310  0040' 300D               	movlw	13
  1311  0041' 1283               	bcf	3,5	;RP0=0, select bank2
  1312  0042' 1703               	bsf	3,6	;RP1=1, select bank2
  1313  0043' 0082'              	movwf	(??_main^(0+256)+2)
  1314  0044' 30AF               	movlw	175
  1315  0045' 0081'              	movwf	(??_main^(0+256)+1)
  1316  0046' 30B6               	movlw	182
  1317  0047' 0080'              	movwf	??_main^(0+256)
  1318  0048'                    u6917:
  1319  0048' 0B80'              	decfsz	??_main^(0+256),f
  1320  0049' 2800'              	goto	u6917
  1321  004A' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1322  004B' 2800'              	goto	u6917
  1323  004C' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1324  004D' 2800'              	goto	u6917
  1325                           
  1326                           ;main.c: 903:     setAllDisplayPixels_Hard(0x0000);
  1327  004E' 3000               	movlw	0
  1328  004F' 008A'              	movwf	setAllDisplayPixels_Hard@color
  1329  0050' 008B'              	movwf	setAllDisplayPixels_Hard@color+1
  1330  0051' 118A' 2000' 118A'  	fcall	_setAllDisplayPixels_Hard
  1331  0054'                    l4853:
  1332                           
  1333                           ;main.c: 906:         _delay((unsigned long)((100)*(20000000/4000.0)));
  1334  0054' 3003               	movlw	3
  1335  0055' 1283               	bcf	3,5	;RP0=0, select bank2
  1336  0056' 1703               	bsf	3,6	;RP1=1, select bank2
  1337  0057' 0082'              	movwf	(??_main^(0+256)+2)
  1338  0058' 308A               	movlw	138
  1339  0059' 0081'              	movwf	(??_main^(0+256)+1)
  1340  005A' 3055               	movlw	85
  1341  005B' 0080'              	movwf	??_main^(0+256)
  1342  005C'                    u6927:
  1343  005C' 0B80'              	decfsz	??_main^(0+256),f
  1344  005D' 2800'              	goto	u6927
  1345  005E' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1346  005F' 2800'              	goto	u6927
  1347  0060' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1348  0061' 2800'              	goto	u6927
  1349  0062' 0000               	nop
  1350                           
  1351                           ;main.c: 907:         update_ball_direction();
  1352  0063' 118A' 2000' 118A'  	fcall	_update_ball_direction
  1353                           
  1354                           ;main.c: 908:         updateANDset_ball_position();
  1355  0066' 118A' 2000' 118A'  	fcall	_updateANDset_ball_position
  1356                           
  1357                           ;main.c: 910:         drawFastHLine_Hard(ball_x_positions[1], 3, ball_y_positions[0], 0x
      +                          F800);
  1358  0069' 3003               	movlw	3
  1359  006A' 008A'              	movwf	drawFastHLine_Hard@length
  1360  006B' 1283               	bcf	3,5	;RP0=0, select bank2
  1361  006C' 1703               	bsf	3,6	;RP1=1, select bank2
  1362  006D' 0800'              	movf	_ball_y_positions^(0+256),w
  1363  006E' 008B'              	movwf	drawFastHLine_Hard@in_HLine_y
  1364  006F' 3000               	movlw	0
  1365  0070' 008C'              	movwf	drawFastHLine_Hard@color
  1366  0071' 30F8               	movlw	248
  1367  0072' 008D'              	movwf	drawFastHLine_Hard@color+1
  1368  0073' 0801'              	movf	(_ball_x_positions^(0+256)+1),w
  1369  0074' 118A' 2000' 118A'  	fcall	_drawFastHLine_Hard
  1370                           
  1371                           ;main.c: 911:         drawFastHLine_Hard(ball_x_positions[1], 3, ball_y_positions[1], 0x
      +                          F800);
  1372  0077' 3003               	movlw	3
  1373  0078' 008A'              	movwf	drawFastHLine_Hard@length
  1374  0079' 1283               	bcf	3,5	;RP0=0, select bank2
  1375  007A' 1703               	bsf	3,6	;RP1=1, select bank2
  1376  007B' 0801'              	movf	(_ball_y_positions^(0+256)+1),w
  1377  007C' 008B'              	movwf	drawFastHLine_Hard@in_HLine_y
  1378  007D' 3000               	movlw	0
  1379  007E' 008C'              	movwf	drawFastHLine_Hard@color
  1380  007F' 30F8               	movlw	248
  1381  0080' 008D'              	movwf	drawFastHLine_Hard@color+1
  1382  0081' 0801'              	movf	(_ball_x_positions^(0+256)+1),w
  1383  0082' 118A' 2000' 118A'  	fcall	_drawFastHLine_Hard
  1384                           
  1385                           ;main.c: 912:         drawFastHLine_Hard(ball_x_positions[1], 3, ball_y_positions[2], 0x
      +                          F800);
  1386  0085' 3003               	movlw	3
  1387  0086' 008A'              	movwf	drawFastHLine_Hard@length
  1388  0087' 1283               	bcf	3,5	;RP0=0, select bank2
  1389  0088' 1703               	bsf	3,6	;RP1=1, select bank2
  1390  0089' 0802'              	movf	(_ball_y_positions^(0+256)+2),w
  1391  008A' 008B'              	movwf	drawFastHLine_Hard@in_HLine_y
  1392  008B' 3000               	movlw	0
  1393  008C' 008C'              	movwf	drawFastHLine_Hard@color
  1394  008D' 30F8               	movlw	248
  1395  008E' 008D'              	movwf	drawFastHLine_Hard@color+1
  1396  008F' 0801'              	movf	(_ball_x_positions^(0+256)+1),w
  1397  0090' 118A' 2000' 118A'  	fcall	_drawFastHLine_Hard
  1398  0093' 2800'              	goto	l4853
  1399  0094'                    __end_of_main:
  1400                           
  1401                           	psect	text1
  1402  0000'                    __ptext1:	
  1403 ;; *************** function _updateANDset_ball_position *****************
  1404 ;; Defined at:
  1405 ;;		line 814 in file "main.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  change_in_y_    1   30[BANK2 ] unsigned char 
  1410 ;;  change_in_x_    1   29[BANK2 ] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1420 ;;      Params:         0       0       0       0
  1421 ;;      Locals:         0       0       0       2
  1422 ;;      Temps:          0       0       0       1
  1423 ;;      Totals:         0       0       0       3
  1424 ;;Total ram usage:        3 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; Hardware stack levels required when called: 7
  1427 ;; This function calls:
  1428 ;;		_my_floor
  1429 ;;		_normalized
  1430 ;;		_update_ball_direction
  1431 ;; This function is called by:
  1432 ;;		_main
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436  0000'                    _updateANDset_ball_position:	
  1437                           ;psect for function _updateANDset_ball_position
  1438                           
  1439                           
  1440                           ;main.c: 816:     update_ball_direction();
  1441                           
  1442                           ;incstack = 0
  1443                           ; Regs used in _updateANDset_ball_position: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
  1444  0000' 118A' 2000' 118A'  	fcall	_update_ball_direction
  1445                           
  1446                           ;main.c: 819:     normalized(dx, dy);
  1447  0003' 3000               	movlw	0
  1448  0004' 1283               	bcf	3,5	;RP0=0, select bank2
  1449  0005' 1703               	bsf	3,6	;RP1=1, select bank2
  1450  0006' 0080'              	movwf	(normalized@x+3)^(0+256)
  1451  0007' 3000               	movlw	0
  1452  0008' 0080'              	movwf	(normalized@x+2)^(0+256)
  1453  0009' 3000               	movlw	0
  1454  000A' 0080'              	movwf	(normalized@x+1)^(0+256)
  1455  000B' 3000               	movlw	0
  1456  000C' 0080'              	movwf	normalized@x^(0+256)
  1457  000D' 3000               	movlw	0
  1458  000E' 0080'              	movwf	(normalized@y+3)^(0+256)
  1459  000F' 3000               	movlw	0
  1460  0010' 0080'              	movwf	(normalized@y+2)^(0+256)
  1461  0011' 3000               	movlw	0
  1462  0012' 0080'              	movwf	(normalized@y+1)^(0+256)
  1463  0013' 3000               	movlw	0
  1464  0014' 0080'              	movwf	normalized@y^(0+256)
  1465  0015' 118A' 2000' 118A'  	fcall	_normalized
  1466                           
  1467                           ;main.c: 820:     uint8_t change_in_x_position = (uint8_t)my_floor(normalized_dx);
  1468  0018' 1283               	bcf	3,5	;RP0=0, select bank2
  1469  0019' 1703               	bsf	3,6	;RP1=1, select bank2
  1470  001A' 0800'              	movf	(_normalized_dx+3)^(0+256),w
  1471  001B' 008D'              	movwf	my_floor@f+3
  1472  001C' 0800'              	movf	(_normalized_dx+2)^(0+256),w
  1473  001D' 008C'              	movwf	my_floor@f+2
  1474  001E' 0800'              	movf	(_normalized_dx+1)^(0+256),w
  1475  001F' 008B'              	movwf	my_floor@f+1
  1476  0020' 0800'              	movf	_normalized_dx^(0+256),w
  1477  0021' 008A'              	movwf	my_floor@f
  1478  0022' 118A' 2000' 118A'  	fcall	_my_floor
  1479  0025' 080A'              	movf	?_my_floor,w
  1480  0026' 1283               	bcf	3,5	;RP0=0, select bank2
  1481  0027' 1703               	bsf	3,6	;RP1=1, select bank2
  1482  0028' 0080'              	movwf	updateANDset_ball_position@change_in_x_position^(0+256)
  1483                           
  1484                           ;main.c: 821:     uint8_t change_in_y_position = (uint8_t)my_floor(normalized_dy);
  1485  0029' 0800'              	movf	(_normalized_dy+3)^(0+256),w
  1486  002A' 008D'              	movwf	my_floor@f+3
  1487  002B' 0800'              	movf	(_normalized_dy+2)^(0+256),w
  1488  002C' 008C'              	movwf	my_floor@f+2
  1489  002D' 0800'              	movf	(_normalized_dy+1)^(0+256),w
  1490  002E' 008B'              	movwf	my_floor@f+1
  1491  002F' 0800'              	movf	_normalized_dy^(0+256),w
  1492  0030' 008A'              	movwf	my_floor@f
  1493  0031' 118A' 2000' 118A'  	fcall	_my_floor
  1494  0034' 080A'              	movf	?_my_floor,w
  1495  0035' 1283               	bcf	3,5	;RP0=0, select bank2
  1496  0036' 1703               	bsf	3,6	;RP1=1, select bank2
  1497  0037' 0080'              	movwf	updateANDset_ball_position@change_in_y_position^(0+256)
  1498                           
  1499                           ;main.c: 824:     if(ball_x_direction == 1) {
  1500  0038' 0300'              	decf	_ball_x_direction^(0+256),w
  1501  0039' 1D03               	btfss	3,2
  1502  003A' 2800'              	goto	l269
  1503                           
  1504                           ;main.c: 825:         ball_x_position += change_in_x_position;
  1505  003B' 0800'              	movf	updateANDset_ball_position@change_in_x_position^(0+256),w
  1506  003C' 0080'              	movwf	??_updateANDset_ball_position^(0+256)
  1507  003D' 0800'              	movf	??_updateANDset_ball_position^(0+256),w
  1508  003E' 0780'              	addwf	_ball_x_position^(0+256),f
  1509                           
  1510                           ;main.c: 827:         ball_x_positions[0] = ball_x_positions[0] + change_in_x_position;
  1511  003F' 0800'              	movf	updateANDset_ball_position@change_in_x_position^(0+256),w
  1512  0040' 0700'              	addwf	_ball_x_positions^(0+256),w
  1513  0041' 0080'              	movwf	_ball_x_positions^(0+256)
  1514                           
  1515                           ;main.c: 828:         ball_x_positions[1] = ball_x_positions[1] + change_in_x_position;
  1516  0042' 0800'              	movf	updateANDset_ball_position@change_in_x_position^(0+256),w
  1517  0043' 0701'              	addwf	(_ball_x_positions^(0+256)+1),w
  1518  0044' 0081'              	movwf	(_ball_x_positions^(0+256)+1)
  1519                           
  1520                           ;main.c: 829:         ball_x_positions[2] = ball_x_positions[2] + change_in_x_position;
  1521  0045' 0800'              	movf	updateANDset_ball_position@change_in_x_position^(0+256),w
  1522  0046' 0702'              	addwf	(_ball_x_positions^(0+256)+2),w
  1523  0047' 0082'              	movwf	(_ball_x_positions^(0+256)+2)
  1524  0048'                    l269:	
  1525                           ;main.c: 830:     } else if(ball_x_direction == -1) {
  1526                           
  1527                           
  1528                           ;main.c: 838:     if(ball_y_direction == 1) {
  1529  0048' 0300'              	decf	_ball_y_direction^(0+256),w
  1530  0049' 1D03               	btfss	3,2
  1531  004A' 0008               	return
  1532                           
  1533                           ;main.c: 839:         ball_y_position += change_in_y_position;
  1534  004B' 0800'              	movf	updateANDset_ball_position@change_in_y_position^(0+256),w
  1535  004C' 0080'              	movwf	??_updateANDset_ball_position^(0+256)
  1536  004D' 0800'              	movf	??_updateANDset_ball_position^(0+256),w
  1537  004E' 0780'              	addwf	_ball_y_position^(0+256),f
  1538                           
  1539                           ;main.c: 841:         ball_y_positions[0] = ball_y_positions[0] + change_in_y_position;
  1540  004F' 0800'              	movf	updateANDset_ball_position@change_in_y_position^(0+256),w
  1541  0050' 0700'              	addwf	_ball_y_positions^(0+256),w
  1542  0051' 0080'              	movwf	_ball_y_positions^(0+256)
  1543                           
  1544                           ;main.c: 842:         ball_y_positions[1] = ball_y_positions[1] + change_in_y_position;
  1545  0052' 0800'              	movf	updateANDset_ball_position@change_in_y_position^(0+256),w
  1546  0053' 0701'              	addwf	(_ball_y_positions^(0+256)+1),w
  1547  0054' 0081'              	movwf	(_ball_y_positions^(0+256)+1)
  1548                           
  1549                           ;main.c: 843:         ball_y_positions[2] = ball_y_positions[2] + change_in_y_position;
  1550  0055' 0800'              	movf	updateANDset_ball_position@change_in_y_position^(0+256),w
  1551  0056' 0702'              	addwf	(_ball_y_positions^(0+256)+2),w
  1552  0057' 0082'              	movwf	(_ball_y_positions^(0+256)+2)
  1553                           
  1554                           ;main.c: 844:     } else if(ball_y_direction == -1) {
  1555  0058' 0008               	return
  1556  0059'                    __end_of_updateANDset_ball_position:
  1557                           
  1558                           	psect	text2
  1559  0000'                    __ptext2:	
  1560 ;; *************** function _update_ball_direction *****************
  1561 ;; Defined at:
  1562 ;;		line 800 in file "main.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1576 ;;      Params:         0       0       0       0
  1577 ;;      Locals:         0       0       0       0
  1578 ;;      Temps:          0       0       0       0
  1579 ;;      Totals:         0       0       0       0
  1580 ;;Total ram usage:        0 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_updateANDset_ball_position
  1586 ;;		_main
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590  0000'                    _update_ball_direction:	
  1591                           ;psect for function _update_ball_direction
  1592                           
  1593                           
  1594                           ;main.c: 802:     if(ball_x_direction == 1 && ball_x_position >= 123) {
  1595                           
  1596                           ;incstack = 0
  1597                           ; Regs used in _update_ball_direction: [wreg+status,2+status,0]
  1598  0000' 1283               	bcf	3,5	;RP0=0, select bank2
  1599  0001' 1703               	bsf	3,6	;RP1=1, select bank2
  1600  0002' 0300'              	decf	_ball_x_direction^(0+256),w
  1601  0003' 1D03               	btfss	3,2
  1602  0004' 2800'              	goto	l3461
  1603  0005' 307B               	movlw	123
  1604  0006' 0200'              	subwf	_ball_x_position^(0+256),w
  1605  0007' 1C03               	skipc
  1606  0008' 2800'              	goto	l3461
  1607                           
  1608                           ;main.c: 803:         ball_x_direction = -1;
  1609  0009' 30FF               	movlw	255
  1610  000A' 0080'              	movwf	_ball_x_direction^(0+256)
  1611  000B'                    l3461:	
  1612                           ;main.c: 804:     } else if(ball_x_direction == -1 && ball_x_position <= 4) {
  1613                           
  1614                           
  1615                           ;main.c: 808:     if(ball_y_direction == 1 && ball_y_position >= 94) {
  1616  000B' 0300'              	decf	_ball_y_direction^(0+256),w
  1617  000C' 1D03               	btfss	3,2
  1618  000D' 0008               	return
  1619  000E' 305E               	movlw	94
  1620  000F' 0200'              	subwf	_ball_y_position^(0+256),w
  1621  0010' 1C03               	skipc
  1622  0011' 0008               	return
  1623                           
  1624                           ;main.c: 809:         ball_y_direction = -1;
  1625  0012' 30FF               	movlw	255
  1626  0013' 0080'              	movwf	_ball_y_direction^(0+256)
  1627                           
  1628                           ;main.c: 810:     } else if(ball_y_direction == -1 && ball_y_position <= 2) {
  1629  0014' 0008               	return
  1630  0015'                    __end_of_update_ball_direction:
  1631                           
  1632                           	psect	text3
  1633  0000'                    __ptext3:	
  1634 ;; *************** function _normalized *****************
  1635 ;; Defined at:
  1636 ;;		line 781 in file "main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  x               4   16[BANK2 ] float 
  1639 ;;  y               4   20[BANK2 ] float 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  length          4   24[BANK2 ] float 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1651 ;;      Params:         0       0       0       8
  1652 ;;      Locals:         0       0       0       4
  1653 ;;      Temps:          0       0       0       0
  1654 ;;      Totals:         0       0       0      12
  1655 ;;Total ram usage:       12 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 6
  1658 ;; This function calls:
  1659 ;;		___fldiv
  1660 ;;		_vector_length
  1661 ;; This function is called by:
  1662 ;;		_updateANDset_ball_position
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666  0000'                    _normalized:	
  1667                           ;psect for function _normalized
  1668                           
  1669                           
  1670                           ;main.c: 782:     float length = vector_length(x, y);
  1671                           
  1672                           ;incstack = 0
  1673                           ; Regs used in _normalized: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1674  0000' 1283               	bcf	3,5	;RP0=0, select bank2
  1675  0001' 1703               	bsf	3,6	;RP1=1, select bank2
  1676  0002' 0800'              	movf	(normalized@x+3)^(0+256),w
  1677  0003' 0080'              	movwf	(vector_length@x+3)^(0+256)
  1678  0004' 0800'              	movf	(normalized@x+2)^(0+256),w
  1679  0005' 0080'              	movwf	(vector_length@x+2)^(0+256)
  1680  0006' 0800'              	movf	(normalized@x+1)^(0+256),w
  1681  0007' 0080'              	movwf	(vector_length@x+1)^(0+256)
  1682  0008' 0800'              	movf	normalized@x^(0+256),w
  1683  0009' 0080'              	movwf	vector_length@x^(0+256)
  1684  000A' 0800'              	movf	(normalized@y+3)^(0+256),w
  1685  000B' 0080'              	movwf	(vector_length@y+3)^(0+256)
  1686  000C' 0800'              	movf	(normalized@y+2)^(0+256),w
  1687  000D' 0080'              	movwf	(vector_length@y+2)^(0+256)
  1688  000E' 0800'              	movf	(normalized@y+1)^(0+256),w
  1689  000F' 0080'              	movwf	(vector_length@y+1)^(0+256)
  1690  0010' 0800'              	movf	normalized@y^(0+256),w
  1691  0011' 0080'              	movwf	vector_length@y^(0+256)
  1692  0012' 118A' 2000' 118A'  	fcall	_vector_length
  1693  0015' 1283               	bcf	3,5	;RP0=0, select bank2
  1694  0016' 1703               	bsf	3,6	;RP1=1, select bank2
  1695  0017' 0800'              	movf	(?_vector_length+3)^(0+256),w
  1696  0018' 0080'              	movwf	(normalized@length+3)^(0+256)
  1697  0019' 0800'              	movf	(?_vector_length+2)^(0+256),w
  1698  001A' 0080'              	movwf	(normalized@length+2)^(0+256)
  1699  001B' 0800'              	movf	(?_vector_length+1)^(0+256),w
  1700  001C' 0080'              	movwf	(normalized@length+1)^(0+256)
  1701  001D' 0800'              	movf	?_vector_length^(0+256),w
  1702  001E' 0080'              	movwf	normalized@length^(0+256)
  1703                           
  1704                           ;main.c: 784:     normalized_dx = dx / length;
  1705  001F' 0800'              	movf	(normalized@length+3)^(0+256),w
  1706  0020' 0083'              	movwf	___fldiv@a+3
  1707  0021' 0800'              	movf	(normalized@length+2)^(0+256),w
  1708  0022' 0082'              	movwf	___fldiv@a+2
  1709  0023' 0800'              	movf	(normalized@length+1)^(0+256),w
  1710  0024' 0081'              	movwf	___fldiv@a+1
  1711  0025' 0800'              	movf	normalized@length^(0+256),w
  1712  0026' 0080'              	movwf	___fldiv@a
  1713  0027' 3000               	movlw	0
  1714  0028' 0087'              	movwf	___fldiv@b+3
  1715  0029' 3000               	movlw	0
  1716  002A' 0086'              	movwf	___fldiv@b+2
  1717  002B' 3000               	movlw	0
  1718  002C' 0085'              	movwf	___fldiv@b+1
  1719  002D' 3000               	movlw	0
  1720  002E' 0084'              	movwf	___fldiv@b
  1721  002F' 118A' 2000' 118A'  	fcall	___fldiv
  1722  0032' 0803'              	movf	?___fldiv+3,w
  1723  0033' 1283               	bcf	3,5	;RP0=0, select bank2
  1724  0034' 1703               	bsf	3,6	;RP1=1, select bank2
  1725  0035' 0080'              	movwf	(_normalized_dx+3)^(0+256)
  1726  0036' 0802'              	movf	?___fldiv+2,w
  1727  0037' 0080'              	movwf	(_normalized_dx+2)^(0+256)
  1728  0038' 0801'              	movf	?___fldiv+1,w
  1729  0039' 0080'              	movwf	(_normalized_dx+1)^(0+256)
  1730  003A' 0800'              	movf	?___fldiv,w
  1731  003B' 0080'              	movwf	_normalized_dx^(0+256)
  1732                           
  1733                           ;main.c: 785:     normalized_dy = dy / length;
  1734  003C' 0800'              	movf	(normalized@length+3)^(0+256),w
  1735  003D' 0083'              	movwf	___fldiv@a+3
  1736  003E' 0800'              	movf	(normalized@length+2)^(0+256),w
  1737  003F' 0082'              	movwf	___fldiv@a+2
  1738  0040' 0800'              	movf	(normalized@length+1)^(0+256),w
  1739  0041' 0081'              	movwf	___fldiv@a+1
  1740  0042' 0800'              	movf	normalized@length^(0+256),w
  1741  0043' 0080'              	movwf	___fldiv@a
  1742  0044' 3000               	movlw	0
  1743  0045' 0087'              	movwf	___fldiv@b+3
  1744  0046' 3000               	movlw	0
  1745  0047' 0086'              	movwf	___fldiv@b+2
  1746  0048' 3000               	movlw	0
  1747  0049' 0085'              	movwf	___fldiv@b+1
  1748  004A' 3000               	movlw	0
  1749  004B' 0084'              	movwf	___fldiv@b
  1750  004C' 118A' 2000'        	fcall	___fldiv
  1751  004E' 0803'              	movf	?___fldiv+3,w
  1752  004F' 1283               	bcf	3,5	;RP0=0, select bank2
  1753  0050' 1703               	bsf	3,6	;RP1=1, select bank2
  1754  0051' 0080'              	movwf	(_normalized_dy+3)^(0+256)
  1755  0052' 0802'              	movf	?___fldiv+2,w
  1756  0053' 0080'              	movwf	(_normalized_dy+2)^(0+256)
  1757  0054' 0801'              	movf	?___fldiv+1,w
  1758  0055' 0080'              	movwf	(_normalized_dy+1)^(0+256)
  1759  0056' 0800'              	movf	?___fldiv,w
  1760  0057' 0080'              	movwf	_normalized_dy^(0+256)
  1761  0058' 0008               	return
  1762  0059'                    __end_of_normalized:
  1763                           
  1764                           	psect	text4
  1765  0000'                    __ptext4:	
  1766 ;; *************** function _vector_length *****************
  1767 ;; Defined at:
  1768 ;;		line 777 in file "main.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  x               4    0[BANK2 ] float 
  1771 ;;  y               4    4[BANK2 ] float 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  4    0[BANK2 ] float 
  1776 ;; Registers used:
  1777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1783 ;;      Params:         0       0       0       8
  1784 ;;      Locals:         0       0       0       8
  1785 ;;      Temps:          0       0       0       0
  1786 ;;      Totals:         0       0       0      16
  1787 ;;Total ram usage:       16 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 5
  1790 ;; This function calls:
  1791 ;;		___fladd
  1792 ;;		___flmul
  1793 ;;		_pow
  1794 ;;		_sqrt
  1795 ;; This function is called by:
  1796 ;;		_normalized
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800  0000'                    _vector_length:	
  1801                           ;psect for function _vector_length
  1802                           
  1803                           
  1804                           ;main.c: 779:     return sqrt(pow(x, 2) + pow(y, 2) * 1.0);
  1805                           
  1806                           ;incstack = 0
  1807                           ; Regs used in _vector_length: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1808  0000' 3040               	movlw	64
  1809  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  1810  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  1811  0003' 0080'              	movwf	(pow@y+3)^(0+128)
  1812  0004' 3000               	movlw	0
  1813  0005' 0080'              	movwf	(pow@y+2)^(0+128)
  1814  0006' 3000               	movlw	0
  1815  0007' 0080'              	movwf	(pow@y+1)^(0+128)
  1816  0008' 3000               	movlw	0
  1817  0009' 0080'              	movwf	pow@y^(0+128)
  1818  000A' 1283               	bcf	3,5	;RP0=0, select bank2
  1819  000B' 1703               	bsf	3,6	;RP1=1, select bank2
  1820  000C' 0800'              	movf	(vector_length@y+3)^(0+256),w
  1821  000D' 1683               	bsf	3,5	;RP0=1, select bank1
  1822  000E' 1303               	bcf	3,6	;RP1=0, select bank1
  1823  000F' 0080'              	movwf	(pow@x+3)^(0+128)
  1824  0010' 1283               	bcf	3,5	;RP0=0, select bank2
  1825  0011' 1703               	bsf	3,6	;RP1=1, select bank2
  1826  0012' 0800'              	movf	(vector_length@y+2)^(0+256),w
  1827  0013' 1683               	bsf	3,5	;RP0=1, select bank1
  1828  0014' 1303               	bcf	3,6	;RP1=0, select bank1
  1829  0015' 0080'              	movwf	(pow@x+2)^(0+128)
  1830  0016' 1283               	bcf	3,5	;RP0=0, select bank2
  1831  0017' 1703               	bsf	3,6	;RP1=1, select bank2
  1832  0018' 0800'              	movf	(vector_length@y+1)^(0+256),w
  1833  0019' 1683               	bsf	3,5	;RP0=1, select bank1
  1834  001A' 1303               	bcf	3,6	;RP1=0, select bank1
  1835  001B' 0080'              	movwf	(pow@x+1)^(0+128)
  1836  001C' 1283               	bcf	3,5	;RP0=0, select bank2
  1837  001D' 1703               	bsf	3,6	;RP1=1, select bank2
  1838  001E' 0800'              	movf	vector_length@y^(0+256),w
  1839  001F' 1683               	bsf	3,5	;RP0=1, select bank1
  1840  0020' 1303               	bcf	3,6	;RP1=0, select bank1
  1841  0021' 0080'              	movwf	pow@x^(0+128)
  1842  0022' 118A' 2000' 118A'  	fcall	_pow
  1843  0025' 1683               	bsf	3,5	;RP0=1, select bank1
  1844  0026' 1303               	bcf	3,6	;RP1=0, select bank1
  1845  0027' 0800'              	movf	(?_pow+3)^(0+128),w
  1846  0028' 1283               	bcf	3,5	;RP0=0, select bank2
  1847  0029' 1703               	bsf	3,6	;RP1=1, select bank2
  1848  002A' 0080'              	movwf	(_vector_length$1244+3)^(0+256)
  1849  002B' 1683               	bsf	3,5	;RP0=1, select bank1
  1850  002C' 1303               	bcf	3,6	;RP1=0, select bank1
  1851  002D' 0800'              	movf	(?_pow+2)^(0+128),w
  1852  002E' 1283               	bcf	3,5	;RP0=0, select bank2
  1853  002F' 1703               	bsf	3,6	;RP1=1, select bank2
  1854  0030' 0080'              	movwf	(_vector_length$1244+2)^(0+256)
  1855  0031' 1683               	bsf	3,5	;RP0=1, select bank1
  1856  0032' 1303               	bcf	3,6	;RP1=0, select bank1
  1857  0033' 0800'              	movf	(?_pow+1)^(0+128),w
  1858  0034' 1283               	bcf	3,5	;RP0=0, select bank2
  1859  0035' 1703               	bsf	3,6	;RP1=1, select bank2
  1860  0036' 0080'              	movwf	(_vector_length$1244+1)^(0+256)
  1861  0037' 1683               	bsf	3,5	;RP0=1, select bank1
  1862  0038' 1303               	bcf	3,6	;RP1=0, select bank1
  1863  0039' 0800'              	movf	?_pow^(0+128),w
  1864  003A' 1283               	bcf	3,5	;RP0=0, select bank2
  1865  003B' 1703               	bsf	3,6	;RP1=1, select bank2
  1866  003C' 0080'              	movwf	_vector_length$1244^(0+256)
  1867                           
  1868                           ;main.c: 779:     return sqrt(pow(x, 2) + pow(y, 2) * 1.0);
  1869  003D' 3040               	movlw	64
  1870  003E' 1683               	bsf	3,5	;RP0=1, select bank1
  1871  003F' 1303               	bcf	3,6	;RP1=0, select bank1
  1872  0040' 0080'              	movwf	(pow@y+3)^(0+128)
  1873  0041' 3000               	movlw	0
  1874  0042' 0080'              	movwf	(pow@y+2)^(0+128)
  1875  0043' 3000               	movlw	0
  1876  0044' 0080'              	movwf	(pow@y+1)^(0+128)
  1877  0045' 3000               	movlw	0
  1878  0046' 0080'              	movwf	pow@y^(0+128)
  1879  0047' 1283               	bcf	3,5	;RP0=0, select bank2
  1880  0048' 1703               	bsf	3,6	;RP1=1, select bank2
  1881  0049' 0800'              	movf	(vector_length@x+3)^(0+256),w
  1882  004A' 1683               	bsf	3,5	;RP0=1, select bank1
  1883  004B' 1303               	bcf	3,6	;RP1=0, select bank1
  1884  004C' 0080'              	movwf	(pow@x+3)^(0+128)
  1885  004D' 1283               	bcf	3,5	;RP0=0, select bank2
  1886  004E' 1703               	bsf	3,6	;RP1=1, select bank2
  1887  004F' 0800'              	movf	(vector_length@x+2)^(0+256),w
  1888  0050' 1683               	bsf	3,5	;RP0=1, select bank1
  1889  0051' 1303               	bcf	3,6	;RP1=0, select bank1
  1890  0052' 0080'              	movwf	(pow@x+2)^(0+128)
  1891  0053' 1283               	bcf	3,5	;RP0=0, select bank2
  1892  0054' 1703               	bsf	3,6	;RP1=1, select bank2
  1893  0055' 0800'              	movf	(vector_length@x+1)^(0+256),w
  1894  0056' 1683               	bsf	3,5	;RP0=1, select bank1
  1895  0057' 1303               	bcf	3,6	;RP1=0, select bank1
  1896  0058' 0080'              	movwf	(pow@x+1)^(0+128)
  1897  0059' 1283               	bcf	3,5	;RP0=0, select bank2
  1898  005A' 1703               	bsf	3,6	;RP1=1, select bank2
  1899  005B' 0800'              	movf	vector_length@x^(0+256),w
  1900  005C' 1683               	bsf	3,5	;RP0=1, select bank1
  1901  005D' 1303               	bcf	3,6	;RP1=0, select bank1
  1902  005E' 0080'              	movwf	pow@x^(0+128)
  1903  005F' 118A' 2000' 118A'  	fcall	_pow
  1904  0062' 1683               	bsf	3,5	;RP0=1, select bank1
  1905  0063' 1303               	bcf	3,6	;RP1=0, select bank1
  1906  0064' 0800'              	movf	(?_pow+3)^(0+128),w
  1907  0065' 1283               	bcf	3,5	;RP0=0, select bank2
  1908  0066' 1703               	bsf	3,6	;RP1=1, select bank2
  1909  0067' 0080'              	movwf	(_vector_length$1245+3)^(0+256)
  1910  0068' 1683               	bsf	3,5	;RP0=1, select bank1
  1911  0069' 1303               	bcf	3,6	;RP1=0, select bank1
  1912  006A' 0800'              	movf	(?_pow+2)^(0+128),w
  1913  006B' 1283               	bcf	3,5	;RP0=0, select bank2
  1914  006C' 1703               	bsf	3,6	;RP1=1, select bank2
  1915  006D' 0080'              	movwf	(_vector_length$1245+2)^(0+256)
  1916  006E' 1683               	bsf	3,5	;RP0=1, select bank1
  1917  006F' 1303               	bcf	3,6	;RP1=0, select bank1
  1918  0070' 0800'              	movf	(?_pow+1)^(0+128),w
  1919  0071' 1283               	bcf	3,5	;RP0=0, select bank2
  1920  0072' 1703               	bsf	3,6	;RP1=1, select bank2
  1921  0073' 0080'              	movwf	(_vector_length$1245+1)^(0+256)
  1922  0074' 1683               	bsf	3,5	;RP0=1, select bank1
  1923  0075' 1303               	bcf	3,6	;RP1=0, select bank1
  1924  0076' 0800'              	movf	?_pow^(0+128),w
  1925  0077' 1283               	bcf	3,5	;RP0=0, select bank2
  1926  0078' 1703               	bsf	3,6	;RP1=1, select bank2
  1927  0079' 0080'              	movwf	_vector_length$1245^(0+256)
  1928                           
  1929                           ;main.c: 779:     return sqrt(pow(x, 2) + pow(y, 2) * 1.0);
  1930  007A' 303F               	movlw	63
  1931  007B' 1283               	bcf	3,5	;RP0=0, select bank0
  1932  007C' 1303               	bcf	3,6	;RP1=0, select bank0
  1933  007D' 00A0'              	movwf	___flmul@b+3
  1934  007E' 3080               	movlw	128
  1935  007F' 009F'              	movwf	___flmul@b+2
  1936  0080' 3000               	movlw	0
  1937  0081' 009E'              	movwf	___flmul@b+1
  1938  0082' 3000               	movlw	0
  1939  0083' 009D'              	movwf	___flmul@b
  1940  0084' 1283               	bcf	3,5	;RP0=0, select bank2
  1941  0085' 1703               	bsf	3,6	;RP1=1, select bank2
  1942  0086' 0800'              	movf	(_vector_length$1244+3)^(0+256),w
  1943  0087' 1283               	bcf	3,5	;RP0=0, select bank0
  1944  0088' 1303               	bcf	3,6	;RP1=0, select bank0
  1945  0089' 00A4'              	movwf	___flmul@a+3
  1946  008A' 1283               	bcf	3,5	;RP0=0, select bank2
  1947  008B' 1703               	bsf	3,6	;RP1=1, select bank2
  1948  008C' 0800'              	movf	(_vector_length$1244+2)^(0+256),w
  1949  008D' 1283               	bcf	3,5	;RP0=0, select bank0
  1950  008E' 1303               	bcf	3,6	;RP1=0, select bank0
  1951  008F' 00A3'              	movwf	___flmul@a+2
  1952  0090' 1283               	bcf	3,5	;RP0=0, select bank2
  1953  0091' 1703               	bsf	3,6	;RP1=1, select bank2
  1954  0092' 0800'              	movf	(_vector_length$1244+1)^(0+256),w
  1955  0093' 1283               	bcf	3,5	;RP0=0, select bank0
  1956  0094' 1303               	bcf	3,6	;RP1=0, select bank0
  1957  0095' 00A2'              	movwf	___flmul@a+1
  1958  0096' 1283               	bcf	3,5	;RP0=0, select bank2
  1959  0097' 1703               	bsf	3,6	;RP1=1, select bank2
  1960  0098' 0800'              	movf	_vector_length$1244^(0+256),w
  1961  0099' 1283               	bcf	3,5	;RP0=0, select bank0
  1962  009A' 1303               	bcf	3,6	;RP1=0, select bank0
  1963  009B' 00A1'              	movwf	___flmul@a
  1964  009C' 118A' 2000' 118A'  	fcall	___flmul
  1965  009F' 1283               	bcf	3,5	;RP0=0, select bank0
  1966  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
  1967  00A1' 0820'              	movf	?___flmul+3,w
  1968  00A2' 00BA'              	movwf	___fladd@b+3
  1969  00A3' 081F'              	movf	?___flmul+2,w
  1970  00A4' 00B9'              	movwf	___fladd@b+2
  1971  00A5' 081E'              	movf	?___flmul+1,w
  1972  00A6' 00B8'              	movwf	___fladd@b+1
  1973  00A7' 081D'              	movf	?___flmul,w
  1974  00A8' 00B7'              	movwf	___fladd@b
  1975  00A9' 1283               	bcf	3,5	;RP0=0, select bank2
  1976  00AA' 1703               	bsf	3,6	;RP1=1, select bank2
  1977  00AB' 0800'              	movf	(_vector_length$1245+3)^(0+256),w
  1978  00AC' 1283               	bcf	3,5	;RP0=0, select bank0
  1979  00AD' 1303               	bcf	3,6	;RP1=0, select bank0
  1980  00AE' 00BE'              	movwf	___fladd@a+3
  1981  00AF' 1283               	bcf	3,5	;RP0=0, select bank2
  1982  00B0' 1703               	bsf	3,6	;RP1=1, select bank2
  1983  00B1' 0800'              	movf	(_vector_length$1245+2)^(0+256),w
  1984  00B2' 1283               	bcf	3,5	;RP0=0, select bank0
  1985  00B3' 1303               	bcf	3,6	;RP1=0, select bank0
  1986  00B4' 00BD'              	movwf	___fladd@a+2
  1987  00B5' 1283               	bcf	3,5	;RP0=0, select bank2
  1988  00B6' 1703               	bsf	3,6	;RP1=1, select bank2
  1989  00B7' 0800'              	movf	(_vector_length$1245+1)^(0+256),w
  1990  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
  1991  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
  1992  00BA' 00BC'              	movwf	___fladd@a+1
  1993  00BB' 1283               	bcf	3,5	;RP0=0, select bank2
  1994  00BC' 1703               	bsf	3,6	;RP1=1, select bank2
  1995  00BD' 0800'              	movf	_vector_length$1245^(0+256),w
  1996  00BE' 1283               	bcf	3,5	;RP0=0, select bank0
  1997  00BF' 1303               	bcf	3,6	;RP1=0, select bank0
  1998  00C0' 00BB'              	movwf	___fladd@a
  1999  00C1' 118A' 2000' 118A'  	fcall	___fladd
  2000  00C4' 1283               	bcf	3,5	;RP0=0, select bank0
  2001  00C5' 1303               	bcf	3,6	;RP1=0, select bank0
  2002  00C6' 083A'              	movf	?___fladd+3,w
  2003  00C7' 1683               	bsf	3,5	;RP0=1, select bank1
  2004  00C8' 1303               	bcf	3,6	;RP1=0, select bank1
  2005  00C9' 0080'              	movwf	(sqrt@a+3)^(0+128)
  2006  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
  2007  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
  2008  00CC' 0839'              	movf	?___fladd+2,w
  2009  00CD' 1683               	bsf	3,5	;RP0=1, select bank1
  2010  00CE' 1303               	bcf	3,6	;RP1=0, select bank1
  2011  00CF' 0080'              	movwf	(sqrt@a+2)^(0+128)
  2012  00D0' 1283               	bcf	3,5	;RP0=0, select bank0
  2013  00D1' 1303               	bcf	3,6	;RP1=0, select bank0
  2014  00D2' 0838'              	movf	?___fladd+1,w
  2015  00D3' 1683               	bsf	3,5	;RP0=1, select bank1
  2016  00D4' 1303               	bcf	3,6	;RP1=0, select bank1
  2017  00D5' 0080'              	movwf	(sqrt@a+1)^(0+128)
  2018  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
  2019  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
  2020  00D8' 0837'              	movf	?___fladd,w
  2021  00D9' 1683               	bsf	3,5	;RP0=1, select bank1
  2022  00DA' 1303               	bcf	3,6	;RP1=0, select bank1
  2023  00DB' 0080'              	movwf	sqrt@a^(0+128)
  2024  00DC' 118A' 2000'        	fcall	_sqrt
  2025  00DE' 1683               	bsf	3,5	;RP0=1, select bank1
  2026  00DF' 1303               	bcf	3,6	;RP1=0, select bank1
  2027  00E0' 0800'              	movf	(?_sqrt+3)^(0+128),w
  2028  00E1' 1283               	bcf	3,5	;RP0=0, select bank2
  2029  00E2' 1703               	bsf	3,6	;RP1=1, select bank2
  2030  00E3' 0080'              	movwf	(?_vector_length+3)^(0+256)
  2031  00E4' 1683               	bsf	3,5	;RP0=1, select bank1
  2032  00E5' 1303               	bcf	3,6	;RP1=0, select bank1
  2033  00E6' 0800'              	movf	(?_sqrt+2)^(0+128),w
  2034  00E7' 1283               	bcf	3,5	;RP0=0, select bank2
  2035  00E8' 1703               	bsf	3,6	;RP1=1, select bank2
  2036  00E9' 0080'              	movwf	(?_vector_length+2)^(0+256)
  2037  00EA' 1683               	bsf	3,5	;RP0=1, select bank1
  2038  00EB' 1303               	bcf	3,6	;RP1=0, select bank1
  2039  00EC' 0800'              	movf	(?_sqrt+1)^(0+128),w
  2040  00ED' 1283               	bcf	3,5	;RP0=0, select bank2
  2041  00EE' 1703               	bsf	3,6	;RP1=1, select bank2
  2042  00EF' 0080'              	movwf	(?_vector_length+1)^(0+256)
  2043  00F0' 1683               	bsf	3,5	;RP0=1, select bank1
  2044  00F1' 1303               	bcf	3,6	;RP1=0, select bank1
  2045  00F2' 0800'              	movf	?_sqrt^(0+128),w
  2046  00F3' 1283               	bcf	3,5	;RP0=0, select bank2
  2047  00F4' 1703               	bsf	3,6	;RP1=1, select bank2
  2048  00F5' 0080'              	movwf	?_vector_length^(0+256)
  2049  00F6' 0008               	return
  2050  00F7'                    __end_of_vector_length:
  2051                           
  2052                           	psect	text5
  2053  0000'                    __ptext5:	
  2054 ;; *************** function _sqrt *****************
  2055 ;; Defined at:
  2056 ;;		line 9 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcsqrt.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  a               4   51[BANK1 ] float 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  frac            4   76[BANK1 ] unsigned long 
  2061 ;;  root            4   72[BANK1 ] struct .
  2062 ;;  grs             4   66[BANK1 ] unsigned long 
  2063 ;;  tfrac           4   61[BANK1 ] unsigned long 
  2064 ;;  exp             2   70[BANK1 ] int 
  2065 ;;  p               1   65[BANK1 ] unsigned char 
  2066 ;;  i               1   60[BANK1 ] unsigned char 
  2067 ;;  sign            1   59[BANK1 ] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  4   51[BANK1 ] unsigned char 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, btemp+1
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2077 ;;      Params:         0       0       4       0
  2078 ;;      Locals:         0       0      21       0
  2079 ;;      Temps:          0       0       4       0
  2080 ;;      Totals:         0       0      29       0
  2081 ;;Total ram usage:       29 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_vector_length
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090  0000'                    _sqrt:	
  2091                           ;psect for function _sqrt
  2092                           
  2093                           
  2094                           ;incstack = 0
  2095                           ; Regs used in _sqrt: [wreg+status,2+status,0+btemp+1]
  2096  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2097  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2098  0002' 0803'              	movf	(sqrt@a^(0+128)+3),w
  2099  0003' 3980               	andlw	128
  2100  0004' 0080'              	movwf	sqrt@sign^(0+128)
  2101  0005' 0803'              	movf	(sqrt@a^(0+128)+3),w
  2102  0006' 0080'              	movwf	??_sqrt^(0+128)
  2103  0007' 0700'              	addwf	??_sqrt^(0+128),w
  2104  0008' 0080'              	movwf	sqrt@p^(0+128)
  2105  0009' 1B82'              	btfsc	(sqrt@a^(0+128)+2),7
  2106  000A' 1400'              	bsf	sqrt@p^(0+128),0
  2107  000B' 0800'              	movf	sqrt@p^(0+128),w
  2108  000C' 0080'              	movwf	??_sqrt^(0+128)
  2109  000D' 0181'              	clrf	(??_sqrt^(0+128)+1)
  2110  000E' 0800'              	movf	??_sqrt^(0+128),w
  2111  000F' 0080'              	movwf	sqrt@exp^(0+128)
  2112  0010' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2113  0011' 0080'              	movwf	(sqrt@exp+1)^(0+128)
  2114  0012' 30FF               	movlw	255
  2115  0013' 0500'              	andwf	sqrt@a^(0+128),w
  2116  0014' 0080'              	movwf	sqrt@frac^(0+128)
  2117  0015' 30FF               	movlw	255
  2118  0016' 0500'              	andwf	(sqrt@a+1)^(0+128),w
  2119  0017' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2120  0018' 307F               	movlw	127
  2121  0019' 0500'              	andwf	(sqrt@a+2)^(0+128),w
  2122  001A' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2123  001B' 3000               	movlw	0
  2124  001C' 0500'              	andwf	(sqrt@a+3)^(0+128),w
  2125  001D' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2126  001E' 0800'              	movf	sqrt@exp^(0+128),w
  2127  001F' 0400'              	iorwf	(sqrt@exp+1)^(0+128),w
  2128  0020' 1903               	btfsc	3,2
  2129  0021' 2800'              	goto	l4719
  2130  0022' 1782'              	bsf	(sqrt@frac^(0+128)+2),7
  2131  0023' 0A00'              	incf	sqrt@exp^(0+128),w
  2132  0024' 0400'              	iorwf	(sqrt@exp+1)^(0+128),w
  2133  0025' 1D03               	btfss	3,2
  2134  0026' 2800'              	goto	l4723
  2135  0027'                    l4719:
  2136  0027' 3000               	movlw	0
  2137  0028' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2138  0029' 3000               	movlw	0
  2139  002A' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2140  002B' 3000               	movlw	0
  2141  002C' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2142  002D' 3000               	movlw	0
  2143  002E' 0080'              	movwf	sqrt@frac^(0+128)
  2144  002F'                    l4723:
  2145  002F' 0800'              	movf	sqrt@exp^(0+128),w
  2146  0030' 0400'              	iorwf	(sqrt@exp+1)^(0+128),w
  2147  0031' 1D03               	btfss	3,2
  2148  0032' 2800'              	goto	l4729
  2149  0033' 3000               	movlw	0
  2150  0034' 0080'              	movwf	(?_sqrt+3)^(0+128)
  2151  0035' 3000               	movlw	0
  2152  0036' 0080'              	movwf	(?_sqrt+2)^(0+128)
  2153  0037' 3000               	movlw	0
  2154  0038' 0080'              	movwf	(?_sqrt+1)^(0+128)
  2155  0039' 3000               	movlw	0
  2156  003A' 0080'              	movwf	?_sqrt^(0+128)
  2157  003B' 0008               	return
  2158  003C'                    l4729:
  2159  003C' 0800'              	movf	sqrt@sign^(0+128),w
  2160  003D' 1903               	btfsc	3,2
  2161  003E' 2800'              	goto	l4735
  2162  003F' 3000               	movlw	0
  2163  0040' 0080'              	movwf	(sqrt@root+3)^(0+128)
  2164  0041' 3040               	movlw	64
  2165  0042' 0080'              	movwf	(sqrt@root+2)^(0+128)
  2166  0043' 3000               	movlw	0
  2167  0044' 0080'              	movwf	(sqrt@root+1)^(0+128)
  2168  0045' 3000               	movlw	0
  2169  0046' 0080'              	movwf	sqrt@root^(0+128)
  2170  0047' 3080               	movlw	128
  2171  0048' 0482'              	iorwf	(sqrt@root^(0+128)+2),f
  2172  0049' 30FF               	movlw	255
  2173  004A' 0482'              	iorwf	((sqrt@root+1)^(0+128)+2),f
  2174  004B' 3021               	movlw	33
  2175  004C' 1283               	bcf	3,5	;RP0=0, select bank2
  2176  004D' 1703               	bsf	3,6	;RP1=1, select bank2
  2177  004E' 0080'              	movwf	_errno^(0+256)
  2178  004F' 3000               	movlw	0
  2179  0050' 0081'              	movwf	(_errno^(0+256)+1)
  2180  0051' 1683               	bsf	3,5	;RP0=1, select bank1
  2181  0052' 1303               	bcf	3,6	;RP1=0, select bank1
  2182  0053' 0800'              	movf	(sqrt@root+3)^(0+128),w
  2183  0054' 0080'              	movwf	(?_sqrt+3)^(0+128)
  2184  0055' 0800'              	movf	(sqrt@root+2)^(0+128),w
  2185  0056' 0080'              	movwf	(?_sqrt+2)^(0+128)
  2186  0057' 0800'              	movf	(sqrt@root+1)^(0+128),w
  2187  0058' 0080'              	movwf	(?_sqrt+1)^(0+128)
  2188  0059' 0800'              	movf	sqrt@root^(0+128),w
  2189  005A' 0080'              	movwf	?_sqrt^(0+128)
  2190  005B' 0008               	return
  2191  005C'                    l4735:
  2192  005C' 0A00'              	incf	sqrt@exp^(0+128),w
  2193  005D' 0400'              	iorwf	(sqrt@exp+1)^(0+128),w
  2194  005E' 1D03               	btfss	3,2
  2195  005F' 2800'              	goto	l4741
  2196  0060' 307F               	movlw	127
  2197  0061' 0080'              	movwf	(sqrt@root+3)^(0+128)
  2198  0062' 3080               	movlw	128
  2199  0063' 0080'              	movwf	(sqrt@root+2)^(0+128)
  2200  0064' 3000               	movlw	0
  2201  0065' 0080'              	movwf	(sqrt@root+1)^(0+128)
  2202  0066' 3000               	movlw	0
  2203  0067' 0080'              	movwf	sqrt@root^(0+128)
  2204  0068' 0800'              	movf	(sqrt@root+3)^(0+128),w
  2205  0069' 0080'              	movwf	(?_sqrt+3)^(0+128)
  2206  006A' 0800'              	movf	(sqrt@root+2)^(0+128),w
  2207  006B' 0080'              	movwf	(?_sqrt+2)^(0+128)
  2208  006C' 0800'              	movf	(sqrt@root+1)^(0+128),w
  2209  006D' 0080'              	movwf	(?_sqrt+1)^(0+128)
  2210  006E' 0800'              	movf	sqrt@root^(0+128),w
  2211  006F' 0080'              	movwf	?_sqrt^(0+128)
  2212  0070' 0008               	return
  2213  0071'                    l4741:
  2214  0071' 3081               	movlw	129
  2215  0072' 0780'              	addwf	sqrt@exp^(0+128),f
  2216  0073' 1803               	skipnc
  2217  0074' 0A80'              	incf	(sqrt@exp+1)^(0+128),f
  2218  0075' 30FF               	movlw	255
  2219  0076' 0780'              	addwf	(sqrt@exp+1)^(0+128),f
  2220  0077' 0800'              	movf	sqrt@exp^(0+128),w
  2221  0078' 3901               	andlw	1
  2222  0079' 0080'              	movwf	sqrt@p^(0+128)
  2223  007A' 3001               	movlw	1
  2224  007B' 00FF               	movwf	127
  2225  007C'                    u6725:
  2226  007C' 0D00'              	rlf	(sqrt@exp+1)^(0+128),w
  2227  007D' 0C80'              	rrf	(sqrt@exp+1)^(0+128),f
  2228  007E' 0C80'              	rrf	sqrt@exp^(0+128),f
  2229  007F' 0BFF               	decfsz	127,f
  2230  0080' 2800'              	goto	u6725
  2231  0081' 307F               	movlw	127
  2232  0082' 0780'              	addwf	sqrt@exp^(0+128),f
  2233  0083' 1803               	skipnc
  2234  0084' 0A80'              	incf	(sqrt@exp+1)^(0+128),f
  2235  0085' 3000               	movlw	0
  2236  0086' 0780'              	addwf	(sqrt@exp+1)^(0+128),f
  2237  0087' 1003               	clrc
  2238  0088' 0D00'              	rlf	sqrt@frac^(0+128),w
  2239  0089' 0080'              	movwf	sqrt@tfrac^(0+128)
  2240  008A' 0D00'              	rlf	(sqrt@frac+1)^(0+128),w
  2241  008B' 0080'              	movwf	(sqrt@tfrac+1)^(0+128)
  2242  008C' 0D00'              	rlf	(sqrt@frac+2)^(0+128),w
  2243  008D' 0080'              	movwf	(sqrt@tfrac+2)^(0+128)
  2244  008E' 0D00'              	rlf	(sqrt@frac+3)^(0+128),w
  2245  008F' 0080'              	movwf	(sqrt@tfrac+3)^(0+128)
  2246  0090' 3000               	movlw	0
  2247  0091' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2248  0092' 3000               	movlw	0
  2249  0093' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2250  0094' 3000               	movlw	0
  2251  0095' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2252  0096' 3000               	movlw	0
  2253  0097' 0080'              	movwf	sqrt@frac^(0+128)
  2254  0098' 3001               	movlw	1
  2255  0099' 0080'              	movwf	(sqrt@grs+3)^(0+128)
  2256  009A' 3000               	movlw	0
  2257  009B' 0080'              	movwf	(sqrt@grs+2)^(0+128)
  2258  009C' 3000               	movlw	0
  2259  009D' 0080'              	movwf	(sqrt@grs+1)^(0+128)
  2260  009E' 3000               	movlw	0
  2261  009F' 0080'              	movwf	sqrt@grs^(0+128)
  2262  00A0' 0800'              	movf	sqrt@p^(0+128),w
  2263  00A1' 1903               	btfsc	3,2
  2264  00A2' 2800'              	goto	l4759
  2265  00A3' 3001               	movlw	1
  2266  00A4' 0080'              	movwf	??_sqrt^(0+128)
  2267  00A5'                    u6745:
  2268  00A5' 1003               	clrc
  2269  00A6' 0D80'              	rlf	sqrt@tfrac^(0+128),f
  2270  00A7' 0D80'              	rlf	(sqrt@tfrac+1)^(0+128),f
  2271  00A8' 0D80'              	rlf	(sqrt@tfrac+2)^(0+128),f
  2272  00A9' 0D80'              	rlf	(sqrt@tfrac+3)^(0+128),f
  2273  00AA' 0B80'              	decfsz	??_sqrt^(0+128),f
  2274  00AB' 2800'              	goto	u6745
  2275  00AC'                    l4759:
  2276  00AC' 0180'              	clrf	sqrt@i^(0+128)
  2277  00AD'                    l4767:
  2278  00AD' 3019               	movlw	25
  2279  00AE' 0200'              	subwf	sqrt@i^(0+128),w
  2280  00AF' 1803               	btfsc	3,0
  2281  00B0' 2800'              	goto	l4769
  2282  00B1' 0800'              	movf	sqrt@grs^(0+128),w
  2283  00B2' 0480'              	iorwf	sqrt@frac^(0+128),f
  2284  00B3' 0800'              	movf	(sqrt@grs+1)^(0+128),w
  2285  00B4' 0480'              	iorwf	(sqrt@frac+1)^(0+128),f
  2286  00B5' 0800'              	movf	(sqrt@grs+2)^(0+128),w
  2287  00B6' 0480'              	iorwf	(sqrt@frac+2)^(0+128),f
  2288  00B7' 0800'              	movf	(sqrt@grs+3)^(0+128),w
  2289  00B8' 0480'              	iorwf	(sqrt@frac+3)^(0+128),f
  2290  00B9' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2291  00BA' 0200'              	subwf	(sqrt@tfrac+3)^(0+128),w
  2292  00BB' 1D03               	skipz
  2293  00BC' 2800'              	goto	u6755
  2294  00BD' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2295  00BE' 0200'              	subwf	(sqrt@tfrac+2)^(0+128),w
  2296  00BF' 1D03               	skipz
  2297  00C0' 2800'              	goto	u6755
  2298  00C1' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2299  00C2' 0200'              	subwf	(sqrt@tfrac+1)^(0+128),w
  2300  00C3' 1D03               	skipz
  2301  00C4' 2800'              	goto	u6755
  2302  00C5' 0800'              	movf	sqrt@frac^(0+128),w
  2303  00C6' 0200'              	subwf	sqrt@tfrac^(0+128),w
  2304  00C7'                    u6755:
  2305  00C7' 1C03               	skipc
  2306  00C8' 2800'              	goto	l4765
  2307  00C9' 0800'              	movf	sqrt@frac^(0+128),w
  2308  00CA' 0280'              	subwf	sqrt@tfrac^(0+128),f
  2309  00CB' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2310  00CC' 1C03               	skipc
  2311  00CD' 0F00'              	incfsz	(sqrt@frac+1)^(0+128),w
  2312  00CE' 0280'              	subwf	(sqrt@tfrac+1)^(0+128),f
  2313  00CF' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2314  00D0' 1C03               	skipc
  2315  00D1' 0F00'              	incfsz	(sqrt@frac+2)^(0+128),w
  2316  00D2' 0280'              	subwf	(sqrt@tfrac+2)^(0+128),f
  2317  00D3' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2318  00D4' 1C03               	skipc
  2319  00D5' 0F00'              	incfsz	(sqrt@frac+3)^(0+128),w
  2320  00D6' 0280'              	subwf	(sqrt@tfrac+3)^(0+128),f
  2321  00D7' 0800'              	movf	sqrt@grs^(0+128),w
  2322  00D8' 0780'              	addwf	sqrt@frac^(0+128),f
  2323  00D9' 0800'              	movf	(sqrt@grs+1)^(0+128),w
  2324  00DA' 1103               	clrz
  2325  00DB' 1803               	skipnc
  2326  00DC' 3E01               	addlw	1
  2327  00DD' 1D03               	btfss	3,2
  2328  00DE' 0780'              	addwf	(sqrt@frac+1)^(0+128),f
  2329  00DF' 0800'              	movf	(sqrt@grs+2)^(0+128),w
  2330  00E0' 1103               	clrz
  2331  00E1' 1803               	skipnc
  2332  00E2' 3E01               	addlw	1
  2333  00E3' 1D03               	btfss	3,2
  2334  00E4' 0780'              	addwf	(sqrt@frac+2)^(0+128),f
  2335  00E5' 0800'              	movf	(sqrt@grs+3)^(0+128),w
  2336  00E6' 1103               	clrz
  2337  00E7' 1803               	skipnc
  2338  00E8' 3E01               	addlw	1
  2339  00E9' 1D03               	btfss	3,2
  2340  00EA' 0780'              	addwf	(sqrt@frac+3)^(0+128),f
  2341  00EB' 2800'              	goto	l795
  2342  00EC'                    l4765:
  2343  00EC' 0900'              	comf	sqrt@grs^(0+128),w
  2344  00ED' 0080'              	movwf	??_sqrt^(0+128)
  2345  00EE' 0900'              	comf	(sqrt@grs+1)^(0+128),w
  2346  00EF' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2347  00F0' 0900'              	comf	(sqrt@grs+2)^(0+128),w
  2348  00F1' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2349  00F2' 0900'              	comf	(sqrt@grs+3)^(0+128),w
  2350  00F3' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2351  00F4' 0800'              	movf	??_sqrt^(0+128),w
  2352  00F5' 0580'              	andwf	sqrt@frac^(0+128),f
  2353  00F6' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2354  00F7' 0580'              	andwf	(sqrt@frac+1)^(0+128),f
  2355  00F8' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2356  00F9' 0580'              	andwf	(sqrt@frac+2)^(0+128),f
  2357  00FA' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2358  00FB' 0580'              	andwf	(sqrt@frac+3)^(0+128),f
  2359  00FC'                    l795:
  2360  00FC' 0800'              	movf	sqrt@grs^(0+128),w
  2361  00FD' 0080'              	movwf	??_sqrt^(0+128)
  2362  00FE' 0800'              	movf	(sqrt@grs+1)^(0+128),w
  2363  00FF' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2364  0100' 0800'              	movf	(sqrt@grs+2)^(0+128),w
  2365  0101' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2366  0102' 0800'              	movf	(sqrt@grs+3)^(0+128),w
  2367  0103' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2368  0104' 3001               	movlw	1
  2369  0105'                    u6775:
  2370  0105' 1003               	clrc
  2371  0106' 0C83'              	rrf	(??_sqrt^(0+128)+3),f
  2372  0107' 0C82'              	rrf	(??_sqrt^(0+128)+2),f
  2373  0108' 0C81'              	rrf	(??_sqrt^(0+128)+1),f
  2374  0109' 0C80'              	rrf	??_sqrt^(0+128),f
  2375  010A' 3EFF               	addlw	-1
  2376  010B' 1D03               	skipz
  2377  010C' 2800'              	goto	u6775
  2378  010D' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2379  010E' 0080'              	movwf	(sqrt@grs+3)^(0+128)
  2380  010F' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2381  0110' 0080'              	movwf	(sqrt@grs+2)^(0+128)
  2382  0111' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2383  0112' 0080'              	movwf	(sqrt@grs+1)^(0+128)
  2384  0113' 0800'              	movf	??_sqrt^(0+128),w
  2385  0114' 0080'              	movwf	sqrt@grs^(0+128)
  2386  0115' 3001               	movlw	1
  2387  0116' 0080'              	movwf	??_sqrt^(0+128)
  2388  0117'                    u6785:
  2389  0117' 1003               	clrc
  2390  0118' 0D80'              	rlf	sqrt@tfrac^(0+128),f
  2391  0119' 0D80'              	rlf	(sqrt@tfrac+1)^(0+128),f
  2392  011A' 0D80'              	rlf	(sqrt@tfrac+2)^(0+128),f
  2393  011B' 0D80'              	rlf	(sqrt@tfrac+3)^(0+128),f
  2394  011C' 0B80'              	decfsz	??_sqrt^(0+128),f
  2395  011D' 2800'              	goto	u6785
  2396  011E' 3001               	movlw	1
  2397  011F' 0080'              	movwf	??_sqrt^(0+128)
  2398  0120' 0800'              	movf	??_sqrt^(0+128),w
  2399  0121' 0780'              	addwf	sqrt@i^(0+128),f
  2400  0122' 2800'              	goto	l4767
  2401  0123'                    l4769:
  2402  0123' 0800'              	movf	sqrt@frac^(0+128),w
  2403  0124' 0080'              	movwf	??_sqrt^(0+128)
  2404  0125' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2405  0126' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2406  0127' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2407  0128' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2408  0129' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2409  012A' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2410  012B' 3001               	movlw	1
  2411  012C'                    u6805:
  2412  012C' 1003               	clrc
  2413  012D' 0C83'              	rrf	(??_sqrt^(0+128)+3),f
  2414  012E' 0C82'              	rrf	(??_sqrt^(0+128)+2),f
  2415  012F' 0C81'              	rrf	(??_sqrt^(0+128)+1),f
  2416  0130' 0C80'              	rrf	??_sqrt^(0+128),f
  2417  0131' 3EFF               	addlw	-1
  2418  0132' 1D03               	skipz
  2419  0133' 2800'              	goto	u6805
  2420  0134' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2421  0135' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2422  0136' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2423  0137' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2424  0138' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2425  0139' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2426  013A' 0800'              	movf	??_sqrt^(0+128),w
  2427  013B' 0080'              	movwf	sqrt@frac^(0+128)
  2428  013C' 3001               	movlw	1
  2429  013D' 0500'              	andwf	sqrt@frac^(0+128),w
  2430  013E' 0080'              	movwf	sqrt@grs^(0+128)
  2431  013F' 3000               	movlw	0
  2432  0140' 0500'              	andwf	(sqrt@frac+1)^(0+128),w
  2433  0141' 0080'              	movwf	(sqrt@grs+1)^(0+128)
  2434  0142' 3000               	movlw	0
  2435  0143' 0500'              	andwf	(sqrt@frac+2)^(0+128),w
  2436  0144' 0080'              	movwf	(sqrt@grs+2)^(0+128)
  2437  0145' 3000               	movlw	0
  2438  0146' 0500'              	andwf	(sqrt@frac+3)^(0+128),w
  2439  0147' 0080'              	movwf	(sqrt@grs+3)^(0+128)
  2440  0148' 0800'              	movf	sqrt@frac^(0+128),w
  2441  0149' 0080'              	movwf	??_sqrt^(0+128)
  2442  014A' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2443  014B' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2444  014C' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2445  014D' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2446  014E' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2447  014F' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2448  0150' 3001               	movlw	1
  2449  0151'                    u6815:
  2450  0151' 1003               	clrc
  2451  0152' 0C83'              	rrf	(??_sqrt^(0+128)+3),f
  2452  0153' 0C82'              	rrf	(??_sqrt^(0+128)+2),f
  2453  0154' 0C81'              	rrf	(??_sqrt^(0+128)+1),f
  2454  0155' 0C80'              	rrf	??_sqrt^(0+128),f
  2455  0156' 3EFF               	addlw	-1
  2456  0157' 1D03               	skipz
  2457  0158' 2800'              	goto	u6815
  2458  0159' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2459  015A' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2460  015B' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2461  015C' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2462  015D' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2463  015E' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2464  015F' 0800'              	movf	??_sqrt^(0+128),w
  2465  0160' 0080'              	movwf	sqrt@frac^(0+128)
  2466  0161' 0800'              	movf	sqrt@grs^(0+128),w
  2467  0162' 0780'              	addwf	sqrt@frac^(0+128),f
  2468  0163' 0800'              	movf	(sqrt@grs+1)^(0+128),w
  2469  0164' 1103               	clrz
  2470  0165' 1803               	skipnc
  2471  0166' 3E01               	addlw	1
  2472  0167' 1D03               	btfss	3,2
  2473  0168' 0780'              	addwf	(sqrt@frac+1)^(0+128),f
  2474  0169' 0800'              	movf	(sqrt@grs+2)^(0+128),w
  2475  016A' 1103               	clrz
  2476  016B' 1803               	skipnc
  2477  016C' 3E01               	addlw	1
  2478  016D' 1D03               	btfss	3,2
  2479  016E' 0780'              	addwf	(sqrt@frac+2)^(0+128),f
  2480  016F' 0800'              	movf	(sqrt@grs+3)^(0+128),w
  2481  0170' 1103               	clrz
  2482  0171' 1803               	skipnc
  2483  0172' 3E01               	addlw	1
  2484  0173' 1D03               	btfss	3,2
  2485  0174' 0780'              	addwf	(sqrt@frac+3)^(0+128),f
  2486  0175' 1C00'              	btfss	(sqrt@frac+3)^(0+128),0
  2487  0176' 2800'              	goto	l4781
  2488  0177' 0800'              	movf	sqrt@frac^(0+128),w
  2489  0178' 0080'              	movwf	??_sqrt^(0+128)
  2490  0179' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2491  017A' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2492  017B' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2493  017C' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2494  017D' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2495  017E' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2496  017F' 3001               	movlw	1
  2497  0180'                    u6845:
  2498  0180' 1003               	clrc
  2499  0181' 0C83'              	rrf	(??_sqrt^(0+128)+3),f
  2500  0182' 0C82'              	rrf	(??_sqrt^(0+128)+2),f
  2501  0183' 0C81'              	rrf	(??_sqrt^(0+128)+1),f
  2502  0184' 0C80'              	rrf	??_sqrt^(0+128),f
  2503  0185' 3EFF               	addlw	-1
  2504  0186' 1D03               	skipz
  2505  0187' 2800'              	goto	u6845
  2506  0188' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2507  0189' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2508  018A' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2509  018B' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2510  018C' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2511  018D' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2512  018E' 0800'              	movf	??_sqrt^(0+128),w
  2513  018F' 0080'              	movwf	sqrt@frac^(0+128)
  2514  0190' 3001               	movlw	1
  2515  0191' 0780'              	addwf	sqrt@exp^(0+128),f
  2516  0192' 1803               	skipnc
  2517  0193' 0A80'              	incf	(sqrt@exp+1)^(0+128),f
  2518  0194' 3000               	movlw	0
  2519  0195' 0780'              	addwf	(sqrt@exp+1)^(0+128),f
  2520  0196'                    l4781:
  2521  0196' 30FF               	movlw	255
  2522  0197' 0500'              	andwf	sqrt@frac^(0+128),w
  2523  0198' 0080'              	movwf	sqrt@root^(0+128)
  2524  0199' 30FF               	movlw	255
  2525  019A' 0500'              	andwf	(sqrt@frac+1)^(0+128),w
  2526  019B' 0080'              	movwf	(sqrt@root+1)^(0+128)
  2527  019C' 307F               	movlw	127
  2528  019D' 0500'              	andwf	(sqrt@frac+2)^(0+128),w
  2529  019E' 0080'              	movwf	(sqrt@root+2)^(0+128)
  2530  019F' 3000               	movlw	0
  2531  01A0' 0500'              	andwf	(sqrt@frac+3)^(0+128),w
  2532  01A1' 0080'              	movwf	(sqrt@root+3)^(0+128)
  2533  01A2' 0800'              	movf	sqrt@exp^(0+128),w
  2534  01A3' 0080'              	movwf	sqrt@p^(0+128)
  2535  01A4' 1800'              	btfsc	sqrt@p^(0+128),0
  2536  01A5' 1782'              	bsf	(sqrt@root^(0+128)+2),7
  2537  01A6' 0800'              	movf	sqrt@p^(0+128),w
  2538  01A7' 0080'              	movwf	??_sqrt^(0+128)
  2539  01A8' 1003               	clrc
  2540  01A9' 0C00'              	rrf	??_sqrt^(0+128),w
  2541  01AA' 0083'              	movwf	(sqrt@root^(0+128)+3)
  2542  01AB' 307F               	movlw	127
  2543  01AC' 0080'              	movwf	??_sqrt^(0+128)
  2544  01AD' 0800'              	movf	??_sqrt^(0+128),w
  2545  01AE' 0583'              	andwf	(sqrt@root^(0+128)+3),f
  2546  01AF' 0800'              	movf	(sqrt@root+3)^(0+128),w
  2547  01B0' 0080'              	movwf	(?_sqrt+3)^(0+128)
  2548  01B1' 0800'              	movf	(sqrt@root+2)^(0+128),w
  2549  01B2' 0080'              	movwf	(?_sqrt+2)^(0+128)
  2550  01B3' 0800'              	movf	(sqrt@root+1)^(0+128),w
  2551  01B4' 0080'              	movwf	(?_sqrt+1)^(0+128)
  2552  01B5' 0800'              	movf	sqrt@root^(0+128),w
  2553  01B6' 0080'              	movwf	?_sqrt^(0+128)
  2554  01B7' 0008               	return
  2555  01B8'                    __end_of_sqrt:
  2556                           
  2557                           	psect	text6
  2558  0000'                    __ptext6:	
  2559 ;; *************** function _pow *****************
  2560 ;; Defined at:
  2561 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/pow.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  x               4   30[BANK1 ] unsigned char 
  2564 ;;  y               4   34[BANK1 ] unsigned char 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  yi              4   47[BANK1 ] unsigned long 
  2567 ;;  sign            1   46[BANK1 ] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  4   30[BANK1 ] unsigned char 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2577 ;;      Params:         0       0       8       0
  2578 ;;      Locals:         0       0      13       0
  2579 ;;      Temps:          0       0       0       0
  2580 ;;      Totals:         0       0      21       0
  2581 ;;Total ram usage:       21 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 4
  2584 ;; This function calls:
  2585 ;;		___fleq
  2586 ;;		___flge
  2587 ;;		___flmul
  2588 ;;		___flneg
  2589 ;;		___fltol
  2590 ;;		___xxtofl
  2591 ;;		_exp
  2592 ;;		_log
  2593 ;; This function is called by:
  2594 ;;		_vector_length
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598  0000'                    _pow:	
  2599                           ;psect for function _pow
  2600                           
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2604  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  2605  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  2606  0002' 0180'              	clrf	pow@sign^(0+128)
  2607  0003' 0800'              	movf	(pow@x+3)^(0+128),w
  2608  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  2609  0005' 1303               	bcf	3,6	;RP1=0, select bank0
  2610  0006' 008D'              	movwf	___fleq@ff1+3
  2611  0007' 1683               	bsf	3,5	;RP0=1, select bank1
  2612  0008' 1303               	bcf	3,6	;RP1=0, select bank1
  2613  0009' 0800'              	movf	(pow@x+2)^(0+128),w
  2614  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  2615  000B' 1303               	bcf	3,6	;RP1=0, select bank0
  2616  000C' 008C'              	movwf	___fleq@ff1+2
  2617  000D' 1683               	bsf	3,5	;RP0=1, select bank1
  2618  000E' 1303               	bcf	3,6	;RP1=0, select bank1
  2619  000F' 0800'              	movf	(pow@x+1)^(0+128),w
  2620  0010' 1283               	bcf	3,5	;RP0=0, select bank0
  2621  0011' 1303               	bcf	3,6	;RP1=0, select bank0
  2622  0012' 008B'              	movwf	___fleq@ff1+1
  2623  0013' 1683               	bsf	3,5	;RP0=1, select bank1
  2624  0014' 1303               	bcf	3,6	;RP1=0, select bank1
  2625  0015' 0800'              	movf	pow@x^(0+128),w
  2626  0016' 1283               	bcf	3,5	;RP0=0, select bank0
  2627  0017' 1303               	bcf	3,6	;RP1=0, select bank0
  2628  0018' 008A'              	movwf	___fleq@ff1
  2629  0019' 3000               	movlw	0
  2630  001A' 0091'              	movwf	___fleq@ff2+3
  2631  001B' 3000               	movlw	0
  2632  001C' 0090'              	movwf	___fleq@ff2+2
  2633  001D' 3000               	movlw	0
  2634  001E' 008F'              	movwf	___fleq@ff2+1
  2635  001F' 3000               	movlw	0
  2636  0020' 008E'              	movwf	___fleq@ff2
  2637  0021' 118A' 2000' 118A'  	fcall	___fleq
  2638  0024' 1C03               	btfss	3,0
  2639  0025' 2800'              	goto	l4673
  2640  0026' 3000               	movlw	0
  2641  0027' 0083'              	movwf	___flge@ff1+3
  2642  0028' 3000               	movlw	0
  2643  0029' 0082'              	movwf	___flge@ff1+2
  2644  002A' 3000               	movlw	0
  2645  002B' 0081'              	movwf	___flge@ff1+1
  2646  002C' 3000               	movlw	0
  2647  002D' 0080'              	movwf	___flge@ff1
  2648  002E' 1683               	bsf	3,5	;RP0=1, select bank1
  2649  002F' 1303               	bcf	3,6	;RP1=0, select bank1
  2650  0030' 0800'              	movf	(pow@y+3)^(0+128),w
  2651  0031' 0087'              	movwf	___flge@ff2+3
  2652  0032' 0800'              	movf	(pow@y+2)^(0+128),w
  2653  0033' 0086'              	movwf	___flge@ff2+2
  2654  0034' 0800'              	movf	(pow@y+1)^(0+128),w
  2655  0035' 0085'              	movwf	___flge@ff2+1
  2656  0036' 0800'              	movf	pow@y^(0+128),w
  2657  0037' 0084'              	movwf	___flge@ff2
  2658  0038' 118A' 2000' 118A'  	fcall	___flge
  2659  003B' 1C03               	btfss	3,0
  2660  003C' 2800'              	goto	l852
  2661  003D' 3021               	movlw	33
  2662  003E' 1283               	bcf	3,5	;RP0=0, select bank2
  2663  003F' 1703               	bsf	3,6	;RP1=1, select bank2
  2664  0040' 0080'              	movwf	_errno^(0+256)
  2665  0041' 3000               	movlw	0
  2666  0042' 0081'              	movwf	(_errno^(0+256)+1)
  2667  0043'                    l852:
  2668  0043' 3000               	movlw	0
  2669  0044' 1683               	bsf	3,5	;RP0=1, select bank1
  2670  0045' 1303               	bcf	3,6	;RP1=0, select bank1
  2671  0046' 0080'              	movwf	(?_pow+3)^(0+128)
  2672  0047' 3000               	movlw	0
  2673  0048' 0080'              	movwf	(?_pow+2)^(0+128)
  2674  0049' 3000               	movlw	0
  2675  004A' 0080'              	movwf	(?_pow+1)^(0+128)
  2676  004B' 3000               	movlw	0
  2677  004C' 0080'              	movwf	?_pow^(0+128)
  2678  004D' 0008               	return
  2679  004E'                    l4673:
  2680  004E' 1683               	bsf	3,5	;RP0=1, select bank1
  2681  004F' 1303               	bcf	3,6	;RP1=0, select bank1
  2682  0050' 0800'              	movf	(pow@y+3)^(0+128),w
  2683  0051' 1283               	bcf	3,5	;RP0=0, select bank0
  2684  0052' 1303               	bcf	3,6	;RP1=0, select bank0
  2685  0053' 008D'              	movwf	___fleq@ff1+3
  2686  0054' 1683               	bsf	3,5	;RP0=1, select bank1
  2687  0055' 1303               	bcf	3,6	;RP1=0, select bank1
  2688  0056' 0800'              	movf	(pow@y+2)^(0+128),w
  2689  0057' 1283               	bcf	3,5	;RP0=0, select bank0
  2690  0058' 1303               	bcf	3,6	;RP1=0, select bank0
  2691  0059' 008C'              	movwf	___fleq@ff1+2
  2692  005A' 1683               	bsf	3,5	;RP0=1, select bank1
  2693  005B' 1303               	bcf	3,6	;RP1=0, select bank1
  2694  005C' 0800'              	movf	(pow@y+1)^(0+128),w
  2695  005D' 1283               	bcf	3,5	;RP0=0, select bank0
  2696  005E' 1303               	bcf	3,6	;RP1=0, select bank0
  2697  005F' 008B'              	movwf	___fleq@ff1+1
  2698  0060' 1683               	bsf	3,5	;RP0=1, select bank1
  2699  0061' 1303               	bcf	3,6	;RP1=0, select bank1
  2700  0062' 0800'              	movf	pow@y^(0+128),w
  2701  0063' 1283               	bcf	3,5	;RP0=0, select bank0
  2702  0064' 1303               	bcf	3,6	;RP1=0, select bank0
  2703  0065' 008A'              	movwf	___fleq@ff1
  2704  0066' 3000               	movlw	0
  2705  0067' 0091'              	movwf	___fleq@ff2+3
  2706  0068' 3000               	movlw	0
  2707  0069' 0090'              	movwf	___fleq@ff2+2
  2708  006A' 3000               	movlw	0
  2709  006B' 008F'              	movwf	___fleq@ff2+1
  2710  006C' 3000               	movlw	0
  2711  006D' 008E'              	movwf	___fleq@ff2
  2712  006E' 118A' 2000' 118A'  	fcall	___fleq
  2713  0071' 1C03               	btfss	3,0
  2714  0072' 2800'              	goto	l4679
  2715  0073' 303F               	movlw	63
  2716  0074' 1683               	bsf	3,5	;RP0=1, select bank1
  2717  0075' 1303               	bcf	3,6	;RP1=0, select bank1
  2718  0076' 0080'              	movwf	(?_pow+3)^(0+128)
  2719  0077' 3080               	movlw	128
  2720  0078' 0080'              	movwf	(?_pow+2)^(0+128)
  2721  0079' 3000               	movlw	0
  2722  007A' 0080'              	movwf	(?_pow+1)^(0+128)
  2723  007B' 3000               	movlw	0
  2724  007C' 0080'              	movwf	?_pow^(0+128)
  2725  007D' 0008               	return
  2726  007E'                    l4679:
  2727  007E' 1683               	bsf	3,5	;RP0=1, select bank1
  2728  007F' 1303               	bcf	3,6	;RP1=0, select bank1
  2729  0080' 0800'              	movf	(pow@x+3)^(0+128),w
  2730  0081' 0083'              	movwf	___flge@ff1+3
  2731  0082' 0800'              	movf	(pow@x+2)^(0+128),w
  2732  0083' 0082'              	movwf	___flge@ff1+2
  2733  0084' 0800'              	movf	(pow@x+1)^(0+128),w
  2734  0085' 0081'              	movwf	___flge@ff1+1
  2735  0086' 0800'              	movf	pow@x^(0+128),w
  2736  0087' 0080'              	movwf	___flge@ff1
  2737  0088' 3000               	movlw	0
  2738  0089' 0087'              	movwf	___flge@ff2+3
  2739  008A' 3000               	movlw	0
  2740  008B' 0086'              	movwf	___flge@ff2+2
  2741  008C' 3000               	movlw	0
  2742  008D' 0085'              	movwf	___flge@ff2+1
  2743  008E' 3000               	movlw	0
  2744  008F' 0084'              	movwf	___flge@ff2
  2745  0090' 118A' 2000' 118A'  	fcall	___flge
  2746  0093' 1803               	btfsc	3,0
  2747  0094' 2800'              	goto	l4691
  2748  0095' 1683               	bsf	3,5	;RP0=1, select bank1
  2749  0096' 1303               	bcf	3,6	;RP1=0, select bank1
  2750  0097' 0800'              	movf	(pow@y+3)^(0+128),w
  2751  0098' 0083'              	movwf	___fltol@f1+3
  2752  0099' 0800'              	movf	(pow@y+2)^(0+128),w
  2753  009A' 0082'              	movwf	___fltol@f1+2
  2754  009B' 0800'              	movf	(pow@y+1)^(0+128),w
  2755  009C' 0081'              	movwf	___fltol@f1+1
  2756  009D' 0800'              	movf	pow@y^(0+128),w
  2757  009E' 0080'              	movwf	___fltol@f1
  2758  009F' 118A' 2000' 118A'  	fcall	___fltol
  2759  00A2' 0803'              	movf	?___fltol+3,w
  2760  00A3' 1683               	bsf	3,5	;RP0=1, select bank1
  2761  00A4' 1303               	bcf	3,6	;RP1=0, select bank1
  2762  00A5' 0080'              	movwf	(pow@yi+3)^(0+128)
  2763  00A6' 0802'              	movf	?___fltol+2,w
  2764  00A7' 0080'              	movwf	(pow@yi+2)^(0+128)
  2765  00A8' 0801'              	movf	?___fltol+1,w
  2766  00A9' 0080'              	movwf	(pow@yi+1)^(0+128)
  2767  00AA' 0800'              	movf	?___fltol,w
  2768  00AB' 0080'              	movwf	pow@yi^(0+128)
  2769  00AC' 0800'              	movf	(pow@yi+3)^(0+128),w
  2770  00AD' 008D'              	movwf	___xxtofl@val+3
  2771  00AE' 0800'              	movf	(pow@yi+2)^(0+128),w
  2772  00AF' 008C'              	movwf	___xxtofl@val+2
  2773  00B0' 0800'              	movf	(pow@yi+1)^(0+128),w
  2774  00B1' 008B'              	movwf	___xxtofl@val+1
  2775  00B2' 0800'              	movf	pow@yi^(0+128),w
  2776  00B3' 008A'              	movwf	___xxtofl@val
  2777  00B4' 3000               	movlw	0
  2778  00B5' 118A' 2000' 118A'  	fcall	___xxtofl
  2779  00B8' 080D'              	movf	?___xxtofl+3,w
  2780  00B9' 1283               	bcf	3,5	;RP0=0, select bank0
  2781  00BA' 1303               	bcf	3,6	;RP1=0, select bank0
  2782  00BB' 008D'              	movwf	___fleq@ff1+3
  2783  00BC' 080C'              	movf	?___xxtofl+2,w
  2784  00BD' 008C'              	movwf	___fleq@ff1+2
  2785  00BE' 080B'              	movf	?___xxtofl+1,w
  2786  00BF' 008B'              	movwf	___fleq@ff1+1
  2787  00C0' 080A'              	movf	?___xxtofl,w
  2788  00C1' 008A'              	movwf	___fleq@ff1
  2789  00C2' 1683               	bsf	3,5	;RP0=1, select bank1
  2790  00C3' 1303               	bcf	3,6	;RP1=0, select bank1
  2791  00C4' 0800'              	movf	(pow@y+3)^(0+128),w
  2792  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  2793  00C6' 1303               	bcf	3,6	;RP1=0, select bank0
  2794  00C7' 0091'              	movwf	___fleq@ff2+3
  2795  00C8' 1683               	bsf	3,5	;RP0=1, select bank1
  2796  00C9' 1303               	bcf	3,6	;RP1=0, select bank1
  2797  00CA' 0800'              	movf	(pow@y+2)^(0+128),w
  2798  00CB' 1283               	bcf	3,5	;RP0=0, select bank0
  2799  00CC' 1303               	bcf	3,6	;RP1=0, select bank0
  2800  00CD' 0090'              	movwf	___fleq@ff2+2
  2801  00CE' 1683               	bsf	3,5	;RP0=1, select bank1
  2802  00CF' 1303               	bcf	3,6	;RP1=0, select bank1
  2803  00D0' 0800'              	movf	(pow@y+1)^(0+128),w
  2804  00D1' 1283               	bcf	3,5	;RP0=0, select bank0
  2805  00D2' 1303               	bcf	3,6	;RP1=0, select bank0
  2806  00D3' 008F'              	movwf	___fleq@ff2+1
  2807  00D4' 1683               	bsf	3,5	;RP0=1, select bank1
  2808  00D5' 1303               	bcf	3,6	;RP1=0, select bank1
  2809  00D6' 0800'              	movf	pow@y^(0+128),w
  2810  00D7' 1283               	bcf	3,5	;RP0=0, select bank0
  2811  00D8' 1303               	bcf	3,6	;RP1=0, select bank0
  2812  00D9' 008E'              	movwf	___fleq@ff2
  2813  00DA' 118A' 2000' 118A'  	fcall	___fleq
  2814  00DD' 1803               	btfsc	3,0
  2815  00DE' 2800'              	goto	l4687
  2816  00DF' 3021               	movlw	33
  2817  00E0' 1283               	bcf	3,5	;RP0=0, select bank2
  2818  00E1' 1703               	bsf	3,6	;RP1=1, select bank2
  2819  00E2' 0080'              	movwf	_errno^(0+256)
  2820  00E3' 3000               	movlw	0
  2821  00E4' 0081'              	movwf	(_errno^(0+256)+1)
  2822  00E5' 3000               	movlw	0
  2823  00E6' 1683               	bsf	3,5	;RP0=1, select bank1
  2824  00E7' 1303               	bcf	3,6	;RP1=0, select bank1
  2825  00E8' 0080'              	movwf	(?_pow+3)^(0+128)
  2826  00E9' 3000               	movlw	0
  2827  00EA' 0080'              	movwf	(?_pow+2)^(0+128)
  2828  00EB' 3000               	movlw	0
  2829  00EC' 0080'              	movwf	(?_pow+1)^(0+128)
  2830  00ED' 3000               	movlw	0
  2831  00EE' 0080'              	movwf	?_pow^(0+128)
  2832  00EF' 0008               	return
  2833  00F0'                    l4687:
  2834  00F0' 1683               	bsf	3,5	;RP0=1, select bank1
  2835  00F1' 1303               	bcf	3,6	;RP1=0, select bank1
  2836  00F2' 0800'              	movf	pow@yi^(0+128),w
  2837  00F3' 3901               	andlw	1
  2838  00F4' 0080'              	movwf	pow@sign^(0+128)
  2839  00F5' 0800'              	movf	(pow@x+3)^(0+128),w
  2840  00F6' 0083'              	movwf	___flneg@f1+3
  2841  00F7' 0800'              	movf	(pow@x+2)^(0+128),w
  2842  00F8' 0082'              	movwf	___flneg@f1+2
  2843  00F9' 0800'              	movf	(pow@x+1)^(0+128),w
  2844  00FA' 0081'              	movwf	___flneg@f1+1
  2845  00FB' 0800'              	movf	pow@x^(0+128),w
  2846  00FC' 0080'              	movwf	___flneg@f1
  2847  00FD' 118A' 2000' 118A'  	fcall	___flneg
  2848  0100' 0803'              	movf	?___flneg+3,w
  2849  0101' 1683               	bsf	3,5	;RP0=1, select bank1
  2850  0102' 1303               	bcf	3,6	;RP1=0, select bank1
  2851  0103' 0080'              	movwf	(pow@x+3)^(0+128)
  2852  0104' 0802'              	movf	?___flneg+2,w
  2853  0105' 0080'              	movwf	(pow@x+2)^(0+128)
  2854  0106' 0801'              	movf	?___flneg+1,w
  2855  0107' 0080'              	movwf	(pow@x+1)^(0+128)
  2856  0108' 0800'              	movf	?___flneg,w
  2857  0109' 0080'              	movwf	pow@x^(0+128)
  2858  010A'                    l4691:
  2859  010A' 1683               	bsf	3,5	;RP0=1, select bank1
  2860  010B' 1303               	bcf	3,6	;RP1=0, select bank1
  2861  010C' 0800'              	movf	(pow@x+3)^(0+128),w
  2862  010D' 0080'              	movwf	(log@x+3)^(0+128)
  2863  010E' 0800'              	movf	(pow@x+2)^(0+128),w
  2864  010F' 0080'              	movwf	(log@x+2)^(0+128)
  2865  0110' 0800'              	movf	(pow@x+1)^(0+128),w
  2866  0111' 0080'              	movwf	(log@x+1)^(0+128)
  2867  0112' 0800'              	movf	pow@x^(0+128),w
  2868  0113' 0080'              	movwf	log@x^(0+128)
  2869  0114' 118A' 2000' 118A'  	fcall	_log
  2870  0117' 1683               	bsf	3,5	;RP0=1, select bank1
  2871  0118' 1303               	bcf	3,6	;RP1=0, select bank1
  2872  0119' 0800'              	movf	(?_log+3)^(0+128),w
  2873  011A' 0080'              	movwf	(_pow$1246+3)^(0+128)
  2874  011B' 0800'              	movf	(?_log+2)^(0+128),w
  2875  011C' 0080'              	movwf	(_pow$1246+2)^(0+128)
  2876  011D' 0800'              	movf	(?_log+1)^(0+128),w
  2877  011E' 0080'              	movwf	(_pow$1246+1)^(0+128)
  2878  011F' 0800'              	movf	?_log^(0+128),w
  2879  0120' 0080'              	movwf	_pow$1246^(0+128)
  2880  0121' 0800'              	movf	(pow@y+3)^(0+128),w
  2881  0122' 1283               	bcf	3,5	;RP0=0, select bank0
  2882  0123' 1303               	bcf	3,6	;RP1=0, select bank0
  2883  0124' 00A0'              	movwf	___flmul@b+3
  2884  0125' 1683               	bsf	3,5	;RP0=1, select bank1
  2885  0126' 1303               	bcf	3,6	;RP1=0, select bank1
  2886  0127' 0800'              	movf	(pow@y+2)^(0+128),w
  2887  0128' 1283               	bcf	3,5	;RP0=0, select bank0
  2888  0129' 1303               	bcf	3,6	;RP1=0, select bank0
  2889  012A' 009F'              	movwf	___flmul@b+2
  2890  012B' 1683               	bsf	3,5	;RP0=1, select bank1
  2891  012C' 1303               	bcf	3,6	;RP1=0, select bank1
  2892  012D' 0800'              	movf	(pow@y+1)^(0+128),w
  2893  012E' 1283               	bcf	3,5	;RP0=0, select bank0
  2894  012F' 1303               	bcf	3,6	;RP1=0, select bank0
  2895  0130' 009E'              	movwf	___flmul@b+1
  2896  0131' 1683               	bsf	3,5	;RP0=1, select bank1
  2897  0132' 1303               	bcf	3,6	;RP1=0, select bank1
  2898  0133' 0800'              	movf	pow@y^(0+128),w
  2899  0134' 1283               	bcf	3,5	;RP0=0, select bank0
  2900  0135' 1303               	bcf	3,6	;RP1=0, select bank0
  2901  0136' 009D'              	movwf	___flmul@b
  2902  0137' 1683               	bsf	3,5	;RP0=1, select bank1
  2903  0138' 1303               	bcf	3,6	;RP1=0, select bank1
  2904  0139' 0800'              	movf	(_pow$1246+3)^(0+128),w
  2905  013A' 1283               	bcf	3,5	;RP0=0, select bank0
  2906  013B' 1303               	bcf	3,6	;RP1=0, select bank0
  2907  013C' 00A4'              	movwf	___flmul@a+3
  2908  013D' 1683               	bsf	3,5	;RP0=1, select bank1
  2909  013E' 1303               	bcf	3,6	;RP1=0, select bank1
  2910  013F' 0800'              	movf	(_pow$1246+2)^(0+128),w
  2911  0140' 1283               	bcf	3,5	;RP0=0, select bank0
  2912  0141' 1303               	bcf	3,6	;RP1=0, select bank0
  2913  0142' 00A3'              	movwf	___flmul@a+2
  2914  0143' 1683               	bsf	3,5	;RP0=1, select bank1
  2915  0144' 1303               	bcf	3,6	;RP1=0, select bank1
  2916  0145' 0800'              	movf	(_pow$1246+1)^(0+128),w
  2917  0146' 1283               	bcf	3,5	;RP0=0, select bank0
  2918  0147' 1303               	bcf	3,6	;RP1=0, select bank0
  2919  0148' 00A2'              	movwf	___flmul@a+1
  2920  0149' 1683               	bsf	3,5	;RP0=1, select bank1
  2921  014A' 1303               	bcf	3,6	;RP1=0, select bank1
  2922  014B' 0800'              	movf	_pow$1246^(0+128),w
  2923  014C' 1283               	bcf	3,5	;RP0=0, select bank0
  2924  014D' 1303               	bcf	3,6	;RP1=0, select bank0
  2925  014E' 00A1'              	movwf	___flmul@a
  2926  014F' 118A' 2000' 118A'  	fcall	___flmul
  2927  0152' 1283               	bcf	3,5	;RP0=0, select bank0
  2928  0153' 1303               	bcf	3,6	;RP1=0, select bank0
  2929  0154' 0820'              	movf	?___flmul+3,w
  2930  0155' 1683               	bsf	3,5	;RP0=1, select bank1
  2931  0156' 1303               	bcf	3,6	;RP1=0, select bank1
  2932  0157' 0080'              	movwf	(_pow$1247+3)^(0+128)
  2933  0158' 1283               	bcf	3,5	;RP0=0, select bank0
  2934  0159' 1303               	bcf	3,6	;RP1=0, select bank0
  2935  015A' 081F'              	movf	?___flmul+2,w
  2936  015B' 1683               	bsf	3,5	;RP0=1, select bank1
  2937  015C' 1303               	bcf	3,6	;RP1=0, select bank1
  2938  015D' 0080'              	movwf	(_pow$1247+2)^(0+128)
  2939  015E' 1283               	bcf	3,5	;RP0=0, select bank0
  2940  015F' 1303               	bcf	3,6	;RP1=0, select bank0
  2941  0160' 081E'              	movf	?___flmul+1,w
  2942  0161' 1683               	bsf	3,5	;RP0=1, select bank1
  2943  0162' 1303               	bcf	3,6	;RP1=0, select bank1
  2944  0163' 0080'              	movwf	(_pow$1247+1)^(0+128)
  2945  0164' 1283               	bcf	3,5	;RP0=0, select bank0
  2946  0165' 1303               	bcf	3,6	;RP1=0, select bank0
  2947  0166' 081D'              	movf	?___flmul,w
  2948  0167' 1683               	bsf	3,5	;RP0=1, select bank1
  2949  0168' 1303               	bcf	3,6	;RP1=0, select bank1
  2950  0169' 0080'              	movwf	_pow$1247^(0+128)
  2951  016A' 0800'              	movf	(_pow$1247+3)^(0+128),w
  2952  016B' 0080'              	movwf	(exp@x+3)^(0+128)
  2953  016C' 0800'              	movf	(_pow$1247+2)^(0+128),w
  2954  016D' 0080'              	movwf	(exp@x+2)^(0+128)
  2955  016E' 0800'              	movf	(_pow$1247+1)^(0+128),w
  2956  016F' 0080'              	movwf	(exp@x+1)^(0+128)
  2957  0170' 0800'              	movf	_pow$1247^(0+128),w
  2958  0171' 0080'              	movwf	exp@x^(0+128)
  2959  0172' 118A' 2000' 118A'  	fcall	_exp
  2960  0175' 1683               	bsf	3,5	;RP0=1, select bank1
  2961  0176' 1303               	bcf	3,6	;RP1=0, select bank1
  2962  0177' 0800'              	movf	(?_exp+3)^(0+128),w
  2963  0178' 0080'              	movwf	(pow@x+3)^(0+128)
  2964  0179' 0800'              	movf	(?_exp+2)^(0+128),w
  2965  017A' 0080'              	movwf	(pow@x+2)^(0+128)
  2966  017B' 0800'              	movf	(?_exp+1)^(0+128),w
  2967  017C' 0080'              	movwf	(pow@x+1)^(0+128)
  2968  017D' 0800'              	movf	?_exp^(0+128),w
  2969  017E' 0080'              	movwf	pow@x^(0+128)
  2970  017F' 0800'              	movf	pow@sign^(0+128),w
  2971  0180' 1903               	btfsc	3,2
  2972  0181' 0008               	return
  2973  0182' 0800'              	movf	(pow@x+3)^(0+128),w
  2974  0183' 0083'              	movwf	___flneg@f1+3
  2975  0184' 0800'              	movf	(pow@x+2)^(0+128),w
  2976  0185' 0082'              	movwf	___flneg@f1+2
  2977  0186' 0800'              	movf	(pow@x+1)^(0+128),w
  2978  0187' 0081'              	movwf	___flneg@f1+1
  2979  0188' 0800'              	movf	pow@x^(0+128),w
  2980  0189' 0080'              	movwf	___flneg@f1
  2981  018A' 118A' 2000'        	fcall	___flneg
  2982  018C' 0803'              	movf	?___flneg+3,w
  2983  018D' 1683               	bsf	3,5	;RP0=1, select bank1
  2984  018E' 1303               	bcf	3,6	;RP1=0, select bank1
  2985  018F' 0080'              	movwf	(?_pow+3)^(0+128)
  2986  0190' 0802'              	movf	?___flneg+2,w
  2987  0191' 0080'              	movwf	(?_pow+2)^(0+128)
  2988  0192' 0801'              	movf	?___flneg+1,w
  2989  0193' 0080'              	movwf	(?_pow+1)^(0+128)
  2990  0194' 0800'              	movf	?___flneg,w
  2991  0195' 0080'              	movwf	?_pow^(0+128)
  2992  0196' 0008               	return
  2993  0197'                    __end_of_pow:
  2994                           
  2995                           	psect	text7
  2996  0000'                    __ptext7:	
  2997 ;; *************** function _log *****************
  2998 ;; Defined at:
  2999 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/log.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  x               4   11[BANK1 ] unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  exponent        2   15[BANK1 ] int 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  4   11[BANK1 ] int 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3013 ;;      Params:         0       0       4       0
  3014 ;;      Locals:         0       0       2       0
  3015 ;;      Temps:          0       0       0       0
  3016 ;;      Totals:         0       0       6       0
  3017 ;;Total ram usage:        6 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; Hardware stack levels required when called: 3
  3020 ;; This function calls:
  3021 ;;		___fladd
  3022 ;;		___fleq
  3023 ;;		___flge
  3024 ;;		___flmul
  3025 ;;		___xxtofl
  3026 ;;		_eval_poly
  3027 ;;		_frexp
  3028 ;; This function is called by:
  3029 ;;		_pow
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033  0000'                    _log:	
  3034                           ;psect for function _log
  3035                           
  3036                           
  3037                           ;incstack = 0
  3038                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3039  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  3040  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  3041  0002' 0800'              	movf	(log@x+3)^(0+128),w
  3042  0003' 0083'              	movwf	___flge@ff1+3
  3043  0004' 0800'              	movf	(log@x+2)^(0+128),w
  3044  0005' 0082'              	movwf	___flge@ff1+2
  3045  0006' 0800'              	movf	(log@x+1)^(0+128),w
  3046  0007' 0081'              	movwf	___flge@ff1+1
  3047  0008' 0800'              	movf	log@x^(0+128),w
  3048  0009' 0080'              	movwf	___flge@ff1
  3049  000A' 3000               	movlw	0
  3050  000B' 0087'              	movwf	___flge@ff2+3
  3051  000C' 3000               	movlw	0
  3052  000D' 0086'              	movwf	___flge@ff2+2
  3053  000E' 3000               	movlw	0
  3054  000F' 0085'              	movwf	___flge@ff2+1
  3055  0010' 3000               	movlw	0
  3056  0011' 0084'              	movwf	___flge@ff2
  3057  0012' 118A' 2000' 118A'  	fcall	___flge
  3058  0015' 1803               	btfsc	3,0
  3059  0016' 2800'              	goto	l4601
  3060  0017' 3021               	movlw	33
  3061  0018' 1283               	bcf	3,5	;RP0=0, select bank2
  3062  0019' 1703               	bsf	3,6	;RP1=1, select bank2
  3063  001A' 0080'              	movwf	_errno^(0+256)
  3064  001B' 3000               	movlw	0
  3065  001C' 0081'              	movwf	(_errno^(0+256)+1)
  3066  001D' 3000               	movlw	0
  3067  001E' 1683               	bsf	3,5	;RP0=1, select bank1
  3068  001F' 1303               	bcf	3,6	;RP1=0, select bank1
  3069  0020' 0080'              	movwf	(?_log+3)^(0+128)
  3070  0021' 3000               	movlw	0
  3071  0022' 0080'              	movwf	(?_log+2)^(0+128)
  3072  0023' 3000               	movlw	0
  3073  0024' 0080'              	movwf	(?_log+1)^(0+128)
  3074  0025' 3000               	movlw	0
  3075  0026' 0080'              	movwf	?_log^(0+128)
  3076  0027' 0008               	return
  3077  0028'                    l4601:
  3078  0028' 1683               	bsf	3,5	;RP0=1, select bank1
  3079  0029' 1303               	bcf	3,6	;RP1=0, select bank1
  3080  002A' 0800'              	movf	(log@x+3)^(0+128),w
  3081  002B' 1283               	bcf	3,5	;RP0=0, select bank0
  3082  002C' 1303               	bcf	3,6	;RP1=0, select bank0
  3083  002D' 008D'              	movwf	___fleq@ff1+3
  3084  002E' 1683               	bsf	3,5	;RP0=1, select bank1
  3085  002F' 1303               	bcf	3,6	;RP1=0, select bank1
  3086  0030' 0800'              	movf	(log@x+2)^(0+128),w
  3087  0031' 1283               	bcf	3,5	;RP0=0, select bank0
  3088  0032' 1303               	bcf	3,6	;RP1=0, select bank0
  3089  0033' 008C'              	movwf	___fleq@ff1+2
  3090  0034' 1683               	bsf	3,5	;RP0=1, select bank1
  3091  0035' 1303               	bcf	3,6	;RP1=0, select bank1
  3092  0036' 0800'              	movf	(log@x+1)^(0+128),w
  3093  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  3094  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  3095  0039' 008B'              	movwf	___fleq@ff1+1
  3096  003A' 1683               	bsf	3,5	;RP0=1, select bank1
  3097  003B' 1303               	bcf	3,6	;RP1=0, select bank1
  3098  003C' 0800'              	movf	log@x^(0+128),w
  3099  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  3100  003E' 1303               	bcf	3,6	;RP1=0, select bank0
  3101  003F' 008A'              	movwf	___fleq@ff1
  3102  0040' 3000               	movlw	0
  3103  0041' 0091'              	movwf	___fleq@ff2+3
  3104  0042' 3000               	movlw	0
  3105  0043' 0090'              	movwf	___fleq@ff2+2
  3106  0044' 3000               	movlw	0
  3107  0045' 008F'              	movwf	___fleq@ff2+1
  3108  0046' 3000               	movlw	0
  3109  0047' 008E'              	movwf	___fleq@ff2
  3110  0048' 118A' 2000' 118A'  	fcall	___fleq
  3111  004B' 1C03               	btfss	3,0
  3112  004C' 2800'              	goto	l4607
  3113  004D' 3022               	movlw	34
  3114  004E' 1283               	bcf	3,5	;RP0=0, select bank2
  3115  004F' 1703               	bsf	3,6	;RP1=1, select bank2
  3116  0050' 0080'              	movwf	_errno^(0+256)
  3117  0051' 3000               	movlw	0
  3118  0052' 0081'              	movwf	(_errno^(0+256)+1)
  3119  0053' 3000               	movlw	0
  3120  0054' 1683               	bsf	3,5	;RP0=1, select bank1
  3121  0055' 1303               	bcf	3,6	;RP1=0, select bank1
  3122  0056' 0080'              	movwf	(?_log+3)^(0+128)
  3123  0057' 3000               	movlw	0
  3124  0058' 0080'              	movwf	(?_log+2)^(0+128)
  3125  0059' 3000               	movlw	0
  3126  005A' 0080'              	movwf	(?_log+1)^(0+128)
  3127  005B' 3000               	movlw	0
  3128  005C' 0080'              	movwf	?_log^(0+128)
  3129  005D' 0008               	return
  3130  005E'                    l4607:
  3131  005E' 30BF               	movlw	191
  3132  005F' 1283               	bcf	3,5	;RP0=0, select bank0
  3133  0060' 1303               	bcf	3,6	;RP1=0, select bank0
  3134  0061' 00BA'              	movwf	___fladd@b+3
  3135  0062' 3080               	movlw	128
  3136  0063' 00B9'              	movwf	___fladd@b+2
  3137  0064' 3000               	movlw	0
  3138  0065' 00B8'              	movwf	___fladd@b+1
  3139  0066' 3000               	movlw	0
  3140  0067' 00B7'              	movwf	___fladd@b
  3141  0068' 3040               	movlw	64
  3142  0069' 00A0'              	movwf	___flmul@b+3
  3143  006A' 3000               	movlw	0
  3144  006B' 009F'              	movwf	___flmul@b+2
  3145  006C' 3000               	movlw	0
  3146  006D' 009E'              	movwf	___flmul@b+1
  3147  006E' 3000               	movlw	0
  3148  006F' 009D'              	movwf	___flmul@b
  3149  0070' 3000'              	movlw	(low (log@exponent| 0))& (0+255)
  3150  0071' 009A'              	movwf	frexp@eptr
  3151  0072' 1683               	bsf	3,5	;RP0=1, select bank1
  3152  0073' 1303               	bcf	3,6	;RP1=0, select bank1
  3153  0074' 0800'              	movf	(log@x+3)^(0+128),w
  3154  0075' 1283               	bcf	3,5	;RP0=0, select bank0
  3155  0076' 1303               	bcf	3,6	;RP1=0, select bank0
  3156  0077' 0099'              	movwf	frexp@value+3
  3157  0078' 1683               	bsf	3,5	;RP0=1, select bank1
  3158  0079' 1303               	bcf	3,6	;RP1=0, select bank1
  3159  007A' 0800'              	movf	(log@x+2)^(0+128),w
  3160  007B' 1283               	bcf	3,5	;RP0=0, select bank0
  3161  007C' 1303               	bcf	3,6	;RP1=0, select bank0
  3162  007D' 0098'              	movwf	frexp@value+2
  3163  007E' 1683               	bsf	3,5	;RP0=1, select bank1
  3164  007F' 1303               	bcf	3,6	;RP1=0, select bank1
  3165  0080' 0800'              	movf	(log@x+1)^(0+128),w
  3166  0081' 1283               	bcf	3,5	;RP0=0, select bank0
  3167  0082' 1303               	bcf	3,6	;RP1=0, select bank0
  3168  0083' 0097'              	movwf	frexp@value+1
  3169  0084' 1683               	bsf	3,5	;RP0=1, select bank1
  3170  0085' 1303               	bcf	3,6	;RP1=0, select bank1
  3171  0086' 0800'              	movf	log@x^(0+128),w
  3172  0087' 1283               	bcf	3,5	;RP0=0, select bank0
  3173  0088' 1303               	bcf	3,6	;RP1=0, select bank0
  3174  0089' 0096'              	movwf	frexp@value
  3175  008A' 118A' 2000' 118A'  	fcall	_frexp
  3176  008D' 1283               	bcf	3,5	;RP0=0, select bank0
  3177  008E' 1303               	bcf	3,6	;RP1=0, select bank0
  3178  008F' 0819'              	movf	?_frexp+3,w
  3179  0090' 00A4'              	movwf	___flmul@a+3
  3180  0091' 0818'              	movf	?_frexp+2,w
  3181  0092' 00A3'              	movwf	___flmul@a+2
  3182  0093' 0817'              	movf	?_frexp+1,w
  3183  0094' 00A2'              	movwf	___flmul@a+1
  3184  0095' 0816'              	movf	?_frexp,w
  3185  0096' 00A1'              	movwf	___flmul@a
  3186  0097' 118A' 2000' 118A'  	fcall	___flmul
  3187  009A' 1283               	bcf	3,5	;RP0=0, select bank0
  3188  009B' 1303               	bcf	3,6	;RP1=0, select bank0
  3189  009C' 0820'              	movf	?___flmul+3,w
  3190  009D' 00BE'              	movwf	___fladd@a+3
  3191  009E' 081F'              	movf	?___flmul+2,w
  3192  009F' 00BD'              	movwf	___fladd@a+2
  3193  00A0' 081E'              	movf	?___flmul+1,w
  3194  00A1' 00BC'              	movwf	___fladd@a+1
  3195  00A2' 081D'              	movf	?___flmul,w
  3196  00A3' 00BB'              	movwf	___fladd@a
  3197  00A4' 118A' 2000' 118A'  	fcall	___fladd
  3198  00A7' 1283               	bcf	3,5	;RP0=0, select bank0
  3199  00A8' 1303               	bcf	3,6	;RP1=0, select bank0
  3200  00A9' 083A'              	movf	?___fladd+3,w
  3201  00AA' 1683               	bsf	3,5	;RP0=1, select bank1
  3202  00AB' 1303               	bcf	3,6	;RP1=0, select bank1
  3203  00AC' 0080'              	movwf	(log@x+3)^(0+128)
  3204  00AD' 1283               	bcf	3,5	;RP0=0, select bank0
  3205  00AE' 1303               	bcf	3,6	;RP1=0, select bank0
  3206  00AF' 0839'              	movf	?___fladd+2,w
  3207  00B0' 1683               	bsf	3,5	;RP0=1, select bank1
  3208  00B1' 1303               	bcf	3,6	;RP1=0, select bank1
  3209  00B2' 0080'              	movwf	(log@x+2)^(0+128)
  3210  00B3' 1283               	bcf	3,5	;RP0=0, select bank0
  3211  00B4' 1303               	bcf	3,6	;RP1=0, select bank0
  3212  00B5' 0838'              	movf	?___fladd+1,w
  3213  00B6' 1683               	bsf	3,5	;RP0=1, select bank1
  3214  00B7' 1303               	bcf	3,6	;RP1=0, select bank1
  3215  00B8' 0080'              	movwf	(log@x+1)^(0+128)
  3216  00B9' 1283               	bcf	3,5	;RP0=0, select bank0
  3217  00BA' 1303               	bcf	3,6	;RP1=0, select bank0
  3218  00BB' 0837'              	movf	?___fladd,w
  3219  00BC' 1683               	bsf	3,5	;RP0=1, select bank1
  3220  00BD' 1303               	bcf	3,6	;RP1=0, select bank1
  3221  00BE' 0080'              	movwf	log@x^(0+128)
  3222  00BF' 30FF               	movlw	255
  3223  00C0' 0780'              	addwf	log@exponent^(0+128),f
  3224  00C1' 1803               	skipnc
  3225  00C2' 0A80'              	incf	(log@exponent+1)^(0+128),f
  3226  00C3' 30FF               	movlw	255
  3227  00C4' 0780'              	addwf	(log@exponent+1)^(0+128),f
  3228  00C5' 0800'              	movf	(log@x+3)^(0+128),w
  3229  00C6' 0080'              	movwf	(eval_poly@x+3)^(0+128)
  3230  00C7' 0800'              	movf	(log@x+2)^(0+128),w
  3231  00C8' 0080'              	movwf	(eval_poly@x+2)^(0+128)
  3232  00C9' 0800'              	movf	(log@x+1)^(0+128),w
  3233  00CA' 0080'              	movwf	(eval_poly@x+1)^(0+128)
  3234  00CB' 0800'              	movf	log@x^(0+128),w
  3235  00CC' 0080'              	movwf	eval_poly@x^(0+128)
  3236  00CD' 3029               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  3237  00CE' 0080'              	movwf	eval_poly@d^(0+128)
  3238  00CF' 3008               	movlw	8
  3239  00D0' 0080'              	movwf	eval_poly@n^(0+128)
  3240  00D1' 3000               	movlw	0
  3241  00D2' 0081'              	movwf	(eval_poly@n^(0+128)+1)
  3242  00D3' 118A' 2000' 118A'  	fcall	_eval_poly
  3243  00D6' 1683               	bsf	3,5	;RP0=1, select bank1
  3244  00D7' 1303               	bcf	3,6	;RP1=0, select bank1
  3245  00D8' 0800'              	movf	(?_eval_poly+3)^(0+128),w
  3246  00D9' 0080'              	movwf	(log@x+3)^(0+128)
  3247  00DA' 0800'              	movf	(?_eval_poly+2)^(0+128),w
  3248  00DB' 0080'              	movwf	(log@x+2)^(0+128)
  3249  00DC' 0800'              	movf	(?_eval_poly+1)^(0+128),w
  3250  00DD' 0080'              	movwf	(log@x+1)^(0+128)
  3251  00DE' 0800'              	movf	?_eval_poly^(0+128),w
  3252  00DF' 0080'              	movwf	log@x^(0+128)
  3253  00E0' 0800'              	movf	(log@x+3)^(0+128),w
  3254  00E1' 1283               	bcf	3,5	;RP0=0, select bank0
  3255  00E2' 1303               	bcf	3,6	;RP1=0, select bank0
  3256  00E3' 00BA'              	movwf	___fladd@b+3
  3257  00E4' 1683               	bsf	3,5	;RP0=1, select bank1
  3258  00E5' 1303               	bcf	3,6	;RP1=0, select bank1
  3259  00E6' 0800'              	movf	(log@x+2)^(0+128),w
  3260  00E7' 1283               	bcf	3,5	;RP0=0, select bank0
  3261  00E8' 1303               	bcf	3,6	;RP1=0, select bank0
  3262  00E9' 00B9'              	movwf	___fladd@b+2
  3263  00EA' 1683               	bsf	3,5	;RP0=1, select bank1
  3264  00EB' 1303               	bcf	3,6	;RP1=0, select bank1
  3265  00EC' 0800'              	movf	(log@x+1)^(0+128),w
  3266  00ED' 1283               	bcf	3,5	;RP0=0, select bank0
  3267  00EE' 1303               	bcf	3,6	;RP1=0, select bank0
  3268  00EF' 00B8'              	movwf	___fladd@b+1
  3269  00F0' 1683               	bsf	3,5	;RP0=1, select bank1
  3270  00F1' 1303               	bcf	3,6	;RP1=0, select bank1
  3271  00F2' 0800'              	movf	log@x^(0+128),w
  3272  00F3' 1283               	bcf	3,5	;RP0=0, select bank0
  3273  00F4' 1303               	bcf	3,6	;RP1=0, select bank0
  3274  00F5' 00B7'              	movwf	___fladd@b
  3275  00F6' 303F               	movlw	63
  3276  00F7' 00A0'              	movwf	___flmul@b+3
  3277  00F8' 3031               	movlw	49
  3278  00F9' 009F'              	movwf	___flmul@b+2
  3279  00FA' 3072               	movlw	114
  3280  00FB' 009E'              	movwf	___flmul@b+1
  3281  00FC' 3018               	movlw	24
  3282  00FD' 009D'              	movwf	___flmul@b
  3283  00FE' 1683               	bsf	3,5	;RP0=1, select bank1
  3284  00FF' 1303               	bcf	3,6	;RP1=0, select bank1
  3285  0100' 0800'              	movf	log@exponent^(0+128),w
  3286  0101' 008A'              	movwf	___xxtofl@val
  3287  0102' 0800'              	movf	(log@exponent+1)^(0+128),w
  3288  0103' 008B'              	movwf	___xxtofl@val+1
  3289  0104' 3000               	movlw	0
  3290  0105' 1B8B'              	btfsc	___xxtofl@val+1,7
  3291  0106' 30FF               	movlw	255
  3292  0107' 008C'              	movwf	___xxtofl@val+2
  3293  0108' 008D'              	movwf	___xxtofl@val+3
  3294  0109' 3001               	movlw	1
  3295  010A' 118A' 2000' 118A'  	fcall	___xxtofl
  3296  010D' 080D'              	movf	?___xxtofl+3,w
  3297  010E' 1283               	bcf	3,5	;RP0=0, select bank0
  3298  010F' 1303               	bcf	3,6	;RP1=0, select bank0
  3299  0110' 00A4'              	movwf	___flmul@a+3
  3300  0111' 080C'              	movf	?___xxtofl+2,w
  3301  0112' 00A3'              	movwf	___flmul@a+2
  3302  0113' 080B'              	movf	?___xxtofl+1,w
  3303  0114' 00A2'              	movwf	___flmul@a+1
  3304  0115' 080A'              	movf	?___xxtofl,w
  3305  0116' 00A1'              	movwf	___flmul@a
  3306  0117' 118A' 2000' 118A'  	fcall	___flmul
  3307  011A' 1283               	bcf	3,5	;RP0=0, select bank0
  3308  011B' 1303               	bcf	3,6	;RP1=0, select bank0
  3309  011C' 0820'              	movf	?___flmul+3,w
  3310  011D' 00BE'              	movwf	___fladd@a+3
  3311  011E' 081F'              	movf	?___flmul+2,w
  3312  011F' 00BD'              	movwf	___fladd@a+2
  3313  0120' 081E'              	movf	?___flmul+1,w
  3314  0121' 00BC'              	movwf	___fladd@a+1
  3315  0122' 081D'              	movf	?___flmul,w
  3316  0123' 00BB'              	movwf	___fladd@a
  3317  0124' 118A' 2000'        	fcall	___fladd
  3318  0126' 1283               	bcf	3,5	;RP0=0, select bank0
  3319  0127' 1303               	bcf	3,6	;RP1=0, select bank0
  3320  0128' 083A'              	movf	?___fladd+3,w
  3321  0129' 1683               	bsf	3,5	;RP0=1, select bank1
  3322  012A' 1303               	bcf	3,6	;RP1=0, select bank1
  3323  012B' 0080'              	movwf	(?_log+3)^(0+128)
  3324  012C' 1283               	bcf	3,5	;RP0=0, select bank0
  3325  012D' 1303               	bcf	3,6	;RP1=0, select bank0
  3326  012E' 0839'              	movf	?___fladd+2,w
  3327  012F' 1683               	bsf	3,5	;RP0=1, select bank1
  3328  0130' 1303               	bcf	3,6	;RP1=0, select bank1
  3329  0131' 0080'              	movwf	(?_log+2)^(0+128)
  3330  0132' 1283               	bcf	3,5	;RP0=0, select bank0
  3331  0133' 1303               	bcf	3,6	;RP1=0, select bank0
  3332  0134' 0838'              	movf	?___fladd+1,w
  3333  0135' 1683               	bsf	3,5	;RP0=1, select bank1
  3334  0136' 1303               	bcf	3,6	;RP1=0, select bank1
  3335  0137' 0080'              	movwf	(?_log+1)^(0+128)
  3336  0138' 1283               	bcf	3,5	;RP0=0, select bank0
  3337  0139' 1303               	bcf	3,6	;RP1=0, select bank0
  3338  013A' 0837'              	movf	?___fladd,w
  3339  013B' 1683               	bsf	3,5	;RP0=1, select bank1
  3340  013C' 1303               	bcf	3,6	;RP1=0, select bank1
  3341  013D' 0080'              	movwf	?_log^(0+128)
  3342  013E' 0008               	return
  3343  013F'                    __end_of_log:
  3344                           
  3345                           	psect	text8
  3346  0000'                    __ptext8:	
  3347 ;; *************** function _exp *****************
  3348 ;; Defined at:
  3349 ;;		line 12 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/exp.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  x               4   19[BANK1 ] int 
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  exponent        2   27[BANK1 ] int 
  3354 ;;  sign            1   29[BANK1 ] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  4   19[BANK1 ] unsigned char 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3364 ;;      Params:         0       0       4       0
  3365 ;;      Locals:         0       0       7       0
  3366 ;;      Temps:          0       0       0       0
  3367 ;;      Totals:         0       0      11       0
  3368 ;;Total ram usage:       11 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; Hardware stack levels required when called: 3
  3371 ;; This function calls:
  3372 ;;		___fldiv
  3373 ;;		___fleq
  3374 ;;		___flge
  3375 ;;		___flmul
  3376 ;;		___flneg
  3377 ;;		___flsub
  3378 ;;		___fltol
  3379 ;;		___xxtofl
  3380 ;;		_eval_poly
  3381 ;;		_floor
  3382 ;;		_ldexp
  3383 ;; This function is called by:
  3384 ;;		_pow
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388  0000'                    _exp:	
  3389                           ;psect for function _exp
  3390                           
  3391                           
  3392                           ;incstack = 0
  3393                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3394  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  3395  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  3396  0002' 0800'              	movf	(exp@x+3)^(0+128),w
  3397  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  3398  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  3399  0005' 008D'              	movwf	___fleq@ff1+3
  3400  0006' 1683               	bsf	3,5	;RP0=1, select bank1
  3401  0007' 1303               	bcf	3,6	;RP1=0, select bank1
  3402  0008' 0800'              	movf	(exp@x+2)^(0+128),w
  3403  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  3404  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  3405  000B' 008C'              	movwf	___fleq@ff1+2
  3406  000C' 1683               	bsf	3,5	;RP0=1, select bank1
  3407  000D' 1303               	bcf	3,6	;RP1=0, select bank1
  3408  000E' 0800'              	movf	(exp@x+1)^(0+128),w
  3409  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  3410  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  3411  0011' 008B'              	movwf	___fleq@ff1+1
  3412  0012' 1683               	bsf	3,5	;RP0=1, select bank1
  3413  0013' 1303               	bcf	3,6	;RP1=0, select bank1
  3414  0014' 0800'              	movf	exp@x^(0+128),w
  3415  0015' 1283               	bcf	3,5	;RP0=0, select bank0
  3416  0016' 1303               	bcf	3,6	;RP1=0, select bank0
  3417  0017' 008A'              	movwf	___fleq@ff1
  3418  0018' 3000               	movlw	0
  3419  0019' 0091'              	movwf	___fleq@ff2+3
  3420  001A' 3000               	movlw	0
  3421  001B' 0090'              	movwf	___fleq@ff2+2
  3422  001C' 3000               	movlw	0
  3423  001D' 008F'              	movwf	___fleq@ff2+1
  3424  001E' 3000               	movlw	0
  3425  001F' 008E'              	movwf	___fleq@ff2
  3426  0020' 118A' 2000' 118A'  	fcall	___fleq
  3427  0023' 1C03               	btfss	3,0
  3428  0024' 2800'              	goto	l4623
  3429  0025' 303F               	movlw	63
  3430  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  3431  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  3432  0028' 0080'              	movwf	(?_exp+3)^(0+128)
  3433  0029' 3080               	movlw	128
  3434  002A' 0080'              	movwf	(?_exp+2)^(0+128)
  3435  002B' 3000               	movlw	0
  3436  002C' 0080'              	movwf	(?_exp+1)^(0+128)
  3437  002D' 3000               	movlw	0
  3438  002E' 0080'              	movwf	?_exp^(0+128)
  3439  002F' 0008               	return
  3440  0030'                    l4623:
  3441  0030' 3044               	movlw	68
  3442  0031' 0083'              	movwf	___flge@ff1+3
  3443  0032' 3031               	movlw	49
  3444  0033' 0082'              	movwf	___flge@ff1+2
  3445  0034' 3072               	movlw	114
  3446  0035' 0081'              	movwf	___flge@ff1+1
  3447  0036' 3018               	movlw	24
  3448  0037' 0080'              	movwf	___flge@ff1
  3449  0038' 1683               	bsf	3,5	;RP0=1, select bank1
  3450  0039' 1303               	bcf	3,6	;RP1=0, select bank1
  3451  003A' 0800'              	movf	(exp@x+3)^(0+128),w
  3452  003B' 0087'              	movwf	___flge@ff2+3
  3453  003C' 0800'              	movf	(exp@x+2)^(0+128),w
  3454  003D' 0086'              	movwf	___flge@ff2+2
  3455  003E' 0800'              	movf	(exp@x+1)^(0+128),w
  3456  003F' 0085'              	movwf	___flge@ff2+1
  3457  0040' 0800'              	movf	exp@x^(0+128),w
  3458  0041' 0084'              	movwf	___flge@ff2
  3459  0042' 118A' 2000' 118A'  	fcall	___flge
  3460  0045' 1803               	btfsc	3,0
  3461  0046' 2800'              	goto	l4629
  3462  0047' 3022               	movlw	34
  3463  0048' 1283               	bcf	3,5	;RP0=0, select bank2
  3464  0049' 1703               	bsf	3,6	;RP1=1, select bank2
  3465  004A' 0080'              	movwf	_errno^(0+256)
  3466  004B' 3000               	movlw	0
  3467  004C' 0081'              	movwf	(_errno^(0+256)+1)
  3468  004D' 307F               	movlw	127
  3469  004E' 1683               	bsf	3,5	;RP0=1, select bank1
  3470  004F' 1303               	bcf	3,6	;RP1=0, select bank1
  3471  0050' 0080'              	movwf	(?_exp+3)^(0+128)
  3472  0051' 307F               	movlw	127
  3473  0052' 0080'              	movwf	(?_exp+2)^(0+128)
  3474  0053' 30FF               	movlw	255
  3475  0054' 0080'              	movwf	(?_exp+1)^(0+128)
  3476  0055' 30FF               	movlw	255
  3477  0056' 0080'              	movwf	?_exp^(0+128)
  3478  0057' 0008               	return
  3479  0058'                    l4629:
  3480  0058' 1683               	bsf	3,5	;RP0=1, select bank1
  3481  0059' 1303               	bcf	3,6	;RP1=0, select bank1
  3482  005A' 0800'              	movf	(exp@x+3)^(0+128),w
  3483  005B' 0083'              	movwf	___flge@ff1+3
  3484  005C' 0800'              	movf	(exp@x+2)^(0+128),w
  3485  005D' 0082'              	movwf	___flge@ff1+2
  3486  005E' 0800'              	movf	(exp@x+1)^(0+128),w
  3487  005F' 0081'              	movwf	___flge@ff1+1
  3488  0060' 0800'              	movf	exp@x^(0+128),w
  3489  0061' 0080'              	movwf	___flge@ff1
  3490  0062' 30C4               	movlw	196
  3491  0063' 0087'              	movwf	___flge@ff2+3
  3492  0064' 303A               	movlw	58
  3493  0065' 0086'              	movwf	___flge@ff2+2
  3494  0066' 3048               	movlw	72
  3495  0067' 0085'              	movwf	___flge@ff2+1
  3496  0068' 3087               	movlw	135
  3497  0069' 0084'              	movwf	___flge@ff2
  3498  006A' 118A' 2000' 118A'  	fcall	___flge
  3499  006D' 1803               	btfsc	3,0
  3500  006E' 2800'              	goto	l4635
  3501  006F' 3022               	movlw	34
  3502  0070' 1283               	bcf	3,5	;RP0=0, select bank2
  3503  0071' 1703               	bsf	3,6	;RP1=1, select bank2
  3504  0072' 0080'              	movwf	_errno^(0+256)
  3505  0073' 3000               	movlw	0
  3506  0074' 0081'              	movwf	(_errno^(0+256)+1)
  3507  0075' 3000               	movlw	0
  3508  0076' 1683               	bsf	3,5	;RP0=1, select bank1
  3509  0077' 1303               	bcf	3,6	;RP1=0, select bank1
  3510  0078' 0080'              	movwf	(?_exp+3)^(0+128)
  3511  0079' 3000               	movlw	0
  3512  007A' 0080'              	movwf	(?_exp+2)^(0+128)
  3513  007B' 3000               	movlw	0
  3514  007C' 0080'              	movwf	(?_exp+1)^(0+128)
  3515  007D' 3000               	movlw	0
  3516  007E' 0080'              	movwf	?_exp^(0+128)
  3517  007F' 0008               	return
  3518  0080'                    l4635:
  3519  0080' 1683               	bsf	3,5	;RP0=1, select bank1
  3520  0081' 1303               	bcf	3,6	;RP1=0, select bank1
  3521  0082' 0800'              	movf	(exp@x+3)^(0+128),w
  3522  0083' 0083'              	movwf	___flge@ff1+3
  3523  0084' 0800'              	movf	(exp@x+2)^(0+128),w
  3524  0085' 0082'              	movwf	___flge@ff1+2
  3525  0086' 0800'              	movf	(exp@x+1)^(0+128),w
  3526  0087' 0081'              	movwf	___flge@ff1+1
  3527  0088' 0800'              	movf	exp@x^(0+128),w
  3528  0089' 0080'              	movwf	___flge@ff1
  3529  008A' 3000               	movlw	0
  3530  008B' 0087'              	movwf	___flge@ff2+3
  3531  008C' 3000               	movlw	0
  3532  008D' 0086'              	movwf	___flge@ff2+2
  3533  008E' 3000               	movlw	0
  3534  008F' 0085'              	movwf	___flge@ff2+1
  3535  0090' 3000               	movlw	0
  3536  0091' 0084'              	movwf	___flge@ff2
  3537  0092' 118A' 2000' 118A'  	fcall	___flge
  3538  0095' 1803               	btfsc	3,0
  3539  0096' 2800'              	goto	u6550
  3540  0097' 3001               	movlw	1
  3541  0098' 2800'              	goto	u6560
  3542  0099'                    u6550:
  3543  0099' 3000               	movlw	0
  3544  009A'                    u6560:
  3545  009A' 1683               	bsf	3,5	;RP0=1, select bank1
  3546  009B' 1303               	bcf	3,6	;RP1=0, select bank1
  3547  009C' 0080'              	movwf	exp@sign^(0+128)
  3548  009D' 0800'              	movf	exp@sign^(0+128),w
  3549  009E' 1903               	btfsc	3,2
  3550  009F' 2800'              	goto	l4641
  3551  00A0' 0800'              	movf	(exp@x+3)^(0+128),w
  3552  00A1' 0083'              	movwf	___flneg@f1+3
  3553  00A2' 0800'              	movf	(exp@x+2)^(0+128),w
  3554  00A3' 0082'              	movwf	___flneg@f1+2
  3555  00A4' 0800'              	movf	(exp@x+1)^(0+128),w
  3556  00A5' 0081'              	movwf	___flneg@f1+1
  3557  00A6' 0800'              	movf	exp@x^(0+128),w
  3558  00A7' 0080'              	movwf	___flneg@f1
  3559  00A8' 118A' 2000' 118A'  	fcall	___flneg
  3560  00AB' 0803'              	movf	?___flneg+3,w
  3561  00AC' 1683               	bsf	3,5	;RP0=1, select bank1
  3562  00AD' 1303               	bcf	3,6	;RP1=0, select bank1
  3563  00AE' 0080'              	movwf	(exp@x+3)^(0+128)
  3564  00AF' 0802'              	movf	?___flneg+2,w
  3565  00B0' 0080'              	movwf	(exp@x+2)^(0+128)
  3566  00B1' 0801'              	movf	?___flneg+1,w
  3567  00B2' 0080'              	movwf	(exp@x+1)^(0+128)
  3568  00B3' 0800'              	movf	?___flneg,w
  3569  00B4' 0080'              	movwf	exp@x^(0+128)
  3570  00B5'                    l4641:
  3571  00B5' 303F               	movlw	63
  3572  00B6' 1283               	bcf	3,5	;RP0=0, select bank0
  3573  00B7' 1303               	bcf	3,6	;RP1=0, select bank0
  3574  00B8' 00A0'              	movwf	___flmul@b+3
  3575  00B9' 30B8               	movlw	184
  3576  00BA' 009F'              	movwf	___flmul@b+2
  3577  00BB' 30AA               	movlw	170
  3578  00BC' 009E'              	movwf	___flmul@b+1
  3579  00BD' 303B               	movlw	59
  3580  00BE' 009D'              	movwf	___flmul@b
  3581  00BF' 1683               	bsf	3,5	;RP0=1, select bank1
  3582  00C0' 1303               	bcf	3,6	;RP1=0, select bank1
  3583  00C1' 0800'              	movf	(exp@x+3)^(0+128),w
  3584  00C2' 1283               	bcf	3,5	;RP0=0, select bank0
  3585  00C3' 1303               	bcf	3,6	;RP1=0, select bank0
  3586  00C4' 00A4'              	movwf	___flmul@a+3
  3587  00C5' 1683               	bsf	3,5	;RP0=1, select bank1
  3588  00C6' 1303               	bcf	3,6	;RP1=0, select bank1
  3589  00C7' 0800'              	movf	(exp@x+2)^(0+128),w
  3590  00C8' 1283               	bcf	3,5	;RP0=0, select bank0
  3591  00C9' 1303               	bcf	3,6	;RP1=0, select bank0
  3592  00CA' 00A3'              	movwf	___flmul@a+2
  3593  00CB' 1683               	bsf	3,5	;RP0=1, select bank1
  3594  00CC' 1303               	bcf	3,6	;RP1=0, select bank1
  3595  00CD' 0800'              	movf	(exp@x+1)^(0+128),w
  3596  00CE' 1283               	bcf	3,5	;RP0=0, select bank0
  3597  00CF' 1303               	bcf	3,6	;RP1=0, select bank0
  3598  00D0' 00A2'              	movwf	___flmul@a+1
  3599  00D1' 1683               	bsf	3,5	;RP0=1, select bank1
  3600  00D2' 1303               	bcf	3,6	;RP1=0, select bank1
  3601  00D3' 0800'              	movf	exp@x^(0+128),w
  3602  00D4' 1283               	bcf	3,5	;RP0=0, select bank0
  3603  00D5' 1303               	bcf	3,6	;RP1=0, select bank0
  3604  00D6' 00A1'              	movwf	___flmul@a
  3605  00D7' 118A' 2000' 118A'  	fcall	___flmul
  3606  00DA' 1283               	bcf	3,5	;RP0=0, select bank0
  3607  00DB' 1303               	bcf	3,6	;RP1=0, select bank0
  3608  00DC' 0820'              	movf	?___flmul+3,w
  3609  00DD' 1683               	bsf	3,5	;RP0=1, select bank1
  3610  00DE' 1303               	bcf	3,6	;RP1=0, select bank1
  3611  00DF' 0080'              	movwf	(exp@x+3)^(0+128)
  3612  00E0' 1283               	bcf	3,5	;RP0=0, select bank0
  3613  00E1' 1303               	bcf	3,6	;RP1=0, select bank0
  3614  00E2' 081F'              	movf	?___flmul+2,w
  3615  00E3' 1683               	bsf	3,5	;RP0=1, select bank1
  3616  00E4' 1303               	bcf	3,6	;RP1=0, select bank1
  3617  00E5' 0080'              	movwf	(exp@x+2)^(0+128)
  3618  00E6' 1283               	bcf	3,5	;RP0=0, select bank0
  3619  00E7' 1303               	bcf	3,6	;RP1=0, select bank0
  3620  00E8' 081E'              	movf	?___flmul+1,w
  3621  00E9' 1683               	bsf	3,5	;RP0=1, select bank1
  3622  00EA' 1303               	bcf	3,6	;RP1=0, select bank1
  3623  00EB' 0080'              	movwf	(exp@x+1)^(0+128)
  3624  00EC' 1283               	bcf	3,5	;RP0=0, select bank0
  3625  00ED' 1303               	bcf	3,6	;RP1=0, select bank0
  3626  00EE' 081D'              	movf	?___flmul,w
  3627  00EF' 1683               	bsf	3,5	;RP0=1, select bank1
  3628  00F0' 1303               	bcf	3,6	;RP1=0, select bank1
  3629  00F1' 0080'              	movwf	exp@x^(0+128)
  3630  00F2' 0800'              	movf	(exp@x+3)^(0+128),w
  3631  00F3' 1283               	bcf	3,5	;RP0=0, select bank0
  3632  00F4' 1303               	bcf	3,6	;RP1=0, select bank0
  3633  00F5' 00CE'              	movwf	floor@x+3
  3634  00F6' 1683               	bsf	3,5	;RP0=1, select bank1
  3635  00F7' 1303               	bcf	3,6	;RP1=0, select bank1
  3636  00F8' 0800'              	movf	(exp@x+2)^(0+128),w
  3637  00F9' 1283               	bcf	3,5	;RP0=0, select bank0
  3638  00FA' 1303               	bcf	3,6	;RP1=0, select bank0
  3639  00FB' 00CD'              	movwf	floor@x+2
  3640  00FC' 1683               	bsf	3,5	;RP0=1, select bank1
  3641  00FD' 1303               	bcf	3,6	;RP1=0, select bank1
  3642  00FE' 0800'              	movf	(exp@x+1)^(0+128),w
  3643  00FF' 1283               	bcf	3,5	;RP0=0, select bank0
  3644  0100' 1303               	bcf	3,6	;RP1=0, select bank0
  3645  0101' 00CC'              	movwf	floor@x+1
  3646  0102' 1683               	bsf	3,5	;RP0=1, select bank1
  3647  0103' 1303               	bcf	3,6	;RP1=0, select bank1
  3648  0104' 0800'              	movf	exp@x^(0+128),w
  3649  0105' 1283               	bcf	3,5	;RP0=0, select bank0
  3650  0106' 1303               	bcf	3,6	;RP1=0, select bank0
  3651  0107' 00CB'              	movwf	floor@x
  3652  0108' 118A' 2000' 118A'  	fcall	_floor
  3653  010B' 1283               	bcf	3,5	;RP0=0, select bank0
  3654  010C' 1303               	bcf	3,6	;RP1=0, select bank0
  3655  010D' 084E'              	movf	?_floor+3,w
  3656  010E' 1683               	bsf	3,5	;RP0=1, select bank1
  3657  010F' 1303               	bcf	3,6	;RP1=0, select bank1
  3658  0110' 0080'              	movwf	(_exp$1248+3)^(0+128)
  3659  0111' 1283               	bcf	3,5	;RP0=0, select bank0
  3660  0112' 1303               	bcf	3,6	;RP1=0, select bank0
  3661  0113' 084D'              	movf	?_floor+2,w
  3662  0114' 1683               	bsf	3,5	;RP0=1, select bank1
  3663  0115' 1303               	bcf	3,6	;RP1=0, select bank1
  3664  0116' 0080'              	movwf	(_exp$1248+2)^(0+128)
  3665  0117' 1283               	bcf	3,5	;RP0=0, select bank0
  3666  0118' 1303               	bcf	3,6	;RP1=0, select bank0
  3667  0119' 084C'              	movf	?_floor+1,w
  3668  011A' 1683               	bsf	3,5	;RP0=1, select bank1
  3669  011B' 1303               	bcf	3,6	;RP1=0, select bank1
  3670  011C' 0080'              	movwf	(_exp$1248+1)^(0+128)
  3671  011D' 1283               	bcf	3,5	;RP0=0, select bank0
  3672  011E' 1303               	bcf	3,6	;RP1=0, select bank0
  3673  011F' 084B'              	movf	?_floor,w
  3674  0120' 1683               	bsf	3,5	;RP0=1, select bank1
  3675  0121' 1303               	bcf	3,6	;RP1=0, select bank1
  3676  0122' 0080'              	movwf	_exp$1248^(0+128)
  3677  0123' 0800'              	movf	(_exp$1248+3)^(0+128),w
  3678  0124' 0083'              	movwf	___fltol@f1+3
  3679  0125' 0800'              	movf	(_exp$1248+2)^(0+128),w
  3680  0126' 0082'              	movwf	___fltol@f1+2
  3681  0127' 0800'              	movf	(_exp$1248+1)^(0+128),w
  3682  0128' 0081'              	movwf	___fltol@f1+1
  3683  0129' 0800'              	movf	_exp$1248^(0+128),w
  3684  012A' 0080'              	movwf	___fltol@f1
  3685  012B' 118A' 2000' 118A'  	fcall	___fltol
  3686  012E' 0801'              	movf	?___fltol+1,w
  3687  012F' 1683               	bsf	3,5	;RP0=1, select bank1
  3688  0130' 1303               	bcf	3,6	;RP1=0, select bank1
  3689  0131' 0080'              	movwf	(exp@exponent+1)^(0+128)
  3690  0132' 0800'              	movf	?___fltol,w
  3691  0133' 0080'              	movwf	exp@exponent^(0+128)
  3692  0134' 0800'              	movf	exp@exponent^(0+128),w
  3693  0135' 008A'              	movwf	___xxtofl@val
  3694  0136' 0800'              	movf	(exp@exponent+1)^(0+128),w
  3695  0137' 008B'              	movwf	___xxtofl@val+1
  3696  0138' 3000               	movlw	0
  3697  0139' 1B8B'              	btfsc	___xxtofl@val+1,7
  3698  013A' 30FF               	movlw	255
  3699  013B' 008C'              	movwf	___xxtofl@val+2
  3700  013C' 008D'              	movwf	___xxtofl@val+3
  3701  013D' 3001               	movlw	1
  3702  013E' 118A' 2000' 118A'  	fcall	___xxtofl
  3703  0141' 080D'              	movf	?___xxtofl+3,w
  3704  0142' 1683               	bsf	3,5	;RP0=1, select bank1
  3705  0143' 1303               	bcf	3,6	;RP1=0, select bank1
  3706  0144' 0080'              	movwf	(___flsub@a+3)^(0+128)
  3707  0145' 080C'              	movf	?___xxtofl+2,w
  3708  0146' 0080'              	movwf	(___flsub@a+2)^(0+128)
  3709  0147' 080B'              	movf	?___xxtofl+1,w
  3710  0148' 0080'              	movwf	(___flsub@a+1)^(0+128)
  3711  0149' 080A'              	movf	?___xxtofl,w
  3712  014A' 0080'              	movwf	___flsub@a^(0+128)
  3713  014B' 0800'              	movf	(exp@x+3)^(0+128),w
  3714  014C' 0080'              	movwf	(___flsub@b+3)^(0+128)
  3715  014D' 0800'              	movf	(exp@x+2)^(0+128),w
  3716  014E' 0080'              	movwf	(___flsub@b+2)^(0+128)
  3717  014F' 0800'              	movf	(exp@x+1)^(0+128),w
  3718  0150' 0080'              	movwf	(___flsub@b+1)^(0+128)
  3719  0151' 0800'              	movf	exp@x^(0+128),w
  3720  0152' 0080'              	movwf	___flsub@b^(0+128)
  3721  0153' 118A' 2000' 118A'  	fcall	___flsub
  3722  0156' 1683               	bsf	3,5	;RP0=1, select bank1
  3723  0157' 1303               	bcf	3,6	;RP1=0, select bank1
  3724  0158' 0800'              	movf	(?___flsub+3)^(0+128),w
  3725  0159' 0080'              	movwf	(exp@x+3)^(0+128)
  3726  015A' 0800'              	movf	(?___flsub+2)^(0+128),w
  3727  015B' 0080'              	movwf	(exp@x+2)^(0+128)
  3728  015C' 0800'              	movf	(?___flsub+1)^(0+128),w
  3729  015D' 0080'              	movwf	(exp@x+1)^(0+128)
  3730  015E' 0800'              	movf	?___flsub^(0+128),w
  3731  015F' 0080'              	movwf	exp@x^(0+128)
  3732  0160' 0800'              	movf	(exp@x+3)^(0+128),w
  3733  0161' 0080'              	movwf	(eval_poly@x+3)^(0+128)
  3734  0162' 0800'              	movf	(exp@x+2)^(0+128),w
  3735  0163' 0080'              	movwf	(eval_poly@x+2)^(0+128)
  3736  0164' 0800'              	movf	(exp@x+1)^(0+128),w
  3737  0165' 0080'              	movwf	(eval_poly@x+1)^(0+128)
  3738  0166' 0800'              	movf	exp@x^(0+128),w
  3739  0167' 0080'              	movwf	eval_poly@x^(0+128)
  3740  0168' 3001               	movlw	(low ((exp@coeff-__stringbase)| (0+32768)))& (0+255)
  3741  0169' 0080'              	movwf	eval_poly@d^(0+128)
  3742  016A' 3009               	movlw	9
  3743  016B' 0080'              	movwf	eval_poly@n^(0+128)
  3744  016C' 3000               	movlw	0
  3745  016D' 0081'              	movwf	(eval_poly@n^(0+128)+1)
  3746  016E' 118A' 2000' 118A'  	fcall	_eval_poly
  3747  0171' 1683               	bsf	3,5	;RP0=1, select bank1
  3748  0172' 1303               	bcf	3,6	;RP1=0, select bank1
  3749  0173' 0800'              	movf	(?_eval_poly+3)^(0+128),w
  3750  0174' 0080'              	movwf	(ldexp@value+3)^(0+128)
  3751  0175' 0800'              	movf	(?_eval_poly+2)^(0+128),w
  3752  0176' 0080'              	movwf	(ldexp@value+2)^(0+128)
  3753  0177' 0800'              	movf	(?_eval_poly+1)^(0+128),w
  3754  0178' 0080'              	movwf	(ldexp@value+1)^(0+128)
  3755  0179' 0800'              	movf	?_eval_poly^(0+128),w
  3756  017A' 0080'              	movwf	ldexp@value^(0+128)
  3757  017B' 0800'              	movf	(exp@exponent+1)^(0+128),w
  3758  017C' 0080'              	movwf	(ldexp@newexp+1)^(0+128)
  3759  017D' 0800'              	movf	exp@exponent^(0+128),w
  3760  017E' 0080'              	movwf	ldexp@newexp^(0+128)
  3761  017F' 118A' 2000' 118A'  	fcall	_ldexp
  3762  0182' 1683               	bsf	3,5	;RP0=1, select bank1
  3763  0183' 1303               	bcf	3,6	;RP1=0, select bank1
  3764  0184' 0800'              	movf	(?_ldexp+3)^(0+128),w
  3765  0185' 0080'              	movwf	(exp@x+3)^(0+128)
  3766  0186' 0800'              	movf	(?_ldexp+2)^(0+128),w
  3767  0187' 0080'              	movwf	(exp@x+2)^(0+128)
  3768  0188' 0800'              	movf	(?_ldexp+1)^(0+128),w
  3769  0189' 0080'              	movwf	(exp@x+1)^(0+128)
  3770  018A' 0800'              	movf	?_ldexp^(0+128),w
  3771  018B' 0080'              	movwf	exp@x^(0+128)
  3772  018C' 0800'              	movf	exp@sign^(0+128),w
  3773  018D' 1903               	btfsc	3,2
  3774  018E' 0008               	return
  3775  018F' 0800'              	movf	(exp@x+3)^(0+128),w
  3776  0190' 1283               	bcf	3,5	;RP0=0, select bank0
  3777  0191' 1303               	bcf	3,6	;RP1=0, select bank0
  3778  0192' 008D'              	movwf	___fleq@ff1+3
  3779  0193' 1683               	bsf	3,5	;RP0=1, select bank1
  3780  0194' 1303               	bcf	3,6	;RP1=0, select bank1
  3781  0195' 0800'              	movf	(exp@x+2)^(0+128),w
  3782  0196' 1283               	bcf	3,5	;RP0=0, select bank0
  3783  0197' 1303               	bcf	3,6	;RP1=0, select bank0
  3784  0198' 008C'              	movwf	___fleq@ff1+2
  3785  0199' 1683               	bsf	3,5	;RP0=1, select bank1
  3786  019A' 1303               	bcf	3,6	;RP1=0, select bank1
  3787  019B' 0800'              	movf	(exp@x+1)^(0+128),w
  3788  019C' 1283               	bcf	3,5	;RP0=0, select bank0
  3789  019D' 1303               	bcf	3,6	;RP1=0, select bank0
  3790  019E' 008B'              	movwf	___fleq@ff1+1
  3791  019F' 1683               	bsf	3,5	;RP0=1, select bank1
  3792  01A0' 1303               	bcf	3,6	;RP1=0, select bank1
  3793  01A1' 0800'              	movf	exp@x^(0+128),w
  3794  01A2' 1283               	bcf	3,5	;RP0=0, select bank0
  3795  01A3' 1303               	bcf	3,6	;RP1=0, select bank0
  3796  01A4' 008A'              	movwf	___fleq@ff1
  3797  01A5' 307F               	movlw	127
  3798  01A6' 0091'              	movwf	___fleq@ff2+3
  3799  01A7' 307F               	movlw	127
  3800  01A8' 0090'              	movwf	___fleq@ff2+2
  3801  01A9' 30FF               	movlw	255
  3802  01AA' 008F'              	movwf	___fleq@ff2+1
  3803  01AB' 30FF               	movlw	255
  3804  01AC' 008E'              	movwf	___fleq@ff2
  3805  01AD' 118A' 2000' 118A'  	fcall	___fleq
  3806  01B0' 1C03               	btfss	3,0
  3807  01B1' 2800'              	goto	l4659
  3808  01B2' 3000               	movlw	0
  3809  01B3' 1683               	bsf	3,5	;RP0=1, select bank1
  3810  01B4' 1303               	bcf	3,6	;RP1=0, select bank1
  3811  01B5' 0080'              	movwf	(?_exp+3)^(0+128)
  3812  01B6' 3000               	movlw	0
  3813  01B7' 0080'              	movwf	(?_exp+2)^(0+128)
  3814  01B8' 3000               	movlw	0
  3815  01B9' 0080'              	movwf	(?_exp+1)^(0+128)
  3816  01BA' 3000               	movlw	0
  3817  01BB' 0080'              	movwf	?_exp^(0+128)
  3818  01BC' 0008               	return
  3819  01BD'                    l4659:
  3820  01BD' 1683               	bsf	3,5	;RP0=1, select bank1
  3821  01BE' 1303               	bcf	3,6	;RP1=0, select bank1
  3822  01BF' 0800'              	movf	(exp@x+3)^(0+128),w
  3823  01C0' 0083'              	movwf	___fldiv@a+3
  3824  01C1' 0800'              	movf	(exp@x+2)^(0+128),w
  3825  01C2' 0082'              	movwf	___fldiv@a+2
  3826  01C3' 0800'              	movf	(exp@x+1)^(0+128),w
  3827  01C4' 0081'              	movwf	___fldiv@a+1
  3828  01C5' 0800'              	movf	exp@x^(0+128),w
  3829  01C6' 0080'              	movwf	___fldiv@a
  3830  01C7' 303F               	movlw	63
  3831  01C8' 0087'              	movwf	___fldiv@b+3
  3832  01C9' 3080               	movlw	128
  3833  01CA' 0086'              	movwf	___fldiv@b+2
  3834  01CB' 3000               	movlw	0
  3835  01CC' 0085'              	movwf	___fldiv@b+1
  3836  01CD' 3000               	movlw	0
  3837  01CE' 0084'              	movwf	___fldiv@b
  3838  01CF' 118A' 2000'        	fcall	___fldiv
  3839  01D1' 0803'              	movf	?___fldiv+3,w
  3840  01D2' 1683               	bsf	3,5	;RP0=1, select bank1
  3841  01D3' 1303               	bcf	3,6	;RP1=0, select bank1
  3842  01D4' 0080'              	movwf	(?_exp+3)^(0+128)
  3843  01D5' 0802'              	movf	?___fldiv+2,w
  3844  01D6' 0080'              	movwf	(?_exp+2)^(0+128)
  3845  01D7' 0801'              	movf	?___fldiv+1,w
  3846  01D8' 0080'              	movwf	(?_exp+1)^(0+128)
  3847  01D9' 0800'              	movf	?___fldiv,w
  3848  01DA' 0080'              	movwf	?_exp^(0+128)
  3849  01DB' 0008               	return
  3850  01DC'                    __end_of_exp:
  3851                           
  3852                           	psect	text9
  3853  0000'                    __ptext9:	
  3854 ;; *************** function _ldexp *****************
  3855 ;; Defined at:
  3856 ;;		line 277 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/frexp.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  value           4   11[BANK1 ] unsigned char 
  3859 ;;  newexp          2   15[BANK1 ] int 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  4   11[BANK1 ] int 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3871 ;;      Params:         0       0       6       0
  3872 ;;      Locals:         0       0       0       0
  3873 ;;      Temps:          0       0       2       0
  3874 ;;      Totals:         0       0       8       0
  3875 ;;Total ram usage:        8 bytes
  3876 ;; Hardware stack levels used: 1
  3877 ;; Hardware stack levels required when called: 1
  3878 ;; This function calls:
  3879 ;;		___fleq
  3880 ;;		___flge
  3881 ;; This function is called by:
  3882 ;;		_exp
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886  0000'                    _ldexp:	
  3887                           ;psect for function _ldexp
  3888                           
  3889                           
  3890                           ;incstack = 0
  3891                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3892  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  3893  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  3894  0002' 0800'              	movf	(ldexp@value+3)^(0+128),w
  3895  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  3896  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  3897  0005' 008D'              	movwf	___fleq@ff1+3
  3898  0006' 1683               	bsf	3,5	;RP0=1, select bank1
  3899  0007' 1303               	bcf	3,6	;RP1=0, select bank1
  3900  0008' 0800'              	movf	(ldexp@value+2)^(0+128),w
  3901  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  3902  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  3903  000B' 008C'              	movwf	___fleq@ff1+2
  3904  000C' 1683               	bsf	3,5	;RP0=1, select bank1
  3905  000D' 1303               	bcf	3,6	;RP1=0, select bank1
  3906  000E' 0800'              	movf	(ldexp@value+1)^(0+128),w
  3907  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  3908  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  3909  0011' 008B'              	movwf	___fleq@ff1+1
  3910  0012' 1683               	bsf	3,5	;RP0=1, select bank1
  3911  0013' 1303               	bcf	3,6	;RP1=0, select bank1
  3912  0014' 0800'              	movf	ldexp@value^(0+128),w
  3913  0015' 1283               	bcf	3,5	;RP0=0, select bank0
  3914  0016' 1303               	bcf	3,6	;RP1=0, select bank0
  3915  0017' 008A'              	movwf	___fleq@ff1
  3916  0018' 3000               	movlw	0
  3917  0019' 0091'              	movwf	___fleq@ff2+3
  3918  001A' 3000               	movlw	0
  3919  001B' 0090'              	movwf	___fleq@ff2+2
  3920  001C' 3000               	movlw	0
  3921  001D' 008F'              	movwf	___fleq@ff2+1
  3922  001E' 3000               	movlw	0
  3923  001F' 008E'              	movwf	___fleq@ff2
  3924  0020' 118A' 2000' 118A'  	fcall	___fleq
  3925  0023' 1C03               	btfss	3,0
  3926  0024' 2800'              	goto	l4563
  3927  0025' 3000               	movlw	0
  3928  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  3929  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  3930  0028' 0080'              	movwf	(?_ldexp+3)^(0+128)
  3931  0029' 3000               	movlw	0
  3932  002A' 0080'              	movwf	(?_ldexp+2)^(0+128)
  3933  002B' 3000               	movlw	0
  3934  002C' 0080'              	movwf	(?_ldexp+1)^(0+128)
  3935  002D' 3000               	movlw	0
  3936  002E' 0080'              	movwf	?_ldexp^(0+128)
  3937  002F' 0008               	return
  3938  0030'                    l4563:
  3939  0030' 1683               	bsf	3,5	;RP0=1, select bank1
  3940  0031' 1303               	bcf	3,6	;RP1=0, select bank1
  3941  0032' 0803'              	movf	(ldexp@value^(0+128)+3),w
  3942  0033' 397F               	andlw	127
  3943  0034' 0080'              	movwf	??_ldexp^(0+128)
  3944  0035' 0181'              	clrf	(??_ldexp^(0+128)+1)
  3945  0036' 1003               	clrc
  3946  0037' 0D80'              	rlf	??_ldexp^(0+128),f
  3947  0038' 0D81'              	rlf	(??_ldexp^(0+128)+1),f
  3948  0039' 0800'              	movf	??_ldexp^(0+128),w
  3949  003A' 0780'              	addwf	ldexp@newexp^(0+128),f
  3950  003B' 1803               	skipnc
  3951  003C' 0A80'              	incf	(ldexp@newexp+1)^(0+128),f
  3952  003D' 0800'              	movf	(??_ldexp+1)^(0+128),w
  3953  003E' 0780'              	addwf	(ldexp@newexp+1)^(0+128),f
  3954  003F' 0D02'              	rlf	(ldexp@value^(0+128)+2),w
  3955  0040' 0D02'              	rlf	(ldexp@value^(0+128)+2),w
  3956  0041' 3901               	andlw	1
  3957  0042' 0080'              	movwf	??_ldexp^(0+128)
  3958  0043' 0181'              	clrf	(??_ldexp^(0+128)+1)
  3959  0044' 0800'              	movf	??_ldexp^(0+128),w
  3960  0045' 0780'              	addwf	ldexp@newexp^(0+128),f
  3961  0046' 1803               	skipnc
  3962  0047' 0A80'              	incf	(ldexp@newexp+1)^(0+128),f
  3963  0048' 0800'              	movf	(??_ldexp+1)^(0+128),w
  3964  0049' 0780'              	addwf	(ldexp@newexp+1)^(0+128),f
  3965  004A' 1F80'              	btfss	(ldexp@newexp+1)^(0+128),7
  3966  004B' 2800'              	goto	l4573
  3967  004C' 3022               	movlw	34
  3968  004D' 1283               	bcf	3,5	;RP0=0, select bank2
  3969  004E' 1703               	bsf	3,6	;RP1=1, select bank2
  3970  004F' 0080'              	movwf	_errno^(0+256)
  3971  0050' 3000               	movlw	0
  3972  0051' 0081'              	movwf	(_errno^(0+256)+1)
  3973  0052' 3000               	movlw	0
  3974  0053' 1683               	bsf	3,5	;RP0=1, select bank1
  3975  0054' 1303               	bcf	3,6	;RP1=0, select bank1
  3976  0055' 0080'              	movwf	(?_ldexp+3)^(0+128)
  3977  0056' 3000               	movlw	0
  3978  0057' 0080'              	movwf	(?_ldexp+2)^(0+128)
  3979  0058' 3000               	movlw	0
  3980  0059' 0080'              	movwf	(?_ldexp+1)^(0+128)
  3981  005A' 3000               	movlw	0
  3982  005B' 0080'              	movwf	?_ldexp^(0+128)
  3983  005C' 0008               	return
  3984  005D'                    l4573:
  3985  005D' 0800'              	movf	(ldexp@newexp+1)^(0+128),w
  3986  005E' 3A80               	xorlw	128
  3987  005F' 00FF               	movwf	127
  3988  0060' 3081               	movlw	129
  3989  0061' 027F               	subwf	127,w
  3990  0062' 1D03               	skipz
  3991  0063' 2800'              	goto	u6485
  3992  0064' 3000               	movlw	0
  3993  0065' 0200'              	subwf	ldexp@newexp^(0+128),w
  3994  0066'                    u6485:
  3995  0066' 1C03               	skipc
  3996  0067' 2800'              	goto	l4589
  3997  0068' 3022               	movlw	34
  3998  0069' 1283               	bcf	3,5	;RP0=0, select bank2
  3999  006A' 1703               	bsf	3,6	;RP1=1, select bank2
  4000  006B' 0080'              	movwf	_errno^(0+256)
  4001  006C' 3000               	movlw	0
  4002  006D' 0081'              	movwf	(_errno^(0+256)+1)
  4003  006E' 1683               	bsf	3,5	;RP0=1, select bank1
  4004  006F' 1303               	bcf	3,6	;RP1=0, select bank1
  4005  0070' 0800'              	movf	(ldexp@value+3)^(0+128),w
  4006  0071' 0083'              	movwf	___flge@ff1+3
  4007  0072' 0800'              	movf	(ldexp@value+2)^(0+128),w
  4008  0073' 0082'              	movwf	___flge@ff1+2
  4009  0074' 0800'              	movf	(ldexp@value+1)^(0+128),w
  4010  0075' 0081'              	movwf	___flge@ff1+1
  4011  0076' 0800'              	movf	ldexp@value^(0+128),w
  4012  0077' 0080'              	movwf	___flge@ff1
  4013  0078' 3000               	movlw	0
  4014  0079' 0087'              	movwf	___flge@ff2+3
  4015  007A' 3000               	movlw	0
  4016  007B' 0086'              	movwf	___flge@ff2+2
  4017  007C' 3000               	movlw	0
  4018  007D' 0085'              	movwf	___flge@ff2+1
  4019  007E' 3000               	movlw	0
  4020  007F' 0084'              	movwf	___flge@ff2
  4021  0080' 118A' 2000' 118A'  	fcall	___flge
  4022  0083' 1803               	btfsc	3,0
  4023  0084' 2800'              	goto	l4585
  4024  0085' 30FF               	movlw	255
  4025  0086' 1683               	bsf	3,5	;RP0=1, select bank1
  4026  0087' 1303               	bcf	3,6	;RP1=0, select bank1
  4027  0088' 0080'              	movwf	(?_ldexp+3)^(0+128)
  4028  0089' 307F               	movlw	127
  4029  008A' 0080'              	movwf	(?_ldexp+2)^(0+128)
  4030  008B' 30FF               	movlw	255
  4031  008C' 0080'              	movwf	(?_ldexp+1)^(0+128)
  4032  008D' 30FF               	movlw	255
  4033  008E' 0080'              	movwf	?_ldexp^(0+128)
  4034  008F' 0008               	return
  4035  0090'                    l4585:
  4036  0090' 307F               	movlw	127
  4037  0091' 1683               	bsf	3,5	;RP0=1, select bank1
  4038  0092' 1303               	bcf	3,6	;RP1=0, select bank1
  4039  0093' 0080'              	movwf	(?_ldexp+3)^(0+128)
  4040  0094' 307F               	movlw	127
  4041  0095' 0080'              	movwf	(?_ldexp+2)^(0+128)
  4042  0096' 30FF               	movlw	255
  4043  0097' 0080'              	movwf	(?_ldexp+1)^(0+128)
  4044  0098' 30FF               	movlw	255
  4045  0099' 0080'              	movwf	?_ldexp^(0+128)
  4046  009A' 0008               	return
  4047  009B'                    l4589:
  4048  009B' 1683               	bsf	3,5	;RP0=1, select bank1
  4049  009C' 1303               	bcf	3,6	;RP1=0, select bank1
  4050  009D' 0800'              	movf	(ldexp@newexp+1)^(0+128),w
  4051  009E' 0081'              	movwf	(??_ldexp^(0+128)+1)
  4052  009F' 0800'              	movf	ldexp@newexp^(0+128),w
  4053  00A0' 0080'              	movwf	??_ldexp^(0+128)
  4054  00A1' 0D01'              	rlf	(??_ldexp^(0+128)+1),w
  4055  00A2' 0C81'              	rrf	(??_ldexp^(0+128)+1),f
  4056  00A3' 0C80'              	rrf	??_ldexp^(0+128),f
  4057  00A4' 0803'              	movf	(ldexp@value^(0+128)+3),w
  4058  00A5' 0600'              	xorwf	??_ldexp^(0+128),w
  4059  00A6' 3980               	andlw	-128
  4060  00A7' 0600'              	xorwf	??_ldexp^(0+128),w
  4061  00A8' 0083'              	movwf	(ldexp@value^(0+128)+3)
  4062  00A9' 0800'              	movf	ldexp@newexp^(0+128),w
  4063  00AA' 3901               	andlw	1
  4064  00AB' 0080'              	movwf	??_ldexp^(0+128)
  4065  00AC' 0C80'              	rrf	??_ldexp^(0+128),f
  4066  00AD' 0C80'              	rrf	??_ldexp^(0+128),f
  4067  00AE' 0802'              	movf	(ldexp@value^(0+128)+2),w
  4068  00AF' 0600'              	xorwf	??_ldexp^(0+128),w
  4069  00B0' 397F               	andlw	-129
  4070  00B1' 0600'              	xorwf	??_ldexp^(0+128),w
  4071  00B2' 0082'              	movwf	(ldexp@value^(0+128)+2)
  4072  00B3' 0008               	return
  4073  00B4'                    __end_of_ldexp:
  4074                           
  4075                           	psect	text10
  4076  0000'                    __ptext10:	
  4077 ;; *************** function _floor *****************
  4078 ;; Defined at:
  4079 ;;		line 13 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/floor.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  x               4   75[BANK0 ] int 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  i               4    0[BANK1 ] int 
  4084 ;;  expon           2    4[BANK1 ] int 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  4   75[BANK0 ] int 
  4087 ;; Registers used:
  4088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4094 ;;      Params:         0       4       0       0
  4095 ;;      Locals:         0       0       6       0
  4096 ;;      Temps:          0       0       0       0
  4097 ;;      Totals:         0       4       6       0
  4098 ;;Total ram usage:       10 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; Hardware stack levels required when called: 2
  4101 ;; This function calls:
  4102 ;;		___fladd
  4103 ;;		___flge
  4104 ;;		___fltol
  4105 ;;		___xxtofl
  4106 ;;		_frexp
  4107 ;; This function is called by:
  4108 ;;		_exp
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112  0000'                    _floor:	
  4113                           ;psect for function _floor
  4114                           
  4115                           
  4116                           ;incstack = 0
  4117                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4118  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4119  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4120  0002' 084E'              	movf	floor@x+3,w
  4121  0003' 0099'              	movwf	frexp@value+3
  4122  0004' 084D'              	movf	floor@x+2,w
  4123  0005' 0098'              	movwf	frexp@value+2
  4124  0006' 084C'              	movf	floor@x+1,w
  4125  0007' 0097'              	movwf	frexp@value+1
  4126  0008' 084B'              	movf	floor@x,w
  4127  0009' 0096'              	movwf	frexp@value
  4128  000A' 3000'              	movlw	(low (floor@expon| 0))& (0+255)
  4129  000B' 009A'              	movwf	frexp@eptr
  4130  000C' 118A' 2000' 118A'  	fcall	_frexp
  4131  000F' 1683               	bsf	3,5	;RP0=1, select bank1
  4132  0010' 1303               	bcf	3,6	;RP1=0, select bank1
  4133  0011' 1F80'              	btfss	(floor@expon+1)^(0+128),7
  4134  0012' 2800'              	goto	l4533
  4135  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  4136  0014' 1303               	bcf	3,6	;RP1=0, select bank0
  4137  0015' 084E'              	movf	floor@x+3,w
  4138  0016' 0083'              	movwf	___flge@ff1+3
  4139  0017' 084D'              	movf	floor@x+2,w
  4140  0018' 0082'              	movwf	___flge@ff1+2
  4141  0019' 084C'              	movf	floor@x+1,w
  4142  001A' 0081'              	movwf	___flge@ff1+1
  4143  001B' 084B'              	movf	floor@x,w
  4144  001C' 0080'              	movwf	___flge@ff1
  4145  001D' 3000               	movlw	0
  4146  001E' 0087'              	movwf	___flge@ff2+3
  4147  001F' 3000               	movlw	0
  4148  0020' 0086'              	movwf	___flge@ff2+2
  4149  0021' 3000               	movlw	0
  4150  0022' 0085'              	movwf	___flge@ff2+1
  4151  0023' 3000               	movlw	0
  4152  0024' 0084'              	movwf	___flge@ff2
  4153  0025' 118A' 2000' 118A'  	fcall	___flge
  4154  0028' 1803               	btfsc	3,0
  4155  0029' 2800'              	goto	l4529
  4156  002A' 30BF               	movlw	191
  4157  002B' 1283               	bcf	3,5	;RP0=0, select bank0
  4158  002C' 1303               	bcf	3,6	;RP1=0, select bank0
  4159  002D' 00CE'              	movwf	?_floor+3
  4160  002E' 3080               	movlw	128
  4161  002F' 00CD'              	movwf	?_floor+2
  4162  0030' 3000               	movlw	0
  4163  0031' 00CC'              	movwf	?_floor+1
  4164  0032' 3000               	movlw	0
  4165  0033' 00CB'              	movwf	?_floor
  4166  0034' 0008               	return
  4167  0035'                    l4529:
  4168  0035' 3000               	movlw	0
  4169  0036' 1283               	bcf	3,5	;RP0=0, select bank0
  4170  0037' 1303               	bcf	3,6	;RP1=0, select bank0
  4171  0038' 00CE'              	movwf	?_floor+3
  4172  0039' 3000               	movlw	0
  4173  003A' 00CD'              	movwf	?_floor+2
  4174  003B' 3000               	movlw	0
  4175  003C' 00CC'              	movwf	?_floor+1
  4176  003D' 3000               	movlw	0
  4177  003E' 00CB'              	movwf	?_floor
  4178  003F' 0008               	return
  4179  0040'                    l4533:
  4180  0040' 3000               	movlw	0
  4181  0041' 0200'              	subwf	(floor@expon+1)^(0+128),w
  4182  0042' 301D               	movlw	29
  4183  0043' 1903               	skipnz
  4184  0044' 0200'              	subwf	floor@expon^(0+128),w
  4185  0045' 1803               	btfsc	3,0
  4186  0046' 0008               	return
  4187  0047' 1283               	bcf	3,5	;RP0=0, select bank0
  4188  0048' 1303               	bcf	3,6	;RP1=0, select bank0
  4189  0049' 084E'              	movf	floor@x+3,w
  4190  004A' 0083'              	movwf	___fltol@f1+3
  4191  004B' 084D'              	movf	floor@x+2,w
  4192  004C' 0082'              	movwf	___fltol@f1+2
  4193  004D' 084C'              	movf	floor@x+1,w
  4194  004E' 0081'              	movwf	___fltol@f1+1
  4195  004F' 084B'              	movf	floor@x,w
  4196  0050' 0080'              	movwf	___fltol@f1
  4197  0051' 118A' 2000' 118A'  	fcall	___fltol
  4198  0054' 0803'              	movf	?___fltol+3,w
  4199  0055' 008D'              	movwf	___xxtofl@val+3
  4200  0056' 0802'              	movf	?___fltol+2,w
  4201  0057' 008C'              	movwf	___xxtofl@val+2
  4202  0058' 0801'              	movf	?___fltol+1,w
  4203  0059' 008B'              	movwf	___xxtofl@val+1
  4204  005A' 0800'              	movf	?___fltol,w
  4205  005B' 008A'              	movwf	___xxtofl@val
  4206  005C' 3001               	movlw	1
  4207  005D' 118A' 2000' 118A'  	fcall	___xxtofl
  4208  0060' 080D'              	movf	?___xxtofl+3,w
  4209  0061' 1683               	bsf	3,5	;RP0=1, select bank1
  4210  0062' 1303               	bcf	3,6	;RP1=0, select bank1
  4211  0063' 0080'              	movwf	(floor@i+3)^(0+128)
  4212  0064' 080C'              	movf	?___xxtofl+2,w
  4213  0065' 0080'              	movwf	(floor@i+2)^(0+128)
  4214  0066' 080B'              	movf	?___xxtofl+1,w
  4215  0067' 0080'              	movwf	(floor@i+1)^(0+128)
  4216  0068' 080A'              	movf	?___xxtofl,w
  4217  0069' 0080'              	movwf	floor@i^(0+128)
  4218  006A' 1283               	bcf	3,5	;RP0=0, select bank0
  4219  006B' 1303               	bcf	3,6	;RP1=0, select bank0
  4220  006C' 084E'              	movf	floor@x+3,w
  4221  006D' 0083'              	movwf	___flge@ff1+3
  4222  006E' 084D'              	movf	floor@x+2,w
  4223  006F' 0082'              	movwf	___flge@ff1+2
  4224  0070' 084C'              	movf	floor@x+1,w
  4225  0071' 0081'              	movwf	___flge@ff1+1
  4226  0072' 084B'              	movf	floor@x,w
  4227  0073' 0080'              	movwf	___flge@ff1
  4228  0074' 1683               	bsf	3,5	;RP0=1, select bank1
  4229  0075' 1303               	bcf	3,6	;RP1=0, select bank1
  4230  0076' 0800'              	movf	(floor@i+3)^(0+128),w
  4231  0077' 0087'              	movwf	___flge@ff2+3
  4232  0078' 0800'              	movf	(floor@i+2)^(0+128),w
  4233  0079' 0086'              	movwf	___flge@ff2+2
  4234  007A' 0800'              	movf	(floor@i+1)^(0+128),w
  4235  007B' 0085'              	movwf	___flge@ff2+1
  4236  007C' 0800'              	movf	floor@i^(0+128),w
  4237  007D' 0084'              	movwf	___flge@ff2
  4238  007E' 118A' 2000' 118A'  	fcall	___flge
  4239  0081' 1803               	btfsc	3,0
  4240  0082' 2800'              	goto	l4543
  4241  0083' 30BF               	movlw	191
  4242  0084' 1283               	bcf	3,5	;RP0=0, select bank0
  4243  0085' 1303               	bcf	3,6	;RP1=0, select bank0
  4244  0086' 00BA'              	movwf	___fladd@b+3
  4245  0087' 3080               	movlw	128
  4246  0088' 00B9'              	movwf	___fladd@b+2
  4247  0089' 3000               	movlw	0
  4248  008A' 00B8'              	movwf	___fladd@b+1
  4249  008B' 3000               	movlw	0
  4250  008C' 00B7'              	movwf	___fladd@b
  4251  008D' 1683               	bsf	3,5	;RP0=1, select bank1
  4252  008E' 1303               	bcf	3,6	;RP1=0, select bank1
  4253  008F' 0800'              	movf	(floor@i+3)^(0+128),w
  4254  0090' 1283               	bcf	3,5	;RP0=0, select bank0
  4255  0091' 1303               	bcf	3,6	;RP1=0, select bank0
  4256  0092' 00BE'              	movwf	___fladd@a+3
  4257  0093' 1683               	bsf	3,5	;RP0=1, select bank1
  4258  0094' 1303               	bcf	3,6	;RP1=0, select bank1
  4259  0095' 0800'              	movf	(floor@i+2)^(0+128),w
  4260  0096' 1283               	bcf	3,5	;RP0=0, select bank0
  4261  0097' 1303               	bcf	3,6	;RP1=0, select bank0
  4262  0098' 00BD'              	movwf	___fladd@a+2
  4263  0099' 1683               	bsf	3,5	;RP0=1, select bank1
  4264  009A' 1303               	bcf	3,6	;RP1=0, select bank1
  4265  009B' 0800'              	movf	(floor@i+1)^(0+128),w
  4266  009C' 1283               	bcf	3,5	;RP0=0, select bank0
  4267  009D' 1303               	bcf	3,6	;RP1=0, select bank0
  4268  009E' 00BC'              	movwf	___fladd@a+1
  4269  009F' 1683               	bsf	3,5	;RP0=1, select bank1
  4270  00A0' 1303               	bcf	3,6	;RP1=0, select bank1
  4271  00A1' 0800'              	movf	floor@i^(0+128),w
  4272  00A2' 1283               	bcf	3,5	;RP0=0, select bank0
  4273  00A3' 1303               	bcf	3,6	;RP1=0, select bank0
  4274  00A4' 00BB'              	movwf	___fladd@a
  4275  00A5' 118A' 2000'        	fcall	___fladd
  4276  00A7' 1283               	bcf	3,5	;RP0=0, select bank0
  4277  00A8' 1303               	bcf	3,6	;RP1=0, select bank0
  4278  00A9' 083A'              	movf	?___fladd+3,w
  4279  00AA' 00CE'              	movwf	?_floor+3
  4280  00AB' 0839'              	movf	?___fladd+2,w
  4281  00AC' 00CD'              	movwf	?_floor+2
  4282  00AD' 0838'              	movf	?___fladd+1,w
  4283  00AE' 00CC'              	movwf	?_floor+1
  4284  00AF' 0837'              	movf	?___fladd,w
  4285  00B0' 00CB'              	movwf	?_floor
  4286  00B1' 0008               	return
  4287  00B2'                    l4543:
  4288  00B2' 1683               	bsf	3,5	;RP0=1, select bank1
  4289  00B3' 1303               	bcf	3,6	;RP1=0, select bank1
  4290  00B4' 0800'              	movf	(floor@i+3)^(0+128),w
  4291  00B5' 1283               	bcf	3,5	;RP0=0, select bank0
  4292  00B6' 1303               	bcf	3,6	;RP1=0, select bank0
  4293  00B7' 00CE'              	movwf	?_floor+3
  4294  00B8' 1683               	bsf	3,5	;RP0=1, select bank1
  4295  00B9' 1303               	bcf	3,6	;RP1=0, select bank1
  4296  00BA' 0800'              	movf	(floor@i+2)^(0+128),w
  4297  00BB' 1283               	bcf	3,5	;RP0=0, select bank0
  4298  00BC' 1303               	bcf	3,6	;RP1=0, select bank0
  4299  00BD' 00CD'              	movwf	?_floor+2
  4300  00BE' 1683               	bsf	3,5	;RP0=1, select bank1
  4301  00BF' 1303               	bcf	3,6	;RP1=0, select bank1
  4302  00C0' 0800'              	movf	(floor@i+1)^(0+128),w
  4303  00C1' 1283               	bcf	3,5	;RP0=0, select bank0
  4304  00C2' 1303               	bcf	3,6	;RP1=0, select bank0
  4305  00C3' 00CC'              	movwf	?_floor+1
  4306  00C4' 1683               	bsf	3,5	;RP0=1, select bank1
  4307  00C5' 1303               	bcf	3,6	;RP1=0, select bank1
  4308  00C6' 0800'              	movf	floor@i^(0+128),w
  4309  00C7' 1283               	bcf	3,5	;RP0=0, select bank0
  4310  00C8' 1303               	bcf	3,6	;RP1=0, select bank0
  4311  00C9' 00CB'              	movwf	?_floor
  4312  00CA' 0008               	return
  4313  00CB'                    __end_of_floor:
  4314                           
  4315                           	psect	text11
  4316  0000'                    __ptext11:	
  4317 ;; *************** function _frexp *****************
  4318 ;; Defined at:
  4319 ;;		line 254 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/frexp.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  value           4   22[BANK0 ] int 
  4322 ;;  eptr            1   26[BANK0 ] PTR int 
  4323 ;;		 -> log@exponent(2), floor@expon(2), 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;		None
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  4   22[BANK0 ] PTR int 
  4328 ;; Registers used:
  4329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4335 ;;      Params:         0       5       0       0
  4336 ;;      Locals:         0       0       0       0
  4337 ;;      Temps:          0       2       0       0
  4338 ;;      Totals:         0       7       0       0
  4339 ;;Total ram usage:        7 bytes
  4340 ;; Hardware stack levels used: 1
  4341 ;; Hardware stack levels required when called: 1
  4342 ;; This function calls:
  4343 ;;		___fleq
  4344 ;; This function is called by:
  4345 ;;		_floor
  4346 ;;		_log
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350  0000'                    _frexp:	
  4351                           ;psect for function _frexp
  4352                           
  4353                           
  4354                           ;incstack = 0
  4355                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4356  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4357  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4358  0002' 0819'              	movf	frexp@value+3,w
  4359  0003' 008D'              	movwf	___fleq@ff1+3
  4360  0004' 0818'              	movf	frexp@value+2,w
  4361  0005' 008C'              	movwf	___fleq@ff1+2
  4362  0006' 0817'              	movf	frexp@value+1,w
  4363  0007' 008B'              	movwf	___fleq@ff1+1
  4364  0008' 0816'              	movf	frexp@value,w
  4365  0009' 008A'              	movwf	___fleq@ff1
  4366  000A' 3000               	movlw	0
  4367  000B' 0091'              	movwf	___fleq@ff2+3
  4368  000C' 3000               	movlw	0
  4369  000D' 0090'              	movwf	___fleq@ff2+2
  4370  000E' 3000               	movlw	0
  4371  000F' 008F'              	movwf	___fleq@ff2+1
  4372  0010' 3000               	movlw	0
  4373  0011' 008E'              	movwf	___fleq@ff2
  4374  0012' 118A' 2000' 118A'  	fcall	___fleq
  4375  0015' 1C03               	btfss	3,0
  4376  0016' 2800'              	goto	l4351
  4377  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  4378  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  4379  0019' 081A'              	movf	frexp@eptr,w
  4380  001A' 0084               	movwf	4
  4381  001B' 1383               	bcf	3,7	;select IRP bank0
  4382  001C' 0180               	clrf	0
  4383  001D' 0A84               	incf	4,f
  4384  001E' 0180               	clrf	0
  4385  001F' 3000               	movlw	0
  4386  0020' 0099'              	movwf	?_frexp+3
  4387  0021' 3000               	movlw	0
  4388  0022' 0098'              	movwf	?_frexp+2
  4389  0023' 3000               	movlw	0
  4390  0024' 0097'              	movwf	?_frexp+1
  4391  0025' 3000               	movlw	0
  4392  0026' 0096'              	movwf	?_frexp
  4393  0027' 0008               	return
  4394  0028'                    l4351:
  4395  0028' 1283               	bcf	3,5	;RP0=0, select bank0
  4396  0029' 1303               	bcf	3,6	;RP1=0, select bank0
  4397  002A' 0819'              	movf	frexp@value+3,w
  4398  002B' 397F               	andlw	127
  4399  002C' 009B'              	movwf	??_frexp
  4400  002D' 019C'              	clrf	??_frexp+1
  4401  002E' 1003               	clrc
  4402  002F' 0D9B'              	rlf	??_frexp,f
  4403  0030' 0D9C'              	rlf	??_frexp+1,f
  4404  0031' 081A'              	movf	frexp@eptr,w
  4405  0032' 0084               	movwf	4
  4406  0033' 081B'              	movf	??_frexp,w
  4407  0034' 1383               	bcf	3,7	;select IRP bank0
  4408  0035' 0080               	movwf	0
  4409  0036' 0A84               	incf	4,f
  4410  0037' 081C'              	movf	??_frexp+1,w
  4411  0038' 0080               	movwf	0
  4412  0039' 0D18'              	rlf	frexp@value+2,w
  4413  003A' 0D18'              	rlf	frexp@value+2,w
  4414  003B' 3901               	andlw	1
  4415  003C' 009B'              	movwf	??_frexp
  4416  003D' 019C'              	clrf	??_frexp+1
  4417  003E' 081A'              	movf	frexp@eptr,w
  4418  003F' 0084               	movwf	4
  4419  0040' 081B'              	movf	??_frexp,w
  4420  0041' 0480               	iorwf	0,f
  4421  0042' 0A84               	incf	4,f
  4422  0043' 081C'              	movf	??_frexp+1,w
  4423  0044' 0480               	iorwf	0,f
  4424  0045' 081A'              	movf	frexp@eptr,w
  4425  0046' 0084               	movwf	4
  4426  0047' 3082               	movlw	130
  4427  0048' 0780               	addwf	0,f
  4428  0049' 0F84               	incfsz	4,f
  4429  004A' 0800               	movf	0,w
  4430  004B' 1803               	skipnc
  4431  004C' 0A00               	incf	0,w
  4432  004D' 00FF               	movwf	127
  4433  004E' 30FF               	movlw	255
  4434  004F' 077F               	addwf	127,w
  4435  0050' 0080               	movwf	0
  4436  0051' 0384               	decf	4,f
  4437  0052' 0819'              	movf	frexp@value+3,w
  4438  0053' 3980               	andlw	-128
  4439  0054' 383F               	iorlw	63
  4440  0055' 0099'              	movwf	frexp@value+3
  4441  0056' 1398'              	bcf	frexp@value+2,7
  4442  0057' 0008               	return
  4443  0058'                    __end_of_frexp:
  4444                           
  4445                           	psect	text12
  4446  0000'                    __ptext12:	
  4447 ;; *************** function ___fleq *****************
  4448 ;; Defined at:
  4449 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/fleq.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  ff1             4   10[BANK0 ] PTR int 
  4452 ;;  ff2             4   14[BANK0 ] PTR int 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;		None
  4455 ;; Return value:  Size  Location     Type
  4456 ;;		None               void
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4464 ;;      Params:         0       8       0       0
  4465 ;;      Locals:         0       0       0       0
  4466 ;;      Temps:          0       4       0       0
  4467 ;;      Totals:         0      12       0       0
  4468 ;;Total ram usage:       12 bytes
  4469 ;; Hardware stack levels used: 1
  4470 ;; This function calls:
  4471 ;;		Nothing
  4472 ;; This function is called by:
  4473 ;;		_pow
  4474 ;;		_exp
  4475 ;;		_frexp
  4476 ;;		_ldexp
  4477 ;;		_log
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481  0000'                    ___fleq:	
  4482                           ;psect for function ___fleq
  4483                           
  4484                           
  4485                           ;incstack = 0
  4486                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  4487  0000' 3000               	movlw	0
  4488  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  4489  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  4490  0003' 050A'              	andwf	___fleq@ff1,w
  4491  0004' 0092'              	movwf	??___fleq
  4492  0005' 3000               	movlw	0
  4493  0006' 050B'              	andwf	___fleq@ff1+1,w
  4494  0007' 0093'              	movwf	??___fleq+1
  4495  0008' 3080               	movlw	128
  4496  0009' 050C'              	andwf	___fleq@ff1+2,w
  4497  000A' 0094'              	movwf	??___fleq+2
  4498  000B' 307F               	movlw	127
  4499  000C' 050D'              	andwf	___fleq@ff1+3,w
  4500  000D' 0095'              	movwf	??___fleq+3
  4501  000E' 0815'              	movf	??___fleq+3,w
  4502  000F' 0414'              	iorwf	??___fleq+2,w
  4503  0010' 0413'              	iorwf	??___fleq+1,w
  4504  0011' 0412'              	iorwf	??___fleq,w
  4505  0012' 1D03               	skipz
  4506  0013' 2800'              	goto	l537
  4507  0014' 3000               	movlw	0
  4508  0015' 008D'              	movwf	___fleq@ff1+3
  4509  0016' 3000               	movlw	0
  4510  0017' 008C'              	movwf	___fleq@ff1+2
  4511  0018' 3000               	movlw	0
  4512  0019' 008B'              	movwf	___fleq@ff1+1
  4513  001A' 3000               	movlw	0
  4514  001B' 008A'              	movwf	___fleq@ff1
  4515  001C'                    l537:
  4516  001C' 3000               	movlw	0
  4517  001D' 050E'              	andwf	___fleq@ff2,w
  4518  001E' 0092'              	movwf	??___fleq
  4519  001F' 3000               	movlw	0
  4520  0020' 050F'              	andwf	___fleq@ff2+1,w
  4521  0021' 0093'              	movwf	??___fleq+1
  4522  0022' 3080               	movlw	128
  4523  0023' 0510'              	andwf	___fleq@ff2+2,w
  4524  0024' 0094'              	movwf	??___fleq+2
  4525  0025' 307F               	movlw	127
  4526  0026' 0511'              	andwf	___fleq@ff2+3,w
  4527  0027' 0095'              	movwf	??___fleq+3
  4528  0028' 0815'              	movf	??___fleq+3,w
  4529  0029' 0414'              	iorwf	??___fleq+2,w
  4530  002A' 0413'              	iorwf	??___fleq+1,w
  4531  002B' 0412'              	iorwf	??___fleq,w
  4532  002C' 1D03               	skipz
  4533  002D' 2800'              	goto	l538
  4534  002E' 3000               	movlw	0
  4535  002F' 0091'              	movwf	___fleq@ff2+3
  4536  0030' 3000               	movlw	0
  4537  0031' 0090'              	movwf	___fleq@ff2+2
  4538  0032' 3000               	movlw	0
  4539  0033' 008F'              	movwf	___fleq@ff2+1
  4540  0034' 3000               	movlw	0
  4541  0035' 008E'              	movwf	___fleq@ff2
  4542  0036'                    l538:
  4543  0036' 0811'              	movf	___fleq@ff2+3,w
  4544  0037' 060D'              	xorwf	___fleq@ff1+3,w
  4545  0038' 1D03               	skipz
  4546  0039' 2800'              	goto	u4895
  4547  003A' 0810'              	movf	___fleq@ff2+2,w
  4548  003B' 060C'              	xorwf	___fleq@ff1+2,w
  4549  003C' 1D03               	skipz
  4550  003D' 2800'              	goto	u4895
  4551  003E' 080F'              	movf	___fleq@ff2+1,w
  4552  003F' 060B'              	xorwf	___fleq@ff1+1,w
  4553  0040' 1D03               	skipz
  4554  0041' 2800'              	goto	u4895
  4555  0042' 080E'              	movf	___fleq@ff2,w
  4556  0043' 060A'              	xorwf	___fleq@ff1,w
  4557  0044'                    u4895:
  4558  0044' 1903               	skipnz
  4559  0045' 2800'              	goto	l3891
  4560  0046' 1003               	clrc
  4561  0047' 0008               	return
  4562  0048'                    l3891:
  4563  0048' 1403               	setc
  4564  0049' 0008               	return
  4565  004A'                    __end_of___fleq:
  4566                           
  4567                           	psect	text13
  4568  0000'                    __ptext13:	
  4569 ;; *************** function ___xxtofl *****************
  4570 ;; Defined at:
  4571 ;;		line 10 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/xxtofl.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  sign            1    wreg     unsigned char 
  4574 ;;  val             4   10[COMMON] long 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  sign            1    4[BANK0 ] unsigned char 
  4577 ;;  arg             4    6[BANK0 ] unsigned long 
  4578 ;;  exp             1    5[BANK0 ] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  4   10[COMMON] unsigned char 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4588 ;;      Params:         4       0       0       0
  4589 ;;      Locals:         0       6       0       0
  4590 ;;      Temps:          0       4       0       0
  4591 ;;      Totals:         4      10       0       0
  4592 ;;Total ram usage:       14 bytes
  4593 ;; Hardware stack levels used: 1
  4594 ;; This function calls:
  4595 ;;		Nothing
  4596 ;; This function is called by:
  4597 ;;		_pow
  4598 ;;		_exp
  4599 ;;		_floor
  4600 ;;		_log
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604  0000'                    ___xxtofl:	
  4605                           ;psect for function ___xxtofl
  4606                           
  4607                           
  4608                           ;incstack = 0
  4609                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4610                           ;___xxtofl@sign stored from wreg
  4611  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4612  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4613  0002' 0084'              	movwf	___xxtofl@sign
  4614  0003' 0804'              	movf	___xxtofl@sign,w
  4615  0004' 1D03               	btfss	3,2
  4616  0005' 1F8D'              	btfss	___xxtofl@val+3,7
  4617  0006' 2800'              	goto	l4305
  4618  0007' 090A'              	comf	___xxtofl@val,w
  4619  0008' 0086'              	movwf	___xxtofl@arg
  4620  0009' 090B'              	comf	___xxtofl@val+1,w
  4621  000A' 0087'              	movwf	___xxtofl@arg+1
  4622  000B' 090C'              	comf	___xxtofl@val+2,w
  4623  000C' 0088'              	movwf	___xxtofl@arg+2
  4624  000D' 090D'              	comf	___xxtofl@val+3,w
  4625  000E' 0089'              	movwf	___xxtofl@arg+3
  4626  000F' 0A86'              	incf	___xxtofl@arg,f
  4627  0010' 1903               	skipnz
  4628  0011' 0A87'              	incf	___xxtofl@arg+1,f
  4629  0012' 1903               	skipnz
  4630  0013' 0A88'              	incf	___xxtofl@arg+2,f
  4631  0014' 1903               	skipnz
  4632  0015' 0A89'              	incf	___xxtofl@arg+3,f
  4633  0016' 2800'              	goto	l821
  4634  0017'                    l4305:
  4635  0017' 080D'              	movf	___xxtofl@val+3,w
  4636  0018' 0089'              	movwf	___xxtofl@arg+3
  4637  0019' 080C'              	movf	___xxtofl@val+2,w
  4638  001A' 0088'              	movwf	___xxtofl@arg+2
  4639  001B' 080B'              	movf	___xxtofl@val+1,w
  4640  001C' 0087'              	movwf	___xxtofl@arg+1
  4641  001D' 080A'              	movf	___xxtofl@val,w
  4642  001E' 0086'              	movwf	___xxtofl@arg
  4643  001F'                    l821:
  4644  001F' 080D'              	movf	___xxtofl@val+3,w
  4645  0020' 040C'              	iorwf	___xxtofl@val+2,w
  4646  0021' 040B'              	iorwf	___xxtofl@val+1,w
  4647  0022' 040A'              	iorwf	___xxtofl@val,w
  4648  0023' 1D03               	skipz
  4649  0024' 2800'              	goto	l4311
  4650  0025' 3000               	movlw	0
  4651  0026' 008D'              	movwf	?___xxtofl+3
  4652  0027' 3000               	movlw	0
  4653  0028' 008C'              	movwf	?___xxtofl+2
  4654  0029' 3000               	movlw	0
  4655  002A' 008B'              	movwf	?___xxtofl+1
  4656  002B' 3000               	movlw	0
  4657  002C' 008A'              	movwf	?___xxtofl
  4658  002D' 0008               	return
  4659  002E'                    l4311:
  4660  002E' 3096               	movlw	150
  4661  002F' 0085'              	movwf	___xxtofl@exp
  4662  0030'                    l4315:
  4663  0030' 30FE               	movlw	254
  4664  0031' 0509'              	andwf	___xxtofl@arg+3,w
  4665  0032' 1903               	btfsc	3,2
  4666  0033' 2800'              	goto	l827
  4667  0034' 3001               	movlw	1
  4668  0035' 0080'              	movwf	??___xxtofl
  4669  0036' 0800'              	movf	??___xxtofl,w
  4670  0037' 0785'              	addwf	___xxtofl@exp,f
  4671  0038' 3001               	movlw	1
  4672  0039'                    u5965:
  4673  0039' 1003               	clrc
  4674  003A' 0C89'              	rrf	___xxtofl@arg+3,f
  4675  003B' 0C88'              	rrf	___xxtofl@arg+2,f
  4676  003C' 0C87'              	rrf	___xxtofl@arg+1,f
  4677  003D' 0C86'              	rrf	___xxtofl@arg,f
  4678  003E' 3EFF               	addlw	-1
  4679  003F' 1D03               	skipz
  4680  0040' 2800'              	goto	u5965
  4681  0041' 2800'              	goto	l4315
  4682  0042'                    l4317:
  4683  0042' 3001               	movlw	1
  4684  0043' 0080'              	movwf	??___xxtofl
  4685  0044' 0800'              	movf	??___xxtofl,w
  4686  0045' 0785'              	addwf	___xxtofl@exp,f
  4687  0046' 3001               	movlw	1
  4688  0047' 0786'              	addwf	___xxtofl@arg,f
  4689  0048' 3000               	movlw	0
  4690  0049' 1803               	skipnc
  4691  004A' 3001               	movlw	1
  4692  004B' 0787'              	addwf	___xxtofl@arg+1,f
  4693  004C' 3000               	movlw	0
  4694  004D' 1803               	skipnc
  4695  004E' 3001               	movlw	1
  4696  004F' 0788'              	addwf	___xxtofl@arg+2,f
  4697  0050' 3000               	movlw	0
  4698  0051' 1803               	skipnc
  4699  0052' 3001               	movlw	1
  4700  0053' 0789'              	addwf	___xxtofl@arg+3,f
  4701  0054' 3001               	movlw	1
  4702  0055'                    u5985:
  4703  0055' 1003               	clrc
  4704  0056' 0C89'              	rrf	___xxtofl@arg+3,f
  4705  0057' 0C88'              	rrf	___xxtofl@arg+2,f
  4706  0058' 0C87'              	rrf	___xxtofl@arg+1,f
  4707  0059' 0C86'              	rrf	___xxtofl@arg,f
  4708  005A' 3EFF               	addlw	-1
  4709  005B' 1D03               	skipz
  4710  005C' 2800'              	goto	u5985
  4711  005D'                    l827:
  4712  005D' 30FF               	movlw	255
  4713  005E' 0509'              	andwf	___xxtofl@arg+3,w
  4714  005F' 1903               	btfsc	3,2
  4715  0060' 2800'              	goto	l4325
  4716  0061' 2800'              	goto	l4317
  4717  0062'                    l4327:
  4718  0062' 3002               	movlw	2
  4719  0063' 0205'              	subwf	___xxtofl@exp,w
  4720  0064' 1C03               	btfss	3,0
  4721  0065' 2800'              	goto	l834
  4722  0066' 3001               	movlw	1
  4723  0067' 0285'              	subwf	___xxtofl@exp,f
  4724  0068' 3001               	movlw	1
  4725  0069' 0080'              	movwf	??___xxtofl
  4726  006A'                    u6005:
  4727  006A' 1003               	clrc
  4728  006B' 0D86'              	rlf	___xxtofl@arg,f
  4729  006C' 0D87'              	rlf	___xxtofl@arg+1,f
  4730  006D' 0D88'              	rlf	___xxtofl@arg+2,f
  4731  006E' 0D89'              	rlf	___xxtofl@arg+3,f
  4732  006F' 0B80'              	decfsz	??___xxtofl,f
  4733  0070' 2800'              	goto	u6005
  4734  0071'                    l4325:
  4735  0071' 1F88'              	btfss	___xxtofl@arg+2,7
  4736  0072' 2800'              	goto	l4327
  4737  0073'                    l834:
  4738  0073' 1805'              	btfsc	___xxtofl@exp,0
  4739  0074' 2800'              	goto	l835
  4740  0075' 30FF               	movlw	255
  4741  0076' 0586'              	andwf	___xxtofl@arg,f
  4742  0077' 30FF               	movlw	255
  4743  0078' 0587'              	andwf	___xxtofl@arg+1,f
  4744  0079' 307F               	movlw	127
  4745  007A' 0588'              	andwf	___xxtofl@arg+2,f
  4746  007B' 30FF               	movlw	255
  4747  007C' 0589'              	andwf	___xxtofl@arg+3,f
  4748  007D'                    l835:
  4749  007D' 1003               	clrc
  4750  007E' 0C85'              	rrf	___xxtofl@exp,f
  4751  007F' 0805'              	movf	___xxtofl@exp,w
  4752  0080' 0080'              	movwf	??___xxtofl
  4753  0081' 0181'              	clrf	??___xxtofl+1
  4754  0082' 0182'              	clrf	??___xxtofl+2
  4755  0083' 0183'              	clrf	??___xxtofl+3
  4756  0084' 3018               	movlw	24
  4757  0085'                    u6045:
  4758  0085' 1003               	clrc
  4759  0086' 0D80'              	rlf	??___xxtofl,f
  4760  0087' 0D81'              	rlf	??___xxtofl+1,f
  4761  0088' 0D82'              	rlf	??___xxtofl+2,f
  4762  0089' 0D83'              	rlf	??___xxtofl+3,f
  4763  008A' 3EFF               	addlw	-1
  4764  008B' 1D03               	skipz
  4765  008C' 2800'              	goto	u6045
  4766  008D' 0800'              	movf	??___xxtofl,w
  4767  008E' 0486'              	iorwf	___xxtofl@arg,f
  4768  008F' 0801'              	movf	??___xxtofl+1,w
  4769  0090' 0487'              	iorwf	___xxtofl@arg+1,f
  4770  0091' 0802'              	movf	??___xxtofl+2,w
  4771  0092' 0488'              	iorwf	___xxtofl@arg+2,f
  4772  0093' 0803'              	movf	??___xxtofl+3,w
  4773  0094' 0489'              	iorwf	___xxtofl@arg+3,f
  4774  0095' 0804'              	movf	___xxtofl@sign,w
  4775  0096' 1D03               	btfss	3,2
  4776  0097' 1F8D'              	btfss	___xxtofl@val+3,7
  4777  0098' 2800'              	goto	l4339
  4778  0099' 1789'              	bsf	___xxtofl@arg+3,7
  4779  009A'                    l4339:
  4780  009A' 0809'              	movf	___xxtofl@arg+3,w
  4781  009B' 008D'              	movwf	?___xxtofl+3
  4782  009C' 0808'              	movf	___xxtofl@arg+2,w
  4783  009D' 008C'              	movwf	?___xxtofl+2
  4784  009E' 0807'              	movf	___xxtofl@arg+1,w
  4785  009F' 008B'              	movwf	?___xxtofl+1
  4786  00A0' 0806'              	movf	___xxtofl@arg,w
  4787  00A1' 008A'              	movwf	?___xxtofl
  4788  00A2' 0008               	return
  4789  00A3'                    __end_of___xxtofl:
  4790                           
  4791                           	psect	text14
  4792  0000'                    __ptext14:	
  4793 ;; *************** function ___flge *****************
  4794 ;; Defined at:
  4795 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/flge.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  ff1             4    0[COMMON] unsigned char 
  4798 ;;  ff2             4    4[COMMON] unsigned char 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;		None               void
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4810 ;;      Params:         8       0       0       0
  4811 ;;      Locals:         0       0       0       0
  4812 ;;      Temps:          4       0       0       0
  4813 ;;      Totals:        12       0       0       0
  4814 ;;Total ram usage:       12 bytes
  4815 ;; Hardware stack levels used: 1
  4816 ;; This function calls:
  4817 ;;		Nothing
  4818 ;; This function is called by:
  4819 ;;		_pow
  4820 ;;		_exp
  4821 ;;		_floor
  4822 ;;		_ldexp
  4823 ;;		_log
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827  0000'                    ___flge:	
  4828                           ;psect for function ___flge
  4829                           
  4830                           
  4831                           ;incstack = 0
  4832                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4833  0000' 3000               	movlw	0
  4834  0001' 0500'              	andwf	___flge@ff1,w
  4835  0002' 0088'              	movwf	??___flge
  4836  0003' 3000               	movlw	0
  4837  0004' 0501'              	andwf	___flge@ff1+1,w
  4838  0005' 0089'              	movwf	??___flge+1
  4839  0006' 3080               	movlw	128
  4840  0007' 0502'              	andwf	___flge@ff1+2,w
  4841  0008' 008A'              	movwf	??___flge+2
  4842  0009' 307F               	movlw	127
  4843  000A' 0503'              	andwf	___flge@ff1+3,w
  4844  000B' 008B'              	movwf	??___flge+3
  4845  000C' 080B'              	movf	??___flge+3,w
  4846  000D' 040A'              	iorwf	??___flge+2,w
  4847  000E' 0409'              	iorwf	??___flge+1,w
  4848  000F' 0408'              	iorwf	??___flge,w
  4849  0010' 1D03               	skipz
  4850  0011' 2800'              	goto	l542
  4851  0012' 3000               	movlw	0
  4852  0013' 0083'              	movwf	___flge@ff1+3
  4853  0014' 3000               	movlw	0
  4854  0015' 0082'              	movwf	___flge@ff1+2
  4855  0016' 3000               	movlw	0
  4856  0017' 0081'              	movwf	___flge@ff1+1
  4857  0018' 3000               	movlw	0
  4858  0019' 0080'              	movwf	___flge@ff1
  4859  001A'                    l542:
  4860  001A' 3000               	movlw	0
  4861  001B' 0504'              	andwf	___flge@ff2,w
  4862  001C' 0088'              	movwf	??___flge
  4863  001D' 3000               	movlw	0
  4864  001E' 0505'              	andwf	___flge@ff2+1,w
  4865  001F' 0089'              	movwf	??___flge+1
  4866  0020' 3080               	movlw	128
  4867  0021' 0506'              	andwf	___flge@ff2+2,w
  4868  0022' 008A'              	movwf	??___flge+2
  4869  0023' 307F               	movlw	127
  4870  0024' 0507'              	andwf	___flge@ff2+3,w
  4871  0025' 008B'              	movwf	??___flge+3
  4872  0026' 080B'              	movf	??___flge+3,w
  4873  0027' 040A'              	iorwf	??___flge+2,w
  4874  0028' 0409'              	iorwf	??___flge+1,w
  4875  0029' 0408'              	iorwf	??___flge,w
  4876  002A' 1D03               	skipz
  4877  002B' 2800'              	goto	l3915
  4878  002C' 3000               	movlw	0
  4879  002D' 0087'              	movwf	___flge@ff2+3
  4880  002E' 3000               	movlw	0
  4881  002F' 0086'              	movwf	___flge@ff2+2
  4882  0030' 3000               	movlw	0
  4883  0031' 0085'              	movwf	___flge@ff2+1
  4884  0032' 3000               	movlw	0
  4885  0033' 0084'              	movwf	___flge@ff2
  4886  0034'                    l3915:
  4887  0034' 1F83'              	btfss	___flge@ff1+3,7
  4888  0035' 2800'              	goto	l3919
  4889  0036' 3000               	movlw	0
  4890  0037' 0088'              	movwf	??___flge
  4891  0038' 3000               	movlw	0
  4892  0039' 0089'              	movwf	??___flge+1
  4893  003A' 3000               	movlw	0
  4894  003B' 008A'              	movwf	??___flge+2
  4895  003C' 3080               	movlw	128
  4896  003D' 008B'              	movwf	??___flge+3
  4897  003E' 0800'              	movf	___flge@ff1,w
  4898  003F' 0288'              	subwf	??___flge,f
  4899  0040' 0801'              	movf	___flge@ff1+1,w
  4900  0041' 1C03               	skipc
  4901  0042' 0F01'              	incfsz	___flge@ff1+1,w
  4902  0043' 2800'              	goto	u4961
  4903  0044' 2800'              	goto	u4962
  4904  0045'                    u4961:
  4905  0045' 0289'              	subwf	??___flge+1,f
  4906  0046'                    u4962:
  4907  0046' 0802'              	movf	___flge@ff1+2,w
  4908  0047' 1C03               	skipc
  4909  0048' 0F02'              	incfsz	___flge@ff1+2,w
  4910  0049' 2800'              	goto	u4963
  4911  004A' 2800'              	goto	u4964
  4912  004B'                    u4963:
  4913  004B' 028A'              	subwf	??___flge+2,f
  4914  004C'                    u4964:
  4915  004C' 0803'              	movf	___flge@ff1+3,w
  4916  004D' 1C03               	skipc
  4917  004E' 0F03'              	incfsz	___flge@ff1+3,w
  4918  004F' 2800'              	goto	u4965
  4919  0050' 2800'              	goto	u4966
  4920  0051'                    u4965:
  4921  0051' 028B'              	subwf	??___flge+3,f
  4922  0052'                    u4966:
  4923  0052' 080B'              	movf	??___flge+3,w
  4924  0053' 0083'              	movwf	___flge@ff1+3
  4925  0054' 080A'              	movf	??___flge+2,w
  4926  0055' 0082'              	movwf	___flge@ff1+2
  4927  0056' 0809'              	movf	??___flge+1,w
  4928  0057' 0081'              	movwf	___flge@ff1+1
  4929  0058' 0808'              	movf	??___flge,w
  4930  0059' 0080'              	movwf	___flge@ff1
  4931  005A'                    l3919:
  4932  005A' 1F87'              	btfss	___flge@ff2+3,7
  4933  005B' 2800'              	goto	l545
  4934  005C' 3000               	movlw	0
  4935  005D' 0088'              	movwf	??___flge
  4936  005E' 3000               	movlw	0
  4937  005F' 0089'              	movwf	??___flge+1
  4938  0060' 3000               	movlw	0
  4939  0061' 008A'              	movwf	??___flge+2
  4940  0062' 3080               	movlw	128
  4941  0063' 008B'              	movwf	??___flge+3
  4942  0064' 0804'              	movf	___flge@ff2,w
  4943  0065' 0288'              	subwf	??___flge,f
  4944  0066' 0805'              	movf	___flge@ff2+1,w
  4945  0067' 1C03               	skipc
  4946  0068' 0F05'              	incfsz	___flge@ff2+1,w
  4947  0069' 2800'              	goto	u4981
  4948  006A' 2800'              	goto	u4982
  4949  006B'                    u4981:
  4950  006B' 0289'              	subwf	??___flge+1,f
  4951  006C'                    u4982:
  4952  006C' 0806'              	movf	___flge@ff2+2,w
  4953  006D' 1C03               	skipc
  4954  006E' 0F06'              	incfsz	___flge@ff2+2,w
  4955  006F' 2800'              	goto	u4983
  4956  0070' 2800'              	goto	u4984
  4957  0071'                    u4983:
  4958  0071' 028A'              	subwf	??___flge+2,f
  4959  0072'                    u4984:
  4960  0072' 0807'              	movf	___flge@ff2+3,w
  4961  0073' 1C03               	skipc
  4962  0074' 0F07'              	incfsz	___flge@ff2+3,w
  4963  0075' 2800'              	goto	u4985
  4964  0076' 2800'              	goto	u4986
  4965  0077'                    u4985:
  4966  0077' 028B'              	subwf	??___flge+3,f
  4967  0078'                    u4986:
  4968  0078' 080B'              	movf	??___flge+3,w
  4969  0079' 0087'              	movwf	___flge@ff2+3
  4970  007A' 080A'              	movf	??___flge+2,w
  4971  007B' 0086'              	movwf	___flge@ff2+2
  4972  007C' 0809'              	movf	??___flge+1,w
  4973  007D' 0085'              	movwf	___flge@ff2+1
  4974  007E' 0808'              	movf	??___flge,w
  4975  007F' 0084'              	movwf	___flge@ff2
  4976  0080'                    l545:
  4977  0080' 3080               	movlw	128
  4978  0081' 0683'              	xorwf	___flge@ff1+3,f
  4979  0082' 3080               	movlw	128
  4980  0083' 0687'              	xorwf	___flge@ff2+3,f
  4981  0084' 0807'              	movf	___flge@ff2+3,w
  4982  0085' 0203'              	subwf	___flge@ff1+3,w
  4983  0086' 1D03               	skipz
  4984  0087' 0008               	return
  4985  0088' 0806'              	movf	___flge@ff2+2,w
  4986  0089' 0202'              	subwf	___flge@ff1+2,w
  4987  008A' 1D03               	skipz
  4988  008B' 0008               	return
  4989  008C' 0805'              	movf	___flge@ff2+1,w
  4990  008D' 0201'              	subwf	___flge@ff1+1,w
  4991  008E' 1D03               	skipz
  4992  008F' 0008               	return
  4993  0090' 0804'              	movf	___flge@ff2,w
  4994  0091' 0200'              	subwf	___flge@ff1,w
  4995  0092' 0008               	return
  4996  0093'                    __end_of___flge:
  4997                           
  4998                           	psect	text15
  4999  0000'                    __ptext15:	
  5000 ;; *************** function _eval_poly *****************
  5001 ;; Defined at:
  5002 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/evalpoly.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;  x               4    0[BANK1 ] unsigned char 
  5005 ;;  d               1    4[BANK1 ] PTR const 
  5006 ;;		 -> log@coeff(36), exp@coeff(40), 
  5007 ;;  n               2    5[BANK1 ] int 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  res             4    7[BANK1 ] int 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  4    0[BANK1 ] int 
  5012 ;; Registers used:
  5013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5019 ;;      Params:         0       0       7       0
  5020 ;;      Locals:         0       0       4       0
  5021 ;;      Temps:          0       5       0       0
  5022 ;;      Totals:         0       5      11       0
  5023 ;;Total ram usage:       16 bytes
  5024 ;; Hardware stack levels used: 1
  5025 ;; Hardware stack levels required when called: 2
  5026 ;; This function calls:
  5027 ;;		___fladd
  5028 ;;		___flmul
  5029 ;; This function is called by:
  5030 ;;		_exp
  5031 ;;		_log
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035  0000'                    _eval_poly:	
  5036                           ;psect for function _eval_poly
  5037                           
  5038                           
  5039                           ;incstack = 0
  5040 ;; using string table level
  5041                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5042  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  5043  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  5044  0002' 0800'              	movf	eval_poly@n^(0+128),w
  5045  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  5046  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  5047  0005' 00CB'              	movwf	??_eval_poly
  5048  0006' 3001               	movlw	1
  5049  0007'                    u6435:
  5050  0007' 1003               	clrc
  5051  0008' 0DCB'              	rlf	??_eval_poly,f
  5052  0009' 3EFF               	addlw	-1
  5053  000A' 1D03               	skipz
  5054  000B' 2800'              	goto	u6435
  5055  000C' 1003               	clrc
  5056  000D' 0D4B'              	rlf	??_eval_poly,w
  5057  000E' 1683               	bsf	3,5	;RP0=1, select bank1
  5058  000F' 1303               	bcf	3,6	;RP1=0, select bank1
  5059  0010' 0700'              	addwf	eval_poly@d^(0+128),w
  5060  0011' 0084               	movwf	4
  5061  0012' 118A' 2000' 118A'  	fcall	stringdir
  5062  0015' 1283               	bcf	3,5	;RP0=0, select bank0
  5063  0016' 1303               	bcf	3,6	;RP1=0, select bank0
  5064  0017' 00CC'              	movwf	??_eval_poly+1
  5065  0018' 118A' 2000' 118A'  	fcall	stringdir
  5066  001B' 00CD'              	movwf	??_eval_poly+2
  5067  001C' 118A' 2000' 118A'  	fcall	stringdir
  5068  001F' 00CE'              	movwf	??_eval_poly+3
  5069  0020' 118A' 2000' 118A'  	fcall	stringdir
  5070  0023' 00CF'              	movwf	??_eval_poly+4
  5071  0024' 084F'              	movf	??_eval_poly+4,w
  5072  0025' 1683               	bsf	3,5	;RP0=1, select bank1
  5073  0026' 1303               	bcf	3,6	;RP1=0, select bank1
  5074  0027' 0080'              	movwf	(eval_poly@res+3)^(0+128)
  5075  0028' 1283               	bcf	3,5	;RP0=0, select bank0
  5076  0029' 1303               	bcf	3,6	;RP1=0, select bank0
  5077  002A' 084E'              	movf	??_eval_poly+3,w
  5078  002B' 1683               	bsf	3,5	;RP0=1, select bank1
  5079  002C' 1303               	bcf	3,6	;RP1=0, select bank1
  5080  002D' 0080'              	movwf	(eval_poly@res+2)^(0+128)
  5081  002E' 1283               	bcf	3,5	;RP0=0, select bank0
  5082  002F' 1303               	bcf	3,6	;RP1=0, select bank0
  5083  0030' 084D'              	movf	??_eval_poly+2,w
  5084  0031' 1683               	bsf	3,5	;RP0=1, select bank1
  5085  0032' 1303               	bcf	3,6	;RP1=0, select bank1
  5086  0033' 0080'              	movwf	(eval_poly@res+1)^(0+128)
  5087  0034' 1283               	bcf	3,5	;RP0=0, select bank0
  5088  0035' 1303               	bcf	3,6	;RP1=0, select bank0
  5089  0036' 084C'              	movf	??_eval_poly+1,w
  5090  0037'                    L2:
  5091  0037' 1683               	bsf	3,5	;RP0=1, select bank1
  5092  0038' 1303               	bcf	3,6	;RP1=0, select bank1
  5093  0039' 0080'              	movwf	eval_poly@res^(0+128)
  5094  003A' 0800'              	movf	eval_poly@n^(0+128),w
  5095  003B' 0400'              	iorwf	(eval_poly@n+1)^(0+128),w
  5096  003C' 1903               	btfsc	3,2
  5097  003D' 2800'              	goto	l4553
  5098  003E' 30FF               	movlw	255
  5099  003F' 0780'              	addwf	eval_poly@n^(0+128),f
  5100  0040' 1803               	skipnc
  5101  0041' 0A80'              	incf	(eval_poly@n+1)^(0+128),f
  5102  0042' 30FF               	movlw	255
  5103  0043' 0780'              	addwf	(eval_poly@n+1)^(0+128),f
  5104  0044' 0800'              	movf	eval_poly@n^(0+128),w
  5105  0045' 1283               	bcf	3,5	;RP0=0, select bank0
  5106  0046' 1303               	bcf	3,6	;RP1=0, select bank0
  5107  0047' 00CB'              	movwf	??_eval_poly
  5108  0048' 3001               	movlw	1
  5109  0049'                    u6445:
  5110  0049' 1003               	clrc
  5111  004A' 0DCB'              	rlf	??_eval_poly,f
  5112  004B' 3EFF               	addlw	-1
  5113  004C' 1D03               	skipz
  5114  004D' 2800'              	goto	u6445
  5115  004E' 1003               	clrc
  5116  004F' 0D4B'              	rlf	??_eval_poly,w
  5117  0050' 1683               	bsf	3,5	;RP0=1, select bank1
  5118  0051' 1303               	bcf	3,6	;RP1=0, select bank1
  5119  0052' 0700'              	addwf	eval_poly@d^(0+128),w
  5120  0053' 0084               	movwf	4
  5121  0054' 118A' 2000' 118A'  	fcall	stringdir
  5122  0057' 1283               	bcf	3,5	;RP0=0, select bank0
  5123  0058' 1303               	bcf	3,6	;RP1=0, select bank0
  5124  0059' 00CC'              	movwf	??_eval_poly+1
  5125  005A' 118A' 2000' 118A'  	fcall	stringdir
  5126  005D' 00CD'              	movwf	??_eval_poly+2
  5127  005E' 118A' 2000' 118A'  	fcall	stringdir
  5128  0061' 00CE'              	movwf	??_eval_poly+3
  5129  0062' 118A' 2000' 118A'  	fcall	stringdir
  5130  0065' 00CF'              	movwf	??_eval_poly+4
  5131  0066' 084F'              	movf	??_eval_poly+4,w
  5132  0067' 00BA'              	movwf	___fladd@b+3
  5133  0068' 084E'              	movf	??_eval_poly+3,w
  5134  0069' 00B9'              	movwf	___fladd@b+2
  5135  006A' 084D'              	movf	??_eval_poly+2,w
  5136  006B' 00B8'              	movwf	___fladd@b+1
  5137  006C' 084C'              	movf	??_eval_poly+1,w
  5138  006D' 00B7'              	movwf	___fladd@b
  5139  006E' 1683               	bsf	3,5	;RP0=1, select bank1
  5140  006F' 1303               	bcf	3,6	;RP1=0, select bank1
  5141  0070' 0800'              	movf	(eval_poly@res+3)^(0+128),w
  5142  0071' 1283               	bcf	3,5	;RP0=0, select bank0
  5143  0072' 1303               	bcf	3,6	;RP1=0, select bank0
  5144  0073' 00A0'              	movwf	___flmul@b+3
  5145  0074' 1683               	bsf	3,5	;RP0=1, select bank1
  5146  0075' 1303               	bcf	3,6	;RP1=0, select bank1
  5147  0076' 0800'              	movf	(eval_poly@res+2)^(0+128),w
  5148  0077' 1283               	bcf	3,5	;RP0=0, select bank0
  5149  0078' 1303               	bcf	3,6	;RP1=0, select bank0
  5150  0079' 009F'              	movwf	___flmul@b+2
  5151  007A' 1683               	bsf	3,5	;RP0=1, select bank1
  5152  007B' 1303               	bcf	3,6	;RP1=0, select bank1
  5153  007C' 0800'              	movf	(eval_poly@res+1)^(0+128),w
  5154  007D' 1283               	bcf	3,5	;RP0=0, select bank0
  5155  007E' 1303               	bcf	3,6	;RP1=0, select bank0
  5156  007F' 009E'              	movwf	___flmul@b+1
  5157  0080' 1683               	bsf	3,5	;RP0=1, select bank1
  5158  0081' 1303               	bcf	3,6	;RP1=0, select bank1
  5159  0082' 0800'              	movf	eval_poly@res^(0+128),w
  5160  0083' 1283               	bcf	3,5	;RP0=0, select bank0
  5161  0084' 1303               	bcf	3,6	;RP1=0, select bank0
  5162  0085' 009D'              	movwf	___flmul@b
  5163  0086' 1683               	bsf	3,5	;RP0=1, select bank1
  5164  0087' 1303               	bcf	3,6	;RP1=0, select bank1
  5165  0088' 0800'              	movf	(eval_poly@x+3)^(0+128),w
  5166  0089' 1283               	bcf	3,5	;RP0=0, select bank0
  5167  008A' 1303               	bcf	3,6	;RP1=0, select bank0
  5168  008B' 00A4'              	movwf	___flmul@a+3
  5169  008C' 1683               	bsf	3,5	;RP0=1, select bank1
  5170  008D' 1303               	bcf	3,6	;RP1=0, select bank1
  5171  008E' 0800'              	movf	(eval_poly@x+2)^(0+128),w
  5172  008F' 1283               	bcf	3,5	;RP0=0, select bank0
  5173  0090' 1303               	bcf	3,6	;RP1=0, select bank0
  5174  0091' 00A3'              	movwf	___flmul@a+2
  5175  0092' 1683               	bsf	3,5	;RP0=1, select bank1
  5176  0093' 1303               	bcf	3,6	;RP1=0, select bank1
  5177  0094' 0800'              	movf	(eval_poly@x+1)^(0+128),w
  5178  0095' 1283               	bcf	3,5	;RP0=0, select bank0
  5179  0096' 1303               	bcf	3,6	;RP1=0, select bank0
  5180  0097' 00A2'              	movwf	___flmul@a+1
  5181  0098' 1683               	bsf	3,5	;RP0=1, select bank1
  5182  0099' 1303               	bcf	3,6	;RP1=0, select bank1
  5183  009A' 0800'              	movf	eval_poly@x^(0+128),w
  5184  009B' 1283               	bcf	3,5	;RP0=0, select bank0
  5185  009C' 1303               	bcf	3,6	;RP1=0, select bank0
  5186  009D' 00A1'              	movwf	___flmul@a
  5187  009E' 118A' 2000' 118A'  	fcall	___flmul
  5188  00A1' 1283               	bcf	3,5	;RP0=0, select bank0
  5189  00A2' 1303               	bcf	3,6	;RP1=0, select bank0
  5190  00A3' 0820'              	movf	?___flmul+3,w
  5191  00A4' 00BE'              	movwf	___fladd@a+3
  5192  00A5' 081F'              	movf	?___flmul+2,w
  5193  00A6' 00BD'              	movwf	___fladd@a+2
  5194  00A7' 081E'              	movf	?___flmul+1,w
  5195  00A8' 00BC'              	movwf	___fladd@a+1
  5196  00A9' 081D'              	movf	?___flmul,w
  5197  00AA' 00BB'              	movwf	___fladd@a
  5198  00AB' 118A' 2000' 118A'  	fcall	___fladd
  5199  00AE' 1283               	bcf	3,5	;RP0=0, select bank0
  5200  00AF' 1303               	bcf	3,6	;RP1=0, select bank0
  5201  00B0' 083A'              	movf	?___fladd+3,w
  5202  00B1' 1683               	bsf	3,5	;RP0=1, select bank1
  5203  00B2' 1303               	bcf	3,6	;RP1=0, select bank1
  5204  00B3' 0080'              	movwf	(eval_poly@res+3)^(0+128)
  5205  00B4' 1283               	bcf	3,5	;RP0=0, select bank0
  5206  00B5' 1303               	bcf	3,6	;RP1=0, select bank0
  5207  00B6' 0839'              	movf	?___fladd+2,w
  5208  00B7' 1683               	bsf	3,5	;RP0=1, select bank1
  5209  00B8' 1303               	bcf	3,6	;RP1=0, select bank1
  5210  00B9' 0080'              	movwf	(eval_poly@res+2)^(0+128)
  5211  00BA' 1283               	bcf	3,5	;RP0=0, select bank0
  5212  00BB' 1303               	bcf	3,6	;RP1=0, select bank0
  5213  00BC' 0838'              	movf	?___fladd+1,w
  5214  00BD' 1683               	bsf	3,5	;RP0=1, select bank1
  5215  00BE' 1303               	bcf	3,6	;RP1=0, select bank1
  5216  00BF' 0080'              	movwf	(eval_poly@res+1)^(0+128)
  5217  00C0' 1283               	bcf	3,5	;RP0=0, select bank0
  5218  00C1' 1303               	bcf	3,6	;RP1=0, select bank0
  5219  00C2' 0837'              	movf	?___fladd,w
  5220  00C3' 2800'              	goto	L2
  5221  00C4'                    l4553:
  5222  00C4' 0800'              	movf	(eval_poly@res+3)^(0+128),w
  5223  00C5' 0080'              	movwf	(?_eval_poly+3)^(0+128)
  5224  00C6' 0800'              	movf	(eval_poly@res+2)^(0+128),w
  5225  00C7' 0080'              	movwf	(?_eval_poly+2)^(0+128)
  5226  00C8' 0800'              	movf	(eval_poly@res+1)^(0+128),w
  5227  00C9' 0080'              	movwf	(?_eval_poly+1)^(0+128)
  5228  00CA' 0800'              	movf	eval_poly@res^(0+128),w
  5229  00CB' 0080'              	movwf	?_eval_poly^(0+128)
  5230  00CC' 0008               	return
  5231  00CD'                    __end_of_eval_poly:
  5232                           
  5233                           	psect	text16
  5234  0000'                    __ptext16:	
  5235 ;; *************** function ___flmul *****************
  5236 ;; Defined at:
  5237 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcmul.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  b               4   29[BANK0 ] int 
  5240 ;;  a               4   33[BANK0 ] int 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;  prod            4   49[BANK0 ] struct .
  5243 ;;  grs             4   44[BANK0 ] unsigned long 
  5244 ;;  temp            2   53[BANK0 ] struct .
  5245 ;;  bexp            1   48[BANK0 ] unsigned char 
  5246 ;;  aexp            1   43[BANK0 ] unsigned char 
  5247 ;;  sign            1   42[BANK0 ] unsigned char 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  4   29[BANK0 ] unsigned char 
  5250 ;; Registers used:
  5251 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5257 ;;      Params:         0       8       0       0
  5258 ;;      Locals:         0      13       0       0
  5259 ;;      Temps:          0       5       0       0
  5260 ;;      Totals:         0      26       0       0
  5261 ;;Total ram usage:       26 bytes
  5262 ;; Hardware stack levels used: 1
  5263 ;; Hardware stack levels required when called: 1
  5264 ;; This function calls:
  5265 ;;		__Umul8_16
  5266 ;; This function is called by:
  5267 ;;		_vector_length
  5268 ;;		_pow
  5269 ;;		_exp
  5270 ;;		_eval_poly
  5271 ;;		_log
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275  0000'                    ___flmul:	
  5276                           ;psect for function ___flmul
  5277                           
  5278                           
  5279                           ;incstack = 0
  5280                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5281  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5282  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5283  0002' 0820'              	movf	___flmul@b+3,w
  5284  0003' 3980               	andlw	128
  5285  0004' 00AA'              	movwf	___flmul@sign
  5286  0005' 0820'              	movf	___flmul@b+3,w
  5287  0006' 00A5'              	movwf	??___flmul
  5288  0007' 0725'              	addwf	??___flmul,w
  5289  0008' 00B0'              	movwf	___flmul@bexp
  5290  0009' 1B9F'              	btfsc	___flmul@b+2,7
  5291  000A' 1430'              	bsf	___flmul@bexp,0
  5292  000B' 0830'              	movf	___flmul@bexp,w
  5293  000C' 1903               	btfsc	3,2
  5294  000D' 2800'              	goto	l4175
  5295  000E' 0A30'              	incf	___flmul@bexp,w
  5296  000F' 1D03               	btfss	3,2
  5297  0010' 2800'              	goto	l4173
  5298  0011' 3000               	movlw	0
  5299  0012' 00A0'              	movwf	___flmul@b+3
  5300  0013' 3000               	movlw	0
  5301  0014' 009F'              	movwf	___flmul@b+2
  5302  0015' 3000               	movlw	0
  5303  0016' 009E'              	movwf	___flmul@b+1
  5304  0017' 3000               	movlw	0
  5305  0018' 009D'              	movwf	___flmul@b
  5306  0019'                    l4173:
  5307  0019' 179F'              	bsf	___flmul@b+2,7
  5308  001A' 2800'              	goto	l4177
  5309  001B'                    l4175:
  5310  001B' 3000               	movlw	0
  5311  001C' 00A0'              	movwf	___flmul@b+3
  5312  001D' 3000               	movlw	0
  5313  001E' 009F'              	movwf	___flmul@b+2
  5314  001F' 3000               	movlw	0
  5315  0020' 009E'              	movwf	___flmul@b+1
  5316  0021' 3000               	movlw	0
  5317  0022' 009D'              	movwf	___flmul@b
  5318  0023'                    l4177:
  5319  0023' 0824'              	movf	___flmul@a+3,w
  5320  0024' 3980               	andlw	128
  5321  0025' 00A5'              	movwf	??___flmul
  5322  0026' 0825'              	movf	??___flmul,w
  5323  0027' 06AA'              	xorwf	___flmul@sign,f
  5324  0028' 0824'              	movf	___flmul@a+3,w
  5325  0029' 00A5'              	movwf	??___flmul
  5326  002A' 0725'              	addwf	??___flmul,w
  5327  002B' 00AB'              	movwf	___flmul@aexp
  5328  002C' 1BA3'              	btfsc	___flmul@a+2,7
  5329  002D' 142B'              	bsf	___flmul@aexp,0
  5330  002E' 082B'              	movf	___flmul@aexp,w
  5331  002F' 1903               	btfsc	3,2
  5332  0030' 2800'              	goto	l4193
  5333  0031' 0A2B'              	incf	___flmul@aexp,w
  5334  0032' 1D03               	btfss	3,2
  5335  0033' 2800'              	goto	l4191
  5336  0034' 3000               	movlw	0
  5337  0035' 00A4'              	movwf	___flmul@a+3
  5338  0036' 3000               	movlw	0
  5339  0037' 00A3'              	movwf	___flmul@a+2
  5340  0038' 3000               	movlw	0
  5341  0039' 00A2'              	movwf	___flmul@a+1
  5342  003A' 3000               	movlw	0
  5343  003B' 00A1'              	movwf	___flmul@a
  5344  003C'                    l4191:
  5345  003C' 17A3'              	bsf	___flmul@a+2,7
  5346  003D' 2800'              	goto	l4195
  5347  003E'                    l4193:
  5348  003E' 3000               	movlw	0
  5349  003F' 00A4'              	movwf	___flmul@a+3
  5350  0040' 3000               	movlw	0
  5351  0041' 00A3'              	movwf	___flmul@a+2
  5352  0042' 3000               	movlw	0
  5353  0043' 00A2'              	movwf	___flmul@a+1
  5354  0044' 3000               	movlw	0
  5355  0045' 00A1'              	movwf	___flmul@a
  5356  0046'                    l4195:
  5357  0046' 082B'              	movf	___flmul@aexp,w
  5358  0047' 1D03               	btfss	3,2
  5359  0048' 0830'              	movf	___flmul@bexp,w
  5360  0049' 1D03               	btfss	3,2
  5361  004A' 2800'              	goto	l4203
  5362  004B' 3000               	movlw	0
  5363  004C' 00A0'              	movwf	?___flmul+3
  5364  004D' 3000               	movlw	0
  5365  004E' 009F'              	movwf	?___flmul+2
  5366  004F' 3000               	movlw	0
  5367  0050' 009E'              	movwf	?___flmul+1
  5368  0051' 3000               	movlw	0
  5369  0052' 009D'              	movwf	?___flmul
  5370  0053' 0008               	return
  5371  0054'                    l4203:
  5372  0054' 081D'              	movf	___flmul@b,w
  5373  0055' 0080'              	movwf	__Umul8_16@multiplicand
  5374  0056' 0823'              	movf	___flmul@a+2,w
  5375  0057' 118A' 2000' 118A'  	fcall	__Umul8_16
  5376  005A' 0801'              	movf	?__Umul8_16+1,w
  5377  005B' 1283               	bcf	3,5	;RP0=0, select bank0
  5378  005C' 1303               	bcf	3,6	;RP1=0, select bank0
  5379  005D' 00B6'              	movwf	___flmul@temp+1
  5380  005E' 0800'              	movf	?__Umul8_16,w
  5381  005F' 00B5'              	movwf	___flmul@temp
  5382  0060' 0835'              	movf	___flmul@temp,w
  5383  0061' 00A5'              	movwf	??___flmul
  5384  0062' 01A6'              	clrf	??___flmul+1
  5385  0063' 01A7'              	clrf	??___flmul+2
  5386  0064' 01A8'              	clrf	??___flmul+3
  5387  0065' 0828'              	movf	??___flmul+3,w
  5388  0066' 00AF'              	movwf	___flmul@grs+3
  5389  0067' 0827'              	movf	??___flmul+2,w
  5390  0068' 00AE'              	movwf	___flmul@grs+2
  5391  0069' 0826'              	movf	??___flmul+1,w
  5392  006A' 00AD'              	movwf	___flmul@grs+1
  5393  006B' 0825'              	movf	??___flmul,w
  5394  006C' 00AC'              	movwf	___flmul@grs
  5395  006D' 0836'              	movf	___flmul@temp+1,w
  5396  006E' 00A5'              	movwf	??___flmul
  5397  006F' 01A6'              	clrf	??___flmul+1
  5398  0070' 01A7'              	clrf	??___flmul+2
  5399  0071' 01A8'              	clrf	??___flmul+3
  5400  0072' 0828'              	movf	??___flmul+3,w
  5401  0073' 00B4'              	movwf	___flmul@prod+3
  5402  0074' 0827'              	movf	??___flmul+2,w
  5403  0075' 00B3'              	movwf	___flmul@prod+2
  5404  0076' 0826'              	movf	??___flmul+1,w
  5405  0077' 00B2'              	movwf	___flmul@prod+1
  5406  0078' 0825'              	movf	??___flmul,w
  5407  0079' 00B1'              	movwf	___flmul@prod
  5408  007A' 081E'              	movf	___flmul@b+1,w
  5409  007B' 0080'              	movwf	__Umul8_16@multiplicand
  5410  007C' 0822'              	movf	___flmul@a+1,w
  5411  007D' 118A' 2000' 118A'  	fcall	__Umul8_16
  5412  0080' 0801'              	movf	?__Umul8_16+1,w
  5413  0081' 1283               	bcf	3,5	;RP0=0, select bank0
  5414  0082' 1303               	bcf	3,6	;RP1=0, select bank0
  5415  0083' 00B6'              	movwf	___flmul@temp+1
  5416  0084' 0800'              	movf	?__Umul8_16,w
  5417  0085' 00B5'              	movwf	___flmul@temp
  5418  0086' 0835'              	movf	___flmul@temp,w
  5419  0087' 00A5'              	movwf	??___flmul
  5420  0088' 01A6'              	clrf	??___flmul+1
  5421  0089' 01A7'              	clrf	??___flmul+2
  5422  008A' 01A8'              	clrf	??___flmul+3
  5423  008B' 0825'              	movf	??___flmul,w
  5424  008C' 07AC'              	addwf	___flmul@grs,f
  5425  008D' 0826'              	movf	??___flmul+1,w
  5426  008E' 1103               	clrz
  5427  008F' 1803               	skipnc
  5428  0090' 3E01               	addlw	1
  5429  0091' 1D03               	btfss	3,2
  5430  0092' 07AD'              	addwf	___flmul@grs+1,f
  5431  0093' 0827'              	movf	??___flmul+2,w
  5432  0094' 1103               	clrz
  5433  0095' 1803               	skipnc
  5434  0096' 3E01               	addlw	1
  5435  0097' 1D03               	btfss	3,2
  5436  0098' 07AE'              	addwf	___flmul@grs+2,f
  5437  0099' 0828'              	movf	??___flmul+3,w
  5438  009A' 1103               	clrz
  5439  009B' 1803               	skipnc
  5440  009C' 3E01               	addlw	1
  5441  009D' 1D03               	btfss	3,2
  5442  009E' 07AF'              	addwf	___flmul@grs+3,f
  5443  009F' 0836'              	movf	___flmul@temp+1,w
  5444  00A0' 00A5'              	movwf	??___flmul
  5445  00A1' 01A6'              	clrf	??___flmul+1
  5446  00A2' 01A7'              	clrf	??___flmul+2
  5447  00A3' 01A8'              	clrf	??___flmul+3
  5448  00A4' 0825'              	movf	??___flmul,w
  5449  00A5' 07B1'              	addwf	___flmul@prod,f
  5450  00A6' 0826'              	movf	??___flmul+1,w
  5451  00A7' 1103               	clrz
  5452  00A8' 1803               	skipnc
  5453  00A9' 3E01               	addlw	1
  5454  00AA' 1D03               	btfss	3,2
  5455  00AB' 07B2'              	addwf	___flmul@prod+1,f
  5456  00AC' 0827'              	movf	??___flmul+2,w
  5457  00AD' 1103               	clrz
  5458  00AE' 1803               	skipnc
  5459  00AF' 3E01               	addlw	1
  5460  00B0' 1D03               	btfss	3,2
  5461  00B1' 07B3'              	addwf	___flmul@prod+2,f
  5462  00B2' 0828'              	movf	??___flmul+3,w
  5463  00B3' 1103               	clrz
  5464  00B4' 1803               	skipnc
  5465  00B5' 3E01               	addlw	1
  5466  00B6' 1D03               	btfss	3,2
  5467  00B7' 07B4'              	addwf	___flmul@prod+3,f
  5468  00B8' 081F'              	movf	___flmul@b+2,w
  5469  00B9' 0080'              	movwf	__Umul8_16@multiplicand
  5470  00BA' 0821'              	movf	___flmul@a,w
  5471  00BB' 118A' 2000' 118A'  	fcall	__Umul8_16
  5472  00BE' 0801'              	movf	?__Umul8_16+1,w
  5473  00BF' 1283               	bcf	3,5	;RP0=0, select bank0
  5474  00C0' 1303               	bcf	3,6	;RP1=0, select bank0
  5475  00C1' 00B6'              	movwf	___flmul@temp+1
  5476  00C2' 0800'              	movf	?__Umul8_16,w
  5477  00C3' 00B5'              	movwf	___flmul@temp
  5478  00C4' 0835'              	movf	___flmul@temp,w
  5479  00C5' 00A5'              	movwf	??___flmul
  5480  00C6' 01A6'              	clrf	??___flmul+1
  5481  00C7' 01A7'              	clrf	??___flmul+2
  5482  00C8' 01A8'              	clrf	??___flmul+3
  5483  00C9' 0825'              	movf	??___flmul,w
  5484  00CA' 07AC'              	addwf	___flmul@grs,f
  5485  00CB' 0826'              	movf	??___flmul+1,w
  5486  00CC' 1103               	clrz
  5487  00CD' 1803               	skipnc
  5488  00CE' 3E01               	addlw	1
  5489  00CF' 1D03               	btfss	3,2
  5490  00D0' 07AD'              	addwf	___flmul@grs+1,f
  5491  00D1' 0827'              	movf	??___flmul+2,w
  5492  00D2' 1103               	clrz
  5493  00D3' 1803               	skipnc
  5494  00D4' 3E01               	addlw	1
  5495  00D5' 1D03               	btfss	3,2
  5496  00D6' 07AE'              	addwf	___flmul@grs+2,f
  5497  00D7' 0828'              	movf	??___flmul+3,w
  5498  00D8' 1103               	clrz
  5499  00D9' 1803               	skipnc
  5500  00DA' 3E01               	addlw	1
  5501  00DB' 1D03               	btfss	3,2
  5502  00DC' 07AF'              	addwf	___flmul@grs+3,f
  5503  00DD' 0836'              	movf	___flmul@temp+1,w
  5504  00DE' 00A5'              	movwf	??___flmul
  5505  00DF' 01A6'              	clrf	??___flmul+1
  5506  00E0' 01A7'              	clrf	??___flmul+2
  5507  00E1' 01A8'              	clrf	??___flmul+3
  5508  00E2' 0825'              	movf	??___flmul,w
  5509  00E3' 07B1'              	addwf	___flmul@prod,f
  5510  00E4' 0826'              	movf	??___flmul+1,w
  5511  00E5' 1103               	clrz
  5512  00E6' 1803               	skipnc
  5513  00E7' 3E01               	addlw	1
  5514  00E8' 1D03               	btfss	3,2
  5515  00E9' 07B2'              	addwf	___flmul@prod+1,f
  5516  00EA' 0827'              	movf	??___flmul+2,w
  5517  00EB' 1103               	clrz
  5518  00EC' 1803               	skipnc
  5519  00ED' 3E01               	addlw	1
  5520  00EE' 1D03               	btfss	3,2
  5521  00EF' 07B3'              	addwf	___flmul@prod+2,f
  5522  00F0' 0828'              	movf	??___flmul+3,w
  5523  00F1' 1103               	clrz
  5524  00F2' 1803               	skipnc
  5525  00F3' 3E01               	addlw	1
  5526  00F4' 1D03               	btfss	3,2
  5527  00F5' 07B4'              	addwf	___flmul@prod+3,f
  5528  00F6' 3008               	movlw	8
  5529  00F7' 00A5'              	movwf	??___flmul
  5530  00F8'                    u5685:
  5531  00F8' 1003               	clrc
  5532  00F9' 0DAC'              	rlf	___flmul@grs,f
  5533  00FA' 0DAD'              	rlf	___flmul@grs+1,f
  5534  00FB' 0DAE'              	rlf	___flmul@grs+2,f
  5535  00FC' 0DAF'              	rlf	___flmul@grs+3,f
  5536  00FD' 0BA5'              	decfsz	??___flmul,f
  5537  00FE' 2800'              	goto	u5685
  5538  00FF' 081E'              	movf	___flmul@b+1,w
  5539  0100' 0080'              	movwf	__Umul8_16@multiplicand
  5540  0101' 0821'              	movf	___flmul@a,w
  5541  0102' 118A' 2000' 118A'  	fcall	__Umul8_16
  5542  0105' 0801'              	movf	?__Umul8_16+1,w
  5543  0106' 1283               	bcf	3,5	;RP0=0, select bank0
  5544  0107' 1303               	bcf	3,6	;RP1=0, select bank0
  5545  0108' 00B6'              	movwf	___flmul@temp+1
  5546  0109' 0800'              	movf	?__Umul8_16,w
  5547  010A' 00B5'              	movwf	___flmul@temp
  5548  010B' 0835'              	movf	___flmul@temp,w
  5549  010C' 00A5'              	movwf	??___flmul
  5550  010D' 0836'              	movf	___flmul@temp+1,w
  5551  010E' 00A6'              	movwf	??___flmul+1
  5552  010F' 01A7'              	clrf	??___flmul+2
  5553  0110' 01A8'              	clrf	??___flmul+3
  5554  0111' 0825'              	movf	??___flmul,w
  5555  0112' 07AC'              	addwf	___flmul@grs,f
  5556  0113' 0826'              	movf	??___flmul+1,w
  5557  0114' 1103               	clrz
  5558  0115' 1803               	skipnc
  5559  0116' 3E01               	addlw	1
  5560  0117' 1D03               	btfss	3,2
  5561  0118' 07AD'              	addwf	___flmul@grs+1,f
  5562  0119' 0827'              	movf	??___flmul+2,w
  5563  011A' 1103               	clrz
  5564  011B' 1803               	skipnc
  5565  011C' 3E01               	addlw	1
  5566  011D' 1D03               	btfss	3,2
  5567  011E' 07AE'              	addwf	___flmul@grs+2,f
  5568  011F' 0828'              	movf	??___flmul+3,w
  5569  0120' 1103               	clrz
  5570  0121' 1803               	skipnc
  5571  0122' 3E01               	addlw	1
  5572  0123' 1D03               	btfss	3,2
  5573  0124' 07AF'              	addwf	___flmul@grs+3,f
  5574  0125' 081D'              	movf	___flmul@b,w
  5575  0126' 0080'              	movwf	__Umul8_16@multiplicand
  5576  0127' 0822'              	movf	___flmul@a+1,w
  5577  0128' 118A' 2000' 118A'  	fcall	__Umul8_16
  5578  012B' 0801'              	movf	?__Umul8_16+1,w
  5579  012C' 1283               	bcf	3,5	;RP0=0, select bank0
  5580  012D' 1303               	bcf	3,6	;RP1=0, select bank0
  5581  012E' 00B6'              	movwf	___flmul@temp+1
  5582  012F' 0800'              	movf	?__Umul8_16,w
  5583  0130' 00B5'              	movwf	___flmul@temp
  5584  0131' 0835'              	movf	___flmul@temp,w
  5585  0132' 00A5'              	movwf	??___flmul
  5586  0133' 0836'              	movf	___flmul@temp+1,w
  5587  0134' 00A6'              	movwf	??___flmul+1
  5588  0135' 01A7'              	clrf	??___flmul+2
  5589  0136' 01A8'              	clrf	??___flmul+3
  5590  0137' 0825'              	movf	??___flmul,w
  5591  0138' 07AC'              	addwf	___flmul@grs,f
  5592  0139' 0826'              	movf	??___flmul+1,w
  5593  013A' 1103               	clrz
  5594  013B' 1803               	skipnc
  5595  013C' 3E01               	addlw	1
  5596  013D' 1D03               	btfss	3,2
  5597  013E' 07AD'              	addwf	___flmul@grs+1,f
  5598  013F' 0827'              	movf	??___flmul+2,w
  5599  0140' 1103               	clrz
  5600  0141' 1803               	skipnc
  5601  0142' 3E01               	addlw	1
  5602  0143' 1D03               	btfss	3,2
  5603  0144' 07AE'              	addwf	___flmul@grs+2,f
  5604  0145' 0828'              	movf	??___flmul+3,w
  5605  0146' 1103               	clrz
  5606  0147' 1803               	skipnc
  5607  0148' 3E01               	addlw	1
  5608  0149' 1D03               	btfss	3,2
  5609  014A' 07AF'              	addwf	___flmul@grs+3,f
  5610  014B' 3008               	movlw	8
  5611  014C' 00A5'              	movwf	??___flmul
  5612  014D'                    u5715:
  5613  014D' 1003               	clrc
  5614  014E' 0DAC'              	rlf	___flmul@grs,f
  5615  014F' 0DAD'              	rlf	___flmul@grs+1,f
  5616  0150' 0DAE'              	rlf	___flmul@grs+2,f
  5617  0151' 0DAF'              	rlf	___flmul@grs+3,f
  5618  0152' 0BA5'              	decfsz	??___flmul,f
  5619  0153' 2800'              	goto	u5715
  5620  0154' 081D'              	movf	___flmul@b,w
  5621  0155' 0080'              	movwf	__Umul8_16@multiplicand
  5622  0156' 0821'              	movf	___flmul@a,w
  5623  0157' 118A' 2000' 118A'  	fcall	__Umul8_16
  5624  015A' 0801'              	movf	?__Umul8_16+1,w
  5625  015B' 1283               	bcf	3,5	;RP0=0, select bank0
  5626  015C' 1303               	bcf	3,6	;RP1=0, select bank0
  5627  015D' 00B6'              	movwf	___flmul@temp+1
  5628  015E' 0800'              	movf	?__Umul8_16,w
  5629  015F' 00B5'              	movwf	___flmul@temp
  5630  0160' 0835'              	movf	___flmul@temp,w
  5631  0161' 00A5'              	movwf	??___flmul
  5632  0162' 0836'              	movf	___flmul@temp+1,w
  5633  0163' 00A6'              	movwf	??___flmul+1
  5634  0164' 01A7'              	clrf	??___flmul+2
  5635  0165' 01A8'              	clrf	??___flmul+3
  5636  0166' 0825'              	movf	??___flmul,w
  5637  0167' 07AC'              	addwf	___flmul@grs,f
  5638  0168' 0826'              	movf	??___flmul+1,w
  5639  0169' 1103               	clrz
  5640  016A' 1803               	skipnc
  5641  016B' 3E01               	addlw	1
  5642  016C' 1D03               	btfss	3,2
  5643  016D' 07AD'              	addwf	___flmul@grs+1,f
  5644  016E' 0827'              	movf	??___flmul+2,w
  5645  016F' 1103               	clrz
  5646  0170' 1803               	skipnc
  5647  0171' 3E01               	addlw	1
  5648  0172' 1D03               	btfss	3,2
  5649  0173' 07AE'              	addwf	___flmul@grs+2,f
  5650  0174' 0828'              	movf	??___flmul+3,w
  5651  0175' 1103               	clrz
  5652  0176' 1803               	skipnc
  5653  0177' 3E01               	addlw	1
  5654  0178' 1D03               	btfss	3,2
  5655  0179' 07AF'              	addwf	___flmul@grs+3,f
  5656  017A' 081E'              	movf	___flmul@b+1,w
  5657  017B' 0080'              	movwf	__Umul8_16@multiplicand
  5658  017C' 0823'              	movf	___flmul@a+2,w
  5659  017D' 118A' 2000' 118A'  	fcall	__Umul8_16
  5660  0180' 0801'              	movf	?__Umul8_16+1,w
  5661  0181' 1283               	bcf	3,5	;RP0=0, select bank0
  5662  0182' 1303               	bcf	3,6	;RP1=0, select bank0
  5663  0183' 00B6'              	movwf	___flmul@temp+1
  5664  0184' 0800'              	movf	?__Umul8_16,w
  5665  0185' 00B5'              	movwf	___flmul@temp
  5666  0186' 0835'              	movf	___flmul@temp,w
  5667  0187' 00A5'              	movwf	??___flmul
  5668  0188' 0836'              	movf	___flmul@temp+1,w
  5669  0189' 00A6'              	movwf	??___flmul+1
  5670  018A' 01A7'              	clrf	??___flmul+2
  5671  018B' 01A8'              	clrf	??___flmul+3
  5672  018C' 0825'              	movf	??___flmul,w
  5673  018D' 07B1'              	addwf	___flmul@prod,f
  5674  018E' 0826'              	movf	??___flmul+1,w
  5675  018F' 1103               	clrz
  5676  0190' 1803               	skipnc
  5677  0191' 3E01               	addlw	1
  5678  0192' 1D03               	btfss	3,2
  5679  0193' 07B2'              	addwf	___flmul@prod+1,f
  5680  0194' 0827'              	movf	??___flmul+2,w
  5681  0195' 1103               	clrz
  5682  0196' 1803               	skipnc
  5683  0197' 3E01               	addlw	1
  5684  0198' 1D03               	btfss	3,2
  5685  0199' 07B3'              	addwf	___flmul@prod+2,f
  5686  019A' 0828'              	movf	??___flmul+3,w
  5687  019B' 1103               	clrz
  5688  019C' 1803               	skipnc
  5689  019D' 3E01               	addlw	1
  5690  019E' 1D03               	btfss	3,2
  5691  019F' 07B4'              	addwf	___flmul@prod+3,f
  5692  01A0' 081F'              	movf	___flmul@b+2,w
  5693  01A1' 0080'              	movwf	__Umul8_16@multiplicand
  5694  01A2' 0822'              	movf	___flmul@a+1,w
  5695  01A3' 118A' 2000' 118A'  	fcall	__Umul8_16
  5696  01A6' 0801'              	movf	?__Umul8_16+1,w
  5697  01A7' 1283               	bcf	3,5	;RP0=0, select bank0
  5698  01A8' 1303               	bcf	3,6	;RP1=0, select bank0
  5699  01A9' 00B6'              	movwf	___flmul@temp+1
  5700  01AA' 0800'              	movf	?__Umul8_16,w
  5701  01AB' 00B5'              	movwf	___flmul@temp
  5702  01AC' 0835'              	movf	___flmul@temp,w
  5703  01AD' 00A5'              	movwf	??___flmul
  5704  01AE' 0836'              	movf	___flmul@temp+1,w
  5705  01AF' 00A6'              	movwf	??___flmul+1
  5706  01B0' 01A7'              	clrf	??___flmul+2
  5707  01B1' 01A8'              	clrf	??___flmul+3
  5708  01B2' 0825'              	movf	??___flmul,w
  5709  01B3' 07B1'              	addwf	___flmul@prod,f
  5710  01B4' 0826'              	movf	??___flmul+1,w
  5711  01B5' 1103               	clrz
  5712  01B6' 1803               	skipnc
  5713  01B7' 3E01               	addlw	1
  5714  01B8' 1D03               	btfss	3,2
  5715  01B9' 07B2'              	addwf	___flmul@prod+1,f
  5716  01BA' 0827'              	movf	??___flmul+2,w
  5717  01BB' 1103               	clrz
  5718  01BC' 1803               	skipnc
  5719  01BD' 3E01               	addlw	1
  5720  01BE' 1D03               	btfss	3,2
  5721  01BF' 07B3'              	addwf	___flmul@prod+2,f
  5722  01C0' 0828'              	movf	??___flmul+3,w
  5723  01C1' 1103               	clrz
  5724  01C2' 1803               	skipnc
  5725  01C3' 3E01               	addlw	1
  5726  01C4' 1D03               	btfss	3,2
  5727  01C5' 07B4'              	addwf	___flmul@prod+3,f
  5728  01C6' 081F'              	movf	___flmul@b+2,w
  5729  01C7' 0080'              	movwf	__Umul8_16@multiplicand
  5730  01C8' 0823'              	movf	___flmul@a+2,w
  5731  01C9' 118A' 2000' 118A'  	fcall	__Umul8_16
  5732  01CC' 0801'              	movf	?__Umul8_16+1,w
  5733  01CD' 1283               	bcf	3,5	;RP0=0, select bank0
  5734  01CE' 1303               	bcf	3,6	;RP1=0, select bank0
  5735  01CF' 00B6'              	movwf	___flmul@temp+1
  5736  01D0' 0800'              	movf	?__Umul8_16,w
  5737  01D1' 00B5'              	movwf	___flmul@temp
  5738  01D2' 0835'              	movf	___flmul@temp,w
  5739  01D3' 00A5'              	movwf	??___flmul
  5740  01D4' 0836'              	movf	___flmul@temp+1,w
  5741  01D5' 00A6'              	movwf	??___flmul+1
  5742  01D6' 01A7'              	clrf	??___flmul+2
  5743  01D7' 01A8'              	clrf	??___flmul+3
  5744  01D8' 3008               	movlw	8
  5745  01D9'                    u5755:
  5746  01D9' 1003               	clrc
  5747  01DA' 0DA5'              	rlf	??___flmul,f
  5748  01DB' 0DA6'              	rlf	??___flmul+1,f
  5749  01DC' 0DA7'              	rlf	??___flmul+2,f
  5750  01DD' 0DA8'              	rlf	??___flmul+3,f
  5751  01DE' 3EFF               	addlw	-1
  5752  01DF' 1D03               	skipz
  5753  01E0' 2800'              	goto	u5755
  5754  01E1' 0825'              	movf	??___flmul,w
  5755  01E2' 07B1'              	addwf	___flmul@prod,f
  5756  01E3' 0826'              	movf	??___flmul+1,w
  5757  01E4' 1103               	clrz
  5758  01E5' 1803               	skipnc
  5759  01E6' 3E01               	addlw	1
  5760  01E7' 1D03               	btfss	3,2
  5761  01E8' 07B2'              	addwf	___flmul@prod+1,f
  5762  01E9' 0827'              	movf	??___flmul+2,w
  5763  01EA' 1103               	clrz
  5764  01EB' 1803               	skipnc
  5765  01EC' 3E01               	addlw	1
  5766  01ED' 1D03               	btfss	3,2
  5767  01EE' 07B3'              	addwf	___flmul@prod+2,f
  5768  01EF' 0828'              	movf	??___flmul+3,w
  5769  01F0' 1103               	clrz
  5770  01F1' 1803               	skipnc
  5771  01F2' 3E01               	addlw	1
  5772  01F3' 1D03               	btfss	3,2
  5773  01F4' 07B4'              	addwf	___flmul@prod+3,f
  5774  01F5' 082C'              	movf	___flmul@grs,w
  5775  01F6' 00A5'              	movwf	??___flmul
  5776  01F7' 082D'              	movf	___flmul@grs+1,w
  5777  01F8' 00A6'              	movwf	??___flmul+1
  5778  01F9' 082E'              	movf	___flmul@grs+2,w
  5779  01FA' 00A7'              	movwf	??___flmul+2
  5780  01FB' 082F'              	movf	___flmul@grs+3,w
  5781  01FC' 00A8'              	movwf	??___flmul+3
  5782  01FD' 3018               	movlw	24
  5783  01FE'                    u5775:
  5784  01FE' 1003               	clrc
  5785  01FF' 0CA8'              	rrf	??___flmul+3,f
  5786  0200' 0CA7'              	rrf	??___flmul+2,f
  5787  0201' 0CA6'              	rrf	??___flmul+1,f
  5788  0202' 0CA5'              	rrf	??___flmul,f
  5789  0203' 3EFF               	addlw	-1
  5790  0204' 1D03               	skipz
  5791  0205' 2800'              	goto	u5775
  5792  0206' 0825'              	movf	??___flmul,w
  5793  0207' 07B1'              	addwf	___flmul@prod,f
  5794  0208' 0826'              	movf	??___flmul+1,w
  5795  0209' 1103               	clrz
  5796  020A' 1803               	skipnc
  5797  020B' 3E01               	addlw	1
  5798  020C' 1D03               	btfss	3,2
  5799  020D' 07B2'              	addwf	___flmul@prod+1,f
  5800  020E' 0827'              	movf	??___flmul+2,w
  5801  020F' 1103               	clrz
  5802  0210' 1803               	skipnc
  5803  0211' 3E01               	addlw	1
  5804  0212' 1D03               	btfss	3,2
  5805  0213' 07B3'              	addwf	___flmul@prod+2,f
  5806  0214' 0828'              	movf	??___flmul+3,w
  5807  0215' 1103               	clrz
  5808  0216' 1803               	skipnc
  5809  0217' 3E01               	addlw	1
  5810  0218' 1D03               	btfss	3,2
  5811  0219' 07B4'              	addwf	___flmul@prod+3,f
  5812  021A' 3008               	movlw	8
  5813  021B' 00A5'              	movwf	??___flmul
  5814  021C'                    u5795:
  5815  021C' 1003               	clrc
  5816  021D' 0DAC'              	rlf	___flmul@grs,f
  5817  021E' 0DAD'              	rlf	___flmul@grs+1,f
  5818  021F' 0DAE'              	rlf	___flmul@grs+2,f
  5819  0220' 0DAF'              	rlf	___flmul@grs+3,f
  5820  0221' 0BA5'              	decfsz	??___flmul,f
  5821  0222' 2800'              	goto	u5795
  5822  0223' 0830'              	movf	___flmul@bexp,w
  5823  0224' 072B'              	addwf	___flmul@aexp,w
  5824  0225' 00A5'              	movwf	??___flmul
  5825  0226' 01A6'              	clrf	??___flmul+1
  5826  0227' 0DA6'              	rlf	??___flmul+1,f
  5827  0228' 0825'              	movf	??___flmul,w
  5828  0229' 3E82               	addlw	130
  5829  022A' 00B5'              	movwf	___flmul@temp
  5830  022B' 0826'              	movf	??___flmul+1,w
  5831  022C' 1803               	skipnc
  5832  022D' 3E01               	addlw	1
  5833  022E' 3EFF               	addlw	255
  5834  022F' 00B6'              	movwf	___flmul@temp+1
  5835  0230'                    l4255:
  5836  0230' 1BB3'              	btfsc	___flmul@prod+2,7
  5837  0231' 2800'              	goto	l4257
  5838  0232' 3001               	movlw	1
  5839  0233' 00A5'              	movwf	??___flmul
  5840  0234'                    u5805:
  5841  0234' 1003               	clrc
  5842  0235' 0DB1'              	rlf	___flmul@prod,f
  5843  0236' 0DB2'              	rlf	___flmul@prod+1,f
  5844  0237' 0DB3'              	rlf	___flmul@prod+2,f
  5845  0238' 0DB4'              	rlf	___flmul@prod+3,f
  5846  0239' 0BA5'              	decfsz	??___flmul,f
  5847  023A' 2800'              	goto	u5805
  5848  023B' 1BAF'              	btfsc	___flmul@grs+3,7
  5849  023C' 1431'              	bsf	___flmul@prod,0
  5850  023D' 3001               	movlw	1
  5851  023E' 00A5'              	movwf	??___flmul
  5852  023F'                    u5825:
  5853  023F' 1003               	clrc
  5854  0240' 0DAC'              	rlf	___flmul@grs,f
  5855  0241' 0DAD'              	rlf	___flmul@grs+1,f
  5856  0242' 0DAE'              	rlf	___flmul@grs+2,f
  5857  0243' 0DAF'              	rlf	___flmul@grs+3,f
  5858  0244' 0BA5'              	decfsz	??___flmul,f
  5859  0245' 2800'              	goto	u5825
  5860  0246' 30FF               	movlw	255
  5861  0247' 07B5'              	addwf	___flmul@temp,f
  5862  0248' 1803               	skipnc
  5863  0249' 0AB6'              	incf	___flmul@temp+1,f
  5864  024A' 30FF               	movlw	255
  5865  024B' 07B6'              	addwf	___flmul@temp+1,f
  5866  024C' 2800'              	goto	l4255
  5867  024D'                    l4257:
  5868  024D' 01AB'              	clrf	___flmul@aexp
  5869  024E' 1FAF'              	btfss	___flmul@grs+3,7
  5870  024F' 2800'              	goto	l4267
  5871  0250' 30FF               	movlw	255
  5872  0251' 052C'              	andwf	___flmul@grs,w
  5873  0252' 00A5'              	movwf	??___flmul
  5874  0253' 30FF               	movlw	255
  5875  0254' 052D'              	andwf	___flmul@grs+1,w
  5876  0255' 00A6'              	movwf	??___flmul+1
  5877  0256' 30FF               	movlw	255
  5878  0257' 052E'              	andwf	___flmul@grs+2,w
  5879  0258' 00A7'              	movwf	??___flmul+2
  5880  0259' 307F               	movlw	127
  5881  025A' 052F'              	andwf	___flmul@grs+3,w
  5882  025B' 00A8'              	movwf	??___flmul+3
  5883  025C' 0828'              	movf	??___flmul+3,w
  5884  025D' 0427'              	iorwf	??___flmul+2,w
  5885  025E' 0426'              	iorwf	??___flmul+1,w
  5886  025F' 0425'              	iorwf	??___flmul,w
  5887  0260' 1903               	skipnz
  5888  0261' 1831'              	btfsc	___flmul@prod,0
  5889  0262' 2800'              	goto	l4263
  5890  0263' 2800'              	goto	l4267
  5891  0264'                    l4263:
  5892  0264' 01AB'              	clrf	___flmul@aexp
  5893  0265' 0AAB'              	incf	___flmul@aexp,f
  5894  0266'                    l4267:
  5895  0266' 082B'              	movf	___flmul@aexp,w
  5896  0267' 1903               	btfsc	3,2
  5897  0268' 2800'              	goto	l4277
  5898  0269' 3001               	movlw	1
  5899  026A' 07B1'              	addwf	___flmul@prod,f
  5900  026B' 3000               	movlw	0
  5901  026C' 1803               	skipnc
  5902  026D' 3001               	movlw	1
  5903  026E' 07B2'              	addwf	___flmul@prod+1,f
  5904  026F' 3000               	movlw	0
  5905  0270' 1803               	skipnc
  5906  0271' 3001               	movlw	1
  5907  0272' 07B3'              	addwf	___flmul@prod+2,f
  5908  0273' 3000               	movlw	0
  5909  0274' 1803               	skipnc
  5910  0275' 3001               	movlw	1
  5911  0276' 07B4'              	addwf	___flmul@prod+3,f
  5912  0277' 1C34'              	btfss	___flmul@prod+3,0
  5913  0278' 2800'              	goto	l4277
  5914  0279' 0831'              	movf	___flmul@prod,w
  5915  027A' 00A5'              	movwf	??___flmul
  5916  027B' 0832'              	movf	___flmul@prod+1,w
  5917  027C' 00A6'              	movwf	??___flmul+1
  5918  027D' 0833'              	movf	___flmul@prod+2,w
  5919  027E' 00A7'              	movwf	??___flmul+2
  5920  027F' 0834'              	movf	___flmul@prod+3,w
  5921  0280' 00A8'              	movwf	??___flmul+3
  5922  0281' 3001               	movlw	1
  5923  0282' 00A9'              	movwf	??___flmul+4
  5924  0283'                    u5895:
  5925  0283' 0D28'              	rlf	??___flmul+3,w
  5926  0284' 0CA8'              	rrf	??___flmul+3,f
  5927  0285' 0CA7'              	rrf	??___flmul+2,f
  5928  0286' 0CA6'              	rrf	??___flmul+1,f
  5929  0287' 0CA5'              	rrf	??___flmul,f
  5930  0288' 0BA9'              	decfsz	??___flmul+4,f
  5931  0289' 2800'              	goto	u5895
  5932  028A' 0828'              	movf	??___flmul+3,w
  5933  028B' 00B4'              	movwf	___flmul@prod+3
  5934  028C' 0827'              	movf	??___flmul+2,w
  5935  028D' 00B3'              	movwf	___flmul@prod+2
  5936  028E' 0826'              	movf	??___flmul+1,w
  5937  028F' 00B2'              	movwf	___flmul@prod+1
  5938  0290' 0825'              	movf	??___flmul,w
  5939  0291' 00B1'              	movwf	___flmul@prod
  5940  0292' 3001               	movlw	1
  5941  0293' 07B5'              	addwf	___flmul@temp,f
  5942  0294' 1803               	skipnc
  5943  0295' 0AB6'              	incf	___flmul@temp+1,f
  5944  0296' 3000               	movlw	0
  5945  0297' 07B6'              	addwf	___flmul@temp+1,f
  5946  0298'                    l4277:
  5947  0298' 0836'              	movf	___flmul@temp+1,w
  5948  0299' 3A80               	xorlw	128
  5949  029A' 00FF               	movwf	127
  5950  029B' 3080               	movlw	128
  5951  029C' 027F               	subwf	127,w
  5952  029D' 1D03               	skipz
  5953  029E' 2800'              	goto	u5905
  5954  029F' 30FF               	movlw	255
  5955  02A0' 0235'              	subwf	___flmul@temp,w
  5956  02A1'                    u5905:
  5957  02A1' 1C03               	skipc
  5958  02A2' 2800'              	goto	l4281
  5959  02A3' 307F               	movlw	127
  5960  02A4' 1283               	bcf	3,5	;RP0=0, select bank0
  5961  02A5' 1303               	bcf	3,6	;RP1=0, select bank0
  5962  02A6' 00B4'              	movwf	___flmul@prod+3
  5963  02A7' 3080               	movlw	128
  5964  02A8' 00B3'              	movwf	___flmul@prod+2
  5965  02A9' 3000               	movlw	0
  5966  02AA' 00B2'              	movwf	___flmul@prod+1
  5967  02AB' 3000               	movlw	0
  5968  02AC' 00B1'              	movwf	___flmul@prod
  5969  02AD' 2800'              	goto	l769
  5970  02AE'                    l4281:
  5971  02AE' 1283               	bcf	3,5	;RP0=0, select bank0
  5972  02AF' 1303               	bcf	3,6	;RP1=0, select bank0
  5973  02B0' 0836'              	movf	___flmul@temp+1,w
  5974  02B1' 3A80               	xorlw	128
  5975  02B2' 00FF               	movwf	127
  5976  02B3' 3080               	movlw	128
  5977  02B4' 027F               	subwf	127,w
  5978  02B5' 1D03               	skipz
  5979  02B6' 2800'              	goto	u5915
  5980  02B7' 3001               	movlw	1
  5981  02B8' 0235'              	subwf	___flmul@temp,w
  5982  02B9'                    u5915:
  5983  02B9' 1803               	skipnc
  5984  02BA' 2800'              	goto	l4287
  5985  02BB' 3000               	movlw	0
  5986  02BC' 1283               	bcf	3,5	;RP0=0, select bank0
  5987  02BD' 1303               	bcf	3,6	;RP1=0, select bank0
  5988  02BE' 00B4'              	movwf	___flmul@prod+3
  5989  02BF' 3000               	movlw	0
  5990  02C0' 00B3'              	movwf	___flmul@prod+2
  5991  02C1' 3000               	movlw	0
  5992  02C2' 00B2'              	movwf	___flmul@prod+1
  5993  02C3' 3000               	movlw	0
  5994  02C4' 00B1'              	movwf	___flmul@prod
  5995  02C5' 01AA'              	clrf	___flmul@sign
  5996  02C6' 2800'              	goto	l769
  5997  02C7'                    l4287:
  5998  02C7' 1283               	bcf	3,5	;RP0=0, select bank0
  5999  02C8' 1303               	bcf	3,6	;RP1=0, select bank0
  6000  02C9' 0835'              	movf	___flmul@temp,w
  6001  02CA' 00B0'              	movwf	___flmul@bexp
  6002  02CB' 30FF               	movlw	255
  6003  02CC' 05B1'              	andwf	___flmul@prod,f
  6004  02CD' 30FF               	movlw	255
  6005  02CE' 05B2'              	andwf	___flmul@prod+1,f
  6006  02CF' 307F               	movlw	127
  6007  02D0' 05B3'              	andwf	___flmul@prod+2,f
  6008  02D1' 3000               	movlw	0
  6009  02D2' 05B4'              	andwf	___flmul@prod+3,f
  6010  02D3' 1830'              	btfsc	___flmul@bexp,0
  6011  02D4' 17B3'              	bsf	___flmul@prod+2,7
  6012  02D5' 0830'              	movf	___flmul@bexp,w
  6013  02D6' 00A5'              	movwf	??___flmul
  6014  02D7' 1003               	clrc
  6015  02D8' 0C25'              	rrf	??___flmul,w
  6016  02D9' 00B4'              	movwf	___flmul@prod+3
  6017  02DA'                    l769:
  6018  02DA' 082A'              	movf	___flmul@sign,w
  6019  02DB' 00A5'              	movwf	??___flmul
  6020  02DC' 0825'              	movf	??___flmul,w
  6021  02DD' 04B4'              	iorwf	___flmul@prod+3,f
  6022  02DE' 0834'              	movf	___flmul@prod+3,w
  6023  02DF' 00A0'              	movwf	?___flmul+3
  6024  02E0' 0833'              	movf	___flmul@prod+2,w
  6025  02E1' 009F'              	movwf	?___flmul+2
  6026  02E2' 0832'              	movf	___flmul@prod+1,w
  6027  02E3' 009E'              	movwf	?___flmul+1
  6028  02E4' 0831'              	movf	___flmul@prod,w
  6029  02E5' 009D'              	movwf	?___flmul
  6030  02E6' 0008               	return
  6031  02E7'                    __end_of___flmul:
  6032                           
  6033                           	psect	text17
  6034  0000'                    __ptext17:	
  6035 ;; *************** function __Umul8_16 *****************
  6036 ;; Defined at:
  6037 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul8_16.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  multiplier      1    wreg     unsigned char 
  6040 ;;  multiplicand    1    0[COMMON] unsigned char 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  multiplier      1    8[COMMON] unsigned char 
  6043 ;;  word_mpld       2    6[COMMON] unsigned int 
  6044 ;;  product         2    4[COMMON] unsigned int 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  2    0[COMMON] unsigned int 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2, status,0
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6054 ;;      Params:         2       0       0       0
  6055 ;;      Locals:         5       0       0       0
  6056 ;;      Temps:          2       0       0       0
  6057 ;;      Totals:         9       0       0       0
  6058 ;;Total ram usage:        9 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		___flmul
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067  0000'                    __Umul8_16:	
  6068                           ;psect for function __Umul8_16
  6069                           
  6070                           
  6071                           ;incstack = 0
  6072                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6073                           ;__Umul8_16@multiplier stored from wreg
  6074  0000' 0088'              	movwf	__Umul8_16@multiplier
  6075  0001' 0184'              	clrf	__Umul8_16@product
  6076  0002' 0185'              	clrf	__Umul8_16@product+1
  6077  0003' 0800'              	movf	__Umul8_16@multiplicand,w
  6078  0004' 0082'              	movwf	??__Umul8_16
  6079  0005' 0183'              	clrf	??__Umul8_16+1
  6080  0006' 0802'              	movf	??__Umul8_16,w
  6081  0007' 0086'              	movwf	__Umul8_16@word_mpld
  6082  0008' 0803'              	movf	??__Umul8_16+1,w
  6083  0009' 0087'              	movwf	__Umul8_16@word_mpld+1
  6084  000A'                    l3899:
  6085  000A' 1C08'              	btfss	__Umul8_16@multiplier,0
  6086  000B' 2800'              	goto	l776
  6087  000C' 0806'              	movf	__Umul8_16@word_mpld,w
  6088  000D' 0784'              	addwf	__Umul8_16@product,f
  6089  000E' 1803               	skipnc
  6090  000F' 0A85'              	incf	__Umul8_16@product+1,f
  6091  0010' 0807'              	movf	__Umul8_16@word_mpld+1,w
  6092  0011' 0785'              	addwf	__Umul8_16@product+1,f
  6093  0012'                    l776:
  6094  0012' 3001               	movlw	1
  6095  0013'                    u4915:
  6096  0013' 1003               	clrc
  6097  0014' 0D86'              	rlf	__Umul8_16@word_mpld,f
  6098  0015' 0D87'              	rlf	__Umul8_16@word_mpld+1,f
  6099  0016' 3EFF               	addlw	-1
  6100  0017' 1D03               	skipz
  6101  0018' 2800'              	goto	u4915
  6102  0019' 1003               	clrc
  6103  001A' 0C88'              	rrf	__Umul8_16@multiplier,f
  6104  001B' 0808'              	movf	__Umul8_16@multiplier,w
  6105  001C' 1D03               	btfss	3,2
  6106  001D' 2800'              	goto	l3899
  6107  001E' 0805'              	movf	__Umul8_16@product+1,w
  6108  001F' 0081'              	movwf	?__Umul8_16+1
  6109  0020' 0804'              	movf	__Umul8_16@product,w
  6110  0021' 0080'              	movwf	?__Umul8_16
  6111  0022' 0008               	return
  6112  0023'                    __end_of__Umul8_16:
  6113                           
  6114                           	psect	text18
  6115  0000'                    __ptext18:	
  6116 ;; *************** function ___flsub *****************
  6117 ;; Defined at:
  6118 ;;		line 242 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcadd.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  a               4    0[BANK1 ] unsigned int 
  6121 ;;  b               4    4[BANK1 ] unsigned int 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;		None
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  4    0[BANK1 ] unsigned int 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6133 ;;      Params:         0       0       8       0
  6134 ;;      Locals:         0       0       0       0
  6135 ;;      Temps:          0       0       0       0
  6136 ;;      Totals:         0       0       8       0
  6137 ;;Total ram usage:        8 bytes
  6138 ;; Hardware stack levels used: 1
  6139 ;; Hardware stack levels required when called: 1
  6140 ;; This function calls:
  6141 ;;		___fladd
  6142 ;; This function is called by:
  6143 ;;		_exp
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147  0000'                    ___flsub:	
  6148                           ;psect for function ___flsub
  6149                           
  6150                           
  6151                           ;incstack = 0
  6152                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6153  0000' 3080               	movlw	128
  6154  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  6155  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  6156  0003' 0680'              	xorwf	(___flsub@a+3)^(0+128),f
  6157  0004' 0800'              	movf	(___flsub@b+3)^(0+128),w
  6158  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  6159  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  6160  0007' 00BA'              	movwf	___fladd@b+3
  6161  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  6162  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  6163  000A' 0800'              	movf	(___flsub@b+2)^(0+128),w
  6164  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  6165  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  6166  000D' 00B9'              	movwf	___fladd@b+2
  6167  000E' 1683               	bsf	3,5	;RP0=1, select bank1
  6168  000F' 1303               	bcf	3,6	;RP1=0, select bank1
  6169  0010' 0800'              	movf	(___flsub@b+1)^(0+128),w
  6170  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  6171  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  6172  0013' 00B8'              	movwf	___fladd@b+1
  6173  0014' 1683               	bsf	3,5	;RP0=1, select bank1
  6174  0015' 1303               	bcf	3,6	;RP1=0, select bank1
  6175  0016' 0800'              	movf	___flsub@b^(0+128),w
  6176  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  6177  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  6178  0019' 00B7'              	movwf	___fladd@b
  6179  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  6180  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  6181  001C' 0800'              	movf	(___flsub@a+3)^(0+128),w
  6182  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  6183  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  6184  001F' 00BE'              	movwf	___fladd@a+3
  6185  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  6186  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  6187  0022' 0800'              	movf	(___flsub@a+2)^(0+128),w
  6188  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  6189  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  6190  0025' 00BD'              	movwf	___fladd@a+2
  6191  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  6192  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  6193  0028' 0800'              	movf	(___flsub@a+1)^(0+128),w
  6194  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  6195  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  6196  002B' 00BC'              	movwf	___fladd@a+1
  6197  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  6198  002D' 1303               	bcf	3,6	;RP1=0, select bank1
  6199  002E' 0800'              	movf	___flsub@a^(0+128),w
  6200  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  6201  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  6202  0031' 00BB'              	movwf	___fladd@a
  6203  0032' 118A' 2000'        	fcall	___fladd
  6204  0034' 1283               	bcf	3,5	;RP0=0, select bank0
  6205  0035' 1303               	bcf	3,6	;RP1=0, select bank0
  6206  0036' 083A'              	movf	?___fladd+3,w
  6207  0037' 1683               	bsf	3,5	;RP0=1, select bank1
  6208  0038' 1303               	bcf	3,6	;RP1=0, select bank1
  6209  0039' 0080'              	movwf	(?___flsub+3)^(0+128)
  6210  003A' 1283               	bcf	3,5	;RP0=0, select bank0
  6211  003B' 1303               	bcf	3,6	;RP1=0, select bank0
  6212  003C' 0839'              	movf	?___fladd+2,w
  6213  003D' 1683               	bsf	3,5	;RP0=1, select bank1
  6214  003E' 1303               	bcf	3,6	;RP1=0, select bank1
  6215  003F' 0080'              	movwf	(?___flsub+2)^(0+128)
  6216  0040' 1283               	bcf	3,5	;RP0=0, select bank0
  6217  0041' 1303               	bcf	3,6	;RP1=0, select bank0
  6218  0042' 0838'              	movf	?___fladd+1,w
  6219  0043' 1683               	bsf	3,5	;RP0=1, select bank1
  6220  0044' 1303               	bcf	3,6	;RP1=0, select bank1
  6221  0045' 0080'              	movwf	(?___flsub+1)^(0+128)
  6222  0046' 1283               	bcf	3,5	;RP0=0, select bank0
  6223  0047' 1303               	bcf	3,6	;RP1=0, select bank0
  6224  0048' 0837'              	movf	?___fladd,w
  6225  0049' 1683               	bsf	3,5	;RP0=1, select bank1
  6226  004A' 1303               	bcf	3,6	;RP1=0, select bank1
  6227  004B' 0080'              	movwf	?___flsub^(0+128)
  6228  004C' 0008               	return
  6229  004D'                    __end_of___flsub:
  6230                           
  6231                           	psect	text19
  6232  0000'                    __ptext19:	
  6233 ;; *************** function ___fladd *****************
  6234 ;; Defined at:
  6235 ;;		line 10 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcadd.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  b               4   55[BANK0 ] unsigned int 
  6238 ;;  a               4   59[BANK0 ] unsigned int 
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;  grs             1   74[BANK0 ] unsigned char 
  6241 ;;  bexp            1   73[BANK0 ] unsigned char 
  6242 ;;  aexp            1   72[BANK0 ] unsigned char 
  6243 ;;  signs           1   71[BANK0 ] unsigned char 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  4   55[BANK0 ] unsigned char 
  6246 ;; Registers used:
  6247 ;;		wreg, status,2, status,0, btemp+1
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6253 ;;      Params:         0       8       0       0
  6254 ;;      Locals:         0       4       0       0
  6255 ;;      Temps:          0       8       0       0
  6256 ;;      Totals:         0      20       0       0
  6257 ;;Total ram usage:       20 bytes
  6258 ;; Hardware stack levels used: 1
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_vector_length
  6263 ;;		___flsub
  6264 ;;		_eval_poly
  6265 ;;		_floor
  6266 ;;		_log
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270  0000'                    ___fladd:	
  6271                           ;psect for function ___fladd
  6272                           
  6273                           
  6274                           ;incstack = 0
  6275                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6276  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  6277  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  6278  0002' 083A'              	movf	___fladd@b+3,w
  6279  0003' 3980               	andlw	128
  6280  0004' 00C7'              	movwf	___fladd@signs
  6281  0005' 083A'              	movf	___fladd@b+3,w
  6282  0006' 00BF'              	movwf	??___fladd
  6283  0007' 073F'              	addwf	??___fladd,w
  6284  0008' 00C9'              	movwf	___fladd@bexp
  6285  0009' 1BB9'              	btfsc	___fladd@b+2,7
  6286  000A' 1449'              	bsf	___fladd@bexp,0
  6287  000B' 0849'              	movf	___fladd@bexp,w
  6288  000C' 1903               	btfsc	3,2
  6289  000D' 2800'              	goto	l3983
  6290  000E' 0A49'              	incf	___fladd@bexp,w
  6291  000F' 1D03               	btfss	3,2
  6292  0010' 2800'              	goto	l3979
  6293  0011' 3000               	movlw	0
  6294  0012' 00BA'              	movwf	___fladd@b+3
  6295  0013' 3000               	movlw	0
  6296  0014' 00B9'              	movwf	___fladd@b+2
  6297  0015' 3000               	movlw	0
  6298  0016' 00B8'              	movwf	___fladd@b+1
  6299  0017' 3000               	movlw	0
  6300  0018' 00B7'              	movwf	___fladd@b
  6301  0019'                    l3979:
  6302  0019' 17B9'              	bsf	___fladd@b+2,7
  6303  001A' 01BA'              	clrf	___fladd@b+3
  6304  001B' 2800'              	goto	l3985
  6305  001C'                    l3983:
  6306  001C' 3000               	movlw	0
  6307  001D' 00BA'              	movwf	___fladd@b+3
  6308  001E' 3000               	movlw	0
  6309  001F' 00B9'              	movwf	___fladd@b+2
  6310  0020' 3000               	movlw	0
  6311  0021' 00B8'              	movwf	___fladd@b+1
  6312  0022' 3000               	movlw	0
  6313  0023' 00B7'              	movwf	___fladd@b
  6314  0024'                    l3985:
  6315  0024' 083E'              	movf	___fladd@a+3,w
  6316  0025' 3980               	andlw	128
  6317  0026' 00C8'              	movwf	___fladd@aexp
  6318  0027' 0848'              	movf	___fladd@aexp,w
  6319  0028' 0647'              	xorwf	___fladd@signs,w
  6320  0029' 1D03               	btfss	3,2
  6321  002A' 1747'              	bsf	___fladd@signs,6
  6322  002B' 083E'              	movf	___fladd@a+3,w
  6323  002C' 00BF'              	movwf	??___fladd
  6324  002D' 073F'              	addwf	??___fladd,w
  6325  002E' 00C8'              	movwf	___fladd@aexp
  6326  002F' 1BBD'              	btfsc	___fladd@a+2,7
  6327  0030' 1448'              	bsf	___fladd@aexp,0
  6328  0031' 0848'              	movf	___fladd@aexp,w
  6329  0032' 1903               	btfsc	3,2
  6330  0033' 2800'              	goto	l4007
  6331  0034' 0A48'              	incf	___fladd@aexp,w
  6332  0035' 1D03               	btfss	3,2
  6333  0036' 2800'              	goto	l4003
  6334  0037' 3000               	movlw	0
  6335  0038' 00BE'              	movwf	___fladd@a+3
  6336  0039' 3000               	movlw	0
  6337  003A' 00BD'              	movwf	___fladd@a+2
  6338  003B' 3000               	movlw	0
  6339  003C' 00BC'              	movwf	___fladd@a+1
  6340  003D' 3000               	movlw	0
  6341  003E' 00BB'              	movwf	___fladd@a
  6342  003F'                    l4003:
  6343  003F' 17BD'              	bsf	___fladd@a+2,7
  6344  0040' 01BE'              	clrf	___fladd@a+3
  6345  0041' 2800'              	goto	l661
  6346  0042'                    l4007:
  6347  0042' 3000               	movlw	0
  6348  0043' 00BE'              	movwf	___fladd@a+3
  6349  0044' 3000               	movlw	0
  6350  0045' 00BD'              	movwf	___fladd@a+2
  6351  0046' 3000               	movlw	0
  6352  0047' 00BC'              	movwf	___fladd@a+1
  6353  0048' 3000               	movlw	0
  6354  0049' 00BB'              	movwf	___fladd@a
  6355  004A'                    l661:
  6356  004A' 0849'              	movf	___fladd@bexp,w
  6357  004B' 0248'              	subwf	___fladd@aexp,w
  6358  004C' 1803               	skipnc
  6359  004D' 2800'              	goto	l4043
  6360  004E' 1F47'              	btfss	___fladd@signs,6
  6361  004F' 2800'              	goto	l4013
  6362  0050' 3080               	movlw	128
  6363  0051' 00BF'              	movwf	??___fladd
  6364  0052' 083F'              	movf	??___fladd,w
  6365  0053' 06C7'              	xorwf	___fladd@signs,f
  6366  0054'                    l4013:
  6367  0054' 0849'              	movf	___fladd@bexp,w
  6368  0055' 00CA'              	movwf	___fladd@grs
  6369  0056' 0848'              	movf	___fladd@aexp,w
  6370  0057' 00C9'              	movwf	___fladd@bexp
  6371  0058' 084A'              	movf	___fladd@grs,w
  6372  0059' 00C8'              	movwf	___fladd@aexp
  6373  005A' 0837'              	movf	___fladd@b,w
  6374  005B' 00CA'              	movwf	___fladd@grs
  6375  005C' 083B'              	movf	___fladd@a,w
  6376  005D' 00B7'              	movwf	___fladd@b
  6377  005E' 084A'              	movf	___fladd@grs,w
  6378  005F' 00BB'              	movwf	___fladd@a
  6379  0060' 0838'              	movf	___fladd@b+1,w
  6380  0061' 00CA'              	movwf	___fladd@grs
  6381  0062' 083C'              	movf	___fladd@a+1,w
  6382  0063' 00B8'              	movwf	___fladd@b+1
  6383  0064' 084A'              	movf	___fladd@grs,w
  6384  0065' 00BC'              	movwf	___fladd@a+1
  6385  0066' 0839'              	movf	___fladd@b+2,w
  6386  0067' 00CA'              	movwf	___fladd@grs
  6387  0068' 083D'              	movf	___fladd@a+2,w
  6388  0069' 00B9'              	movwf	___fladd@b+2
  6389  006A' 084A'              	movf	___fladd@grs,w
  6390  006B' 00BD'              	movwf	___fladd@a+2
  6391  006C' 083A'              	movf	___fladd@b+3,w
  6392  006D' 00CA'              	movwf	___fladd@grs
  6393  006E' 083E'              	movf	___fladd@a+3,w
  6394  006F' 00BA'              	movwf	___fladd@b+3
  6395  0070' 084A'              	movf	___fladd@grs,w
  6396  0071' 00BE'              	movwf	___fladd@a+3
  6397  0072'                    l4043:
  6398  0072' 01CA'              	clrf	___fladd@grs
  6399  0073' 0848'              	movf	___fladd@aexp,w
  6400  0074' 00BF'              	movwf	??___fladd
  6401  0075' 01C0'              	clrf	??___fladd+1
  6402  0076' 0840'              	movf	??___fladd+1,w
  6403  0077' 00C2'              	movwf	??___fladd+3
  6404  0078' 0849'              	movf	___fladd@bexp,w
  6405  0079' 023F'              	subwf	??___fladd,w
  6406  007A' 00C1'              	movwf	??___fladd+2
  6407  007B' 1C03               	skipc
  6408  007C' 03C2'              	decf	??___fladd+3,f
  6409  007D' 0842'              	movf	??___fladd+3,w
  6410  007E' 3A80               	xorlw	128
  6411  007F' 00FF               	movwf	127
  6412  0080' 3080               	movlw	128
  6413  0081' 027F               	subwf	127,w
  6414  0082' 1D03               	skipz
  6415  0083' 2800'              	goto	u5195
  6416  0084' 301A               	movlw	26
  6417  0085' 0241'              	subwf	??___fladd+2,w
  6418  0086'                    u5195:
  6419  0086' 1C03               	skipc
  6420  0087' 2800'              	goto	l4061
  6421  0088' 1283               	bcf	3,5	;RP0=0, select bank0
  6422  0089' 1303               	bcf	3,6	;RP1=0, select bank0
  6423  008A' 083A'              	movf	___fladd@b+3,w
  6424  008B' 0439'              	iorwf	___fladd@b+2,w
  6425  008C' 0438'              	iorwf	___fladd@b+1,w
  6426  008D' 0437'              	iorwf	___fladd@b,w
  6427  008E' 1903               	btfsc	3,2
  6428  008F' 2800'              	goto	u5200
  6429  0090' 3001               	movlw	1
  6430  0091' 2800'              	goto	u5210
  6431  0092'                    u5200:
  6432  0092' 3000               	movlw	0
  6433  0093'                    u5210:
  6434  0093' 00CA'              	movwf	___fladd@grs
  6435  0094' 3000               	movlw	0
  6436  0095' 00BA'              	movwf	___fladd@b+3
  6437  0096' 3000               	movlw	0
  6438  0097' 00B9'              	movwf	___fladd@b+2
  6439  0098' 3000               	movlw	0
  6440  0099' 00B8'              	movwf	___fladd@b+1
  6441  009A' 3000               	movlw	0
  6442  009B' 00B7'              	movwf	___fladd@b
  6443  009C' 0848'              	movf	___fladd@aexp,w
  6444  009D' 00C9'              	movwf	___fladd@bexp
  6445  009E' 2800'              	goto	l665
  6446  009F'                    l667:
  6447  009F' 1C4A'              	btfss	___fladd@grs,0
  6448  00A0' 2800'              	goto	l4051
  6449  00A1' 084A'              	movf	___fladd@grs,w
  6450  00A2' 00BF'              	movwf	??___fladd
  6451  00A3' 1003               	clrc
  6452  00A4' 0C3F'              	rrf	??___fladd,w
  6453  00A5' 3801               	iorlw	1
  6454  00A6' 00CA'              	movwf	___fladd@grs
  6455  00A7' 2800'              	goto	l4053
  6456  00A8'                    l4051:
  6457  00A8' 1003               	clrc
  6458  00A9' 0CCA'              	rrf	___fladd@grs,f
  6459  00AA'                    l4053:
  6460  00AA' 1837'              	btfsc	___fladd@b,0
  6461  00AB' 17CA'              	bsf	___fladd@grs,7
  6462  00AC' 3001               	movlw	1
  6463  00AD' 00BF'              	movwf	??___fladd
  6464  00AE'                    u5245:
  6465  00AE' 0D3A'              	rlf	___fladd@b+3,w
  6466  00AF' 0CBA'              	rrf	___fladd@b+3,f
  6467  00B0' 0CB9'              	rrf	___fladd@b+2,f
  6468  00B1' 0CB8'              	rrf	___fladd@b+1,f
  6469  00B2' 0CB7'              	rrf	___fladd@b,f
  6470  00B3' 0B80'              	decfsz	??___fladd& (0+127),f
  6471  00B4' 2800'              	goto	u5245
  6472  00B5' 3001               	movlw	1
  6473  00B6' 00BF'              	movwf	??___fladd
  6474  00B7' 083F'              	movf	??___fladd,w
  6475  00B8' 07C9'              	addwf	___fladd@bexp,f
  6476  00B9'                    l4061:
  6477  00B9' 1283               	bcf	3,5	;RP0=0, select bank0
  6478  00BA' 1303               	bcf	3,6	;RP1=0, select bank0
  6479  00BB' 0848'              	movf	___fladd@aexp,w
  6480  00BC' 0249'              	subwf	___fladd@bexp,w
  6481  00BD' 1C03               	skipc
  6482  00BE' 2800'              	goto	l667
  6483  00BF'                    l665:
  6484  00BF' 1B47'              	btfsc	___fladd@signs,6
  6485  00C0' 2800'              	goto	l4087
  6486  00C1' 0849'              	movf	___fladd@bexp,w
  6487  00C2' 1D03               	btfss	3,2
  6488  00C3' 2800'              	goto	l4069
  6489  00C4' 3000               	movlw	0
  6490  00C5' 00BA'              	movwf	?___fladd+3
  6491  00C6' 3000               	movlw	0
  6492  00C7' 00B9'              	movwf	?___fladd+2
  6493  00C8' 3000               	movlw	0
  6494  00C9' 00B8'              	movwf	?___fladd+1
  6495  00CA' 3000               	movlw	0
  6496  00CB' 00B7'              	movwf	?___fladd
  6497  00CC' 0008               	return
  6498  00CD'                    l4069:
  6499  00CD' 083B'              	movf	___fladd@a,w
  6500  00CE' 07B7'              	addwf	___fladd@b,f
  6501  00CF' 083C'              	movf	___fladd@a+1,w
  6502  00D0' 1103               	clrz
  6503  00D1' 1803               	skipnc
  6504  00D2' 3E01               	addlw	1
  6505  00D3' 1D03               	btfss	3,2
  6506  00D4' 07B8'              	addwf	___fladd@b+1,f
  6507  00D5' 083D'              	movf	___fladd@a+2,w
  6508  00D6' 1103               	clrz
  6509  00D7' 1803               	skipnc
  6510  00D8' 3E01               	addlw	1
  6511  00D9' 1D03               	btfss	3,2
  6512  00DA' 07B9'              	addwf	___fladd@b+2,f
  6513  00DB' 083E'              	movf	___fladd@a+3,w
  6514  00DC' 1103               	clrz
  6515  00DD' 1803               	skipnc
  6516  00DE' 3E01               	addlw	1
  6517  00DF' 1D03               	btfss	3,2
  6518  00E0' 07BA'              	addwf	___fladd@b+3,f
  6519  00E1' 1C3A'              	btfss	___fladd@b+3,0
  6520  00E2' 2800'              	goto	l4121
  6521  00E3' 1C4A'              	btfss	___fladd@grs,0
  6522  00E4' 2800'              	goto	l4077
  6523  00E5' 084A'              	movf	___fladd@grs,w
  6524  00E6' 00BF'              	movwf	??___fladd
  6525  00E7' 1003               	clrc
  6526  00E8' 0C3F'              	rrf	??___fladd,w
  6527  00E9' 3801               	iorlw	1
  6528  00EA' 00CA'              	movwf	___fladd@grs
  6529  00EB' 2800'              	goto	l4079
  6530  00EC'                    l4077:
  6531  00EC' 1003               	clrc
  6532  00ED' 0CCA'              	rrf	___fladd@grs,f
  6533  00EE'                    l4079:
  6534  00EE' 1837'              	btfsc	___fladd@b,0
  6535  00EF' 17CA'              	bsf	___fladd@grs,7
  6536  00F0' 3001               	movlw	1
  6537  00F1' 00BF'              	movwf	??___fladd
  6538  00F2'                    u5325:
  6539  00F2' 0D3A'              	rlf	___fladd@b+3,w
  6540  00F3' 0CBA'              	rrf	___fladd@b+3,f
  6541  00F4' 0CB9'              	rrf	___fladd@b+2,f
  6542  00F5' 0CB8'              	rrf	___fladd@b+1,f
  6543  00F6' 0CB7'              	rrf	___fladd@b,f
  6544  00F7' 0B80'              	decfsz	??___fladd& (0+127),f
  6545  00F8' 2800'              	goto	u5325
  6546  00F9' 3001               	movlw	1
  6547  00FA' 00BF'              	movwf	??___fladd
  6548  00FB' 083F'              	movf	??___fladd,w
  6549  00FC' 07C9'              	addwf	___fladd@bexp,f
  6550  00FD' 2800'              	goto	l4121
  6551  00FE'                    l4087:
  6552  00FE' 083A'              	movf	___fladd@b+3,w
  6553  00FF' 3A80               	xorlw	128
  6554  0100' 00FF               	movwf	127
  6555  0101' 083E'              	movf	___fladd@a+3,w
  6556  0102' 3A80               	xorlw	128
  6557  0103' 027F               	subwf	127,w
  6558  0104' 1D03               	skipz
  6559  0105' 2800'              	goto	u5333
  6560  0106' 083D'              	movf	___fladd@a+2,w
  6561  0107' 0239'              	subwf	___fladd@b+2,w
  6562  0108' 1D03               	skipz
  6563  0109' 2800'              	goto	u5333
  6564  010A' 083C'              	movf	___fladd@a+1,w
  6565  010B' 0238'              	subwf	___fladd@b+1,w
  6566  010C' 1D03               	skipz
  6567  010D' 2800'              	goto	u5333
  6568  010E' 083B'              	movf	___fladd@a,w
  6569  010F' 0237'              	subwf	___fladd@b,w
  6570  0110'                    u5333:
  6571  0110' 1803               	skipnc
  6572  0111' 2800'              	goto	l4097
  6573  0112' 30FF               	movlw	255
  6574  0113' 00BF'              	movwf	??___fladd
  6575  0114' 30FF               	movlw	255
  6576  0115' 00C0'              	movwf	??___fladd+1
  6577  0116' 30FF               	movlw	255
  6578  0117' 00C1'              	movwf	??___fladd+2
  6579  0118' 30FF               	movlw	255
  6580  0119' 00C2'              	movwf	??___fladd+3
  6581  011A' 083B'              	movf	___fladd@a,w
  6582  011B' 00C3'              	movwf	??___fladd+4
  6583  011C' 083C'              	movf	___fladd@a+1,w
  6584  011D' 00C4'              	movwf	??___fladd+5
  6585  011E' 083D'              	movf	___fladd@a+2,w
  6586  011F' 00C5'              	movwf	??___fladd+6
  6587  0120' 083E'              	movf	___fladd@a+3,w
  6588  0121' 00C6'              	movwf	??___fladd+7
  6589  0122' 0837'              	movf	___fladd@b,w
  6590  0123' 02C3'              	subwf	??___fladd+4,f
  6591  0124' 0838'              	movf	___fladd@b+1,w
  6592  0125' 1C03               	skipc
  6593  0126' 0F38'              	incfsz	___fladd@b+1,w
  6594  0127' 2800'              	goto	u5341
  6595  0128' 2800'              	goto	u5342
  6596  0129'                    u5341:
  6597  0129' 02C4'              	subwf	??___fladd+5,f
  6598  012A'                    u5342:
  6599  012A' 0839'              	movf	___fladd@b+2,w
  6600  012B' 1C03               	skipc
  6601  012C' 0F39'              	incfsz	___fladd@b+2,w
  6602  012D' 2800'              	goto	u5343
  6603  012E' 2800'              	goto	u5344
  6604  012F'                    u5343:
  6605  012F' 02C5'              	subwf	??___fladd+6,f
  6606  0130'                    u5344:
  6607  0130' 083A'              	movf	___fladd@b+3,w
  6608  0131' 1C03               	skipc
  6609  0132' 0F3A'              	incfsz	___fladd@b+3,w
  6610  0133' 2800'              	goto	u5345
  6611  0134' 2800'              	goto	u5346
  6612  0135'                    u5345:
  6613  0135' 02C6'              	subwf	??___fladd+7,f
  6614  0136'                    u5346:
  6615  0136' 0843'              	movf	??___fladd+4,w
  6616  0137' 07BF'              	addwf	??___fladd,f
  6617  0138' 0844'              	movf	??___fladd+5,w
  6618  0139' 1803               	skipnc
  6619  013A' 0F44'              	incfsz	??___fladd+5,w
  6620  013B' 2800'              	goto	u5350
  6621  013C' 2800'              	goto	u5351
  6622  013D'                    u5350:
  6623  013D' 07C0'              	addwf	??___fladd+1,f
  6624  013E'                    u5351:
  6625  013E' 0845'              	movf	??___fladd+6,w
  6626  013F' 1803               	skipnc
  6627  0140' 0F45'              	incfsz	??___fladd+6,w
  6628  0141' 2800'              	goto	u5352
  6629  0142' 2800'              	goto	u5353
  6630  0143'                    u5352:
  6631  0143' 07C1'              	addwf	??___fladd+2,f
  6632  0144'                    u5353:
  6633  0144' 0846'              	movf	??___fladd+7,w
  6634  0145' 1803               	skipnc
  6635  0146' 0A46'              	incf	??___fladd+7,w
  6636  0147' 07C2'              	addwf	??___fladd+3,f
  6637  0148' 0842'              	movf	??___fladd+3,w
  6638  0149' 00BA'              	movwf	___fladd@b+3
  6639  014A' 0841'              	movf	??___fladd+2,w
  6640  014B' 00B9'              	movwf	___fladd@b+2
  6641  014C' 0840'              	movf	??___fladd+1,w
  6642  014D' 00B8'              	movwf	___fladd@b+1
  6643  014E' 083F'              	movf	??___fladd,w
  6644  014F' 00B7'              	movwf	___fladd@b
  6645  0150' 3080               	movlw	128
  6646  0151' 00BF'              	movwf	??___fladd
  6647  0152' 083F'              	movf	??___fladd,w
  6648  0153' 06C7'              	xorwf	___fladd@signs,f
  6649  0154' 09CA'              	comf	___fladd@grs,f
  6650  0155' 0ACA'              	incf	___fladd@grs,f
  6651  0156' 084A'              	movf	___fladd@grs,w
  6652  0157' 1D03               	btfss	3,2
  6653  0158' 2800'              	goto	l682
  6654  0159' 3001               	movlw	1
  6655  015A' 07B7'              	addwf	___fladd@b,f
  6656  015B' 3000               	movlw	0
  6657  015C' 1803               	skipnc
  6658  015D' 3001               	movlw	1
  6659  015E' 07B8'              	addwf	___fladd@b+1,f
  6660  015F' 3000               	movlw	0
  6661  0160' 1803               	skipnc
  6662  0161' 3001               	movlw	1
  6663  0162' 07B9'              	addwf	___fladd@b+2,f
  6664  0163' 3000               	movlw	0
  6665  0164' 1803               	skipnc
  6666  0165' 3001               	movlw	1
  6667  0166' 07BA'              	addwf	___fladd@b+3,f
  6668  0167' 2800'              	goto	l682
  6669  0168'                    l4097:
  6670  0168' 083B'              	movf	___fladd@a,w
  6671  0169' 02B7'              	subwf	___fladd@b,f
  6672  016A' 083C'              	movf	___fladd@a+1,w
  6673  016B' 1C03               	skipc
  6674  016C' 0F3C'              	incfsz	___fladd@a+1,w
  6675  016D' 02B8'              	subwf	___fladd@b+1,f
  6676  016E' 083D'              	movf	___fladd@a+2,w
  6677  016F' 1C03               	skipc
  6678  0170' 0F3D'              	incfsz	___fladd@a+2,w
  6679  0171' 02B9'              	subwf	___fladd@b+2,f
  6680  0172' 083E'              	movf	___fladd@a+3,w
  6681  0173' 1C03               	skipc
  6682  0174' 0F3E'              	incfsz	___fladd@a+3,w
  6683  0175' 02BA'              	subwf	___fladd@b+3,f
  6684  0176'                    l682:
  6685  0176' 083A'              	movf	___fladd@b+3,w
  6686  0177' 0439'              	iorwf	___fladd@b+2,w
  6687  0178' 0438'              	iorwf	___fladd@b+1,w
  6688  0179' 0437'              	iorwf	___fladd@b,w
  6689  017A' 1D03               	skipz
  6690  017B' 2800'              	goto	l4119
  6691  017C' 084A'              	movf	___fladd@grs,w
  6692  017D' 1D03               	btfss	3,2
  6693  017E' 2800'              	goto	l4119
  6694  017F' 3000               	movlw	0
  6695  0180' 00BA'              	movwf	?___fladd+3
  6696  0181' 3000               	movlw	0
  6697  0182' 00B9'              	movwf	?___fladd+2
  6698  0183' 3000               	movlw	0
  6699  0184' 00B8'              	movwf	?___fladd+1
  6700  0185' 3000               	movlw	0
  6701  0186' 00B7'              	movwf	?___fladd
  6702  0187' 0008               	return
  6703  0188'                    l4105:
  6704  0188' 3001               	movlw	1
  6705  0189' 00BF'              	movwf	??___fladd
  6706  018A'                    u5395:
  6707  018A' 1003               	clrc
  6708  018B' 0DB7'              	rlf	___fladd@b,f
  6709  018C' 0DB8'              	rlf	___fladd@b+1,f
  6710  018D' 0DB9'              	rlf	___fladd@b+2,f
  6711  018E' 0DBA'              	rlf	___fladd@b+3,f
  6712  018F' 0BBF'              	decfsz	??___fladd,f
  6713  0190' 2800'              	goto	u5395
  6714  0191' 1BCA'              	btfsc	___fladd@grs,7
  6715  0192' 1437'              	bsf	___fladd@b,0
  6716  0193' 1C4A'              	btfss	___fladd@grs,0
  6717  0194' 2800'              	goto	l4113
  6718  0195' 1403               	setc
  6719  0196' 2800'              	goto	L3
  6720  0197'                    l4113:
  6721  0197' 1003               	clrc
  6722  0198'                    L3:
  6723  0198' 0DCA'              	rlf	___fladd@grs,f
  6724  0199' 0849'              	movf	___fladd@bexp,w
  6725  019A' 1903               	btfsc	3,2
  6726  019B' 2800'              	goto	l4119
  6727  019C' 3001               	movlw	1
  6728  019D' 02C9'              	subwf	___fladd@bexp,f
  6729  019E'                    l4119:
  6730  019E' 1FB9'              	btfss	___fladd@b+2,7
  6731  019F' 2800'              	goto	l4105
  6732  01A0'                    l4121:
  6733  01A0' 01C8'              	clrf	___fladd@aexp
  6734  01A1' 1FCA'              	btfss	___fladd@grs,7
  6735  01A2' 2800'              	goto	l4131
  6736  01A3' 084A'              	movf	___fladd@grs,w
  6737  01A4' 397F               	andlw	127
  6738  01A5' 1903               	btfsc	3,2
  6739  01A6' 1837'              	btfsc	___fladd@b,0
  6740  01A7' 2800'              	goto	l4127
  6741  01A8' 2800'              	goto	l4131
  6742  01A9'                    l4127:
  6743  01A9' 01C8'              	clrf	___fladd@aexp
  6744  01AA' 0AC8'              	incf	___fladd@aexp,f
  6745  01AB'                    l4131:
  6746  01AB' 0848'              	movf	___fladd@aexp,w
  6747  01AC' 1903               	btfsc	3,2
  6748  01AD' 2800'              	goto	l695
  6749  01AE' 3001               	movlw	1
  6750  01AF' 07B7'              	addwf	___fladd@b,f
  6751  01B0' 3000               	movlw	0
  6752  01B1' 1803               	skipnc
  6753  01B2' 3001               	movlw	1
  6754  01B3' 07B8'              	addwf	___fladd@b+1,f
  6755  01B4' 3000               	movlw	0
  6756  01B5' 1803               	skipnc
  6757  01B6' 3001               	movlw	1
  6758  01B7' 07B9'              	addwf	___fladd@b+2,f
  6759  01B8' 3000               	movlw	0
  6760  01B9' 1803               	skipnc
  6761  01BA' 3001               	movlw	1
  6762  01BB' 07BA'              	addwf	___fladd@b+3,f
  6763  01BC' 1C3A'              	btfss	___fladd@b+3,0
  6764  01BD' 2800'              	goto	l695
  6765  01BE' 0837'              	movf	___fladd@b,w
  6766  01BF' 00BF'              	movwf	??___fladd
  6767  01C0' 0838'              	movf	___fladd@b+1,w
  6768  01C1' 00C0'              	movwf	??___fladd+1
  6769  01C2' 0839'              	movf	___fladd@b+2,w
  6770  01C3' 00C1'              	movwf	??___fladd+2
  6771  01C4' 083A'              	movf	___fladd@b+3,w
  6772  01C5' 00C2'              	movwf	??___fladd+3
  6773  01C6' 3001               	movlw	1
  6774  01C7' 00C3'              	movwf	??___fladd+4
  6775  01C8'                    u5495:
  6776  01C8' 0D42'              	rlf	??___fladd+3,w
  6777  01C9' 0CC2'              	rrf	??___fladd+3,f
  6778  01CA' 0CC1'              	rrf	??___fladd+2,f
  6779  01CB' 0CC0'              	rrf	??___fladd+1,f
  6780  01CC' 0CBF'              	rrf	??___fladd,f
  6781  01CD' 0BC3'              	decfsz	??___fladd+4,f
  6782  01CE' 2800'              	goto	u5495
  6783  01CF' 0842'              	movf	??___fladd+3,w
  6784  01D0' 00BA'              	movwf	___fladd@b+3
  6785  01D1' 0841'              	movf	??___fladd+2,w
  6786  01D2' 00B9'              	movwf	___fladd@b+2
  6787  01D3' 0840'              	movf	??___fladd+1,w
  6788  01D4' 00B8'              	movwf	___fladd@b+1
  6789  01D5' 083F'              	movf	??___fladd,w
  6790  01D6' 00B7'              	movwf	___fladd@b
  6791  01D7' 0A49'              	incf	___fladd@bexp,w
  6792  01D8' 1903               	btfsc	3,2
  6793  01D9' 2800'              	goto	l695
  6794  01DA' 3001               	movlw	1
  6795  01DB' 00BF'              	movwf	??___fladd
  6796  01DC' 083F'              	movf	??___fladd,w
  6797  01DD' 07C9'              	addwf	___fladd@bexp,f
  6798  01DE'                    l695:
  6799  01DE' 0A49'              	incf	___fladd@bexp,w
  6800  01DF' 1D03               	btfss	3,2
  6801  01E0' 0849'              	movf	___fladd@bexp,w
  6802  01E1' 1D03               	btfss	3,2
  6803  01E2' 2800'              	goto	l4149
  6804  01E3' 3000               	movlw	0
  6805  01E4' 00BA'              	movwf	___fladd@b+3
  6806  01E5' 3000               	movlw	0
  6807  01E6' 00B9'              	movwf	___fladd@b+2
  6808  01E7' 3000               	movlw	0
  6809  01E8' 00B8'              	movwf	___fladd@b+1
  6810  01E9' 3000               	movlw	0
  6811  01EA' 00B7'              	movwf	___fladd@b
  6812  01EB' 0849'              	movf	___fladd@bexp,w
  6813  01EC' 1903               	btfsc	3,2
  6814  01ED' 01C7'              	clrf	___fladd@signs
  6815  01EE'                    l4149:
  6816  01EE' 1C49'              	btfss	___fladd@bexp,0
  6817  01EF' 2800'              	goto	l4153
  6818  01F0' 17B9'              	bsf	___fladd@b+2,7
  6819  01F1' 2800'              	goto	l703
  6820  01F2'                    l4153:
  6821  01F2' 307F               	movlw	127
  6822  01F3' 00BF'              	movwf	??___fladd
  6823  01F4' 083F'              	movf	??___fladd,w
  6824  01F5' 05B9'              	andwf	___fladd@b+2,f
  6825  01F6'                    l703:
  6826  01F6' 0849'              	movf	___fladd@bexp,w
  6827  01F7' 00BF'              	movwf	??___fladd
  6828  01F8' 1003               	clrc
  6829  01F9' 0C3F'              	rrf	??___fladd,w
  6830  01FA' 00BA'              	movwf	___fladd@b+3
  6831  01FB' 1FC7'              	btfss	___fladd@signs,7
  6832  01FC' 0008               	return
  6833  01FD' 17BA'              	bsf	___fladd@b+3,7
  6834  01FE' 0008               	return
  6835  01FF'                    __end_of___fladd:
  6836                           
  6837                           	psect	text20
  6838  0000'                    __ptext20:	
  6839 ;; *************** function ___flneg *****************
  6840 ;; Defined at:
  6841 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/flneg.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  f1              4    0[COMMON] unsigned char 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  4    0[COMMON] unsigned char 
  6848 ;; Registers used:
  6849 ;;		wreg
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6855 ;;      Params:         4       0       0       0
  6856 ;;      Locals:         0       0       0       0
  6857 ;;      Temps:          0       0       0       0
  6858 ;;      Totals:         4       0       0       0
  6859 ;;Total ram usage:        4 bytes
  6860 ;; Hardware stack levels used: 1
  6861 ;; This function calls:
  6862 ;;		Nothing
  6863 ;; This function is called by:
  6864 ;;		_pow
  6865 ;;		_exp
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869  0000'                    ___flneg:	
  6870                           ;psect for function ___flneg
  6871                           
  6872                           
  6873                           ;incstack = 0
  6874                           ; Regs used in ___flneg: [wreg]
  6875  0000' 0803'              	movf	___flneg@f1+3,w
  6876  0001' 0402'              	iorwf	___flneg@f1+2,w
  6877  0002' 0401'              	iorwf	___flneg@f1+1,w
  6878  0003' 0400'              	iorwf	___flneg@f1,w
  6879  0004' 1903               	skipnz
  6880  0005' 0008               	return
  6881  0006' 3080               	movlw	128
  6882  0007' 0683'              	xorwf	___flneg@f1+3,f
  6883  0008' 0008               	return
  6884  0009'                    __end_of___flneg:
  6885                           
  6886                           	psect	text21
  6887  0000'                    __ptext21:	
  6888 ;; *************** function ___fldiv *****************
  6889 ;; Defined at:
  6890 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcdiv.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;  a               4    0[COMMON] unsigned char 
  6893 ;;  b               4    4[COMMON] unsigned char 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;  grs             4    7[BANK0 ] unsigned long 
  6896 ;;  rem             4    0[BANK0 ] unsigned long 
  6897 ;;  new_exp         2    5[BANK0 ] int 
  6898 ;;  aexp            1   12[BANK0 ] unsigned char 
  6899 ;;  bexp            1   11[BANK0 ] unsigned char 
  6900 ;;  sign            1    4[BANK0 ] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  4    0[COMMON] unsigned char 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0, btemp+1
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6910 ;;      Params:         8       0       0       0
  6911 ;;      Locals:         0      13       0       0
  6912 ;;      Temps:          5       0       0       0
  6913 ;;      Totals:        13      13       0       0
  6914 ;;Total ram usage:       26 bytes
  6915 ;; Hardware stack levels used: 1
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		_normalized
  6920 ;;		_exp
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924  0000'                    ___fldiv:	
  6925                           ;psect for function ___fldiv
  6926                           
  6927                           
  6928                           ;incstack = 0
  6929                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6930  0000' 0807'              	movf	___fldiv@b+3,w
  6931  0001' 3980               	andlw	128
  6932  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  6933  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  6934  0004' 0084'              	movwf	___fldiv@sign
  6935  0005' 0807'              	movf	___fldiv@b+3,w
  6936  0006' 0088'              	movwf	??___fldiv
  6937  0007' 0708'              	addwf	??___fldiv,w
  6938  0008' 008B'              	movwf	___fldiv@bexp
  6939  0009' 1B86'              	btfsc	___fldiv@b+2,7
  6940  000A' 140B'              	bsf	___fldiv@bexp,0
  6941  000B' 080B'              	movf	___fldiv@bexp,w
  6942  000C' 1903               	btfsc	3,2
  6943  000D' 2800'              	goto	l4395
  6944  000E' 0A0B'              	incf	___fldiv@bexp,w
  6945  000F' 1D03               	btfss	3,2
  6946  0010' 2800'              	goto	l4391
  6947  0011' 3000               	movlw	0
  6948  0012' 0087'              	movwf	___fldiv@b+3
  6949  0013' 3000               	movlw	0
  6950  0014' 0086'              	movwf	___fldiv@b+2
  6951  0015' 3000               	movlw	0
  6952  0016' 0085'              	movwf	___fldiv@b+1
  6953  0017' 3000               	movlw	0
  6954  0018' 0084'              	movwf	___fldiv@b
  6955  0019'                    l4391:
  6956  0019' 1786'              	bsf	___fldiv@b+2,7
  6957  001A' 0187'              	clrf	___fldiv@b+3
  6958  001B' 2800'              	goto	l4397
  6959  001C'                    l4395:
  6960  001C' 3000               	movlw	0
  6961  001D' 0087'              	movwf	___fldiv@b+3
  6962  001E' 3000               	movlw	0
  6963  001F' 0086'              	movwf	___fldiv@b+2
  6964  0020' 3000               	movlw	0
  6965  0021' 0085'              	movwf	___fldiv@b+1
  6966  0022' 3000               	movlw	0
  6967  0023' 0084'              	movwf	___fldiv@b
  6968  0024'                    l4397:
  6969  0024' 0803'              	movf	___fldiv@a+3,w
  6970  0025' 3980               	andlw	128
  6971  0026' 0088'              	movwf	??___fldiv
  6972  0027' 0808'              	movf	??___fldiv,w
  6973  0028' 0684'              	xorwf	___fldiv@sign,f
  6974  0029' 0803'              	movf	___fldiv@a+3,w
  6975  002A' 0088'              	movwf	??___fldiv
  6976  002B' 0708'              	addwf	??___fldiv,w
  6977  002C' 008C'              	movwf	___fldiv@aexp
  6978  002D' 1B82'              	btfsc	___fldiv@a+2,7
  6979  002E' 140C'              	bsf	___fldiv@aexp,0
  6980  002F' 080C'              	movf	___fldiv@aexp,w
  6981  0030' 1903               	btfsc	3,2
  6982  0031' 2800'              	goto	l4415
  6983  0032' 0A0C'              	incf	___fldiv@aexp,w
  6984  0033' 1D03               	btfss	3,2
  6985  0034' 2800'              	goto	l4411
  6986  0035' 3000               	movlw	0
  6987  0036' 0083'              	movwf	___fldiv@a+3
  6988  0037' 3000               	movlw	0
  6989  0038' 0082'              	movwf	___fldiv@a+2
  6990  0039' 3000               	movlw	0
  6991  003A' 0081'              	movwf	___fldiv@a+1
  6992  003B' 3000               	movlw	0
  6993  003C' 0080'              	movwf	___fldiv@a
  6994  003D'                    l4411:
  6995  003D' 1782'              	bsf	___fldiv@a+2,7
  6996  003E' 0183'              	clrf	___fldiv@a+3
  6997  003F' 2800'              	goto	l717
  6998  0040'                    l4415:
  6999  0040' 3000               	movlw	0
  7000  0041' 0083'              	movwf	___fldiv@a+3
  7001  0042' 3000               	movlw	0
  7002  0043' 0082'              	movwf	___fldiv@a+2
  7003  0044' 3000               	movlw	0
  7004  0045' 0081'              	movwf	___fldiv@a+1
  7005  0046' 3000               	movlw	0
  7006  0047' 0080'              	movwf	___fldiv@a
  7007  0048'                    l717:
  7008  0048' 0803'              	movf	___fldiv@a+3,w
  7009  0049' 0402'              	iorwf	___fldiv@a+2,w
  7010  004A' 0401'              	iorwf	___fldiv@a+1,w
  7011  004B' 0400'              	iorwf	___fldiv@a,w
  7012  004C' 1D03               	skipz
  7013  004D' 2800'              	goto	l4425
  7014  004E' 3000               	movlw	0
  7015  004F' 0087'              	movwf	___fldiv@b+3
  7016  0050' 3000               	movlw	0
  7017  0051' 0086'              	movwf	___fldiv@b+2
  7018  0052' 3000               	movlw	0
  7019  0053' 0085'              	movwf	___fldiv@b+1
  7020  0054' 3000               	movlw	0
  7021  0055' 0084'              	movwf	___fldiv@b
  7022  0056' 3080               	movlw	128
  7023  0057' 0486'              	iorwf	___fldiv@b+2,f
  7024  0058' 307F               	movlw	127
  7025  0059' 0487'              	iorwf	___fldiv@b+3,f
  7026  005A'                    L4:
  7027  005A' 0804'              	movf	___fldiv@sign,w
  7028  005B' 0088'              	movwf	??___fldiv
  7029  005C' 0808'              	movf	??___fldiv,w
  7030  005D' 0487'              	iorwf	___fldiv@b+3,f
  7031  005E' 0807'              	movf	___fldiv@b+3,w
  7032  005F' 0083'              	movwf	?___fldiv+3
  7033  0060' 0806'              	movf	___fldiv@b+2,w
  7034  0061' 0082'              	movwf	?___fldiv+2
  7035  0062' 0805'              	movf	___fldiv@b+1,w
  7036  0063' 0081'              	movwf	?___fldiv+1
  7037  0064' 0804'              	movf	___fldiv@b,w
  7038  0065' 0080'              	movwf	?___fldiv
  7039  0066' 0008               	return
  7040  0067'                    l4425:
  7041  0067' 080B'              	movf	___fldiv@bexp,w
  7042  0068' 1D03               	btfss	3,2
  7043  0069' 2800'              	goto	l4431
  7044  006A' 3000               	movlw	0
  7045  006B' 0083'              	movwf	?___fldiv+3
  7046  006C' 3000               	movlw	0
  7047  006D' 0082'              	movwf	?___fldiv+2
  7048  006E' 3000               	movlw	0
  7049  006F' 0081'              	movwf	?___fldiv+1
  7050  0070' 3000               	movlw	0
  7051  0071' 0080'              	movwf	?___fldiv
  7052  0072' 0008               	return
  7053  0073'                    l4431:
  7054  0073' 080B'              	movf	___fldiv@bexp,w
  7055  0074' 0088'              	movwf	??___fldiv
  7056  0075' 0189'              	clrf	??___fldiv+1
  7057  0076' 0809'              	movf	??___fldiv+1,w
  7058  0077' 008B'              	movwf	??___fldiv+3
  7059  0078' 080C'              	movf	___fldiv@aexp,w
  7060  0079' 0208'              	subwf	??___fldiv,w
  7061  007A' 008A'              	movwf	??___fldiv+2
  7062  007B' 1C03               	skipc
  7063  007C' 038B'              	decf	??___fldiv+3,f
  7064  007D' 080A'              	movf	??___fldiv+2,w
  7065  007E' 3E7F               	addlw	127
  7066  007F' 0085'              	movwf	___fldiv@new_exp
  7067  0080' 080B'              	movf	??___fldiv+3,w
  7068  0081' 1803               	skipnc
  7069  0082' 3E01               	addlw	1
  7070  0083' 3E00               	addlw	0
  7071  0084' 0086'              	movwf	___fldiv@new_exp+1
  7072  0085' 0807'              	movf	___fldiv@b+3,w
  7073  0086' 0083'              	movwf	___fldiv@rem+3
  7074  0087' 0806'              	movf	___fldiv@b+2,w
  7075  0088' 0082'              	movwf	___fldiv@rem+2
  7076  0089' 0805'              	movf	___fldiv@b+1,w
  7077  008A' 0081'              	movwf	___fldiv@rem+1
  7078  008B' 0804'              	movf	___fldiv@b,w
  7079  008C' 0080'              	movwf	___fldiv@rem
  7080  008D' 3000               	movlw	0
  7081  008E' 0087'              	movwf	___fldiv@b+3
  7082  008F' 3000               	movlw	0
  7083  0090' 0086'              	movwf	___fldiv@b+2
  7084  0091' 3000               	movlw	0
  7085  0092' 0085'              	movwf	___fldiv@b+1
  7086  0093' 3000               	movlw	0
  7087  0094' 0084'              	movwf	___fldiv@b
  7088  0095' 3000               	movlw	0
  7089  0096' 008A'              	movwf	___fldiv@grs+3
  7090  0097' 3000               	movlw	0
  7091  0098' 0089'              	movwf	___fldiv@grs+2
  7092  0099' 3000               	movlw	0
  7093  009A' 0088'              	movwf	___fldiv@grs+1
  7094  009B' 3000               	movlw	0
  7095  009C' 0087'              	movwf	___fldiv@grs
  7096  009D' 018C'              	clrf	___fldiv@aexp
  7097  009E'                    l4459:
  7098  009E' 301A               	movlw	26
  7099  009F' 020C'              	subwf	___fldiv@aexp,w
  7100  00A0' 1803               	btfsc	3,0
  7101  00A1' 2800'              	goto	l4461
  7102  00A2' 080C'              	movf	___fldiv@aexp,w
  7103  00A3' 1903               	btfsc	3,2
  7104  00A4' 2800'              	goto	l4451
  7105  00A5' 3001               	movlw	1
  7106  00A6' 0088'              	movwf	??___fldiv
  7107  00A7'                    u6185:
  7108  00A7' 1003               	clrc
  7109  00A8' 0D80'              	rlf	___fldiv@rem,f
  7110  00A9' 0D81'              	rlf	___fldiv@rem+1,f
  7111  00AA' 0D82'              	rlf	___fldiv@rem+2,f
  7112  00AB' 0D83'              	rlf	___fldiv@rem+3,f
  7113  00AC' 0B88'              	decfsz	??___fldiv,f
  7114  00AD' 2800'              	goto	u6185
  7115  00AE' 3001               	movlw	1
  7116  00AF' 0088'              	movwf	??___fldiv
  7117  00B0'                    u6195:
  7118  00B0' 1003               	clrc
  7119  00B1' 0D84'              	rlf	___fldiv@b,f
  7120  00B2' 0D85'              	rlf	___fldiv@b+1,f
  7121  00B3' 0D86'              	rlf	___fldiv@b+2,f
  7122  00B4' 0D87'              	rlf	___fldiv@b+3,f
  7123  00B5' 0B88'              	decfsz	??___fldiv,f
  7124  00B6' 2800'              	goto	u6195
  7125  00B7' 1B8A'              	btfsc	___fldiv@grs+3,7
  7126  00B8' 1404'              	bsf	___fldiv@b,0
  7127  00B9' 3001               	movlw	1
  7128  00BA' 0088'              	movwf	??___fldiv
  7129  00BB'                    u6215:
  7130  00BB' 1003               	clrc
  7131  00BC' 0D87'              	rlf	___fldiv@grs,f
  7132  00BD' 0D88'              	rlf	___fldiv@grs+1,f
  7133  00BE' 0D89'              	rlf	___fldiv@grs+2,f
  7134  00BF' 0D8A'              	rlf	___fldiv@grs+3,f
  7135  00C0' 0B88'              	decfsz	??___fldiv,f
  7136  00C1' 2800'              	goto	u6215
  7137  00C2'                    l4451:
  7138  00C2' 0803'              	movf	___fldiv@a+3,w
  7139  00C3' 0203'              	subwf	___fldiv@rem+3,w
  7140  00C4' 1D03               	skipz
  7141  00C5' 2800'              	goto	u6225
  7142  00C6' 0802'              	movf	___fldiv@a+2,w
  7143  00C7' 0202'              	subwf	___fldiv@rem+2,w
  7144  00C8' 1D03               	skipz
  7145  00C9' 2800'              	goto	u6225
  7146  00CA' 0801'              	movf	___fldiv@a+1,w
  7147  00CB' 0201'              	subwf	___fldiv@rem+1,w
  7148  00CC' 1D03               	skipz
  7149  00CD' 2800'              	goto	u6225
  7150  00CE' 0800'              	movf	___fldiv@a,w
  7151  00CF' 0200'              	subwf	___fldiv@rem,w
  7152  00D0'                    u6225:
  7153  00D0' 1C03               	skipc
  7154  00D1' 2800'              	goto	l4457
  7155  00D2' 170A'              	bsf	___fldiv@grs+3,6
  7156  00D3' 0800'              	movf	___fldiv@a,w
  7157  00D4' 0280'              	subwf	___fldiv@rem,f
  7158  00D5' 0801'              	movf	___fldiv@a+1,w
  7159  00D6' 1C03               	skipc
  7160  00D7' 0F01'              	incfsz	___fldiv@a+1,w
  7161  00D8' 2800'              	goto	u6235
  7162  00D9' 2800'              	goto	u6236
  7163  00DA'                    u6235:
  7164  00DA' 0281'              	subwf	___fldiv@rem+1,f
  7165  00DB'                    u6236:
  7166  00DB' 0802'              	movf	___fldiv@a+2,w
  7167  00DC' 1C03               	skipc
  7168  00DD' 0F02'              	incfsz	___fldiv@a+2,w
  7169  00DE' 2800'              	goto	u6237
  7170  00DF' 2800'              	goto	u6238
  7171  00E0'                    u6237:
  7172  00E0' 0282'              	subwf	___fldiv@rem+2,f
  7173  00E1'                    u6238:
  7174  00E1' 0803'              	movf	___fldiv@a+3,w
  7175  00E2' 1C03               	skipc
  7176  00E3' 0F03'              	incfsz	___fldiv@a+3,w
  7177  00E4' 2800'              	goto	u6239
  7178  00E5' 2800'              	goto	l4457
  7179  00E6'                    u6239:
  7180  00E6' 0283'              	subwf	___fldiv@rem+3,f
  7181  00E7'                    l4457:
  7182  00E7' 3001               	movlw	1
  7183  00E8' 0088'              	movwf	??___fldiv
  7184  00E9' 0808'              	movf	??___fldiv,w
  7185  00EA' 078C'              	addwf	___fldiv@aexp,f
  7186  00EB' 2800'              	goto	l4459
  7187  00EC'                    l4461:
  7188  00EC' 0803'              	movf	___fldiv@rem+3,w
  7189  00ED' 0402'              	iorwf	___fldiv@rem+2,w
  7190  00EE' 0401'              	iorwf	___fldiv@rem+1,w
  7191  00EF' 0400'              	iorwf	___fldiv@rem,w
  7192  00F0' 1D03               	btfss	3,2
  7193  00F1' 1407'              	bsf	___fldiv@grs,0
  7194  00F2'                    l4475:
  7195  00F2' 1B86'              	btfsc	___fldiv@b+2,7
  7196  00F3' 2800'              	goto	l4477
  7197  00F4' 3001               	movlw	1
  7198  00F5' 0088'              	movwf	??___fldiv
  7199  00F6'                    u6265:
  7200  00F6' 1003               	clrc
  7201  00F7' 0D84'              	rlf	___fldiv@b,f
  7202  00F8' 0D85'              	rlf	___fldiv@b+1,f
  7203  00F9' 0D86'              	rlf	___fldiv@b+2,f
  7204  00FA' 0D87'              	rlf	___fldiv@b+3,f
  7205  00FB' 0B88'              	decfsz	??___fldiv,f
  7206  00FC' 2800'              	goto	u6265
  7207  00FD' 1B8A'              	btfsc	___fldiv@grs+3,7
  7208  00FE' 1404'              	bsf	___fldiv@b,0
  7209  00FF' 3001               	movlw	1
  7210  0100' 0088'              	movwf	??___fldiv
  7211  0101'                    u6285:
  7212  0101' 1003               	clrc
  7213  0102' 0D87'              	rlf	___fldiv@grs,f
  7214  0103' 0D88'              	rlf	___fldiv@grs+1,f
  7215  0104' 0D89'              	rlf	___fldiv@grs+2,f
  7216  0105' 0D8A'              	rlf	___fldiv@grs+3,f
  7217  0106' 0B88'              	decfsz	??___fldiv,f
  7218  0107' 2800'              	goto	u6285
  7219  0108' 30FF               	movlw	255
  7220  0109' 0785'              	addwf	___fldiv@new_exp,f
  7221  010A' 1803               	skipnc
  7222  010B' 0A86'              	incf	___fldiv@new_exp+1,f
  7223  010C' 30FF               	movlw	255
  7224  010D' 0786'              	addwf	___fldiv@new_exp+1,f
  7225  010E' 2800'              	goto	l4475
  7226  010F'                    l4477:
  7227  010F' 018C'              	clrf	___fldiv@aexp
  7228  0110' 1F8A'              	btfss	___fldiv@grs+3,7
  7229  0111' 2800'              	goto	l4487
  7230  0112' 30FF               	movlw	255
  7231  0113' 0507'              	andwf	___fldiv@grs,w
  7232  0114' 0088'              	movwf	??___fldiv
  7233  0115' 30FF               	movlw	255
  7234  0116' 0508'              	andwf	___fldiv@grs+1,w
  7235  0117' 0089'              	movwf	??___fldiv+1
  7236  0118' 30FF               	movlw	255
  7237  0119' 0509'              	andwf	___fldiv@grs+2,w
  7238  011A' 008A'              	movwf	??___fldiv+2
  7239  011B' 307F               	movlw	127
  7240  011C' 050A'              	andwf	___fldiv@grs+3,w
  7241  011D' 008B'              	movwf	??___fldiv+3
  7242  011E' 080B'              	movf	??___fldiv+3,w
  7243  011F' 040A'              	iorwf	??___fldiv+2,w
  7244  0120' 0409'              	iorwf	??___fldiv+1,w
  7245  0121' 0408'              	iorwf	??___fldiv,w
  7246  0122' 1903               	skipnz
  7247  0123' 1804'              	btfsc	___fldiv@b,0
  7248  0124' 2800'              	goto	l4483
  7249  0125' 2800'              	goto	l4487
  7250  0126'                    l4483:
  7251  0126' 018C'              	clrf	___fldiv@aexp
  7252  0127' 0A8C'              	incf	___fldiv@aexp,f
  7253  0128'                    l4487:
  7254  0128' 080C'              	movf	___fldiv@aexp,w
  7255  0129' 1903               	btfsc	3,2
  7256  012A' 2800'              	goto	l4497
  7257  012B' 3001               	movlw	1
  7258  012C' 0784'              	addwf	___fldiv@b,f
  7259  012D' 3000               	movlw	0
  7260  012E' 1803               	skipnc
  7261  012F' 3001               	movlw	1
  7262  0130' 0785'              	addwf	___fldiv@b+1,f
  7263  0131' 3000               	movlw	0
  7264  0132' 1803               	skipnc
  7265  0133' 3001               	movlw	1
  7266  0134' 0786'              	addwf	___fldiv@b+2,f
  7267  0135' 3000               	movlw	0
  7268  0136' 1803               	skipnc
  7269  0137' 3001               	movlw	1
  7270  0138' 0787'              	addwf	___fldiv@b+3,f
  7271  0139' 1C07'              	btfss	___fldiv@b+3,0
  7272  013A' 2800'              	goto	l4497
  7273  013B' 0804'              	movf	___fldiv@b,w
  7274  013C' 0088'              	movwf	??___fldiv
  7275  013D' 0805'              	movf	___fldiv@b+1,w
  7276  013E' 0089'              	movwf	??___fldiv+1
  7277  013F' 0806'              	movf	___fldiv@b+2,w
  7278  0140' 008A'              	movwf	??___fldiv+2
  7279  0141' 0807'              	movf	___fldiv@b+3,w
  7280  0142' 008B'              	movwf	??___fldiv+3
  7281  0143' 3001               	movlw	1
  7282  0144' 008C'              	movwf	??___fldiv+4
  7283  0145'                    u6355:
  7284  0145' 0D0B'              	rlf	??___fldiv+3,w
  7285  0146' 0C8B'              	rrf	??___fldiv+3,f
  7286  0147' 0C8A'              	rrf	??___fldiv+2,f
  7287  0148' 0C89'              	rrf	??___fldiv+1,f
  7288  0149' 0C88'              	rrf	??___fldiv,f
  7289  014A' 0B8C'              	decfsz	??___fldiv+4,f
  7290  014B' 2800'              	goto	u6355
  7291  014C' 080B'              	movf	??___fldiv+3,w
  7292  014D' 0087'              	movwf	___fldiv@b+3
  7293  014E' 080A'              	movf	??___fldiv+2,w
  7294  014F' 0086'              	movwf	___fldiv@b+2
  7295  0150' 0809'              	movf	??___fldiv+1,w
  7296  0151' 0085'              	movwf	___fldiv@b+1
  7297  0152' 0808'              	movf	??___fldiv,w
  7298  0153' 0084'              	movwf	___fldiv@b
  7299  0154' 3001               	movlw	1
  7300  0155' 0785'              	addwf	___fldiv@new_exp,f
  7301  0156' 1803               	skipnc
  7302  0157' 0A86'              	incf	___fldiv@new_exp+1,f
  7303  0158' 3000               	movlw	0
  7304  0159' 0786'              	addwf	___fldiv@new_exp+1,f
  7305  015A'                    l4497:
  7306  015A' 0806'              	movf	___fldiv@new_exp+1,w
  7307  015B' 3A80               	xorlw	128
  7308  015C' 00FF               	movwf	127
  7309  015D' 3080               	movlw	128
  7310  015E' 027F               	subwf	127,w
  7311  015F' 1D03               	skipz
  7312  0160' 2800'              	goto	u6365
  7313  0161' 30FF               	movlw	255
  7314  0162' 0205'              	subwf	___fldiv@new_exp,w
  7315  0163'                    u6365:
  7316  0163' 1C03               	skipc
  7317  0164' 2800'              	goto	l4501
  7318  0165' 30FF               	movlw	255
  7319  0166' 1283               	bcf	3,5	;RP0=0, select bank0
  7320  0167' 1303               	bcf	3,6	;RP1=0, select bank0
  7321  0168' 0085'              	movwf	___fldiv@new_exp
  7322  0169' 3000               	movlw	0
  7323  016A' 0086'              	movwf	___fldiv@new_exp+1
  7324  016B' 3000               	movlw	0
  7325  016C' 0087'              	movwf	___fldiv@b+3
  7326  016D' 3000               	movlw	0
  7327  016E' 0086'              	movwf	___fldiv@b+2
  7328  016F' 3000               	movlw	0
  7329  0170' 0085'              	movwf	___fldiv@b+1
  7330  0171' 3000               	movlw	0
  7331  0172' 0084'              	movwf	___fldiv@b
  7332  0173'                    l4501:
  7333  0173' 1283               	bcf	3,5	;RP0=0, select bank0
  7334  0174' 1303               	bcf	3,6	;RP1=0, select bank0
  7335  0175' 0806'              	movf	___fldiv@new_exp+1,w
  7336  0176' 3A80               	xorlw	128
  7337  0177' 00FF               	movwf	127
  7338  0178' 3080               	movlw	128
  7339  0179' 027F               	subwf	127,w
  7340  017A' 1D03               	skipz
  7341  017B' 2800'              	goto	u6375
  7342  017C' 3001               	movlw	1
  7343  017D' 0205'              	subwf	___fldiv@new_exp,w
  7344  017E'                    u6375:
  7345  017E' 1803               	skipnc
  7346  017F' 2800'              	goto	l739
  7347  0180' 1283               	bcf	3,5	;RP0=0, select bank0
  7348  0181' 1303               	bcf	3,6	;RP1=0, select bank0
  7349  0182' 0185'              	clrf	___fldiv@new_exp
  7350  0183' 0186'              	clrf	___fldiv@new_exp+1
  7351  0184' 3000               	movlw	0
  7352  0185' 0087'              	movwf	___fldiv@b+3
  7353  0186' 3000               	movlw	0
  7354  0187' 0086'              	movwf	___fldiv@b+2
  7355  0188' 3000               	movlw	0
  7356  0189' 0085'              	movwf	___fldiv@b+1
  7357  018A' 3000               	movlw	0
  7358  018B' 0084'              	movwf	___fldiv@b
  7359  018C' 0184'              	clrf	___fldiv@sign
  7360  018D'                    l739:
  7361  018D' 1283               	bcf	3,5	;RP0=0, select bank0
  7362  018E' 1303               	bcf	3,6	;RP1=0, select bank0
  7363  018F' 0805'              	movf	___fldiv@new_exp,w
  7364  0190' 008B'              	movwf	___fldiv@bexp
  7365  0191' 1C0B'              	btfss	___fldiv@bexp,0
  7366  0192' 2800'              	goto	l4513
  7367  0193' 1786'              	bsf	___fldiv@b+2,7
  7368  0194' 2800'              	goto	l741
  7369  0195'                    l4513:
  7370  0195' 307F               	movlw	127
  7371  0196' 0088'              	movwf	??___fldiv
  7372  0197' 0808'              	movf	??___fldiv,w
  7373  0198' 0586'              	andwf	___fldiv@b+2,f
  7374  0199'                    l741:
  7375  0199' 080B'              	movf	___fldiv@bexp,w
  7376  019A' 0088'              	movwf	??___fldiv
  7377  019B' 1003               	clrc
  7378  019C' 0C08'              	rrf	??___fldiv,w
  7379  019D' 0087'              	movwf	___fldiv@b+3
  7380  019E' 2800'              	goto	L4
  7381  019F'                    __end_of___fldiv:
  7382                           
  7383                           	psect	text22
  7384  0000'                    __ptext22:	
  7385 ;; *************** function _my_floor *****************
  7386 ;; Defined at:
  7387 ;;		line 788 in file "main.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  f               4   10[COMMON] float 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;  n               2    0[BANK0 ] int 
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  2   10[COMMON] int 
  7394 ;; Registers used:
  7395 ;;		wreg, status,2, status,0, pclath, cstack
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7401 ;;      Params:         4       0       0       0
  7402 ;;      Locals:         0       2       0       0
  7403 ;;      Temps:          0       0       0       0
  7404 ;;      Totals:         4       2       0       0
  7405 ;;Total ram usage:        6 bytes
  7406 ;; Hardware stack levels used: 1
  7407 ;; Hardware stack levels required when called: 1
  7408 ;; This function calls:
  7409 ;;		___fltol
  7410 ;; This function is called by:
  7411 ;;		_updateANDset_ball_position
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415  0000'                    _my_floor:	
  7416                           ;psect for function _my_floor
  7417                           
  7418                           
  7419                           ;main.c: 795:     int n = (int)f;
  7420                           
  7421                           ;incstack = 0
  7422                           ; Regs used in _my_floor: [wreg+status,2+status,0+pclath+cstack]
  7423  0000' 080D'              	movf	my_floor@f+3,w
  7424  0001' 0083'              	movwf	___fltol@f1+3
  7425  0002' 080C'              	movf	my_floor@f+2,w
  7426  0003' 0082'              	movwf	___fltol@f1+2
  7427  0004' 080B'              	movf	my_floor@f+1,w
  7428  0005' 0081'              	movwf	___fltol@f1+1
  7429  0006' 080A'              	movf	my_floor@f,w
  7430  0007' 0080'              	movwf	___fltol@f1
  7431  0008' 118A' 2000'        	fcall	___fltol
  7432  000A' 0801'              	movf	?___fltol+1,w
  7433  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  7434  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  7435  000D' 0081'              	movwf	my_floor@n+1
  7436  000E' 0800'              	movf	?___fltol,w
  7437  000F' 0080'              	movwf	my_floor@n
  7438                           
  7439                           ;main.c: 796:     return n;
  7440  0010' 0801'              	movf	my_floor@n+1,w
  7441  0011' 008B'              	movwf	?_my_floor+1
  7442  0012' 0800'              	movf	my_floor@n,w
  7443  0013' 008A'              	movwf	?_my_floor
  7444  0014' 0008               	return
  7445  0015'                    __end_of_my_floor:
  7446                           
  7447                           	psect	text23
  7448  0000'                    __ptext23:	
  7449 ;; *************** function ___fltol *****************
  7450 ;; Defined at:
  7451 ;;		line 43 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/fltol.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  f1              4    0[COMMON] int 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;  exp1            1    9[COMMON] unsigned char 
  7456 ;;  sign1           1    8[COMMON] unsigned char 
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  4    0[COMMON] long 
  7459 ;; Registers used:
  7460 ;;		wreg, status,2, status,0
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7466 ;;      Params:         4       0       0       0
  7467 ;;      Locals:         2       0       0       0
  7468 ;;      Temps:          4       0       0       0
  7469 ;;      Totals:        10       0       0       0
  7470 ;;Total ram usage:       10 bytes
  7471 ;; Hardware stack levels used: 1
  7472 ;; This function calls:
  7473 ;;		Nothing
  7474 ;; This function is called by:
  7475 ;;		_my_floor
  7476 ;;		_pow
  7477 ;;		_exp
  7478 ;;		_floor
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482  0000'                    ___fltol:	
  7483                           ;psect for function ___fltol
  7484                           
  7485                           
  7486                           ;incstack = 0
  7487                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7488  0000' 1003               	clrc
  7489  0001' 0D02'              	rlf	___fltol@f1+2,w
  7490  0002' 0D03'              	rlf	___fltol@f1+3,w
  7491  0003' 0089'              	movwf	___fltol@exp1
  7492  0004' 0809'              	movf	___fltol@exp1,w
  7493  0005' 1D03               	btfss	3,2
  7494  0006' 2800'              	goto	l3935
  7495  0007'                    l3931:
  7496  0007' 3000               	movlw	0
  7497  0008' 0083'              	movwf	?___fltol+3
  7498  0009' 3000               	movlw	0
  7499  000A' 0082'              	movwf	?___fltol+2
  7500  000B' 3000               	movlw	0
  7501  000C' 0081'              	movwf	?___fltol+1
  7502  000D' 3000               	movlw	0
  7503  000E' 0080'              	movwf	?___fltol
  7504  000F' 0008               	return
  7505  0010'                    l3935:
  7506  0010' 0800'              	movf	___fltol@f1,w
  7507  0011' 0084'              	movwf	??___fltol
  7508  0012' 0801'              	movf	___fltol@f1+1,w
  7509  0013' 0085'              	movwf	??___fltol+1
  7510  0014' 0802'              	movf	___fltol@f1+2,w
  7511  0015' 0086'              	movwf	??___fltol+2
  7512  0016' 0803'              	movf	___fltol@f1+3,w
  7513  0017' 0087'              	movwf	??___fltol+3
  7514  0018' 301F               	movlw	31
  7515  0019'                    u5015:
  7516  0019' 1003               	clrc
  7517  001A' 0C87'              	rrf	??___fltol+3,f
  7518  001B' 0C86'              	rrf	??___fltol+2,f
  7519  001C' 0C85'              	rrf	??___fltol+1,f
  7520  001D' 0C84'              	rrf	??___fltol,f
  7521  001E' 3EFF               	addlw	-1
  7522  001F' 1D03               	skipz
  7523  0020' 2800'              	goto	u5015
  7524  0021' 0804'              	movf	??___fltol,w
  7525  0022' 0088'              	movwf	___fltol@sign1
  7526  0023' 1782'              	bsf	___fltol@f1+2,7
  7527  0024' 30FF               	movlw	255
  7528  0025' 0580'              	andwf	___fltol@f1,f
  7529  0026' 30FF               	movlw	255
  7530  0027' 0581'              	andwf	___fltol@f1+1,f
  7531  0028' 30FF               	movlw	255
  7532  0029' 0582'              	andwf	___fltol@f1+2,f
  7533  002A' 3000               	movlw	0
  7534  002B' 0583'              	andwf	___fltol@f1+3,f
  7535  002C' 3096               	movlw	150
  7536  002D' 0289'              	subwf	___fltol@exp1,f
  7537  002E' 1F89'              	btfss	___fltol@exp1,7
  7538  002F' 2800'              	goto	l3953
  7539  0030' 0809'              	movf	___fltol@exp1,w
  7540  0031' 3A80               	xorlw	128
  7541  0032' 3E97               	addlw	151
  7542  0033' 1C03               	btfss	3,0
  7543  0034' 2800'              	goto	l3931
  7544  0035'                    l3951:
  7545  0035' 3001               	movlw	1
  7546  0036'                    u5045:
  7547  0036' 1003               	clrc
  7548  0037' 0C83'              	rrf	___fltol@f1+3,f
  7549  0038' 0C82'              	rrf	___fltol@f1+2,f
  7550  0039' 0C81'              	rrf	___fltol@f1+1,f
  7551  003A' 0C80'              	rrf	___fltol@f1,f
  7552  003B' 3EFF               	addlw	-1
  7553  003C' 1D03               	skipz
  7554  003D' 2800'              	goto	u5045
  7555  003E' 3001               	movlw	1
  7556  003F' 0084'              	movwf	??___fltol
  7557  0040' 0804'              	movf	??___fltol,w
  7558  0041' 0789'              	addwf	___fltol@exp1,f
  7559  0042' 1903               	btfsc	3,2
  7560  0043' 2800'              	goto	l3961
  7561  0044' 2800'              	goto	l3951
  7562  0045'                    l3953:
  7563  0045' 3020               	movlw	32
  7564  0046' 0209'              	subwf	___fltol@exp1,w
  7565  0047' 1803               	btfsc	3,0
  7566  0048' 2800'              	goto	l3931
  7567  0049'                    l561:
  7568  0049' 0809'              	movf	___fltol@exp1,w
  7569  004A' 1903               	btfsc	3,2
  7570  004B' 2800'              	goto	l3961
  7571  004C' 3001               	movlw	1
  7572  004D' 0084'              	movwf	??___fltol
  7573  004E'                    u5075:
  7574  004E' 1003               	clrc
  7575  004F' 0D80'              	rlf	___fltol@f1,f
  7576  0050' 0D81'              	rlf	___fltol@f1+1,f
  7577  0051' 0D82'              	rlf	___fltol@f1+2,f
  7578  0052' 0D83'              	rlf	___fltol@f1+3,f
  7579  0053' 0B84'              	decfsz	??___fltol,f
  7580  0054' 2800'              	goto	u5075
  7581  0055' 3001               	movlw	1
  7582  0056' 0289'              	subwf	___fltol@exp1,f
  7583  0057' 2800'              	goto	l561
  7584  0058'                    l3961:
  7585  0058' 0808'              	movf	___fltol@sign1,w
  7586  0059' 1903               	btfsc	3,2
  7587  005A' 0008               	return
  7588  005B' 0980'              	comf	___fltol@f1,f
  7589  005C' 0981'              	comf	___fltol@f1+1,f
  7590  005D' 0982'              	comf	___fltol@f1+2,f
  7591  005E' 0983'              	comf	___fltol@f1+3,f
  7592  005F' 0A80'              	incf	___fltol@f1,f
  7593  0060' 1903               	skipnz
  7594  0061' 0A81'              	incf	___fltol@f1+1,f
  7595  0062' 1903               	skipnz
  7596  0063' 0A82'              	incf	___fltol@f1+2,f
  7597  0064' 1903               	skipnz
  7598  0065' 0A83'              	incf	___fltol@f1+3,f
  7599  0066' 0008               	return
  7600  0067'                    __end_of___fltol:
  7601                           
  7602                           	psect	text24
  7603  0000'                    __ptext24:	
  7604 ;; *************** function _setDisplayFillingMode *****************
  7605 ;; Defined at:
  7606 ;;		line 397 in file "main.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;  hORv            1    wreg     unsigned char 
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;  hORv            1    7[COMMON] unsigned char 
  7611 ;;  madctl          1    8[COMMON] unsigned char 
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1    wreg      void 
  7614 ;; Registers used:
  7615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7621 ;;      Params:         0       0       0       0
  7622 ;;      Locals:         2       0       0       0
  7623 ;;      Temps:          2       0       0       0
  7624 ;;      Totals:         4       0       0       0
  7625 ;;Total ram usage:        4 bytes
  7626 ;; Hardware stack levels used: 1
  7627 ;; Hardware stack levels required when called: 3
  7628 ;; This function calls:
  7629 ;;		_sendCommand_and_8bit_Data
  7630 ;; This function is called by:
  7631 ;;		_main
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635  0000'                    _setDisplayFillingMode:	
  7636                           ;psect for function _setDisplayFillingMode
  7637                           
  7638                           
  7639                           ;incstack = 0
  7640                           ; Regs used in _setDisplayFillingMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  7641                           ;setDisplayFillingMode@hORv stored from wreg
  7642  0000' 0087'              	movwf	setDisplayFillingMode@hORv
  7643                           
  7644                           ;main.c: 406:   uint8_t madctl = 0b00100100;
  7645  0001' 3024               	movlw	36
  7646  0002' 0088'              	movwf	setDisplayFillingMode@madctl
  7647                           
  7648                           ;main.c: 408:   mode = hORv;
  7649  0003' 0807'              	movf	setDisplayFillingMode@hORv,w
  7650  0004' 1283               	bcf	3,5	;RP0=0, select bank2
  7651  0005' 1703               	bsf	3,6	;RP1=1, select bank2
  7652  0006' 0080'              	movwf	_mode^(0+256)
  7653                           
  7654                           ;main.c: 410:   switch (mode) {
  7655  0007' 2800'              	goto	l3521
  7656  0008'                    l121:	
  7657                           ;main.c: 414:     case 1:
  7658                           
  7659                           
  7660                           ;main.c: 415:             madctl |= 0b00010000;
  7661  0008' 1608'              	bsf	setDisplayFillingMode@madctl,4
  7662                           
  7663                           ;main.c: 416:             break;
  7664  0009' 2800'              	goto	l3523
  7665  000A'                    l3515:
  7666                           
  7667                           ;main.c: 418:             madctl |= 0b00010010;
  7668  000A' 3012               	movlw	18
  7669  000B' 2800'              	goto	L5
  7670  000C'                    l123:	
  7671                           ;main.c: 420:     case 3:
  7672                           
  7673                           ;main.c: 419:             break;
  7674                           
  7675                           
  7676                           ;main.c: 421:             madctl |= 0b00000001;
  7677  000C' 1408'              	bsf	setDisplayFillingMode@madctl,0
  7678                           
  7679                           ;main.c: 422:             break;
  7680  000D' 2800'              	goto	l3523
  7681  000E'                    l3517:
  7682                           
  7683                           ;main.c: 424:             madctl |= 0b00010001;
  7684  000E' 3011               	movlw	17
  7685  000F'                    L5:
  7686  000F' 0085'              	movwf	??_setDisplayFillingMode
  7687  0010' 0805'              	movf	??_setDisplayFillingMode,w
  7688  0011' 0488'              	iorwf	setDisplayFillingMode@madctl,f
  7689                           
  7690                           ;main.c: 425:             break;
  7691  0012' 2800'              	goto	l3523
  7692  0013'                    l3521:
  7693  0013' 0800'              	movf	_mode^(0+256),w
  7694  0014' 0085'              	movwf	??_setDisplayFillingMode
  7695  0015' 0186'              	clrf	??_setDisplayFillingMode+1
  7696                           
  7697                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7698                           ; Switch size 1, requested type "simple"
  7699                           ; Number of cases is 1, Range of values is 0 to 0
  7700                           ; switch strategies available:
  7701                           ; Name         Instructions Cycles
  7702                           ; simple_byte            4     3 (average)
  7703                           ; direct_byte            9     7 (fixed)
  7704                           ; jumptable            260     6 (fixed)
  7705                           ;	Chosen strategy is simple_byte
  7706  0016' 0806'              	movf	??_setDisplayFillingMode+1,w
  7707  0017' 3A00               	xorlw	0	; case 0
  7708  0018' 1903               	skipnz
  7709  0019' 2800'              	goto	l4889
  7710  001A' 2800'              	goto	l3523
  7711  001B'                    l4889:
  7712                           
  7713                           ; Switch size 1, requested type "simple"
  7714                           ; Number of cases is 5, Range of values is 0 to 4
  7715                           ; switch strategies available:
  7716                           ; Name         Instructions Cycles
  7717                           ; simple_byte           16     9 (average)
  7718                           ; direct_byte           17     7 (fixed)
  7719                           ; jumptable            260     6 (fixed)
  7720                           ;	Chosen strategy is simple_byte
  7721  001B' 0805'              	movf	??_setDisplayFillingMode,w
  7722  001C' 3A00               	xorlw	0	; case 0
  7723  001D' 1903               	skipnz
  7724  001E' 2800'              	goto	l3523
  7725  001F' 3A01               	xorlw	1	; case 1
  7726  0020' 1903               	skipnz
  7727  0021' 2800'              	goto	l121
  7728  0022' 3A03               	xorlw	3	; case 2
  7729  0023' 1903               	skipnz
  7730  0024' 2800'              	goto	l3515
  7731  0025' 3A01               	xorlw	1	; case 3
  7732  0026' 1903               	skipnz
  7733  0027' 2800'              	goto	l123
  7734  0028' 3A07               	xorlw	7	; case 4
  7735  0029' 1903               	skipnz
  7736  002A' 2800'              	goto	l3517
  7737  002B' 2800'              	goto	l3523
  7738  002C'                    l3523:
  7739                           
  7740                           ;main.c: 428:   sendCommand_and_8bit_Data(0xA0, madctl);
  7741  002C' 0808'              	movf	setDisplayFillingMode@madctl,w
  7742  002D' 0083'              	movwf	sendCommand_and_8bit_Data@first_byte
  7743  002E' 30A0               	movlw	160
  7744  002F' 118A' 2000' 118A'  	fcall	_sendCommand_and_8bit_Data
  7745                           
  7746                           ;main.c: 429:   sendCommand_and_8bit_Data(0xA1, 0);
  7747  0032' 0183'              	clrf	sendCommand_and_8bit_Data@first_byte
  7748  0033' 30A1               	movlw	161
  7749  0034' 118A' 2000'        	fcall	_sendCommand_and_8bit_Data
  7750  0036' 0008               	return
  7751  0037'                    __end_of_setDisplayFillingMode:
  7752                           
  7753                           	psect	text25
  7754  0000'                    __ptext25:	
  7755 ;; *************** function _sendCommand_and_8bit_Data *****************
  7756 ;; Defined at:
  7757 ;;		line 310 in file "main.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  commandByte     1    wreg     unsigned char 
  7760 ;;  first_byte      1    3[COMMON] unsigned char 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;  commandByte     1    4[COMMON] unsigned char 
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  1    wreg      void 
  7765 ;; Registers used:
  7766 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7772 ;;      Params:         1       0       0       0
  7773 ;;      Locals:         1       0       0       0
  7774 ;;      Temps:          0       0       0       0
  7775 ;;      Totals:         2       0       0       0
  7776 ;;Total ram usage:        2 bytes
  7777 ;; Hardware stack levels used: 1
  7778 ;; Hardware stack levels required when called: 2
  7779 ;; This function calls:
  7780 ;;		_SPI_CS_HIGH
  7781 ;;		_SPI_CS_LOW
  7782 ;;		_SPI_DC_HIGH
  7783 ;;		_SPI_DC_LOW
  7784 ;;		_spiWrite
  7785 ;; This function is called by:
  7786 ;;		_setDisplayFillingMode
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790  0000'                    _sendCommand_and_8bit_Data:	
  7791                           ;psect for function _sendCommand_and_8bit_Data
  7792                           
  7793                           
  7794                           ;incstack = 0
  7795                           ; Regs used in _sendCommand_and_8bit_Data: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  7796                           ;sendCommand_and_8bit_Data@commandByte stored from wreg
  7797  0000' 0084'              	movwf	sendCommand_and_8bit_Data@commandByte
  7798                           
  7799                           ;main.c: 312:   SPI_CS_LOW();
  7800  0001' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  7801                           
  7802                           ;main.c: 314:   SPI_DC_LOW();
  7803  0004' 118A' 2000' 118A'  	fcall	_SPI_DC_LOW
  7804                           
  7805                           ;main.c: 315:   spiWrite(commandByte);
  7806  0007' 0804'              	movf	sendCommand_and_8bit_Data@commandByte,w
  7807  0008' 118A' 2000' 118A'  	fcall	_spiWrite
  7808                           
  7809                           ;main.c: 316:   SPI_DC_HIGH();
  7810  000B' 118A' 2000' 118A'  	fcall	_SPI_DC_HIGH
  7811                           
  7812                           ;main.c: 318:   spiWrite(first_byte);
  7813  000E' 0803'              	movf	sendCommand_and_8bit_Data@first_byte,w
  7814  000F' 118A' 2000' 118A'  	fcall	_spiWrite
  7815                           
  7816                           ;main.c: 320:   SPI_CS_HIGH();
  7817  0012' 118A' 2000'        	fcall	_SPI_CS_HIGH
  7818  0014' 0008               	return
  7819  0015'                    __end_of_sendCommand_and_8bit_Data:
  7820                           
  7821                           	psect	text26
  7822  0000'                    __ptext26:	
  7823 ;; *************** function _setAllDisplayPixels_Hard *****************
  7824 ;; Defined at:
  7825 ;;		line 653 in file "main.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  color           2   10[COMMON] unsigned int 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  y               2    2[BANK0 ] int 
  7830 ;;  x               2    0[BANK0 ] int 
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1    wreg      void 
  7833 ;; Registers used:
  7834 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7840 ;;      Params:         2       0       0       0
  7841 ;;      Locals:         0       4       0       0
  7842 ;;      Temps:          0       0       0       0
  7843 ;;      Totals:         2       4       0       0
  7844 ;;Total ram usage:        6 bytes
  7845 ;; Hardware stack levels used: 1
  7846 ;; Hardware stack levels required when called: 3
  7847 ;; This function calls:
  7848 ;;		_SPI_CS_HIGH
  7849 ;;		_SPI_CS_LOW
  7850 ;;		_SPI_WRITE16_Hard
  7851 ;;		_my_setAddrWindow_Hard
  7852 ;; This function is called by:
  7853 ;;		_main
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857  0000'                    _setAllDisplayPixels_Hard:	
  7858                           ;psect for function _setAllDisplayPixels_Hard
  7859                           
  7860                           
  7861                           ;main.c: 654:     SPI_CS_LOW();
  7862                           
  7863                           ;incstack = 0
  7864                           ; Regs used in _setAllDisplayPixels_Hard: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7865  0000' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  7866                           
  7867                           ;main.c: 656:     my_setAddrWindow_Hard(0, 0, 127, 95);
  7868  0003' 3000               	movlw	0
  7869  0004' 0082'              	movwf	my_setAddrWindow_Hard@x_start
  7870  0005' 0083'              	movwf	my_setAddrWindow_Hard@x_start+1
  7871  0006' 3000               	movlw	0
  7872  0007' 0084'              	movwf	my_setAddrWindow_Hard@y_start
  7873  0008' 0085'              	movwf	my_setAddrWindow_Hard@y_start+1
  7874  0009' 307F               	movlw	127
  7875  000A' 0086'              	movwf	my_setAddrWindow_Hard@x_finish
  7876  000B' 3000               	movlw	0
  7877  000C' 0087'              	movwf	my_setAddrWindow_Hard@x_finish+1
  7878  000D' 305F               	movlw	95
  7879  000E' 0088'              	movwf	my_setAddrWindow_Hard@y_finish
  7880  000F' 3000               	movlw	0
  7881  0010' 0089'              	movwf	my_setAddrWindow_Hard@y_finish+1
  7882  0011' 118A' 2000' 118A'  	fcall	_my_setAddrWindow_Hard
  7883                           
  7884                           ;main.c: 660:     for(y = 0; y < 96; y++) {
  7885  0014' 1283               	bcf	3,5	;RP0=0, select bank0
  7886  0015' 1303               	bcf	3,6	;RP1=0, select bank0
  7887  0016' 0182'              	clrf	setAllDisplayPixels_Hard@y
  7888  0017' 0183'              	clrf	setAllDisplayPixels_Hard@y+1
  7889  0018'                    l3569:
  7890                           
  7891                           ;main.c: 661:         for(x = 0; x < 128; x++) {
  7892  0018' 1283               	bcf	3,5	;RP0=0, select bank0
  7893  0019' 1303               	bcf	3,6	;RP1=0, select bank0
  7894  001A' 0180'              	clrf	setAllDisplayPixels_Hard@x
  7895  001B' 0181'              	clrf	setAllDisplayPixels_Hard@x+1
  7896  001C'                    l3575:
  7897                           
  7898                           ;main.c: 662:             SPI_WRITE16_Hard(color);
  7899  001C' 080B'              	movf	setAllDisplayPixels_Hard@color+1,w
  7900  001D' 0082'              	movwf	SPI_WRITE16_Hard@w+1
  7901  001E' 080A'              	movf	setAllDisplayPixels_Hard@color,w
  7902  001F' 0081'              	movwf	SPI_WRITE16_Hard@w
  7903  0020' 118A' 2000' 118A'  	fcall	_SPI_WRITE16_Hard
  7904                           
  7905                           ;main.c: 663:         }
  7906  0023' 3001               	movlw	1
  7907  0024' 1283               	bcf	3,5	;RP0=0, select bank0
  7908  0025' 1303               	bcf	3,6	;RP1=0, select bank0
  7909  0026' 0780'              	addwf	setAllDisplayPixels_Hard@x,f
  7910  0027' 1803               	skipnc
  7911  0028' 0A81'              	incf	setAllDisplayPixels_Hard@x+1,f
  7912  0029' 3000               	movlw	0
  7913  002A' 0781'              	addwf	setAllDisplayPixels_Hard@x+1,f
  7914  002B' 0801'              	movf	setAllDisplayPixels_Hard@x+1,w
  7915  002C' 3A80               	xorlw	128
  7916  002D' 00FF               	movwf	127
  7917  002E' 3080               	movlw	128
  7918  002F' 027F               	subwf	127,w
  7919  0030' 1D03               	skipz
  7920  0031' 2800'              	goto	u4575
  7921  0032' 3080               	movlw	128
  7922  0033' 0200'              	subwf	setAllDisplayPixels_Hard@x,w
  7923  0034'                    u4575:
  7924  0034' 1C03               	skipc
  7925  0035' 2800'              	goto	l3575
  7926                           
  7927                           ;main.c: 664:     }
  7928  0036' 3001               	movlw	1
  7929  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  7930  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  7931  0039' 0782'              	addwf	setAllDisplayPixels_Hard@y,f
  7932  003A' 1803               	skipnc
  7933  003B' 0A83'              	incf	setAllDisplayPixels_Hard@y+1,f
  7934  003C' 3000               	movlw	0
  7935  003D' 0783'              	addwf	setAllDisplayPixels_Hard@y+1,f
  7936  003E' 0803'              	movf	setAllDisplayPixels_Hard@y+1,w
  7937  003F' 3A80               	xorlw	128
  7938  0040' 00FF               	movwf	127
  7939  0041' 3080               	movlw	128
  7940  0042' 027F               	subwf	127,w
  7941  0043' 1D03               	skipz
  7942  0044' 2800'              	goto	u4585
  7943  0045' 3060               	movlw	96
  7944  0046' 0202'              	subwf	setAllDisplayPixels_Hard@y,w
  7945  0047'                    u4585:
  7946  0047' 1C03               	skipc
  7947  0048' 2800'              	goto	l3569
  7948                           
  7949                           ;main.c: 666:     SPI_CS_HIGH();
  7950  0049' 118A' 2000'        	fcall	_SPI_CS_HIGH
  7951  004B' 0008               	return
  7952  004C'                    __end_of_setAllDisplayPixels_Hard:
  7953                           
  7954                           	psect	text27
  7955  0000'                    __ptext27:	
  7956 ;; *************** function _sendCommand_Hard *****************
  7957 ;; Defined at:
  7958 ;;		line 605 in file "main.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;  commandByte     1    wreg     unsigned char 
  7961 ;; Auto vars:     Size  Location     Type
  7962 ;;  commandByte     1    1[COMMON] unsigned char 
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  1    wreg      void 
  7965 ;; Registers used:
  7966 ;;		wreg, status,2, status,0, pclath, cstack
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7972 ;;      Params:         0       0       0       0
  7973 ;;      Locals:         1       0       0       0
  7974 ;;      Temps:          0       0       0       0
  7975 ;;      Totals:         1       0       0       0
  7976 ;;Total ram usage:        1 bytes
  7977 ;; Hardware stack levels used: 1
  7978 ;; Hardware stack levels required when called: 1
  7979 ;; This function calls:
  7980 ;;		_SPI_CS_HIGH
  7981 ;;		_SPI_CS_LOW
  7982 ;;		_SPI_DC_HIGH
  7983 ;;		_SPI_DC_LOW
  7984 ;;		_spi_send_recv
  7985 ;; This function is called by:
  7986 ;;		_main
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990  0000'                    _sendCommand_Hard:	
  7991                           ;psect for function _sendCommand_Hard
  7992                           
  7993                           
  7994                           ;incstack = 0
  7995                           ; Regs used in _sendCommand_Hard: [wreg+status,2+status,0+pclath+cstack]
  7996                           ;sendCommand_Hard@commandByte stored from wreg
  7997  0000' 0081'              	movwf	sendCommand_Hard@commandByte
  7998                           
  7999                           ;main.c: 607:   SPI_CS_LOW();
  8000  0001' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  8001                           
  8002                           ;main.c: 609:   SPI_DC_LOW();
  8003  0004' 118A' 2000' 118A'  	fcall	_SPI_DC_LOW
  8004                           
  8005                           ;main.c: 610:   spi_send_recv(commandByte);
  8006  0007' 0801'              	movf	sendCommand_Hard@commandByte,w
  8007  0008' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8008                           
  8009                           ;main.c: 611:   SPI_DC_HIGH();
  8010  000B' 118A' 2000' 118A'  	fcall	_SPI_DC_HIGH
  8011                           
  8012                           ;main.c: 613:   SPI_CS_HIGH();
  8013  000E' 118A' 2000'        	fcall	_SPI_CS_HIGH
  8014  0010' 0008               	return
  8015  0011'                    __end_of_sendCommand_Hard:
  8016                           
  8017                           	psect	text28
  8018  0000'                    __ptext28:	
  8019 ;; *************** function _sendCommand *****************
  8020 ;; Defined at:
  8021 ;;		line 296 in file "main.c"
  8022 ;; Parameters:    Size  Location     Type
  8023 ;;  commandByte     1    wreg     unsigned char 
  8024 ;; Auto vars:     Size  Location     Type
  8025 ;;  commandByte     1    3[COMMON] unsigned char 
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  1    wreg      void 
  8028 ;; Registers used:
  8029 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/0
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8035 ;;      Params:         0       0       0       0
  8036 ;;      Locals:         1       0       0       0
  8037 ;;      Temps:          0       0       0       0
  8038 ;;      Totals:         1       0       0       0
  8039 ;;Total ram usage:        1 bytes
  8040 ;; Hardware stack levels used: 1
  8041 ;; Hardware stack levels required when called: 2
  8042 ;; This function calls:
  8043 ;;		_SPI_CS_HIGH
  8044 ;;		_SPI_CS_LOW
  8045 ;;		_SPI_DC_HIGH
  8046 ;;		_SPI_DC_LOW
  8047 ;;		_spiWrite
  8048 ;; This function is called by:
  8049 ;;		_main
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053  0000'                    _sendCommand:	
  8054                           ;psect for function _sendCommand
  8055                           
  8056                           
  8057                           ;incstack = 0
  8058                           ; Regs used in _sendCommand: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8059                           ;sendCommand@commandByte stored from wreg
  8060  0000' 0083'              	movwf	sendCommand@commandByte
  8061                           
  8062                           ;main.c: 298:   SPI_CS_LOW();
  8063  0001' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  8064                           
  8065                           ;main.c: 300:   SPI_DC_LOW();
  8066  0004' 118A' 2000' 118A'  	fcall	_SPI_DC_LOW
  8067                           
  8068                           ;main.c: 301:   spiWrite(commandByte);
  8069  0007' 0803'              	movf	sendCommand@commandByte,w
  8070  0008' 118A' 2000' 118A'  	fcall	_spiWrite
  8071                           
  8072                           ;main.c: 302:   SPI_DC_HIGH();
  8073  000B' 118A' 2000' 118A'  	fcall	_SPI_DC_HIGH
  8074                           
  8075                           ;main.c: 304:   SPI_CS_HIGH();
  8076  000E' 118A' 2000'        	fcall	_SPI_CS_HIGH
  8077  0010' 0008               	return
  8078  0011'                    __end_of_sendCommand:
  8079                           
  8080                           	psect	text29
  8081  0000'                    __ptext29:	
  8082 ;; *************** function _spiWrite *****************
  8083 ;; Defined at:
  8084 ;;		line 358 in file "main.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  b               1    wreg     unsigned char 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  b               1    0[COMMON] unsigned char 
  8089 ;;  bit             2    1[COMMON] int 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  1    wreg      void 
  8092 ;; Registers used:
  8093 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8099 ;;      Params:         0       0       0       0
  8100 ;;      Locals:         3       0       0       0
  8101 ;;      Temps:          0       0       0       0
  8102 ;;      Totals:         3       0       0       0
  8103 ;;Total ram usage:        3 bytes
  8104 ;; Hardware stack levels used: 1
  8105 ;; Hardware stack levels required when called: 1
  8106 ;; This function calls:
  8107 ;;		_SPI_MOSI_HIGH
  8108 ;;		_SPI_MOSI_LOW
  8109 ;;		_SPI_SCK_HIGH
  8110 ;;		_SPI_SCK_LOW
  8111 ;; This function is called by:
  8112 ;;		_sendCommand
  8113 ;;		_sendCommand_and_8bit_Data
  8114 ;;		_sendCommand_and_16bit_Data
  8115 ;;		_writeCommand
  8116 ;;		_setAddrWindow
  8117 ;;		_my_setAddrWindow
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121  0000'                    _spiWrite:	
  8122                           ;psect for function _spiWrite
  8123                           
  8124                           
  8125                           ;incstack = 0
  8126                           ; Regs used in _spiWrite: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8127                           ;spiWrite@b stored from wreg
  8128  0000' 0080'              	movwf	spiWrite@b
  8129                           
  8130                           ;main.c: 359:     int bit = 0;
  8131  0001' 0181'              	clrf	spiWrite@bit
  8132  0002' 0182'              	clrf	spiWrite@bit+1
  8133                           
  8134                           ;main.c: 361:     for (bit = 0; bit < 8; bit++) {
  8135  0003' 0181'              	clrf	spiWrite@bit
  8136  0004' 0182'              	clrf	spiWrite@bit+1
  8137  0005'                    l104:
  8138                           
  8139                           ;main.c: 362:       if (b & 0x80) {
  8140  0005' 1F80'              	btfss	spiWrite@b,7
  8141  0006' 2800'              	goto	l3385
  8142                           
  8143                           ;main.c: 363:         SPI_MOSI_HIGH();
  8144  0007' 118A' 2000' 118A'  	fcall	_SPI_MOSI_HIGH
  8145                           
  8146                           ;main.c: 364:       } else {
  8147  000A' 2800'              	goto	l107
  8148  000B'                    l3385:
  8149                           
  8150                           ;main.c: 365:         SPI_MOSI_LOW();
  8151  000B' 118A' 2000' 118A'  	fcall	_SPI_MOSI_LOW
  8152  000E'                    l107:	
  8153                           ;main.c: 366:       }
  8154                           
  8155                           
  8156                           ;main.c: 367:       SPI_SCK_HIGH();
  8157  000E' 118A' 2000' 118A'  	fcall	_SPI_SCK_HIGH
  8158                           
  8159                           ;main.c: 368:       b <<= 1;
  8160  0011' 1003               	clrc
  8161  0012' 0D80'              	rlf	spiWrite@b,f
  8162                           
  8163                           ;main.c: 369:       SPI_SCK_LOW();
  8164  0013' 118A' 2000' 118A'  	fcall	_SPI_SCK_LOW
  8165                           
  8166                           ;main.c: 370:     }
  8167  0016' 3001               	movlw	1
  8168  0017' 0781'              	addwf	spiWrite@bit,f
  8169  0018' 1803               	skipnc
  8170  0019' 0A82'              	incf	spiWrite@bit+1,f
  8171  001A' 3000               	movlw	0
  8172  001B' 0782'              	addwf	spiWrite@bit+1,f
  8173  001C' 0802'              	movf	spiWrite@bit+1,w
  8174  001D' 3A80               	xorlw	128
  8175  001E' 00FF               	movwf	127
  8176  001F' 3080               	movlw	128
  8177  0020' 027F               	subwf	127,w
  8178  0021' 1D03               	skipz
  8179  0022' 2800'              	goto	u4455
  8180  0023' 3008               	movlw	8
  8181  0024' 0201'              	subwf	spiWrite@bit,w
  8182  0025'                    u4455:
  8183  0025' 1803               	btfsc	3,0
  8184  0026' 0008               	return
  8185  0027' 2800'              	goto	l104
  8186  0028'                    __end_of_spiWrite:
  8187                           
  8188                           	psect	text30
  8189  0000'                    __ptext30:	
  8190 ;; *************** function _SPI_SCK_LOW *****************
  8191 ;; Defined at:
  8192 ;;		line 254 in file "main.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;		None
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;		None
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  1    wreg      void 
  8199 ;; Registers used:
  8200 ;;		None
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8206 ;;      Params:         0       0       0       0
  8207 ;;      Locals:         0       0       0       0
  8208 ;;      Temps:          0       0       0       0
  8209 ;;      Totals:         0       0       0       0
  8210 ;;Total ram usage:        0 bytes
  8211 ;; Hardware stack levels used: 1
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_spiWrite
  8216 ;;		_SPI_WRITE16
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220  0000'                    _SPI_SCK_LOW:	
  8221                           ;psect for function _SPI_SCK_LOW
  8222                           
  8223                           
  8224                           ;main.c: 255:     RC6 = 0;
  8225                           
  8226                           ;incstack = 0
  8227                           ; Regs used in _SPI_SCK_LOW: []
  8228  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8229  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8230  0002' 1307               	bcf	7,6	;volatile
  8231  0003' 0008               	return
  8232  0004'                    __end_of_SPI_SCK_LOW:
  8233                           
  8234                           	psect	text31
  8235  0000'                    __ptext31:	
  8236 ;; *************** function _SPI_SCK_HIGH *****************
  8237 ;; Defined at:
  8238 ;;		line 257 in file "main.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;		None
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;		None
  8243 ;; Return value:  Size  Location     Type
  8244 ;;                  1    wreg      void 
  8245 ;; Registers used:
  8246 ;;		None
  8247 ;; Tracked objects:
  8248 ;;		On entry : 0/0
  8249 ;;		On exit  : 0/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8252 ;;      Params:         0       0       0       0
  8253 ;;      Locals:         0       0       0       0
  8254 ;;      Temps:          0       0       0       0
  8255 ;;      Totals:         0       0       0       0
  8256 ;;Total ram usage:        0 bytes
  8257 ;; Hardware stack levels used: 1
  8258 ;; This function calls:
  8259 ;;		Nothing
  8260 ;; This function is called by:
  8261 ;;		_spiWrite
  8262 ;;		_SPI_WRITE16
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266  0000'                    _SPI_SCK_HIGH:	
  8267                           ;psect for function _SPI_SCK_HIGH
  8268                           
  8269                           
  8270                           ;main.c: 258:     RC6 = 1;
  8271                           
  8272                           ;incstack = 0
  8273                           ; Regs used in _SPI_SCK_HIGH: []
  8274  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8275  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8276  0002' 1707               	bsf	7,6	;volatile
  8277  0003' 0008               	return
  8278  0004'                    __end_of_SPI_SCK_HIGH:
  8279                           
  8280                           	psect	text32
  8281  0000'                    __ptext32:	
  8282 ;; *************** function _SPI_MOSI_LOW *****************
  8283 ;; Defined at:
  8284 ;;		line 247 in file "main.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;		None
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      void 
  8291 ;; Registers used:
  8292 ;;		None
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8298 ;;      Params:         0       0       0       0
  8299 ;;      Locals:         0       0       0       0
  8300 ;;      Temps:          0       0       0       0
  8301 ;;      Totals:         0       0       0       0
  8302 ;;Total ram usage:        0 bytes
  8303 ;; Hardware stack levels used: 1
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		_spiWrite
  8308 ;;		_SPI_WRITE16
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312  0000'                    _SPI_MOSI_LOW:	
  8313                           ;psect for function _SPI_MOSI_LOW
  8314                           
  8315                           
  8316                           ;main.c: 248:     RC4 = 0;
  8317                           
  8318                           ;incstack = 0
  8319                           ; Regs used in _SPI_MOSI_LOW: []
  8320  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8321  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8322  0002' 1207               	bcf	7,4	;volatile
  8323  0003' 0008               	return
  8324  0004'                    __end_of_SPI_MOSI_LOW:
  8325                           
  8326                           	psect	text33
  8327  0000'                    __ptext33:	
  8328 ;; *************** function _SPI_MOSI_HIGH *****************
  8329 ;; Defined at:
  8330 ;;		line 250 in file "main.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;		None
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;		None
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  1    wreg      void 
  8337 ;; Registers used:
  8338 ;;		None
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8344 ;;      Params:         0       0       0       0
  8345 ;;      Locals:         0       0       0       0
  8346 ;;      Temps:          0       0       0       0
  8347 ;;      Totals:         0       0       0       0
  8348 ;;Total ram usage:        0 bytes
  8349 ;; Hardware stack levels used: 1
  8350 ;; This function calls:
  8351 ;;		Nothing
  8352 ;; This function is called by:
  8353 ;;		_spiWrite
  8354 ;;		_SPI_WRITE16
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358  0000'                    _SPI_MOSI_HIGH:	
  8359                           ;psect for function _SPI_MOSI_HIGH
  8360                           
  8361                           
  8362                           ;main.c: 251:     RC4 = 1;
  8363                           
  8364                           ;incstack = 0
  8365                           ; Regs used in _SPI_MOSI_HIGH: []
  8366  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8367  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8368  0002' 1607               	bsf	7,4	;volatile
  8369  0003' 0008               	return
  8370  0004'                    __end_of_SPI_MOSI_HIGH:
  8371                           
  8372                           	psect	text34
  8373  0000'                    __ptext34:	
  8374 ;; *************** function _init_Softwear_SPI *****************
  8375 ;; Defined at:
  8376 ;;		line 265 in file "main.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;		None
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;		None
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  1    wreg      void 
  8383 ;; Registers used:
  8384 ;;		wreg
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8390 ;;      Params:         0       0       0       0
  8391 ;;      Locals:         0       0       0       0
  8392 ;;      Temps:          2       0       0       0
  8393 ;;      Totals:         2       0       0       0
  8394 ;;Total ram usage:        2 bytes
  8395 ;; Hardware stack levels used: 1
  8396 ;; This function calls:
  8397 ;;		Nothing
  8398 ;; This function is called by:
  8399 ;;		_main
  8400 ;; This function uses a non-reentrant model
  8401 ;;
  8402                           
  8403  0000'                    _init_Softwear_SPI:	
  8404                           ;psect for function _init_Softwear_SPI
  8405                           
  8406                           
  8407                           ;main.c: 266:     TRISB0 = 0;
  8408                           
  8409                           ;incstack = 0
  8410                           ; Regs used in _init_Softwear_SPI: [wreg]
  8411  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  8412  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  8413  0002' 1006               	bcf	6,0	;volatile
  8414                           
  8415                           ;main.c: 267:     RB0 = 1;
  8416  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  8417  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  8418  0005' 1406               	bsf	6,0	;volatile
  8419                           
  8420                           ;main.c: 269:     TRISB2 = 0;
  8421  0006' 1683               	bsf	3,5	;RP0=1, select bank1
  8422  0007' 1303               	bcf	3,6	;RP1=0, select bank1
  8423  0008' 1106               	bcf	6,2	;volatile
  8424                           
  8425                           ;main.c: 270:     RB2 = 1;
  8426  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  8427  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  8428  000B' 1506               	bsf	6,2	;volatile
  8429                           
  8430                           ;main.c: 272:     TRISC6 = 0;
  8431  000C' 1683               	bsf	3,5	;RP0=1, select bank1
  8432  000D' 1303               	bcf	3,6	;RP1=0, select bank1
  8433  000E' 1307               	bcf	7,6	;volatile
  8434                           
  8435                           ;main.c: 273:     RC6 = 0;
  8436  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  8437  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  8438  0011' 1307               	bcf	7,6	;volatile
  8439                           
  8440                           ;main.c: 275:     TRISC4 = 0;
  8441  0012' 1683               	bsf	3,5	;RP0=1, select bank1
  8442  0013' 1303               	bcf	3,6	;RP1=0, select bank1
  8443  0014' 1207               	bcf	7,4	;volatile
  8444                           
  8445                           ;main.c: 276:     RC4 = 0;
  8446  0015' 1283               	bcf	3,5	;RP0=0, select bank0
  8447  0016' 1303               	bcf	3,6	;RP1=0, select bank0
  8448  0017' 1207               	bcf	7,4	;volatile
  8449                           
  8450                           ;main.c: 279:     TRISB1 = 0;
  8451  0018' 1683               	bsf	3,5	;RP0=1, select bank1
  8452  0019' 1303               	bcf	3,6	;RP1=0, select bank1
  8453  001A' 1086               	bcf	6,1	;volatile
  8454                           
  8455                           ;main.c: 280:     RB1 = 1;
  8456  001B' 1283               	bcf	3,5	;RP0=0, select bank0
  8457  001C' 1303               	bcf	3,6	;RP1=0, select bank0
  8458  001D' 1486               	bsf	6,1	;volatile
  8459                           
  8460                           ;main.c: 281:      _delay((unsigned long)((5)*(20000000/4000.0)));
  8461  001E' 3021               	movlw	33
  8462  001F' 0081'              	movwf	??_init_Softwear_SPI+1
  8463  0020' 3076               	movlw	118
  8464  0021' 0080'              	movwf	??_init_Softwear_SPI
  8465  0022'                    u6937:
  8466  0022' 0B80'              	decfsz	??_init_Softwear_SPI,f
  8467  0023' 2800'              	goto	u6937
  8468  0024' 0B81'              	decfsz	??_init_Softwear_SPI+1,f
  8469  0025' 2800'              	goto	u6937
  8470  0026' 0000               	nop
  8471                           
  8472                           ;main.c: 283:     TRISB4 = 0;
  8473  0027' 1683               	bsf	3,5	;RP0=1, select bank1
  8474  0028' 1303               	bcf	3,6	;RP1=0, select bank1
  8475  0029' 1206               	bcf	6,4	;volatile
  8476                           
  8477                           ;main.c: 284:     RB4 = 1;
  8478  002A' 1283               	bcf	3,5	;RP0=0, select bank0
  8479  002B' 1303               	bcf	3,6	;RP1=0, select bank0
  8480  002C' 1606               	bsf	6,4	;volatile
  8481                           
  8482                           ;main.c: 285:     _delay((unsigned long)((1)*(20000000/4000.0)));
  8483  002D' 3007               	movlw	7
  8484  002E' 0081'              	movwf	??_init_Softwear_SPI+1
  8485  002F' 307D               	movlw	125
  8486  0030' 0080'              	movwf	??_init_Softwear_SPI
  8487  0031'                    u6947:
  8488  0031' 0B80'              	decfsz	??_init_Softwear_SPI,f
  8489  0032' 2800'              	goto	u6947
  8490  0033' 0B81'              	decfsz	??_init_Softwear_SPI+1,f
  8491  0034' 2800'              	goto	u6947
  8492                           
  8493                           ;main.c: 288:     RB1 = 0;
  8494  0035' 1283               	bcf	3,5	;RP0=0, select bank0
  8495  0036' 1303               	bcf	3,6	;RP1=0, select bank0
  8496  0037' 1086               	bcf	6,1	;volatile
  8497                           
  8498                           ;main.c: 289:     _delay((unsigned long)((2)*(20000000/4000000.0)));
  8499  0038' 3003               	movlw	3
  8500  0039' 0080'              	movwf	??_init_Softwear_SPI
  8501  003A'                    u6957:
  8502  003A' 0B80'              	decfsz	??_init_Softwear_SPI,f
  8503  003B' 2800'              	goto	u6957
  8504                           
  8505                           ;main.c: 290:     RB1 = 1;
  8506  003C' 1283               	bcf	3,5	;RP0=0, select bank0
  8507  003D' 1303               	bcf	3,6	;RP1=0, select bank0
  8508  003E' 1486               	bsf	6,1	;volatile
  8509  003F' 0008               	return
  8510  0040'                    __end_of_init_Softwear_SPI:
  8511                           
  8512                           	psect	text35
  8513  0000'                    __ptext35:	
  8514 ;; *************** function _init_Hardwear_SPI *****************
  8515 ;; Defined at:
  8516 ;;		line 580 in file "main.c"
  8517 ;; Parameters:    Size  Location     Type
  8518 ;;		None
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;		None
  8521 ;; Return value:  Size  Location     Type
  8522 ;;                  1    wreg      void 
  8523 ;; Registers used:
  8524 ;;		None
  8525 ;; Tracked objects:
  8526 ;;		On entry : 0/0
  8527 ;;		On exit  : 0/0
  8528 ;;		Unchanged: 0/0
  8529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8530 ;;      Params:         0       0       0       0
  8531 ;;      Locals:         0       0       0       0
  8532 ;;      Temps:          0       0       0       0
  8533 ;;      Totals:         0       0       0       0
  8534 ;;Total ram usage:        0 bytes
  8535 ;; Hardware stack levels used: 1
  8536 ;; This function calls:
  8537 ;;		Nothing
  8538 ;; This function is called by:
  8539 ;;		_main
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543  0000'                    _init_Hardwear_SPI:	
  8544                           ;psect for function _init_Hardwear_SPI
  8545                           
  8546                           
  8547                           ;main.c: 583:     TRISC7 = 1;
  8548                           
  8549                           ;incstack = 0
  8550                           ; Regs used in _init_Hardwear_SPI: []
  8551  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  8552  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  8553  0002' 1787               	bsf	7,7	;volatile
  8554                           
  8555                           ;main.c: 584:     RC7 = 0;
  8556  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  8557  0004' 1303               	bcf	3,6	;RP1=0, select bank0
  8558  0005' 1387               	bcf	7,7	;volatile
  8559                           
  8560                           ;main.c: 588:     SSPCONbits.SSPEN = 0;
  8561  0006' 1294               	bcf	20,5	;volatile
  8562                           
  8563                           ;main.c: 599:     SSPSTATbits.CKE = 1;
  8564  0007' 1683               	bsf	3,5	;RP0=1, select bank1
  8565  0008' 1303               	bcf	3,6	;RP1=0, select bank1
  8566  0009' 1714               	bsf	20,6	;volatile
  8567                           
  8568                           ;main.c: 600:     SSPSTATbits.SMP = 0;
  8569  000A' 1394               	bcf	20,7	;volatile
  8570                           
  8571                           ;main.c: 602:     SSPCONbits.SSPEN = 1;
  8572  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  8573  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  8574  000D' 1694               	bsf	20,5	;volatile
  8575  000E' 0008               	return
  8576  000F'                    __end_of_init_Hardwear_SPI:
  8577                           
  8578                           	psect	text36
  8579  0000'                    __ptext36:	
  8580 ;; *************** function _drawFastHLine_Hard *****************
  8581 ;; Defined at:
  8582 ;;		line 668 in file "main.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  start_x         1    wreg     char 
  8585 ;;  length          1   10[COMMON] char 
  8586 ;;  in_HLine_y      1   11[COMMON] char 
  8587 ;;  color           2   12[COMMON] unsigned int 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;  start_x         1    6[BANK0 ] char 
  8590 ;;  x_colum_hori    2    4[BANK0 ] int 
  8591 ;;  x2              1    3[BANK0 ] unsigned char 
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		wreg, status,2, status,0, pclath, cstack
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8601 ;;      Params:         4       0       0       0
  8602 ;;      Locals:         0       4       0       0
  8603 ;;      Temps:          0       3       0       0
  8604 ;;      Totals:         4       7       0       0
  8605 ;;Total ram usage:       11 bytes
  8606 ;; Hardware stack levels used: 1
  8607 ;; Hardware stack levels required when called: 3
  8608 ;; This function calls:
  8609 ;;		_SPI_CS_HIGH
  8610 ;;		_SPI_CS_LOW
  8611 ;;		_SPI_WRITE16_Hard
  8612 ;;		_my_setAddrWindow_Hard
  8613 ;; This function is called by:
  8614 ;;		_main
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618  0000'                    _drawFastHLine_Hard:	
  8619                           ;psect for function _drawFastHLine_Hard
  8620                           
  8621                           
  8622                           ;incstack = 0
  8623                           ; Regs used in _drawFastHLine_Hard: [wreg+status,2+status,0+pclath+cstack]
  8624                           ;drawFastHLine_Hard@start_x stored from wreg
  8625  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8626  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8627  0002' 0086'              	movwf	drawFastHLine_Hard@start_x
  8628                           
  8629                           ;main.c: 669:     SPI_CS_LOW();
  8630  0003' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  8631                           
  8632                           ;main.c: 671:     uint8_t x2 = start_x + length - 1;
  8633  0006' 080A'              	movf	drawFastHLine_Hard@length,w
  8634  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  8635  0008' 1303               	bcf	3,6	;RP1=0, select bank0
  8636  0009' 0706'              	addwf	drawFastHLine_Hard@start_x,w
  8637  000A' 3EFF               	addlw	255
  8638  000B' 0083'              	movwf	drawFastHLine_Hard@x2
  8639                           
  8640                           ;main.c: 672:     my_setAddrWindow_Hard(start_x, in_HLine_y, x2, in_HLine_y);
  8641  000C' 0806'              	movf	drawFastHLine_Hard@start_x,w
  8642  000D' 0082'              	movwf	my_setAddrWindow_Hard@x_start
  8643  000E' 0183'              	clrf	my_setAddrWindow_Hard@x_start+1
  8644  000F' 1B82'              	btfsc	my_setAddrWindow_Hard@x_start,7
  8645  0010' 0383'              	decf	my_setAddrWindow_Hard@x_start+1,f
  8646  0011' 080B'              	movf	drawFastHLine_Hard@in_HLine_y,w
  8647  0012' 0084'              	movwf	my_setAddrWindow_Hard@y_start
  8648  0013' 0185'              	clrf	my_setAddrWindow_Hard@y_start+1
  8649  0014' 1B84'              	btfsc	my_setAddrWindow_Hard@y_start,7
  8650  0015' 0385'              	decf	my_setAddrWindow_Hard@y_start+1,f
  8651  0016' 0803'              	movf	drawFastHLine_Hard@x2,w
  8652  0017' 0080'              	movwf	??_drawFastHLine_Hard
  8653  0018' 0181'              	clrf	??_drawFastHLine_Hard+1
  8654  0019' 0800'              	movf	??_drawFastHLine_Hard,w
  8655  001A' 0086'              	movwf	my_setAddrWindow_Hard@x_finish
  8656  001B' 0801'              	movf	??_drawFastHLine_Hard+1,w
  8657  001C' 0087'              	movwf	my_setAddrWindow_Hard@x_finish+1
  8658  001D' 080B'              	movf	drawFastHLine_Hard@in_HLine_y,w
  8659  001E' 0088'              	movwf	my_setAddrWindow_Hard@y_finish
  8660  001F' 0189'              	clrf	my_setAddrWindow_Hard@y_finish+1
  8661  0020' 1B88'              	btfsc	my_setAddrWindow_Hard@y_finish,7
  8662  0021' 0389'              	decf	my_setAddrWindow_Hard@y_finish+1,f
  8663  0022' 118A' 2000' 118A'  	fcall	_my_setAddrWindow_Hard
  8664                           
  8665                           ;main.c: 675:     for(x_colum_horizontal = 0; x_colum_horizontal < length; x_colum_horiz
      +                          ontal++) {
  8666  0025' 1283               	bcf	3,5	;RP0=0, select bank0
  8667  0026' 1303               	bcf	3,6	;RP1=0, select bank0
  8668  0027' 0184'              	clrf	drawFastHLine_Hard@x_colum_horizontal
  8669  0028' 0185'              	clrf	drawFastHLine_Hard@x_colum_horizontal+1
  8670  0029'                    l3601:
  8671  0029' 080A'              	movf	drawFastHLine_Hard@length,w
  8672  002A' 0080'              	movwf	??_drawFastHLine_Hard
  8673  002B' 0181'              	clrf	??_drawFastHLine_Hard+1
  8674  002C' 1B80'              	btfsc	??_drawFastHLine_Hard,7
  8675  002D' 0381'              	decf	??_drawFastHLine_Hard+1,f
  8676  002E' 0805'              	movf	drawFastHLine_Hard@x_colum_horizontal+1,w
  8677  002F' 3A80               	xorlw	128
  8678  0030' 0082'              	movwf	??_drawFastHLine_Hard+2
  8679  0031' 0801'              	movf	??_drawFastHLine_Hard+1,w
  8680  0032' 3A80               	xorlw	128
  8681  0033' 0202'              	subwf	??_drawFastHLine_Hard+2,w
  8682  0034' 1D03               	skipz
  8683  0035' 2800'              	goto	u4595
  8684  0036' 0800'              	movf	??_drawFastHLine_Hard,w
  8685  0037' 0204'              	subwf	drawFastHLine_Hard@x_colum_horizontal,w
  8686  0038'                    u4595:
  8687  0038' 1803               	btfsc	3,0
  8688  0039' 2800'              	goto	l3603
  8689                           
  8690                           ;main.c: 676:         SPI_WRITE16_Hard(color);
  8691  003A' 080D'              	movf	drawFastHLine_Hard@color+1,w
  8692  003B' 0082'              	movwf	SPI_WRITE16_Hard@w+1
  8693  003C' 080C'              	movf	drawFastHLine_Hard@color,w
  8694  003D' 0081'              	movwf	SPI_WRITE16_Hard@w
  8695  003E' 118A' 2000' 118A'  	fcall	_SPI_WRITE16_Hard
  8696                           
  8697                           ;main.c: 677:     }
  8698  0041' 3001               	movlw	1
  8699  0042' 1283               	bcf	3,5	;RP0=0, select bank0
  8700  0043' 1303               	bcf	3,6	;RP1=0, select bank0
  8701  0044' 0784'              	addwf	drawFastHLine_Hard@x_colum_horizontal,f
  8702  0045' 1803               	skipnc
  8703  0046' 0A85'              	incf	drawFastHLine_Hard@x_colum_horizontal+1,f
  8704  0047' 3000               	movlw	0
  8705  0048' 0785'              	addwf	drawFastHLine_Hard@x_colum_horizontal+1,f
  8706  0049' 2800'              	goto	l3601
  8707  004A'                    l3603:
  8708                           
  8709                           ;main.c: 679:     SPI_CS_HIGH();
  8710  004A' 118A' 2000'        	fcall	_SPI_CS_HIGH
  8711  004C' 0008               	return
  8712  004D'                    __end_of_drawFastHLine_Hard:
  8713                           
  8714                           	psect	text37
  8715  0000'                    __ptext37:	
  8716 ;; *************** function _my_setAddrWindow_Hard *****************
  8717 ;; Defined at:
  8718 ;;		line 643 in file "main.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  x_start         2    2[COMMON] unsigned int 
  8721 ;;  y_start         2    4[COMMON] unsigned int 
  8722 ;;  x_finish        2    6[COMMON] unsigned int 
  8723 ;;  y_finish        2    8[COMMON] unsigned int 
  8724 ;; Auto vars:     Size  Location     Type
  8725 ;;		None
  8726 ;; Return value:  Size  Location     Type
  8727 ;;                  1    wreg      void 
  8728 ;; Registers used:
  8729 ;;		wreg, status,2, status,0, pclath, cstack
  8730 ;; Tracked objects:
  8731 ;;		On entry : 0/0
  8732 ;;		On exit  : 0/0
  8733 ;;		Unchanged: 0/0
  8734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8735 ;;      Params:         8       0       0       0
  8736 ;;      Locals:         0       0       0       0
  8737 ;;      Temps:          0       0       0       0
  8738 ;;      Totals:         8       0       0       0
  8739 ;;Total ram usage:        8 bytes
  8740 ;; Hardware stack levels used: 1
  8741 ;; Hardware stack levels required when called: 2
  8742 ;; This function calls:
  8743 ;;		_spi_send_recv
  8744 ;;		_writeCommand_Hard
  8745 ;; This function is called by:
  8746 ;;		_setAllDisplayPixels_Hard
  8747 ;;		_drawFastHLine_Hard
  8748 ;;		_drawFastVLine_Hard
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752  0000'                    _my_setAddrWindow_Hard:	
  8753                           ;psect for function _my_setAddrWindow_Hard
  8754                           
  8755                           
  8756                           ;main.c: 644:     writeCommand_Hard(0x15);
  8757                           
  8758                           ;incstack = 0
  8759                           ; Regs used in _my_setAddrWindow_Hard: [wreg+status,2+status,0+pclath+cstack]
  8760  0000' 3015               	movlw	21
  8761  0001' 118A' 2000' 118A'  	fcall	_writeCommand_Hard
  8762                           
  8763                           ;main.c: 645:     spi_send_recv(x_start);
  8764  0004' 0802'              	movf	my_setAddrWindow_Hard@x_start,w
  8765  0005' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8766                           
  8767                           ;main.c: 646:     spi_send_recv(x_finish);
  8768  0008' 0806'              	movf	my_setAddrWindow_Hard@x_finish,w
  8769  0009' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8770                           
  8771                           ;main.c: 647:     writeCommand_Hard(0x75);
  8772  000C' 3075               	movlw	117
  8773  000D' 118A' 2000' 118A'  	fcall	_writeCommand_Hard
  8774                           
  8775                           ;main.c: 648:     spi_send_recv(y_start);
  8776  0010' 0804'              	movf	my_setAddrWindow_Hard@y_start,w
  8777  0011' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8778                           
  8779                           ;main.c: 649:     spi_send_recv(y_finish);
  8780  0014' 0808'              	movf	my_setAddrWindow_Hard@y_finish,w
  8781  0015' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8782                           
  8783                           ;main.c: 650:     writeCommand_Hard(0x5C);
  8784  0018' 305C               	movlw	92
  8785  0019' 118A' 2000'        	fcall	_writeCommand_Hard
  8786  001B' 0008               	return
  8787  001C'                    __end_of_my_setAddrWindow_Hard:
  8788                           
  8789                           	psect	text38
  8790  0000'                    __ptext38:	
  8791 ;; *************** function _writeCommand_Hard *****************
  8792 ;; Defined at:
  8793 ;;		line 615 in file "main.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;  cmd             1    wreg     unsigned char 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  cmd             1    1[COMMON] unsigned char 
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  1    wreg      void 
  8800 ;; Registers used:
  8801 ;;		wreg, status,2, status,0, pclath, cstack
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8807 ;;      Params:         0       0       0       0
  8808 ;;      Locals:         1       0       0       0
  8809 ;;      Temps:          0       0       0       0
  8810 ;;      Totals:         1       0       0       0
  8811 ;;Total ram usage:        1 bytes
  8812 ;; Hardware stack levels used: 1
  8813 ;; Hardware stack levels required when called: 1
  8814 ;; This function calls:
  8815 ;;		_SPI_DC_HIGH
  8816 ;;		_SPI_DC_LOW
  8817 ;;		_spi_send_recv
  8818 ;; This function is called by:
  8819 ;;		_my_setAddrWindow_Hard
  8820 ;;		_setAddrWindow_Hard
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824  0000'                    _writeCommand_Hard:	
  8825                           ;psect for function _writeCommand_Hard
  8826                           
  8827                           
  8828                           ;incstack = 0
  8829                           ; Regs used in _writeCommand_Hard: [wreg+status,2+status,0+pclath+cstack]
  8830                           ;writeCommand_Hard@cmd stored from wreg
  8831  0000' 0081'              	movwf	writeCommand_Hard@cmd
  8832                           
  8833                           ;main.c: 616:   SPI_DC_LOW();
  8834  0001' 118A' 2000' 118A'  	fcall	_SPI_DC_LOW
  8835                           
  8836                           ;main.c: 617:   spi_send_recv(cmd);
  8837  0004' 0801'              	movf	writeCommand_Hard@cmd,w
  8838  0005' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8839                           
  8840                           ;main.c: 618:   SPI_DC_HIGH();
  8841  0008' 118A' 2000'        	fcall	_SPI_DC_HIGH
  8842  000A' 0008               	return
  8843  000B'                    __end_of_writeCommand_Hard:
  8844                           
  8845                           	psect	text39
  8846  0000'                    __ptext39:	
  8847 ;; *************** function _SPI_DC_LOW *****************
  8848 ;; Defined at:
  8849 ;;		line 240 in file "main.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;		None
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;		None
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  1    wreg      void 
  8856 ;; Registers used:
  8857 ;;		None
  8858 ;; Tracked objects:
  8859 ;;		On entry : 0/0
  8860 ;;		On exit  : 0/0
  8861 ;;		Unchanged: 0/0
  8862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8863 ;;      Params:         0       0       0       0
  8864 ;;      Locals:         0       0       0       0
  8865 ;;      Temps:          0       0       0       0
  8866 ;;      Totals:         0       0       0       0
  8867 ;;Total ram usage:        0 bytes
  8868 ;; Hardware stack levels used: 1
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_sendCommand
  8873 ;;		_sendCommand_and_8bit_Data
  8874 ;;		_sendCommand_Hard
  8875 ;;		_writeCommand_Hard
  8876 ;;		_sendCommand_and_16bit_Data
  8877 ;;		_writeCommand
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881  0000'                    _SPI_DC_LOW:	
  8882                           ;psect for function _SPI_DC_LOW
  8883                           
  8884                           
  8885                           ;main.c: 241:     RB2 = 0;
  8886                           
  8887                           ;incstack = 0
  8888                           ; Regs used in _SPI_DC_LOW: []
  8889  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8890  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8891  0002' 1106               	bcf	6,2	;volatile
  8892  0003' 0008               	return
  8893  0004'                    __end_of_SPI_DC_LOW:
  8894                           
  8895                           	psect	text40
  8896  0000'                    __ptext40:	
  8897 ;; *************** function _SPI_DC_HIGH *****************
  8898 ;; Defined at:
  8899 ;;		line 243 in file "main.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;		None
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;		None
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		None
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8913 ;;      Params:         0       0       0       0
  8914 ;;      Locals:         0       0       0       0
  8915 ;;      Temps:          0       0       0       0
  8916 ;;      Totals:         0       0       0       0
  8917 ;;Total ram usage:        0 bytes
  8918 ;; Hardware stack levels used: 1
  8919 ;; This function calls:
  8920 ;;		Nothing
  8921 ;; This function is called by:
  8922 ;;		_sendCommand
  8923 ;;		_sendCommand_and_8bit_Data
  8924 ;;		_sendCommand_Hard
  8925 ;;		_writeCommand_Hard
  8926 ;;		_sendCommand_and_16bit_Data
  8927 ;;		_writeCommand
  8928 ;; This function uses a non-reentrant model
  8929 ;;
  8930                           
  8931  0000'                    _SPI_DC_HIGH:	
  8932                           ;psect for function _SPI_DC_HIGH
  8933                           
  8934                           
  8935                           ;main.c: 244:     RB2 = 1;
  8936                           
  8937                           ;incstack = 0
  8938                           ; Regs used in _SPI_DC_HIGH: []
  8939  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8940  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8941  0002' 1506               	bsf	6,2	;volatile
  8942  0003' 0008               	return
  8943  0004'                    __end_of_SPI_DC_HIGH:
  8944                           
  8945                           	psect	text41
  8946  0000'                    __ptext41:	
  8947 ;; *************** function _SPI_WRITE16_Hard *****************
  8948 ;; Defined at:
  8949 ;;		line 625 in file "main.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;  w               2    1[COMMON] unsigned int 
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;  second_B        1    4[COMMON] unsigned char 
  8954 ;;  first_B         1    3[COMMON] unsigned char 
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  1    wreg      void 
  8957 ;; Registers used:
  8958 ;;		wreg, status,2, status,0, pclath, cstack
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8964 ;;      Params:         2       0       0       0
  8965 ;;      Locals:         2       0       0       0
  8966 ;;      Temps:          0       0       0       0
  8967 ;;      Totals:         4       0       0       0
  8968 ;;Total ram usage:        4 bytes
  8969 ;; Hardware stack levels used: 1
  8970 ;; Hardware stack levels required when called: 1
  8971 ;; This function calls:
  8972 ;;		_spi_send_recv
  8973 ;; This function is called by:
  8974 ;;		_setAllDisplayPixels_Hard
  8975 ;;		_drawFastHLine_Hard
  8976 ;;		_drawFastVLine_Hard
  8977 ;;		_drawPixel_Hard
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981  0000'                    _SPI_WRITE16_Hard:	
  8982                           ;psect for function _SPI_WRITE16_Hard
  8983                           
  8984                           
  8985                           ;main.c: 626:     uint8_t first_B = ((w >> 8) & 0xFF) ;
  8986                           
  8987                           ;incstack = 0
  8988                           ; Regs used in _SPI_WRITE16_Hard: [wreg+status,2+status,0+pclath+cstack]
  8989  0000' 0802'              	movf	SPI_WRITE16_Hard@w+1,w
  8990  0001' 0083'              	movwf	SPI_WRITE16_Hard@first_B
  8991                           
  8992                           ;main.c: 627:     uint8_t second_B = w & 0xFF;
  8993  0002' 0801'              	movf	SPI_WRITE16_Hard@w,w
  8994  0003' 0084'              	movwf	SPI_WRITE16_Hard@second_B
  8995                           
  8996                           ;main.c: 628:     spi_send_recv(first_B);
  8997  0004' 0803'              	movf	SPI_WRITE16_Hard@first_B,w
  8998  0005' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8999                           
  9000                           ;main.c: 629:     spi_send_recv(second_B);
  9001  0008' 0804'              	movf	SPI_WRITE16_Hard@second_B,w
  9002  0009' 118A' 2000'        	fcall	_spi_send_recv
  9003  000B' 0008               	return
  9004  000C'                    __end_of_SPI_WRITE16_Hard:
  9005                           
  9006                           	psect	text42
  9007  0000'                    __ptext42:	
  9008 ;; *************** function _spi_send_recv *****************
  9009 ;; Defined at:
  9010 ;;		line 620 in file "main.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  data            1    wreg     unsigned char 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;  data            1    0[COMMON] unsigned char 
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  1    wreg      void 
  9017 ;; Registers used:
  9018 ;;		wreg
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9024 ;;      Params:         0       0       0       0
  9025 ;;      Locals:         1       0       0       0
  9026 ;;      Temps:          0       0       0       0
  9027 ;;      Totals:         1       0       0       0
  9028 ;;Total ram usage:        1 bytes
  9029 ;; Hardware stack levels used: 1
  9030 ;; This function calls:
  9031 ;;		Nothing
  9032 ;; This function is called by:
  9033 ;;		_sendCommand_Hard
  9034 ;;		_writeCommand_Hard
  9035 ;;		_SPI_WRITE16_Hard
  9036 ;;		_my_setAddrWindow_Hard
  9037 ;;		_setAddrWindow_Hard
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041  0000'                    _spi_send_recv:	
  9042                           ;psect for function _spi_send_recv
  9043                           
  9044                           
  9045                           ;incstack = 0
  9046                           ; Regs used in _spi_send_recv: [wreg]
  9047                           ;spi_send_recv@data stored from wreg
  9048  0000' 0080'              	movwf	spi_send_recv@data
  9049                           
  9050                           ;main.c: 621:     SSPBUF = data;
  9051  0001' 0800'              	movf	spi_send_recv@data,w
  9052  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  9053  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  9054  0004' 0093               	movwf	19	;volatile
  9055  0005'                    l179:	
  9056                           ;main.c: 622:     while(SSPSTATbits.BF == 1);
  9057                           
  9058  0005' 1683               	bsf	3,5	;RP0=1, select bank1
  9059  0006' 1303               	bcf	3,6	;RP1=0, select bank1
  9060  0007' 1C14               	btfss	20,0	;volatile
  9061  0008' 0008               	return
  9062  0009' 2800'              	goto	l179
  9063  000A'                    __end_of_spi_send_recv:
  9064                           
  9065                           	psect	text43
  9066  0000'                    __ptext43:	
  9067 ;; *************** function _SPI_CS_LOW *****************
  9068 ;; Defined at:
  9069 ;;		line 233 in file "main.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;		None
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		None
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9083 ;;      Params:         0       0       0       0
  9084 ;;      Locals:         0       0       0       0
  9085 ;;      Temps:          0       0       0       0
  9086 ;;      Totals:         0       0       0       0
  9087 ;;Total ram usage:        0 bytes
  9088 ;; Hardware stack levels used: 1
  9089 ;; This function calls:
  9090 ;;		Nothing
  9091 ;; This function is called by:
  9092 ;;		_sendCommand
  9093 ;;		_sendCommand_and_8bit_Data
  9094 ;;		_sendCommand_Hard
  9095 ;;		_setAllDisplayPixels_Hard
  9096 ;;		_drawFastHLine_Hard
  9097 ;;		_startWrite
  9098 ;;		_sendCommand_and_16bit_Data
  9099 ;;		_setAllDisplayPixels
  9100 ;;		_drawPixel
  9101 ;;		_drawFastHLine
  9102 ;;		_drawFastVLine
  9103 ;;		_drawFastVLine_Hard
  9104 ;;		_drawPixel_Hard
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108  0000'                    _SPI_CS_LOW:	
  9109                           ;psect for function _SPI_CS_LOW
  9110                           
  9111                           
  9112                           ;main.c: 234:     RB0 = 0;
  9113                           
  9114                           ;incstack = 0
  9115                           ; Regs used in _SPI_CS_LOW: []
  9116  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9117  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9118  0002' 1006               	bcf	6,0	;volatile
  9119  0003' 0008               	return
  9120  0004'                    __end_of_SPI_CS_LOW:
  9121                           
  9122                           	psect	text44
  9123  0000'                    __ptext44:	
  9124 ;; *************** function _SPI_CS_HIGH *****************
  9125 ;; Defined at:
  9126 ;;		line 236 in file "main.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;		None
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;		None
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1    wreg      void 
  9133 ;; Registers used:
  9134 ;;		None
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9140 ;;      Params:         0       0       0       0
  9141 ;;      Locals:         0       0       0       0
  9142 ;;      Temps:          0       0       0       0
  9143 ;;      Totals:         0       0       0       0
  9144 ;;Total ram usage:        0 bytes
  9145 ;; Hardware stack levels used: 1
  9146 ;; This function calls:
  9147 ;;		Nothing
  9148 ;; This function is called by:
  9149 ;;		_sendCommand
  9150 ;;		_sendCommand_and_8bit_Data
  9151 ;;		_sendCommand_Hard
  9152 ;;		_setAllDisplayPixels_Hard
  9153 ;;		_drawFastHLine_Hard
  9154 ;;		_endWrite
  9155 ;;		_sendCommand_and_16bit_Data
  9156 ;;		_setAllDisplayPixels
  9157 ;;		_drawPixel
  9158 ;;		_drawFastHLine
  9159 ;;		_drawFastVLine
  9160 ;;		_drawFastVLine_Hard
  9161 ;;		_drawPixel_Hard
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165  0000'                    _SPI_CS_HIGH:	
  9166                           ;psect for function _SPI_CS_HIGH
  9167                           
  9168                           
  9169                           ;main.c: 237:     RB0 = 1;
  9170                           
  9171                           ;incstack = 0
  9172                           ; Regs used in _SPI_CS_HIGH: []
  9173  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9174  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9175  0002' 1406               	bsf	6,0	;volatile
  9176  0003' 0008               	return
  9177  0004'                    __end_of_SPI_CS_HIGH:
  9178  007E                     btemp	set	126	;btemp
  9179  007E                     wtemp0	set	126
  9180                           
  9181                           	psect	idloc
  9182                           
  9183                           ;Config register IDLOC0 @ 0x2000
  9184                           ;	unspecified, using default values
  9185  2000                     	org	8192
  9186  2000  3FFF               	dw	16383
  9187                           
  9188                           ;Config register IDLOC1 @ 0x2001
  9189                           ;	unspecified, using default values
  9190  2001                     	org	8193
  9191  2001  3FFF               	dw	16383
  9192                           
  9193                           ;Config register IDLOC2 @ 0x2002
  9194                           ;	unspecified, using default values
  9195  2002                     	org	8194
  9196  2002  3FFF               	dw	16383
  9197                           
  9198                           ;Config register IDLOC3 @ 0x2003
  9199                           ;	unspecified, using default values
  9200  2003                     	org	8195
  9201  2003  3FFF               	dw	16383
  9202                           
  9203                           	psect	config
  9204                           
  9205                           ;Config register CONFIG @ 0x2007
  9206                           ;	Oscillator Selection bits
  9207                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT/T1OSO pin, I/O f
      +                          unction on RA7/OSC1/CLKIN/T1OSI
  9208                           ;	Watchdog Timer Enable bit
  9209                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9210                           ;	Power Up Timer Enable bit
  9211                           ;	PWRTE = ON, PWRT enabled
  9212                           ;	RE3/MCLR pin function select bit
  9213                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  9214                           ;	Code Protection bit
  9215                           ;	CP = OFF, Program memory code protection is disabled
  9216                           ;	Data Code Protection bit
  9217                           ;	CPD = OFF, Data memory code protection is disabled
  9218                           ;	Brown-out Reset Selection bits
  9219                           ;	BOREN = ON, BOR enabled
  9220                           ;	Internal External Switchover bit
  9221                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9222                           ;	Fail-Safe Clock Monitor Enabled bit
  9223                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9224                           ;	In-Circuit Debugger Mode bit
  9225                           ;	DEBUG = 0x1, unprogrammed default
  9226  2007                     	org	8199
  9227  2007  3FE4               	dw	16356

Data Sizes:
    Strings     0
    Constant    76
    Data        10
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     34      63

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_drawFastHLine_Hard
    _updateANDset_ball_position->_my_floor
    _pow->___xxtofl
    _log->___xxtofl
    _exp->___xxtofl
    _floor->___xxtofl
    ___fleq->___xxtofl
    ___xxtofl->___fltol
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    _my_floor->___fltol
    _setDisplayFillingMode->_sendCommand_and_8bit_Data
    _sendCommand_and_8bit_Data->_spiWrite
    _setAllDisplayPixels_Hard->_my_setAddrWindow_Hard
    _sendCommand_Hard->_spi_send_recv
    _sendCommand->_spiWrite
    _drawFastHLine_Hard->_my_setAddrWindow_Hard
    _my_setAddrWindow_Hard->_writeCommand_Hard
    _writeCommand_Hard->_spi_send_recv
    _SPI_WRITE16_Hard->_spi_send_recv

Critical Paths under _main in BANK0

    _log->_eval_poly
    _exp->_eval_poly
    _ldexp->_eval_poly
    _floor->___fladd
    _frexp->___fleq
    ___fleq->___xxtofl
    _eval_poly->___fladd
    ___flmul->_frexp
    ___flsub->___fladd
    ___fladd->___flmul

Critical Paths under _main in BANK1

    _vector_length->_sqrt
    _sqrt->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly

Critical Paths under _main in BANK2

    _main->_updateANDset_ball_position
    _updateANDset_ball_position->_normalized
    _normalized->_vector_length

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   93989
                                             31 BANK2      3     3      0
                 _drawFastHLine_Hard
                  _init_Hardwear_SPI
                  _init_Softwear_SPI
                        _sendCommand
                   _sendCommand_Hard
           _setAllDisplayPixels_Hard
              _setDisplayFillingMode
         _updateANDset_ball_position
              _update_ball_direction
 ---------------------------------------------------------------------------------
 (1) _updateANDset_ball_position                           3     3      0   89474
                                             28 BANK2      3     3      0
                           _my_floor
                         _normalized
              _update_ball_direction
 ---------------------------------------------------------------------------------
 (1) _update_ball_direction                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _normalized                                          12     4      8   88030
                                             16 BANK2     12     4      8
                            ___fldiv
                      _vector_length
 ---------------------------------------------------------------------------------
 (3) _vector_length                                       16     8      8   85500
                                              0 BANK2     16     8      8
                            ___fladd
                            ___flmul
                                _pow
                               _sqrt
 ---------------------------------------------------------------------------------
 (4) _sqrt                                                29    25      4    1403
                                             51 BANK1     29    25      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (4) _pow                                                 21    13      8   75372
                                             30 BANK1     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (5) _log                                                  6     2      4   24578
                                             11 BANK1      6     2      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _exp                                                 11     7      4   40200
                                             19 BANK1     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (6) _ldexp                                                8     2      6    3995
                                             11 BANK1      8     2      6
                             ___fleq
                             ___flge
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (6) _floor                                               10     6      4   10151
                                             75 BANK0      4     0      4
                                              0 BANK1      6     6      0
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                7     2      5    2252
                                             22 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8    1570
                                             10 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     836
                                             10 COMMON     4     0      4
                                              0 BANK0     10    10      0
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1886
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) _eval_poly                                           16     9      7    9209
                                             75 BANK0      5     5      0
                                              0 BANK1     11     4      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    4393
                                             29 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     980
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4267
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    4022
                                             55 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2223
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) _my_floor                                             6     2      4     942
                                             10 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___fltol
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     697
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (1) _setDisplayFillingMode                                4     4      0     315
                                              5 COMMON     4     4      0
          _sendCommand_and_8bit_Data
 ---------------------------------------------------------------------------------
 (2) _sendCommand_and_8bit_Data                            2     1      1     266
                                              3 COMMON     2     1      1
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _setAllDisplayPixels_Hard                             6     4      2    1674
                                             10 COMMON     2     0      2
                                              0 BANK0      4     4      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                   _SPI_WRITE16_Hard
              _my_setAddrWindow_Hard
 ---------------------------------------------------------------------------------
 (1) _sendCommand_Hard                                     1     1      0      44
                                              1 COMMON     1     1      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                      _spi_send_recv
 ---------------------------------------------------------------------------------
 (1) _sendCommand                                          1     1      0      92
                                              3 COMMON     1     1      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             3     3      0      70
                                              0 COMMON     3     3      0
                      _SPI_MOSI_HIGH
                       _SPI_MOSI_LOW
                       _SPI_SCK_HIGH
                        _SPI_SCK_LOW
 ---------------------------------------------------------------------------------
 (4) _SPI_SCK_LOW                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SPI_SCK_HIGH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SPI_MOSI_LOW                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SPI_MOSI_HIGH                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Softwear_SPI                                    2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_Hardwear_SPI                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawFastHLine_Hard                                  11     7      4    2390
                                             10 COMMON     4     0      4
                                              0 BANK0      7     7      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                   _SPI_WRITE16_Hard
              _my_setAddrWindow_Hard
 ---------------------------------------------------------------------------------
 (2) _my_setAddrWindow_Hard                                8     0      8    1066
                                              2 COMMON     8     0      8
                      _spi_send_recv
                  _writeCommand_Hard
 ---------------------------------------------------------------------------------
 (3) _writeCommand_Hard                                    1     1      0      44
                                              1 COMMON     1     1      0
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                      _spi_send_recv
 ---------------------------------------------------------------------------------
 (3) _SPI_DC_LOW                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SPI_DC_HIGH                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_WRITE16_Hard                                     4     2      2     416
                                              1 COMMON     4     2      2
                      _spi_send_recv
 ---------------------------------------------------------------------------------
 (4) _spi_send_recv                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_CS_LOW                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SPI_CS_HIGH                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _drawFastHLine_Hard
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_WRITE16_Hard
       _spi_send_recv
     _my_setAddrWindow_Hard
       _spi_send_recv
       _writeCommand_Hard
         _SPI_DC_HIGH
         _SPI_DC_LOW
         _spi_send_recv
   _init_Hardwear_SPI
   _init_Softwear_SPI
   _sendCommand
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_DC_HIGH
     _SPI_DC_LOW
     _spiWrite
       _SPI_MOSI_HIGH
       _SPI_MOSI_LOW
       _SPI_SCK_HIGH
       _SPI_SCK_LOW
   _sendCommand_Hard
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_DC_HIGH
     _SPI_DC_LOW
     _spi_send_recv
   _setAllDisplayPixels_Hard
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_WRITE16_Hard
     _my_setAddrWindow_Hard
   _setDisplayFillingMode
     _sendCommand_and_8bit_Data
       _SPI_CS_HIGH
       _SPI_CS_LOW
       _SPI_DC_HIGH
       _SPI_DC_LOW
       _spiWrite
   _updateANDset_ball_position
     _my_floor
       ___fltol
     _normalized
       ___fldiv
       _vector_length
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flmul
         _pow
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___fltol
           ___xxtofl
           _exp
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
             _eval_poly
               ___fladd
               ___flmul
             _floor
               ___fladd
               ___flge
               ___fltol
               ___xxtofl
               _frexp
             _ldexp
               ___fleq
               ___flge
               _eval_poly (ARG)
             _log (ARG)
               ___fladd
               ___fleq
               ___flge
               ___flmul
               ___xxtofl
               _eval_poly
               _frexp
           _log
         _sqrt
           ___fladd (ARG)
           ___flmul (ARG)
           _pow (ARG)
     _update_ball_direction
   _update_ball_direction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50     22      3F       7       78.8%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     50      50       5      100.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       3      100.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      ED      10        0.0%
ABS                  0      0      ED       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Feb 27 17:55:09 2023

                                  ___fldiv@aexp 000C                                    ___fldiv@bexp 000B  
                                             pc 0002                                    ___fldiv@sign 0004  
                                   _SSPSTATbits 0094                                  ?_spi_send_recv 0000  
                                            _dx 000C                                              _dy 0008  
                                            fsr 0004                             __Umul8_16@word_mpld 0006  
                        sendCommand@commandByte 0003                    drawFastHLine_Hard@in_HLine_y 000B  
                                           l104 0005                                             l121 0008  
                                           l107 000E                                             l123 000C  
                                           l179 0005                                             l269 0048  
                                           l542 001A                                             l703 01F6  
                                           l561 0049                                             l545 0080  
                                           l537 001C                                             l538 0036  
                                           l741 0199                                             l717 0048  
                                           l661 004A                                             l821 001F  
                                           l665 00BF                                             l682 0176  
                                           l834 0073                                             l739 018D  
                                           l667 009F                                             l835 007D  
                                           l827 005D                                             l852 0043  
                                           l695 01DE                                             l776 0012  
                                           l769 02DA                                             l795 00FC  
                                           _RB0 0030                                             _RB1 0031  
                                           _RB2 0032                                             _RB4 0034  
                                           _RC4 003C                                             _RC6 003E  
                                           _RC7 003F                     ??_sendCommand_and_8bit_Data 0004  
                                           _exp 0000                                             _log 0000  
                                           _pow 0000                                             fsr0 0004  
                                           indf 0000                       setDisplayFillingMode@hORv 0007  
                                  ___flmul@aexp 002B                                    ___flmul@bexp 0030  
                                  ___flmul@sign 002A                                    ___flmul@temp 0035  
                                  ___flmul@prod 0031                                    ___fltol@exp1 0009  
                                          l4003 003F                                            l4013 0054  
                                          l4007 0042                                            l4113 0197  
                                          l4105 0188                                            l4121 01A0  
                                          l4131 01AB                                            l4051 00A8  
                                          l4043 0072                                            l4203 0054  
                                          l4053 00AA                                            l4061 00B9  
                                          l4127 01A9                                            l4119 019E  
                                          l4311 002E                                            l3601 0029  
                                          l3521 0013                                            l4153 01F2  
                                          l4305 0017                                            l3603 004A  
                                          l3515 000A                                            l3523 002C  
                                          l4411 003D                                            l4315 0030  
                                          l3517 000E                                            l4501 0173  
                                          l4149 01EE                                            l4077 00EC  
                                          l4069 00CD                                            l4173 0019  
                                          l4325 0071                                            l4317 0042  
                                          l3461 000B                                            l4431 0073  
                                          l4415 0040                                            l4079 00EE  
                                          l4087 00FE                                            l4263 0264  
                                          l4255 0230                                            l4191 003C  
                                          l4175 001B                                            l4327 0062  
                                          l4351 0028                                            l3385 000B  
                                          l4513 0195                                            l4425 0067  
                                          l4097 0168                                            l4281 02AE  
                                          l4257 024D                                            l4193 003E  
                                          l4177 0023                                            l4601 0028  
                                          l4451 00C2                                            l4267 0266  
                                          l4195 0046                                            l4339 009A  
                                          l4461 00EC                                            l4277 0298  
                                          l4533 0040                                            l3575 001C  
                                          l4391 0019                                            l4287 02C7  
                                          l4543 00B2                                            l4623 0030  
                                          l4607 005E                                            l3569 0018  
                                          l4457 00E7                                            l4553 00C4  
                                          l4529 0035                                            l4641 00B5  
                                          l3931 0007                                            l4483 0126  
                                          l4475 00F2                                            l4459 009E  
                                          l4395 001C                                            l3915 0034  
                                          l4563 0030                                            l4635 0080  
                                          l4723 002F                                            l4477 010F  
                                          l4397 0024                                            l4573 005D  
                                          l4629 0058                                            l4741 0071  
                                          l3951 0035                                            l3935 0010  
                                          l4487 0128                                            l3919 005A  
                                          l4735 005C                                            l4719 0027  
                                          l3961 0058                                            l3953 0045  
                                          l4497 015A                                            l4585 0090  
                                          l4673 004E                                            l4729 003C  
                                          l3891 0048                                            l4659 01BD  
                                          l4691 010A                                            ?_exp 0013  
                                          l4589 009B                                            l4781 0196  
                                          l4765 00EC                                            l4853 0054  
                                          ?_log 000B                                            l3983 001C  
                                          l4687 00F0                                            l4679 007E  
                                          l4767 00AD                                            l4759 00AC  
                                          l3985 0024                                            l4769 0123  
                                          l3979 0019                                            l3899 000A  
                                          l4889 001B                                            ?_pow 001E  
                               ??_vector_length 000E                                            u5015 0019  
                                          u5200 0092                                            u5210 0093  
                                          u5045 0036                                            u6005 006A  
                                          u5075 004E                                            u5341 0129  
                                          u5333 0110                                            u5325 00F2  
                                          u5245 00AE                                            u6045 0085  
                                          u5350 013D                                            u5342 012A  
                                          u4455 0025                                            u6215 00BB  
                                          u5351 013E                                            u5343 012F  
                                          u5352 0143                                            u5344 0130  
                                          u6225 00D0                                            u5353 0144  
                                          u5345 0135                                            u5346 0136  
                                          u6235 00DA                                            u5195 0086  
                                          u6236 00DB                                            u6237 00E0  
                                          u6238 00E1                                            u4575 0034  
                                          u6239 00E6                                            u4585 0047  
                                          u6265 00F6                                            u6185 00A7  
                                          u4595 0038                                            u6355 0145  
                                          u6195 00B0                                            u5395 018A  
                                          u4915 0013                                            u5715 014D  
                                          u6435 0007                                            u6365 0163  
                                          u6285 0101                                            u5805 0234  
                                          u6445 0049                                            u6550 0099  
                                          u6375 017E                                            u5495 01C8  
                                          u6560 009A                                            u5905 02A1  
                                          u5825 023F                                            u4961 0045  
                                          u4962 0046                                            u5915 02B9  
                                          u5755 01D9                                            u4963 004B  
                                          u4964 004C                                            u5685 00F8  
                                          u4981 006B                                            u4965 0051  
                                          u6485 0066                                            u6805 012C  
                                          u6725 007C                                            u4982 006C  
                                          u4966 0052                                            u5775 01FE  
                                          u4983 0071                                            u4895 0044  
                                          u6815 0151                                            u4984 0072  
                                          u4985 0077                                            u6745 00A5  
                                          u4986 0078                                            u5795 021C  
                                          u6755 00C7                                            u6907 003A  
                                          u5965 0039                                            u6845 0180  
                                          u6917 0048                                            u5895 0283  
                                          u6775 0105                                            u6927 005C  
                                          u6937 0022                                            u5985 0055  
                                          u6785 0117                                            u6947 0031  
                                          u6957 003A                                            u6887 000F  
                                          u6897 0028  updateANDset_ball_position@change_in_x_position 001D  
                  ??_updateANDset_ball_position 001C                         ??_my_setAddrWindow_Hard 000A  
                                          _main 0000                                            _mode 0012  
                                          btemp 007E                                            _sqrt 0000  
                                          exp@x 0013                                            log@x 000B  
updateANDset_ball_position@change_in_y_position 001E                                            pow@x 001E  
                                          pow@y 0022                                            start 0000* 
                               ___fldiv@new_exp 0005                      ??_setAllDisplayPixels_Hard 000C  
                                         ??_exp 000E                                           ??_log 000E  
                                         ??_pow 000E                                   ___fltol@sign1 0008  
                               __end_of___fladd 01FF                                 ??_SPI_MOSI_HIGH 0000  
                                         ?_main 0000                                 __end_of___fldiv 019F  
                               __end_of___flneg 0009                                 __end_of___flmul 02E7  
                               __end_of___flsub 004D                                 __end_of___fltol 0067  
                                         ?_sqrt 0033                               SPI_WRITE16_Hard@w 0001  
                                         _floor 0000                                           _ldexp 0000  
                                         _frexp 0000                                           _errno 0010  
                                         pclath 000A                                     ?_SPI_DC_LOW 0000  
                                         pow@yi 002F                                     ?_SPI_CS_LOW 0000  
                                         sqrt@a 0033                                           sqrt@i 003C  
                                         sqrt@p 0041                                           status 0003  
                                         wtemp0 007E                       _sendCommand_and_8bit_Data 0000  
                                   exp@exponent 001B                                     ldexp@newexp 000F  
                               __initialization 0000                                     log@exponent 000F  
                               ??_spi_send_recv 0000                                    __end_of_main 0094  
                                  __end_of_sqrt 01B8                                _ball_x_direction 0009  
                                  ?_sendCommand 0000                                          ??_main 001F  
                                        ??_sqrt 0037                                _ball_y_direction 0008  
                     setAllDisplayPixels_Hard@x 0000                       setAllDisplayPixels_Hard@y 0002  
                                        ?_floor 004B                                          ?_ldexp 000B  
                                        ?_frexp 0016                                          _TRISB0 0430  
                                        _TRISB1 0431                                          _TRISB2 0432  
                                        _TRISB4 0434                                          _TRISC4 043C  
                                        _TRISC6 043E                                          _TRISC7 043F  
                                        _SSPBUF 0013                                __end_of___xxtofl 00A3  
                              _sendCommand_Hard 0000                         ??_update_ball_direction 0000  
                                        ___flge 0000                                          ___fleq 0000  
                                     ??___fladd 003F                                       ??___fldiv 0008  
                                     ??___flneg 0004                                       ??___flmul 0025  
                                     ??___flsub 000E                                       ??___fltol 0004  
                              _ball_x_positions 0003             sendCommand_and_8bit_Data@first_byte 0003  
                                        floor@i 0000                                          floor@x 004B  
                                  ?_SPI_DC_HIGH 0000                                __end_of_my_floor 0015  
                              _ball_y_positions 0000                       drawFastHLine_Hard@start_x 0006  
                              __end_of_spiWrite 0028                         ??_setDisplayFillingMode 0005  
                                  ?_SPI_CS_HIGH 0000                                    ?_SPI_SCK_LOW 0000  
            __end_of_updateANDset_ball_position 0059                      _updateANDset_ball_position 0000  
                                    ___flge@ff1 0000                                      ___flge@ff2 0004  
                                  ___xxtofl@arg 0006                                __end_ofexp@coeff 002E  
                                  ___xxtofl@exp 0005                                    ___xxtofl@val 000A  
                                    ___fleq@ff1 000A                                      ___fleq@ff2 000E  
                              __end_oflog@coeff 0052                         __end_of__initialization 0011  
                                    ___flneg@f1 0000                                    eval_poly@res 0007  
                                    ___fltol@f1 0000                               _init_Softwear_SPI 0000  
                                __pcstackCOMMON 0000                                    __pidataBANK2 0000  
                            ?_init_Softwear_SPI 0000                __end_of_setAllDisplayPixels_Hard 004C  
                                 __end_of_floor 00CB                                   __end_of_ldexp 00B4  
                                 __end_of_frexp 0058                             ??_init_Softwear_SPI 0000  
                   setDisplayFillingMode@madctl 0008                                         ??_floor 000E  
                                       ??_ldexp 0011                                         ??_frexp 001B  
                                    __pbssBANK2 0000                       __end_of_init_Softwear_SPI 0040  
                 __end_of_my_setAddrWindow_Hard 001C                               __end_of__Umul8_16 0023  
                                    __pmaintext 0000                                         ?___flge 0000  
                   sendCommand_Hard@commandByte 0001                                         ?___fleq 000A  
                            _vector_length$1244 0008                              _vector_length$1245 000C  
                                     ?___xxtofl 000A                                      __stringtab 0000  
                                  ??_SPI_DC_LOW 0000                                    ??_SPI_CS_LOW 0000  
                         __end_of_vector_length 00F7                                       ?_my_floor 000A  
                                     ?_spiWrite 0000                         drawFastHLine_Hard@color 000C  
                                       ___fladd 0000                                         ___fldiv 0000  
                                       ___flneg 0000                                         ___flmul 0000  
                                       ___flsub 0000                                         ___fltol 0000  
                             __end_of_eval_poly 00CD               __end_of_sendCommand_and_8bit_Data 0015  
                                       __ptext1 0000                                         __ptext2 0000  
                                       __ptext3 0000                                         __ptext4 0000  
                                       __ptext5 0000                                         __ptext6 0000  
                                       __ptext7 0000                                         __ptext8 0000  
                                       __ptext9 0000            drawFastHLine_Hard@x_colum_horizontal 0004  
                            __end_of_SPI_DC_LOW 0004                        __end_of_sendCommand_Hard 0011  
                            __end_of_SPI_CS_LOW 0004                           __end_of_SPI_MOSI_HIGH 0004  
                                    ??___xxtofl 0000                   setAllDisplayPixels_Hard@color 000A  
                      SPI_WRITE16_Hard@second_B 0004                                         clrloop0 0001  
                     ?_setAllDisplayPixels_Hard 000A                            end_of_initialization 0011  
                                       exp@sign 001D                                _SPI_WRITE16_Hard 0000  
                             _writeCommand_Hard 0000                              ?_writeCommand_Hard 0000  
                                   normalized@x 0010                                     normalized@y 0014  
                                       pow@sign 002E                                      ??_my_floor 000E  
                                    ??_spiWrite 0000                   __end_of_update_ball_direction 0015  
                                    _normalized 0000                             ??_writeCommand_Hard 0001  
                                       sqrt@grs 0042                                         sqrt@exp 0046  
                         __end_of_spi_send_recv 000A                                   ?_SPI_SCK_HIGH 0000  
                                 ?_SPI_MOSI_LOW 0000                                     ___fladd@grs 004A  
                                 ___xxtofl@sign 0004                                     ___fldiv@grs 0007  
                                   ___fldiv@rem 0000                   __end_of_setDisplayFillingMode 0037  
                                   spiWrite@bit 0001                       __end_of_writeCommand_Hard 000B  
                   ?_updateANDset_ball_position 0000                                     ___flmul@grs 002C  
                  my_setAddrWindow_Hard@x_start 0002                    my_setAddrWindow_Hard@y_start 0004  
                                ??_SPI_SCK_HIGH 0000                                  __end_of___flge 0093  
                                __end_of___fleq 004A                                  ??_SPI_MOSI_LOW 0000  
                                    floor@expon 0004                             start_initialization 0000  
                                    eval_poly@d 0004                                      eval_poly@n 0005  
                                    eval_poly@x 0000                                      ldexp@value 000B  
                                   __end_of_exp 01DC                                     __end_of_log 013F  
                                   __end_of_pow 0197                                      frexp@value 0016  
                                      ??___flge 0008                                        ??___fleq 0012  
                               _ball_x_position 0007                                     ?_normalized 0010  
                                    init_fetch0 0000                                       __Umul8_16 0000  
                                   __pdataBANK2 0000                      __end_of_drawFastHLine_Hard 004D  
                               _ball_y_position 0006                                       ___fladd@a 003B  
                                     ___fladd@b 0037                                       ___fldiv@a 0000  
                                     ___fldiv@b 0004                                       ___flmul@a 0021  
                                     ___flmul@b 001D                                       ___flsub@a 0000  
                                     ___flsub@b 0004                                       ___latbits 0001  
                                 __pcstackBANK0 0000                                   __pcstackBANK1 0000  
                                 __pcstackBANK2 0000                   my_setAddrWindow_Hard@x_finish 0006  
                 my_setAddrWindow_Hard@y_finish 0008                               spi_send_recv@data 0000  
                         _my_setAddrWindow_Hard 0000                                        ?___fladd 0037  
                                      ?___fldiv 0000                                        ?___flneg 0000  
                                      ?___flmul 001D                                        ?___flsub 0000  
                                      ?___fltol 0000                                      ?__Umul8_16 0000  
                                 ??_sendCommand 0003                        __end_of_SPI_WRITE16_Hard 000C  
                                     __pstrings 0000                               _init_Hardwear_SPI 0000  
                             ?_sendCommand_Hard 0000                                       _eval_poly 0000  
                            ?_init_Hardwear_SPI 0000                              ??_sendCommand_Hard 0001  
                       SPI_WRITE16_Hard@first_B 0003                            __end_of_SPI_SCK_HIGH 0004  
                           ??_init_Hardwear_SPI 0000                            __end_of_SPI_MOSI_LOW 0004  
                                     clear_ram0 0000                       __end_of_init_Hardwear_SPI 000F  
                                   __stringbase 0005                      ?_sendCommand_and_8bit_Data 0003  
                                 ??_SPI_DC_HIGH 0000                                      ?_eval_poly 0000  
                           __end_of_sendCommand 0011                                   ??_SPI_CS_HIGH 0000  
                                 ??_SPI_SCK_LOW 0000                            writeCommand_Hard@cmd 0001  
                              normalized@length 0018                                       frexp@eptr 001A  
                                 _normalized_dx 0004                                   _normalized_dy 0000  
                        ?_my_setAddrWindow_Hard 0002                            drawFastHLine_Hard@x2 0003  
                                   ??__Umul8_16 0002                        drawFastHLine_Hard@length 000A  
                         _update_ball_direction 0000                              __end_of__stringtab 0006  
                                      _exp$1248 0017                                        ___xxtofl 0000  
                      _setAllDisplayPixels_Hard 0000                                        __ptext10 0000  
                                      __ptext11 0000                                        __ptext20 0000  
                                      __ptext12 0000                                        __ptext21 0000  
                                      __ptext13 0000                                        __ptext30 0000  
                                      __ptext22 0000                                        __ptext14 0000  
                                      __ptext31 0000                                        __ptext23 0000  
                                      __ptext15 0000                                        __ptext40 0000  
                                      __ptext32 0000                                        __ptext24 0000  
                                      __ptext16 0000                                        __ptext41 0000  
                                      __ptext33 0000                                        __ptext25 0000  
                                      __ptext17 0000                                        __ptext42 0000  
                                      __ptext34 0000                                        __ptext26 0000  
                                      __ptext18 0000                                        __ptext43 0000  
                                      __ptext35 0000                                        __ptext27 0000  
                                      __ptext19 0000                                        __ptext44 0000  
                                      __ptext36 0000                                        __ptext28 0000  
                                      __ptext37 0000                                        __ptext29 0000  
                                      __ptext38 0000                                        __ptext39 0000  
                           __end_of_SPI_DC_HIGH 0004                                        _pow$1246 0026  
                                      _pow$1247 002A                           _setDisplayFillingMode 0000  
                           __end_of_SPI_CS_HIGH 0004                                   _vector_length 0000  
                           __end_of_SPI_SCK_LOW 0004                                       my_floor@f 000A  
                                     my_floor@n 0000                                        _my_floor 0000  
                                      _spiWrite 0000                                    ??_normalized 000E  
                                     spiWrite@b 0000                                     _sendCommand 0000  
                                      exp@coeff 0006                                        log@coeff 002E  
                                   ??_eval_poly 004B                                   _SPI_MOSI_HIGH 0000  
                                      init_ram0 0004                              _drawFastHLine_Hard 0000  
                                     sqrt@tfrac 003D                              __end_of_normalized 0059  
                                ?_vector_length 0000                             ?_drawFastHLine_Hard 000A  
                                     stringcode 0000                          ?_update_ball_direction 0000  
                                  _SPI_SCK_HIGH 0000                                   _spi_send_recv 0000  
                                  _SPI_MOSI_LOW 0000                               ?_SPI_WRITE16_Hard 0001  
                          ??_drawFastHLine_Hard 0000                                        sqrt@frac 004C  
                                      sqrt@sign 003B                                        sqrt@root 0048  
                        __Umul8_16@multiplicand 0000                              ??_SPI_WRITE16_Hard 0003  
                                ?_SPI_MOSI_HIGH 0000                                     _SPI_DC_HIGH 0000  
                                vector_length@x 0000                                  vector_length@y 0004  
                                      stringdir 0000                                        stringtab 0000  
          sendCommand_and_8bit_Data@commandByte 0004                                     _SPI_CS_HIGH 0000  
                                 ___fladd@signs 0047                                     _SPI_SCK_LOW 0000  
                        ?_setDisplayFillingMode 0000                                      _SPI_DC_LOW 0000  
                                    _SPI_CS_LOW 0000                                    ___fladd@aexp 0048  
                                  ___fladd@bexp 0049                            __Umul8_16@multiplier 0008  
                                    _SSPCONbits 0014                               __Umul8_16@product 0004  
