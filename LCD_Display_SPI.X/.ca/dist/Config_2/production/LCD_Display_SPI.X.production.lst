

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Feb 27 17:55:13 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	16F913
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.40
    65                           ; Generated 17/11/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F913 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  0105                     	;# 
   155  0107                     	;# 
   156  0108                     	;# 
   157  0109                     	;# 
   158  010C                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0110                     	;# 
   165  0111                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0116                     	;# 
   169  0117                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011C                     	;# 
   173  011D                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0110                     	;# 
   242  0111                     	;# 
   243  0113                     	;# 
   244  0114                     	;# 
   245  0116                     	;# 
   246  0117                     	;# 
   247  0119                     	;# 
   248  011A                     	;# 
   249  011C                     	;# 
   250  011D                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253                           
   254                           	psect	idataBANK2
   255  0000'                    __pidataBANK2:
   256                           
   257                           ;initializer for _ball_y_positions
   258  0000' 3404               	retlw	4
   259  0001' 3405               	retlw	5
   260  0002' 3406               	retlw	6
   261                           
   262                           ;initializer for _ball_x_positions
   263  0003' 343B               	retlw	59
   264  0004' 343C               	retlw	60
   265  0005' 343D               	retlw	61
   266                           
   267                           ;initializer for _ball_y_position
   268  0006' 3405               	retlw	5
   269                           
   270                           ;initializer for _ball_x_position
   271  0007' 343C               	retlw	60
   272                           
   273                           ;initializer for _ball_y_direction
   274  0008' 34FF               	retlw	255
   275                           
   276                           ;initializer for _ball_x_direction
   277  0009' 3401               	retlw	1
   278                           
   279                           	psect	strings
   280  0000'                    __pstrings:
   281  0000'                    stringtab:
   282  0000'                    __stringtab:
   283  0000'                    stringcode:	
   284                           ;	String table - string pointers are 1 byte each
   285                           
   286  0000'                    stringdir:
   287  0000' 3000'              	movlw	high stringdir
   288  0001' 008A               	movwf	10
   289  0002' 0804               	movf	4,w
   290  0003' 0A84               	incf	4,f
   291  0004' 0782               	addwf	2,f
   292  0005'                    __stringbase:
   293  0005' 3400               	retlw	0
   294  0006'                    __end_of__stringtab:
   295  0006'                    exp@coeff:
   296  0006' 3400               	retlw	0
   297  0007' 3400               	retlw	0
   298  0008' 3480               	retlw	128
   299  0009' 343F               	retlw	63
   300  000A' 3418               	retlw	24
   301  000B' 3472               	retlw	114
   302  000C' 3431               	retlw	49
   303  000D' 343F               	retlw	63
   304  000E' 34F0               	retlw	240
   305  000F' 34FD               	retlw	253
   306  0010' 3475               	retlw	117
   307  0011' 343E               	retlw	62
   308  0012' 3447               	retlw	71
   309  0013' 3458               	retlw	88
   310  0014' 3463               	retlw	99
   311  0015' 343D               	retlw	61
   312  0016' 3458               	retlw	88
   313  0017' 3495               	retlw	149
   314  0018' 341D               	retlw	29
   315  0019' 343C               	retlw	60
   316  001A' 3482               	retlw	130
   317  001B' 34C4               	retlw	196
   318  001C' 34AE               	retlw	174
   319  001D' 343A               	retlw	58
   320  001E' 34A8               	retlw	168
   321  001F' 3478               	retlw	120
   322  0020' 3421               	retlw	33
   323  0021' 3439               	retlw	57
   324  0022' 34EF               	retlw	239
   325  0023' 3493               	retlw	147
   326  0024' 3480               	retlw	128
   327  0025' 3437               	retlw	55
   328  0026' 34A0               	retlw	160
   329  0027' 3492               	retlw	146
   330  0028' 34A7               	retlw	167
   331  0029' 3435               	retlw	53
   332  002A' 3446               	retlw	70
   333  002B' 3456               	retlw	86
   334  002C' 3415               	retlw	21
   335  002D' 3434               	retlw	52
   336  002E'                    __end_ofexp@coeff:
   337  002E'                    log@coeff:
   338  002E' 3400               	retlw	0
   339  002F' 3400               	retlw	0
   340  0030' 3400               	retlw	0
   341  0031' 3400               	retlw	0
   342  0032' 34C4               	retlw	196
   343  0033' 34FF               	retlw	255
   344  0034' 347F               	retlw	127
   345  0035' 343F               	retlw	63
   346  0036' 3480               	retlw	128
   347  0037' 34EF               	retlw	239
   348  0038' 34FF               	retlw	255
   349  0039' 34BE               	retlw	190
   350  003A' 3490               	retlw	144
   351  003B' 34E1               	retlw	225
   352  003C' 34A9               	retlw	169
   353  003D' 343E               	retlw	62
   354  003E' 34EC               	retlw	236
   355  003F' 3482               	retlw	130
   356  0040' 3476               	retlw	118
   357  0041' 34BE               	retlw	190
   358  0042' 3482               	retlw	130
   359  0043' 34AD               	retlw	173
   360  0044' 342B               	retlw	43
   361  0045' 343E               	retlw	62
   362  0046' 340E               	retlw	14
   363  0047' 343C               	retlw	60
   364  0048' 34C3               	retlw	195
   365  0049' 34BD               	retlw	189
   366  004A' 3487               	retlw	135
   367  004B' 34D1               	retlw	209
   368  004C' 3413               	retlw	19
   369  004D' 343D               	retlw	61
   370  004E' 3441               	retlw	65
   371  004F' 3478               	retlw	120
   372  0050' 34D3               	retlw	211
   373  0051' 34BB               	retlw	187
   374  0052'                    __end_oflog@coeff:
   375  0013                     _SSPBUF	set	19
   376  0014                     _SSPCONbits	set	20
   377  003F                     _RC7	set	63
   378  0034                     _RB4	set	52
   379  0031                     _RB1	set	49
   380  003E                     _RC6	set	62
   381  003C                     _RC4	set	60
   382  0032                     _RB2	set	50
   383  0030                     _RB0	set	48
   384  0094                     _SSPSTATbits	set	148
   385  043F                     _TRISC7	set	1087
   386  0434                     _TRISB4	set	1076
   387  0431                     _TRISB1	set	1073
   388  043C                     _TRISC4	set	1084
   389  043E                     _TRISC6	set	1086
   390  0432                     _TRISB2	set	1074
   391  0430                     _TRISB0	set	1072
   392                           
   393                           	psect	cinit
   394  0000'                    start_initialization:	
   395                           ; #config settings
   396                           
   397  0000'                    __initialization:
   398                           
   399                           ; Initialize objects allocated to BANK2
   400  0000' 1783               	bsf	3,7	;select IRP bank2
   401  0001' 3000'              	movlw	low (__pdataBANK2+10)
   402  0002' 00FD               	movwf	btemp+-1
   403  0003' 3000'              	movlw	high __pidataBANK2
   404  0004' 00FE               	movwf	btemp
   405  0005' 3000'              	movlw	low __pidataBANK2
   406  0006' 00FF               	movwf	btemp+1
   407  0007' 3000'              	movlw	low __pdataBANK2
   408  0008' 0084               	movwf	4
   409  0009' 118A' 2000' 118A'  	fcall	init_ram0
   410                           
   411                           ; Clear objects allocated to BANK2
   412  000C' 3000'              	movlw	low __pbssBANK2
   413  000D' 0084               	movwf	4
   414  000E' 3000'              	movlw	low (__pbssBANK2+19)
   415  000F' 118A' 2000'        	fcall	clear_ram0
   416  0011'                    end_of_initialization:	
   417                           ;End of C runtime variable initialization code
   418                           
   419  0011'                    __end_of__initialization:
   420  0011' 0183               	clrf	3
   421  0012' 118A' 2800'        	ljmp	_main	;jump to C main() function
   422                           
   423                           	psect	bssBANK2
   424  0000'                    __pbssBANK2:
   425  0000'                    _normalized_dy:
   426  0000'                    	ds	4
   427  0004'                    _normalized_dx:
   428  0004'                    	ds	4
   429  0008'                    _dy:
   430  0008'                    	ds	4
   431  000C'                    _dx:
   432  000C'                    	ds	4
   433  0010'                    _errno:
   434  0010'                    	ds	2
   435  0012'                    _mode:
   436  0012'                    	ds	1
   437                           
   438                           	psect	dataBANK2
   439  0000'                    __pdataBANK2:
   440  0000'                    _ball_y_positions:
   441  0000'                    	ds	3
   442  0003'                    _ball_x_positions:
   443  0003'                    	ds	3
   444  0006'                    _ball_y_position:
   445  0006'                    	ds	1
   446  0007'                    _ball_x_position:
   447  0007'                    	ds	1
   448  0008'                    _ball_y_direction:
   449  0008'                    	ds	1
   450  0009'                    _ball_x_direction:
   451  0009'                    	ds	1
   452                           
   453                           	psect	inittext
   454  0000'                    init_fetch0:	
   455                           ;	Called with low address in FSR and high address in W
   456                           
   457  0000' 087E               	movf	126,w
   458  0001' 008A               	movwf	10
   459  0002' 087F               	movf	127,w
   460  0003' 0082               	movwf	2
   461  0004'                    init_ram0:	
   462                           ;Called with:
   463                           ;	high address of idata address in btemp 
   464                           ;	low address of idata address in btemp+1 
   465                           ;	low address of data in FSR
   466                           ;	high address + 1 of data in btemp-1
   467                           
   468  0004' 2000' 118A'        	fcall	init_fetch0
   469  0006' 0080               	movwf	0
   470  0007' 0A84               	incf	4,f
   471  0008' 0804               	movf	4,w
   472  0009' 067D               	xorwf	125,w
   473  000A' 1903               	btfsc	3,2
   474  000B' 3400               	retlw	0
   475  000C' 0AFF               	incf	127,f
   476  000D' 1903               	btfsc	3,2
   477  000E' 0AFE               	incf	126,f
   478  000F' 2800'              	goto	init_ram0
   479                           
   480                           	psect	clrtext
   481  0000'                    clear_ram0:	
   482                           ;	Called with FSR containing the base address, and
   483                           ;	W with the last address+1
   484                           
   485  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   486  0001'                    clrloop0:
   487  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   488  0002' 0A84               	incf	4,f	;increment pointer
   489  0003' 0604               	xorwf	4,w	;XOR with final address
   490  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   491  0005' 3400               	retlw	0	;all done for this memory range, return
   492  0006' 0604               	xorwf	4,w	;XOR again to restore value
   493  0007' 2800'              	goto	clrloop0	;do the next byte
   494                           
   495                           	psect	cstackBANK2
   496  0000'                    __pcstackBANK2:
   497  0000'                    ?_vector_length:
   498  0000'                    vector_length@x:	
   499                           ; 4 bytes @ 0x0
   500                           
   501                           
   502                           ; 4 bytes @ 0x0
   503  0000'                    	ds	4
   504  0004'                    vector_length@y:
   505                           
   506                           ; 4 bytes @ 0x4
   507  0004'                    	ds	4
   508  0008'                    _vector_length$1244:
   509                           
   510                           ; 4 bytes @ 0x8
   511  0008'                    	ds	4
   512  000C'                    _vector_length$1245:
   513                           
   514                           ; 4 bytes @ 0xC
   515  000C'                    	ds	4
   516  0010'                    ?_normalized:
   517  0010'                    normalized@x:	
   518                           ; 1 bytes @ 0x10
   519                           
   520                           
   521                           ; 4 bytes @ 0x10
   522  0010'                    	ds	4
   523  0014'                    normalized@y:
   524                           
   525                           ; 4 bytes @ 0x14
   526  0014'                    	ds	4
   527  0018'                    normalized@length:
   528                           
   529                           ; 4 bytes @ 0x18
   530  0018'                    	ds	4
   531  001C'                    ??_updateANDset_ball_position:
   532                           
   533                           ; 1 bytes @ 0x1C
   534  001C'                    	ds	1
   535  001D'                    updateANDset_ball_position@change_in_x_position:
   536                           
   537                           ; 1 bytes @ 0x1D
   538  001D'                    	ds	1
   539  001E'                    updateANDset_ball_position@change_in_y_position:
   540                           
   541                           ; 1 bytes @ 0x1E
   542  001E'                    	ds	1
   543  001F'                    ??_main:
   544                           
   545                           ; 1 bytes @ 0x1F
   546  001F'                    	ds	3
   547                           
   548                           	psect	cstackBANK1
   549  0000'                    __pcstackBANK1:
   550  0000'                    ?_eval_poly:
   551  0000'                    ?___flsub:	
   552                           ; 4 bytes @ 0x0
   553                           
   554  0000'                    ___flsub@a:	
   555                           ; 4 bytes @ 0x0
   556                           
   557  0000'                    eval_poly@x:	
   558                           ; 4 bytes @ 0x0
   559                           
   560  0000'                    floor@i:	
   561                           ; 4 bytes @ 0x0
   562                           
   563                           
   564                           ; 4 bytes @ 0x0
   565  0000'                    	ds	4
   566  0004'                    eval_poly@d:
   567  0004'                    floor@expon:	
   568                           ; 1 bytes @ 0x4
   569                           
   570  0004'                    ___flsub@b:	
   571                           ; 2 bytes @ 0x4
   572                           
   573                           
   574                           ; 4 bytes @ 0x4
   575  0004'                    	ds	1
   576  0005'                    eval_poly@n:
   577                           
   578                           ; 2 bytes @ 0x5
   579  0005'                    	ds	2
   580  0007'                    eval_poly@res:
   581                           
   582                           ; 4 bytes @ 0x7
   583  0007'                    	ds	4
   584  000B'                    ?_log:
   585  000B'                    ?_ldexp:	
   586                           ; 4 bytes @ 0xB
   587                           
   588  000B'                    ldexp@value:	
   589                           ; 4 bytes @ 0xB
   590                           
   591  000B'                    log@x:	
   592                           ; 4 bytes @ 0xB
   593                           
   594                           
   595                           ; 4 bytes @ 0xB
   596  000B'                    	ds	4
   597  000F'                    ldexp@newexp:
   598  000F'                    log@exponent:	
   599                           ; 2 bytes @ 0xF
   600                           
   601                           
   602                           ; 2 bytes @ 0xF
   603  000F'                    	ds	2
   604  0011'                    ??_ldexp:
   605                           
   606                           ; 1 bytes @ 0x11
   607  0011'                    	ds	2
   608  0013'                    ?_exp:
   609  0013'                    exp@x:	
   610                           ; 4 bytes @ 0x13
   611                           
   612                           
   613                           ; 4 bytes @ 0x13
   614  0013'                    	ds	4
   615  0017'                    _exp$1248:
   616                           
   617                           ; 4 bytes @ 0x17
   618  0017'                    	ds	4
   619  001B'                    exp@exponent:
   620                           
   621                           ; 2 bytes @ 0x1B
   622  001B'                    	ds	2
   623  001D'                    exp@sign:
   624                           
   625                           ; 1 bytes @ 0x1D
   626  001D'                    	ds	1
   627  001E'                    ?_pow:
   628  001E'                    pow@x:	
   629                           ; 4 bytes @ 0x1E
   630                           
   631                           
   632                           ; 4 bytes @ 0x1E
   633  001E'                    	ds	4
   634  0022'                    pow@y:
   635                           
   636                           ; 4 bytes @ 0x22
   637  0022'                    	ds	4
   638  0026'                    _pow$1246:
   639                           
   640                           ; 4 bytes @ 0x26
   641  0026'                    	ds	4
   642  002A'                    _pow$1247:
   643                           
   644                           ; 4 bytes @ 0x2A
   645  002A'                    	ds	4
   646  002E'                    pow@sign:
   647                           
   648                           ; 1 bytes @ 0x2E
   649  002E'                    	ds	1
   650  002F'                    pow@yi:
   651                           
   652                           ; 4 bytes @ 0x2F
   653  002F'                    	ds	4
   654  0033'                    ?_sqrt:
   655  0033'                    sqrt@a:	
   656                           ; 4 bytes @ 0x33
   657                           
   658                           
   659                           ; 4 bytes @ 0x33
   660  0033'                    	ds	4
   661  0037'                    ??_sqrt:
   662                           
   663                           ; 1 bytes @ 0x37
   664  0037'                    	ds	4
   665  003B'                    sqrt@sign:
   666                           
   667                           ; 1 bytes @ 0x3B
   668  003B'                    	ds	1
   669  003C'                    sqrt@i:
   670                           
   671                           ; 1 bytes @ 0x3C
   672  003C'                    	ds	1
   673  003D'                    sqrt@tfrac:
   674                           
   675                           ; 4 bytes @ 0x3D
   676  003D'                    	ds	4
   677  0041'                    sqrt@p:
   678                           
   679                           ; 1 bytes @ 0x41
   680  0041'                    	ds	1
   681  0042'                    sqrt@grs:
   682                           
   683                           ; 4 bytes @ 0x42
   684  0042'                    	ds	4
   685  0046'                    sqrt@exp:
   686                           
   687                           ; 2 bytes @ 0x46
   688  0046'                    	ds	2
   689  0048'                    sqrt@root:
   690                           
   691                           ; 4 bytes @ 0x48
   692  0048'                    	ds	4
   693  004C'                    sqrt@frac:
   694                           
   695                           ; 4 bytes @ 0x4C
   696  004C'                    	ds	4
   697                           
   698                           	psect	cstackCOMMON
   699  0000'                    __pcstackCOMMON:
   700  0000'                    ?___flge:
   701  0000'                    ?_SPI_CS_LOW:	
   702                           ; 1 bit 
   703                           
   704  0000'                    ??_SPI_CS_LOW:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0000'                    ?_SPI_CS_HIGH:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0000'                    ??_SPI_CS_HIGH:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0000'                    ?_spiWrite:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0000'                    ??_spiWrite:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0000'                    ?_spi_send_recv:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0000'                    ??_spi_send_recv:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0000'                    ?_SPI_DC_LOW:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0000'                    ??_SPI_DC_LOW:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0000'                    ?_SPI_DC_HIGH:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0000'                    ??_SPI_DC_HIGH:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0000'                    ?_SPI_MOSI_LOW:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0000'                    ??_SPI_MOSI_LOW:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0000'                    ?_SPI_MOSI_HIGH:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0000'                    ??_SPI_MOSI_HIGH:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0000'                    ?_SPI_SCK_LOW:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0000'                    ??_SPI_SCK_LOW:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0000'                    ?_SPI_SCK_HIGH:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0000'                    ??_SPI_SCK_HIGH:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0000'                    ?_init_Softwear_SPI:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0000'                    ??_init_Softwear_SPI:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0000'                    ?_sendCommand:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0000'                    ?_setDisplayFillingMode:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0000'                    ?_init_Hardwear_SPI:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0000'                    ??_init_Hardwear_SPI:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0000'                    ?_sendCommand_Hard:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0000'                    ?_writeCommand_Hard:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0000'                    ?_update_ball_direction:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0000'                    ??_update_ball_direction:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0000'                    ?_updateANDset_ball_position:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0000'                    ?_main:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0000'                    ?__Umul8_16:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0000'                    ?___flneg:	
   801                           ; 2 bytes @ 0x0
   802                           
   803  0000'                    ?___fltol:	
   804                           ; 4 bytes @ 0x0
   805                           
   806  0000'                    ?___fldiv:	
   807                           ; 4 bytes @ 0x0
   808                           
   809  0000'                    spiWrite@b:	
   810                           ; 4 bytes @ 0x0
   811                           
   812  0000'                    spi_send_recv@data:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0000'                    __Umul8_16@multiplicand:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0000'                    ___flge@ff1:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0000'                    ___flneg@f1:	
   822                           ; 4 bytes @ 0x0
   823                           
   824  0000'                    ___fltol@f1:	
   825                           ; 4 bytes @ 0x0
   826                           
   827  0000'                    ___fldiv@a:	
   828                           ; 4 bytes @ 0x0
   829                           
   830                           
   831                           ; 4 bytes @ 0x0
   832  0000'                    	ds	1
   833  0001'                    ??_sendCommand_Hard:
   834  0001'                    ??_writeCommand_Hard:	
   835                           ; 1 bytes @ 0x1
   836                           
   837  0001'                    ?_SPI_WRITE16_Hard:	
   838                           ; 1 bytes @ 0x1
   839                           
   840  0001'                    sendCommand_Hard@commandByte:	
   841                           ; 1 bytes @ 0x1
   842                           
   843  0001'                    writeCommand_Hard@cmd:	
   844                           ; 1 bytes @ 0x1
   845                           
   846  0001'                    spiWrite@bit:	
   847                           ; 1 bytes @ 0x1
   848                           
   849  0001'                    SPI_WRITE16_Hard@w:	
   850                           ; 2 bytes @ 0x1
   851                           
   852                           
   853                           ; 2 bytes @ 0x1
   854  0001'                    	ds	1
   855  0002'                    ??__Umul8_16:
   856  0002'                    ?_my_setAddrWindow_Hard:	
   857                           ; 1 bytes @ 0x2
   858                           
   859  0002'                    my_setAddrWindow_Hard@x_start:	
   860                           ; 1 bytes @ 0x2
   861                           
   862                           
   863                           ; 2 bytes @ 0x2
   864  0002'                    	ds	1
   865  0003'                    ??_sendCommand:
   866  0003'                    ?_sendCommand_and_8bit_Data:	
   867                           ; 1 bytes @ 0x3
   868                           
   869  0003'                    ??_SPI_WRITE16_Hard:	
   870                           ; 1 bytes @ 0x3
   871                           
   872  0003'                    sendCommand@commandByte:	
   873                           ; 1 bytes @ 0x3
   874                           
   875  0003'                    sendCommand_and_8bit_Data@first_byte:	
   876                           ; 1 bytes @ 0x3
   877                           
   878  0003'                    SPI_WRITE16_Hard@first_B:	
   879                           ; 1 bytes @ 0x3
   880                           
   881                           
   882                           ; 1 bytes @ 0x3
   883  0003'                    	ds	1
   884  0004'                    ??_sendCommand_and_8bit_Data:
   885  0004'                    ??___flneg:	
   886                           ; 1 bytes @ 0x4
   887                           
   888  0004'                    ??___fltol:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0004'                    sendCommand_and_8bit_Data@commandByte:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0004'                    SPI_WRITE16_Hard@second_B:	
   895                           ; 1 bytes @ 0x4
   896                           
   897  0004'                    my_setAddrWindow_Hard@y_start:	
   898                           ; 1 bytes @ 0x4
   899                           
   900  0004'                    __Umul8_16@product:	
   901                           ; 2 bytes @ 0x4
   902                           
   903  0004'                    ___flge@ff2:	
   904                           ; 2 bytes @ 0x4
   905                           
   906  0004'                    ___fldiv@b:	
   907                           ; 4 bytes @ 0x4
   908                           
   909                           
   910                           ; 4 bytes @ 0x4
   911  0004'                    	ds	1
   912  0005'                    ??_setDisplayFillingMode:
   913                           
   914                           ; 1 bytes @ 0x5
   915  0005'                    	ds	1
   916  0006'                    my_setAddrWindow_Hard@x_finish:
   917  0006'                    __Umul8_16@word_mpld:	
   918                           ; 2 bytes @ 0x6
   919                           
   920                           
   921                           ; 2 bytes @ 0x6
   922  0006'                    	ds	1
   923  0007'                    setDisplayFillingMode@hORv:
   924                           
   925                           ; 1 bytes @ 0x7
   926  0007'                    	ds	1
   927  0008'                    ??___flge:
   928  0008'                    ??___fldiv:	
   929                           ; 1 bytes @ 0x8
   930                           
   931  0008'                    setDisplayFillingMode@madctl:	
   932                           ; 1 bytes @ 0x8
   933                           
   934  0008'                    ___fltol@sign1:	
   935                           ; 1 bytes @ 0x8
   936                           
   937  0008'                    __Umul8_16@multiplier:	
   938                           ; 1 bytes @ 0x8
   939                           
   940  0008'                    my_setAddrWindow_Hard@y_finish:	
   941                           ; 1 bytes @ 0x8
   942                           
   943                           
   944                           ; 2 bytes @ 0x8
   945  0008'                    	ds	1
   946  0009'                    ___fltol@exp1:
   947                           
   948                           ; 1 bytes @ 0x9
   949  0009'                    	ds	1
   950  000A'                    ??_my_setAddrWindow_Hard:
   951  000A'                    ?_setAllDisplayPixels_Hard:	
   952                           ; 1 bytes @ 0xA
   953                           
   954  000A'                    ?_drawFastHLine_Hard:	
   955                           ; 1 bytes @ 0xA
   956                           
   957  000A'                    ?_my_floor:	
   958                           ; 1 bytes @ 0xA
   959                           
   960  000A'                    ?___xxtofl:	
   961                           ; 2 bytes @ 0xA
   962                           
   963  000A'                    drawFastHLine_Hard@length:	
   964                           ; 4 bytes @ 0xA
   965                           
   966  000A'                    setAllDisplayPixels_Hard@color:	
   967                           ; 1 bytes @ 0xA
   968                           
   969  000A'                    my_floor@f:	
   970                           ; 2 bytes @ 0xA
   971                           
   972  000A'                    ___xxtofl@val:	
   973                           ; 4 bytes @ 0xA
   974                           
   975                           
   976                           ; 4 bytes @ 0xA
   977  000A'                    	ds	1
   978  000B'                    drawFastHLine_Hard@in_HLine_y:
   979                           
   980                           ; 1 bytes @ 0xB
   981  000B'                    	ds	1
   982  000C'                    ??_setAllDisplayPixels_Hard:
   983  000C'                    drawFastHLine_Hard@color:	
   984                           ; 1 bytes @ 0xC
   985                           
   986                           
   987                           ; 2 bytes @ 0xC
   988  000C'                    	ds	2
   989  000E'                    ??_pow:
   990  000E'                    ??_exp:	
   991                           ; 1 bytes @ 0xE
   992                           
   993  000E'                    ??_log:	
   994                           ; 1 bytes @ 0xE
   995                           
   996  000E'                    ??_floor:	
   997                           ; 1 bytes @ 0xE
   998                           
   999  000E'                    ??_vector_length:	
  1000                           ; 1 bytes @ 0xE
  1001                           
  1002  000E'                    ??_normalized:	
  1003                           ; 1 bytes @ 0xE
  1004                           
  1005  000E'                    ??_my_floor:	
  1006                           ; 1 bytes @ 0xE
  1007                           
  1008  000E'                    ??___flsub:	
  1009                           ; 1 bytes @ 0xE
  1010                           
  1011                           
  1012                           	psect	cstackBANK0
  1013  0000'                    __pcstackBANK0:	
  1014                           ; 1 bytes @ 0xE
  1015                           
  1016  0000'                    ??_drawFastHLine_Hard:
  1017  0000'                    ??___xxtofl:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0000'                    setAllDisplayPixels_Hard@x:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0000'                    my_floor@n:	
  1024                           ; 2 bytes @ 0x0
  1025                           
  1026  0000'                    ___fldiv@rem:	
  1027                           ; 2 bytes @ 0x0
  1028                           
  1029                           
  1030                           ; 4 bytes @ 0x0
  1031  0000'                    	ds	2
  1032  0002'                    setAllDisplayPixels_Hard@y:
  1033                           
  1034                           ; 2 bytes @ 0x2
  1035  0002'                    	ds	1
  1036  0003'                    drawFastHLine_Hard@x2:
  1037                           
  1038                           ; 1 bytes @ 0x3
  1039  0003'                    	ds	1
  1040  0004'                    ___fldiv@sign:
  1041  0004'                    ___xxtofl@sign:	
  1042                           ; 1 bytes @ 0x4
  1043                           
  1044  0004'                    drawFastHLine_Hard@x_colum_horizontal:	
  1045                           ; 1 bytes @ 0x4
  1046                           
  1047                           
  1048                           ; 2 bytes @ 0x4
  1049  0004'                    	ds	1
  1050  0005'                    ___xxtofl@exp:
  1051  0005'                    ___fldiv@new_exp:	
  1052                           ; 1 bytes @ 0x5
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0x5
  1056  0005'                    	ds	1
  1057  0006'                    drawFastHLine_Hard@start_x:
  1058  0006'                    ___xxtofl@arg:	
  1059                           ; 1 bytes @ 0x6
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x6
  1063  0006'                    	ds	1
  1064  0007'                    ___fldiv@grs:
  1065                           
  1066                           ; 4 bytes @ 0x7
  1067  0007'                    	ds	3
  1068  000A'                    ?___fleq:
  1069  000A'                    ___fleq@ff1:	
  1070                           ; 1 bit 
  1071                           
  1072                           
  1073                           ; 4 bytes @ 0xA
  1074  000A'                    	ds	1
  1075  000B'                    ___fldiv@bexp:
  1076                           
  1077                           ; 1 bytes @ 0xB
  1078  000B'                    	ds	1
  1079  000C'                    ___fldiv@aexp:
  1080                           
  1081                           ; 1 bytes @ 0xC
  1082  000C'                    	ds	2
  1083  000E'                    ___fleq@ff2:
  1084                           
  1085                           ; 4 bytes @ 0xE
  1086  000E'                    	ds	4
  1087  0012'                    ??___fleq:
  1088                           
  1089                           ; 1 bytes @ 0x12
  1090  0012'                    	ds	4
  1091  0016'                    ?_frexp:
  1092  0016'                    frexp@value:	
  1093                           ; 4 bytes @ 0x16
  1094                           
  1095                           
  1096                           ; 4 bytes @ 0x16
  1097  0016'                    	ds	4
  1098  001A'                    frexp@eptr:
  1099                           
  1100                           ; 1 bytes @ 0x1A
  1101  001A'                    	ds	1
  1102  001B'                    ??_frexp:
  1103                           
  1104                           ; 1 bytes @ 0x1B
  1105  001B'                    	ds	2
  1106  001D'                    ?___flmul:
  1107  001D'                    ___flmul@b:	
  1108                           ; 4 bytes @ 0x1D
  1109                           
  1110                           
  1111                           ; 4 bytes @ 0x1D
  1112  001D'                    	ds	4
  1113  0021'                    ___flmul@a:
  1114                           
  1115                           ; 4 bytes @ 0x21
  1116  0021'                    	ds	4
  1117  0025'                    ??___flmul:
  1118                           
  1119                           ; 1 bytes @ 0x25
  1120  0025'                    	ds	5
  1121  002A'                    ___flmul@sign:
  1122                           
  1123                           ; 1 bytes @ 0x2A
  1124  002A'                    	ds	1
  1125  002B'                    ___flmul@aexp:
  1126                           
  1127                           ; 1 bytes @ 0x2B
  1128  002B'                    	ds	1
  1129  002C'                    ___flmul@bexp:
  1130                           
  1131                           ; 1 bytes @ 0x2C
  1132  002C'                    	ds	1
  1133  002D'                    ___flmul@grs:
  1134                           
  1135                           ; 4 bytes @ 0x2D
  1136  002D'                    	ds	4
  1137  0031'                    ___flmul@prod:
  1138                           
  1139                           ; 4 bytes @ 0x31
  1140  0031'                    	ds	4
  1141  0035'                    ___flmul@temp:
  1142                           
  1143                           ; 2 bytes @ 0x35
  1144  0035'                    	ds	2
  1145  0037'                    ?___fladd:
  1146  0037'                    ___fladd@b:	
  1147                           ; 4 bytes @ 0x37
  1148                           
  1149                           
  1150                           ; 4 bytes @ 0x37
  1151  0037'                    	ds	4
  1152  003B'                    ___fladd@a:
  1153                           
  1154                           ; 4 bytes @ 0x3B
  1155  003B'                    	ds	4
  1156  003F'                    ??___fladd:
  1157                           
  1158                           ; 1 bytes @ 0x3F
  1159  003F'                    	ds	8
  1160  0047'                    ___fladd@signs:
  1161                           
  1162                           ; 1 bytes @ 0x47
  1163  0047'                    	ds	1
  1164  0048'                    ___fladd@aexp:
  1165                           
  1166                           ; 1 bytes @ 0x48
  1167  0048'                    	ds	1
  1168  0049'                    ___fladd@bexp:
  1169                           
  1170                           ; 1 bytes @ 0x49
  1171  0049'                    	ds	1
  1172  004A'                    ___fladd@grs:
  1173                           
  1174                           ; 1 bytes @ 0x4A
  1175  004A'                    	ds	1
  1176  004B'                    ??_eval_poly:
  1177  004B'                    ?_floor:	
  1178                           ; 1 bytes @ 0x4B
  1179                           
  1180  004B'                    floor@x:	
  1181                           ; 4 bytes @ 0x4B
  1182                           
  1183                           
  1184                           ; 4 bytes @ 0x4B
  1185  004B'                    	ds	5
  1186                           
  1187                           	psect	maintext
  1188  0000'                    __pmaintext:	
  1189 ;;
  1190 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1191 ;;
  1192 ;; *************** function _main *****************
  1193 ;; Defined at:
  1194 ;;		line 856 in file "main.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;		None
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : B00/0
  1205 ;;		On exit  : 300/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1208 ;;      Params:         0       0       0       0
  1209 ;;      Locals:         0       0       0       0
  1210 ;;      Temps:          0       0       0       3
  1211 ;;      Totals:         0       0       0       3
  1212 ;;Total ram usage:        3 bytes
  1213 ;; Hardware stack levels required when called: 8
  1214 ;; This function calls:
  1215 ;;		_drawFastHLine_Hard
  1216 ;;		_init_Hardwear_SPI
  1217 ;;		_init_Softwear_SPI
  1218 ;;		_sendCommand
  1219 ;;		_sendCommand_Hard
  1220 ;;		_setAllDisplayPixels_Hard
  1221 ;;		_setDisplayFillingMode
  1222 ;;		_updateANDset_ball_position
  1223 ;;		_update_ball_direction
  1224 ;; This function is called by:
  1225 ;;		Startup code after reset
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229  0000'                    _main:	
  1230                           ;psect for function _main
  1231                           
  1232                           
  1233                           ;main.c: 857:     init_Softwear_SPI();
  1234                           
  1235                           ;incstack = 0
  1236                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1237  0000' 118A' 2000' 118A'  	fcall	_init_Softwear_SPI
  1238                           
  1239                           ;main.c: 858:     sendCommand(0xAF);
  1240  0003' 30AF               	movlw	175
  1241  0004' 118A' 2000' 118A'  	fcall	_sendCommand
  1242                           
  1243                           ;main.c: 860:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1244  0007' 301A               	movlw	26
  1245  0008' 1283               	bcf	3,5	;RP0=0, select bank2
  1246  0009' 1703               	bsf	3,6	;RP1=1, select bank2
  1247  000A' 0082'              	movwf	(??_main^(0+256)+2)
  1248  000B' 305E               	movlw	94
  1249  000C' 0081'              	movwf	(??_main^(0+256)+1)
  1250  000D' 306E               	movlw	110
  1251  000E' 0080'              	movwf	??_main^(0+256)
  1252  000F'                    u6217:
  1253  000F' 0B80'              	decfsz	??_main^(0+256),f
  1254  0010' 2800'              	goto	u6217
  1255  0011' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1256  0012' 2800'              	goto	u6217
  1257  0013' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1258  0014' 2800'              	goto	u6217
  1259                           
  1260                           ;main.c: 861:     setDisplayFillingMode(1);
  1261  0015' 3001               	movlw	1
  1262  0016' 118A' 2000' 118A'  	fcall	_setDisplayFillingMode
  1263                           
  1264                           ;main.c: 871:     init_Hardwear_SPI();
  1265  0019' 118A' 2000' 118A'  	fcall	_init_Hardwear_SPI
  1266                           
  1267                           ;main.c: 872:     sendCommand_Hard(0xAE);
  1268  001C' 30AE               	movlw	174
  1269  001D' 118A' 2000' 118A'  	fcall	_sendCommand_Hard
  1270                           
  1271                           ;main.c: 873:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1272  0020' 300D               	movlw	13
  1273  0021' 1283               	bcf	3,5	;RP0=0, select bank2
  1274  0022' 1703               	bsf	3,6	;RP1=1, select bank2
  1275  0023' 0082'              	movwf	(??_main^(0+256)+2)
  1276  0024' 30AF               	movlw	175
  1277  0025' 0081'              	movwf	(??_main^(0+256)+1)
  1278  0026' 30B6               	movlw	182
  1279  0027' 0080'              	movwf	??_main^(0+256)
  1280  0028'                    u6227:
  1281  0028' 0B80'              	decfsz	??_main^(0+256),f
  1282  0029' 2800'              	goto	u6227
  1283  002A' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1284  002B' 2800'              	goto	u6227
  1285  002C' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1286  002D' 2800'              	goto	u6227
  1287                           
  1288                           ;main.c: 874:     sendCommand_Hard(0xAF);
  1289  002E' 30AF               	movlw	175
  1290  002F' 118A' 2000' 118A'  	fcall	_sendCommand_Hard
  1291                           
  1292                           ;main.c: 875:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1293  0032' 300D               	movlw	13
  1294  0033' 1283               	bcf	3,5	;RP0=0, select bank2
  1295  0034' 1703               	bsf	3,6	;RP1=1, select bank2
  1296  0035' 0082'              	movwf	(??_main^(0+256)+2)
  1297  0036' 30AF               	movlw	175
  1298  0037' 0081'              	movwf	(??_main^(0+256)+1)
  1299  0038' 30B6               	movlw	182
  1300  0039' 0080'              	movwf	??_main^(0+256)
  1301  003A'                    u6237:
  1302  003A' 0B80'              	decfsz	??_main^(0+256),f
  1303  003B' 2800'              	goto	u6237
  1304  003C' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1305  003D' 2800'              	goto	u6237
  1306  003E' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1307  003F' 2800'              	goto	u6237
  1308                           
  1309                           ;main.c: 902:     _delay((unsigned long)((500)*(20000000/4000.0)));
  1310  0040' 300D               	movlw	13
  1311  0041' 1283               	bcf	3,5	;RP0=0, select bank2
  1312  0042' 1703               	bsf	3,6	;RP1=1, select bank2
  1313  0043' 0082'              	movwf	(??_main^(0+256)+2)
  1314  0044' 30AF               	movlw	175
  1315  0045' 0081'              	movwf	(??_main^(0+256)+1)
  1316  0046' 30B6               	movlw	182
  1317  0047' 0080'              	movwf	??_main^(0+256)
  1318  0048'                    u6247:
  1319  0048' 0B80'              	decfsz	??_main^(0+256),f
  1320  0049' 2800'              	goto	u6247
  1321  004A' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1322  004B' 2800'              	goto	u6247
  1323  004C' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1324  004D' 2800'              	goto	u6247
  1325                           
  1326                           ;main.c: 903:     setAllDisplayPixels_Hard(0x0000);
  1327  004E' 3000               	movlw	0
  1328  004F' 008A'              	movwf	setAllDisplayPixels_Hard@color
  1329  0050' 008B'              	movwf	setAllDisplayPixels_Hard@color+1
  1330  0051' 118A' 2000' 118A'  	fcall	_setAllDisplayPixels_Hard
  1331  0054'                    l4355:
  1332                           
  1333                           ;main.c: 906:         _delay((unsigned long)((100)*(20000000/4000.0)));
  1334  0054' 3003               	movlw	3
  1335  0055' 1283               	bcf	3,5	;RP0=0, select bank2
  1336  0056' 1703               	bsf	3,6	;RP1=1, select bank2
  1337  0057' 0082'              	movwf	(??_main^(0+256)+2)
  1338  0058' 308A               	movlw	138
  1339  0059' 0081'              	movwf	(??_main^(0+256)+1)
  1340  005A' 3055               	movlw	85
  1341  005B' 0080'              	movwf	??_main^(0+256)
  1342  005C'                    u6257:
  1343  005C' 0B80'              	decfsz	??_main^(0+256),f
  1344  005D' 2800'              	goto	u6257
  1345  005E' 0B81'              	decfsz	(??_main^(0+256)+1),f
  1346  005F' 2800'              	goto	u6257
  1347  0060' 0B82'              	decfsz	(??_main^(0+256)+2),f
  1348  0061' 2800'              	goto	u6257
  1349  0062' 0000               	nop
  1350                           
  1351                           ;main.c: 907:         update_ball_direction();
  1352  0063' 118A' 2000' 118A'  	fcall	_update_ball_direction
  1353                           
  1354                           ;main.c: 908:         updateANDset_ball_position();
  1355  0066' 118A' 2000' 118A'  	fcall	_updateANDset_ball_position
  1356                           
  1357                           ;main.c: 910:         drawFastHLine_Hard(ball_x_positions[1], 3, ball_y_positions[0], 0x
      +                          F800);
  1358  0069' 3003               	movlw	3
  1359  006A' 008A'              	movwf	drawFastHLine_Hard@length
  1360  006B' 0800'              	movf	_ball_y_positions^(0+256),w
  1361  006C' 008B'              	movwf	drawFastHLine_Hard@in_HLine_y
  1362  006D' 3000               	movlw	0
  1363  006E' 008C'              	movwf	drawFastHLine_Hard@color
  1364  006F' 30F8               	movlw	248
  1365  0070' 008D'              	movwf	drawFastHLine_Hard@color+1
  1366  0071' 0801'              	movf	(_ball_x_positions^(0+256)+1),w
  1367  0072' 118A' 2000' 118A'  	fcall	_drawFastHLine_Hard
  1368                           
  1369                           ;main.c: 911:         drawFastHLine_Hard(ball_x_positions[1], 3, ball_y_positions[1], 0x
      +                          F800);
  1370  0075' 3003               	movlw	3
  1371  0076' 008A'              	movwf	drawFastHLine_Hard@length
  1372  0077' 1703               	bsf	3,6	;RP1=1, select bank2
  1373  0078' 0801'              	movf	(_ball_y_positions^(0+256)+1),w
  1374  0079' 008B'              	movwf	drawFastHLine_Hard@in_HLine_y
  1375  007A' 3000               	movlw	0
  1376  007B' 008C'              	movwf	drawFastHLine_Hard@color
  1377  007C' 30F8               	movlw	248
  1378  007D' 008D'              	movwf	drawFastHLine_Hard@color+1
  1379  007E' 0801'              	movf	(_ball_x_positions^(0+256)+1),w
  1380  007F' 118A' 2000' 118A'  	fcall	_drawFastHLine_Hard
  1381                           
  1382                           ;main.c: 912:         drawFastHLine_Hard(ball_x_positions[1], 3, ball_y_positions[2], 0x
      +                          F800);
  1383  0082' 3003               	movlw	3
  1384  0083' 008A'              	movwf	drawFastHLine_Hard@length
  1385  0084' 1703               	bsf	3,6	;RP1=1, select bank2
  1386  0085' 0802'              	movf	(_ball_y_positions^(0+256)+2),w
  1387  0086' 008B'              	movwf	drawFastHLine_Hard@in_HLine_y
  1388  0087' 3000               	movlw	0
  1389  0088' 008C'              	movwf	drawFastHLine_Hard@color
  1390  0089' 30F8               	movlw	248
  1391  008A' 008D'              	movwf	drawFastHLine_Hard@color+1
  1392  008B' 0801'              	movf	(_ball_x_positions^(0+256)+1),w
  1393  008C' 118A' 2000' 118A'  	fcall	_drawFastHLine_Hard
  1394  008F' 2800'              	goto	l4355
  1395  0090'                    __end_of_main:
  1396                           
  1397                           	psect	text1
  1398  0000'                    __ptext1:	
  1399 ;; *************** function _updateANDset_ball_position *****************
  1400 ;; Defined at:
  1401 ;;		line 814 in file "main.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  change_in_y_    1   30[BANK2 ] unsigned char 
  1406 ;;  change_in_x_    1   29[BANK2 ] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 300/200
  1413 ;;		On exit  : 300/200
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1416 ;;      Params:         0       0       0       0
  1417 ;;      Locals:         0       0       0       2
  1418 ;;      Temps:          0       0       0       1
  1419 ;;      Totals:         0       0       0       3
  1420 ;;Total ram usage:        3 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 7
  1423 ;; This function calls:
  1424 ;;		_my_floor
  1425 ;;		_normalized
  1426 ;;		_update_ball_direction
  1427 ;; This function is called by:
  1428 ;;		_main
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432  0000'                    _updateANDset_ball_position:	
  1433                           ;psect for function _updateANDset_ball_position
  1434                           
  1435                           
  1436                           ;main.c: 816:     update_ball_direction();
  1437                           
  1438                           ;incstack = 0
  1439                           ; Regs used in _updateANDset_ball_position: [wreg-fsr0h+status,2+status,0+btemp+1+pclath
      +                          +cstack]
  1440  0000' 118A' 2000' 118A'  	fcall	_update_ball_direction
  1441                           
  1442                           ;main.c: 819:     normalized(dx, dy);
  1443  0003' 3000               	movlw	0
  1444  0004' 0080'              	movwf	(normalized@x+3)^(0+256)
  1445  0005' 3000               	movlw	0
  1446  0006' 0080'              	movwf	(normalized@x+2)^(0+256)
  1447  0007' 3000               	movlw	0
  1448  0008' 0080'              	movwf	(normalized@x+1)^(0+256)
  1449  0009' 3000               	movlw	0
  1450  000A' 0080'              	movwf	normalized@x^(0+256)
  1451  000B' 3000               	movlw	0
  1452  000C' 0080'              	movwf	(normalized@y+3)^(0+256)
  1453  000D' 3000               	movlw	0
  1454  000E' 0080'              	movwf	(normalized@y+2)^(0+256)
  1455  000F' 3000               	movlw	0
  1456  0010' 0080'              	movwf	(normalized@y+1)^(0+256)
  1457  0011' 3000               	movlw	0
  1458  0012' 0080'              	movwf	normalized@y^(0+256)
  1459  0013' 118A' 2000' 118A'  	fcall	_normalized
  1460                           
  1461                           ;main.c: 820:     uint8_t change_in_x_position = (uint8_t)my_floor(normalized_dx);
  1462  0016' 0800'              	movf	(_normalized_dx+3)^(0+256),w
  1463  0017' 008D'              	movwf	my_floor@f+3
  1464  0018' 0800'              	movf	(_normalized_dx+2)^(0+256),w
  1465  0019' 008C'              	movwf	my_floor@f+2
  1466  001A' 0800'              	movf	(_normalized_dx+1)^(0+256),w
  1467  001B' 008B'              	movwf	my_floor@f+1
  1468  001C' 0800'              	movf	_normalized_dx^(0+256),w
  1469  001D' 008A'              	movwf	my_floor@f
  1470  001E' 118A' 2000' 118A'  	fcall	_my_floor
  1471  0021' 080A'              	movf	?_my_floor,w
  1472  0022' 1703               	bsf	3,6	;RP1=1, select bank2
  1473  0023' 0080'              	movwf	updateANDset_ball_position@change_in_x_position^(0+256)
  1474                           
  1475                           ;main.c: 821:     uint8_t change_in_y_position = (uint8_t)my_floor(normalized_dy);
  1476  0024' 0800'              	movf	(_normalized_dy+3)^(0+256),w
  1477  0025' 008D'              	movwf	my_floor@f+3
  1478  0026' 0800'              	movf	(_normalized_dy+2)^(0+256),w
  1479  0027' 008C'              	movwf	my_floor@f+2
  1480  0028' 0800'              	movf	(_normalized_dy+1)^(0+256),w
  1481  0029' 008B'              	movwf	my_floor@f+1
  1482  002A' 0800'              	movf	_normalized_dy^(0+256),w
  1483  002B' 008A'              	movwf	my_floor@f
  1484  002C' 118A' 2000' 118A'  	fcall	_my_floor
  1485  002F' 080A'              	movf	?_my_floor,w
  1486  0030' 1703               	bsf	3,6	;RP1=1, select bank2
  1487  0031' 0080'              	movwf	updateANDset_ball_position@change_in_y_position^(0+256)
  1488                           
  1489                           ;main.c: 824:     if(ball_x_direction == 1) {
  1490  0032' 0300'              	decf	_ball_x_direction^(0+256),w
  1491  0033' 1D03               	btfss	3,2
  1492  0034' 2800'              	goto	l269
  1493                           
  1494                           ;main.c: 825:         ball_x_position += change_in_x_position;
  1495  0035' 0800'              	movf	updateANDset_ball_position@change_in_x_position^(0+256),w
  1496  0036' 0080'              	movwf	??_updateANDset_ball_position^(0+256)
  1497  0037' 0800'              	movf	??_updateANDset_ball_position^(0+256),w
  1498  0038' 0780'              	addwf	_ball_x_position^(0+256),f
  1499                           
  1500                           ;main.c: 827:         ball_x_positions[0] = ball_x_positions[0] + change_in_x_position;
  1501  0039' 0800'              	movf	updateANDset_ball_position@change_in_x_position^(0+256),w
  1502  003A' 0700'              	addwf	_ball_x_positions^(0+256),w
  1503  003B' 0080'              	movwf	_ball_x_positions^(0+256)
  1504                           
  1505                           ;main.c: 828:         ball_x_positions[1] = ball_x_positions[1] + change_in_x_position;
  1506  003C' 0800'              	movf	updateANDset_ball_position@change_in_x_position^(0+256),w
  1507  003D' 0701'              	addwf	(_ball_x_positions^(0+256)+1),w
  1508  003E' 0081'              	movwf	(_ball_x_positions^(0+256)+1)
  1509                           
  1510                           ;main.c: 829:         ball_x_positions[2] = ball_x_positions[2] + change_in_x_position;
  1511  003F' 0800'              	movf	updateANDset_ball_position@change_in_x_position^(0+256),w
  1512  0040' 0702'              	addwf	(_ball_x_positions^(0+256)+2),w
  1513  0041' 0082'              	movwf	(_ball_x_positions^(0+256)+2)
  1514  0042'                    l269:	
  1515                           ;main.c: 830:     } else if(ball_x_direction == -1) {
  1516                           
  1517                           
  1518                           ;main.c: 838:     if(ball_y_direction == 1) {
  1519  0042' 0300'              	decf	_ball_y_direction^(0+256),w
  1520  0043' 1D03               	btfss	3,2
  1521  0044' 0008               	return
  1522                           
  1523                           ;main.c: 839:         ball_y_position += change_in_y_position;
  1524  0045' 0800'              	movf	updateANDset_ball_position@change_in_y_position^(0+256),w
  1525  0046' 0080'              	movwf	??_updateANDset_ball_position^(0+256)
  1526  0047' 0800'              	movf	??_updateANDset_ball_position^(0+256),w
  1527  0048' 0780'              	addwf	_ball_y_position^(0+256),f
  1528                           
  1529                           ;main.c: 841:         ball_y_positions[0] = ball_y_positions[0] + change_in_y_position;
  1530  0049' 0800'              	movf	updateANDset_ball_position@change_in_y_position^(0+256),w
  1531  004A' 0700'              	addwf	_ball_y_positions^(0+256),w
  1532  004B' 0080'              	movwf	_ball_y_positions^(0+256)
  1533                           
  1534                           ;main.c: 842:         ball_y_positions[1] = ball_y_positions[1] + change_in_y_position;
  1535  004C' 0800'              	movf	updateANDset_ball_position@change_in_y_position^(0+256),w
  1536  004D' 0701'              	addwf	(_ball_y_positions^(0+256)+1),w
  1537  004E' 0081'              	movwf	(_ball_y_positions^(0+256)+1)
  1538                           
  1539                           ;main.c: 843:         ball_y_positions[2] = ball_y_positions[2] + change_in_y_position;
  1540  004F' 0800'              	movf	updateANDset_ball_position@change_in_y_position^(0+256),w
  1541  0050' 0702'              	addwf	(_ball_y_positions^(0+256)+2),w
  1542  0051' 0082'              	movwf	(_ball_y_positions^(0+256)+2)
  1543                           
  1544                           ;main.c: 844:     } else if(ball_y_direction == -1) {
  1545  0052' 0008               	return
  1546  0053'                    __end_of_updateANDset_ball_position:
  1547                           
  1548                           	psect	text2
  1549  0000'                    __ptext2:	
  1550 ;; *************** function _update_ball_direction *****************
  1551 ;; Defined at:
  1552 ;;		line 800 in file "main.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;		None
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 300/200
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1566 ;;      Params:         0       0       0       0
  1567 ;;      Locals:         0       0       0       0
  1568 ;;      Temps:          0       0       0       0
  1569 ;;      Totals:         0       0       0       0
  1570 ;;Total ram usage:        0 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_updateANDset_ball_position
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580  0000'                    _update_ball_direction:	
  1581                           ;psect for function _update_ball_direction
  1582                           
  1583                           
  1584                           ;main.c: 802:     if(ball_x_direction == 1 && ball_x_position >= 123) {
  1585                           
  1586                           ;incstack = 0
  1587                           ; Regs used in _update_ball_direction: [wreg+status,2+status,0]
  1588  0000' 1283               	bcf	3,5	;RP0=0, select bank2
  1589  0001' 1703               	bsf	3,6	;RP1=1, select bank2
  1590  0002' 0300'              	decf	_ball_x_direction^(0+256),w
  1591  0003' 1D03               	btfss	3,2
  1592  0004' 2800'              	goto	l3193
  1593  0005' 307B               	movlw	123
  1594  0006' 0200'              	subwf	_ball_x_position^(0+256),w
  1595  0007' 1C03               	skipc
  1596  0008' 2800'              	goto	l3193
  1597                           
  1598                           ;main.c: 803:         ball_x_direction = -1;
  1599  0009' 30FF               	movlw	255
  1600  000A' 0080'              	movwf	_ball_x_direction^(0+256)
  1601  000B'                    l3193:	
  1602                           ;main.c: 804:     } else if(ball_x_direction == -1 && ball_x_position <= 4) {
  1603                           
  1604                           
  1605                           ;main.c: 808:     if(ball_y_direction == 1 && ball_y_position >= 94) {
  1606  000B' 0300'              	decf	_ball_y_direction^(0+256),w
  1607  000C' 1D03               	btfss	3,2
  1608  000D' 0008               	return
  1609  000E' 305E               	movlw	94
  1610  000F' 0200'              	subwf	_ball_y_position^(0+256),w
  1611  0010' 1C03               	skipc
  1612  0011' 0008               	return
  1613                           
  1614                           ;main.c: 809:         ball_y_direction = -1;
  1615  0012' 30FF               	movlw	255
  1616  0013' 0080'              	movwf	_ball_y_direction^(0+256)
  1617                           
  1618                           ;main.c: 810:     } else if(ball_y_direction == -1 && ball_y_position <= 2) {
  1619  0014' 0008               	return
  1620  0015'                    __end_of_update_ball_direction:
  1621                           
  1622                           	psect	text3
  1623  0000'                    __ptext3:	
  1624 ;; *************** function _normalized *****************
  1625 ;; Defined at:
  1626 ;;		line 781 in file "main.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  x               4   16[BANK2 ] float 
  1629 ;;  y               4   20[BANK2 ] float 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  length          4   24[BANK2 ] float 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 300/200
  1638 ;;		On exit  : 300/200
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1641 ;;      Params:         0       0       0       8
  1642 ;;      Locals:         0       0       0       4
  1643 ;;      Temps:          0       0       0       0
  1644 ;;      Totals:         0       0       0      12
  1645 ;;Total ram usage:       12 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 6
  1648 ;; This function calls:
  1649 ;;		___fldiv
  1650 ;;		_vector_length
  1651 ;; This function is called by:
  1652 ;;		_updateANDset_ball_position
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656  0000'                    _normalized:	
  1657                           ;psect for function _normalized
  1658                           
  1659                           
  1660                           ;main.c: 782:     float length = vector_length(x, y);
  1661                           
  1662                           ;incstack = 0
  1663                           ; Regs used in _normalized: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1664  0000' 0800'              	movf	(normalized@x+3)^(0+256),w
  1665  0001' 0080'              	movwf	(vector_length@x+3)^(0+256)
  1666  0002' 0800'              	movf	(normalized@x+2)^(0+256),w
  1667  0003' 0080'              	movwf	(vector_length@x+2)^(0+256)
  1668  0004' 0800'              	movf	(normalized@x+1)^(0+256),w
  1669  0005' 0080'              	movwf	(vector_length@x+1)^(0+256)
  1670  0006' 0800'              	movf	normalized@x^(0+256),w
  1671  0007' 0080'              	movwf	vector_length@x^(0+256)
  1672  0008' 0800'              	movf	(normalized@y+3)^(0+256),w
  1673  0009' 0080'              	movwf	(vector_length@y+3)^(0+256)
  1674  000A' 0800'              	movf	(normalized@y+2)^(0+256),w
  1675  000B' 0080'              	movwf	(vector_length@y+2)^(0+256)
  1676  000C' 0800'              	movf	(normalized@y+1)^(0+256),w
  1677  000D' 0080'              	movwf	(vector_length@y+1)^(0+256)
  1678  000E' 0800'              	movf	normalized@y^(0+256),w
  1679  000F' 0080'              	movwf	vector_length@y^(0+256)
  1680  0010' 118A' 2000' 118A'  	fcall	_vector_length
  1681  0013' 0800'              	movf	(?_vector_length+3)^(0+256),w
  1682  0014' 0080'              	movwf	(normalized@length+3)^(0+256)
  1683  0015' 0800'              	movf	(?_vector_length+2)^(0+256),w
  1684  0016' 0080'              	movwf	(normalized@length+2)^(0+256)
  1685  0017' 0800'              	movf	(?_vector_length+1)^(0+256),w
  1686  0018' 0080'              	movwf	(normalized@length+1)^(0+256)
  1687  0019' 0800'              	movf	?_vector_length^(0+256),w
  1688  001A' 0080'              	movwf	normalized@length^(0+256)
  1689                           
  1690                           ;main.c: 784:     normalized_dx = dx / length;
  1691  001B' 0800'              	movf	(normalized@length+3)^(0+256),w
  1692  001C' 0083'              	movwf	___fldiv@a+3
  1693  001D' 0800'              	movf	(normalized@length+2)^(0+256),w
  1694  001E' 0082'              	movwf	___fldiv@a+2
  1695  001F' 0800'              	movf	(normalized@length+1)^(0+256),w
  1696  0020' 0081'              	movwf	___fldiv@a+1
  1697  0021' 0800'              	movf	normalized@length^(0+256),w
  1698  0022' 0080'              	movwf	___fldiv@a
  1699  0023' 3000               	movlw	0
  1700  0024' 0087'              	movwf	___fldiv@b+3
  1701  0025' 3000               	movlw	0
  1702  0026' 0086'              	movwf	___fldiv@b+2
  1703  0027' 3000               	movlw	0
  1704  0028' 0085'              	movwf	___fldiv@b+1
  1705  0029' 3000               	movlw	0
  1706  002A' 0084'              	movwf	___fldiv@b
  1707  002B' 118A' 2000' 118A'  	fcall	___fldiv
  1708  002E' 0803'              	movf	?___fldiv+3,w
  1709  002F' 1703               	bsf	3,6	;RP1=1, select bank2
  1710  0030' 0080'              	movwf	(_normalized_dx+3)^(0+256)
  1711  0031' 0802'              	movf	?___fldiv+2,w
  1712  0032' 0080'              	movwf	(_normalized_dx+2)^(0+256)
  1713  0033' 0801'              	movf	?___fldiv+1,w
  1714  0034' 0080'              	movwf	(_normalized_dx+1)^(0+256)
  1715  0035' 0800'              	movf	?___fldiv,w
  1716  0036' 0080'              	movwf	_normalized_dx^(0+256)
  1717                           
  1718                           ;main.c: 785:     normalized_dy = dy / length;
  1719  0037' 0800'              	movf	(normalized@length+3)^(0+256),w
  1720  0038' 0083'              	movwf	___fldiv@a+3
  1721  0039' 0800'              	movf	(normalized@length+2)^(0+256),w
  1722  003A' 0082'              	movwf	___fldiv@a+2
  1723  003B' 0800'              	movf	(normalized@length+1)^(0+256),w
  1724  003C' 0081'              	movwf	___fldiv@a+1
  1725  003D' 0800'              	movf	normalized@length^(0+256),w
  1726  003E' 0080'              	movwf	___fldiv@a
  1727  003F' 3000               	movlw	0
  1728  0040' 0087'              	movwf	___fldiv@b+3
  1729  0041' 3000               	movlw	0
  1730  0042' 0086'              	movwf	___fldiv@b+2
  1731  0043' 3000               	movlw	0
  1732  0044' 0085'              	movwf	___fldiv@b+1
  1733  0045' 3000               	movlw	0
  1734  0046' 0084'              	movwf	___fldiv@b
  1735  0047' 118A' 2000'        	fcall	___fldiv
  1736  0049' 0803'              	movf	?___fldiv+3,w
  1737  004A' 1703               	bsf	3,6	;RP1=1, select bank2
  1738  004B' 0080'              	movwf	(_normalized_dy+3)^(0+256)
  1739  004C' 0802'              	movf	?___fldiv+2,w
  1740  004D' 0080'              	movwf	(_normalized_dy+2)^(0+256)
  1741  004E' 0801'              	movf	?___fldiv+1,w
  1742  004F' 0080'              	movwf	(_normalized_dy+1)^(0+256)
  1743  0050' 0800'              	movf	?___fldiv,w
  1744  0051' 0080'              	movwf	_normalized_dy^(0+256)
  1745  0052' 0008               	return
  1746  0053'                    __end_of_normalized:
  1747                           
  1748                           	psect	text4
  1749  0000'                    __ptext4:	
  1750 ;; *************** function _vector_length *****************
  1751 ;; Defined at:
  1752 ;;		line 777 in file "main.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  x               4    0[BANK2 ] float 
  1755 ;;  y               4    4[BANK2 ] float 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  4    0[BANK2 ] float 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 300/200
  1764 ;;		On exit  : 300/200
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1767 ;;      Params:         0       0       0       8
  1768 ;;      Locals:         0       0       0       8
  1769 ;;      Temps:          0       0       0       0
  1770 ;;      Totals:         0       0       0      16
  1771 ;;Total ram usage:       16 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 5
  1774 ;; This function calls:
  1775 ;;		___fladd
  1776 ;;		___flmul
  1777 ;;		_pow
  1778 ;;		_sqrt
  1779 ;; This function is called by:
  1780 ;;		_normalized
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784  0000'                    _vector_length:	
  1785                           ;psect for function _vector_length
  1786                           
  1787                           
  1788                           ;main.c: 779:     return sqrt(pow(x, 2) + pow(y, 2) * 1.0);
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _vector_length: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1792  0000' 3040               	movlw	64
  1793  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  1794  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  1795  0003' 0080'              	movwf	(pow@y+3)^(0+128)
  1796  0004' 3000               	movlw	0
  1797  0005' 0080'              	movwf	(pow@y+2)^(0+128)
  1798  0006' 3000               	movlw	0
  1799  0007' 0080'              	movwf	(pow@y+1)^(0+128)
  1800  0008' 3000               	movlw	0
  1801  0009' 0080'              	movwf	pow@y^(0+128)
  1802  000A' 1283               	bcf	3,5	;RP0=0, select bank2
  1803  000B' 1703               	bsf	3,6	;RP1=1, select bank2
  1804  000C' 0800'              	movf	(vector_length@y+3)^(0+256),w
  1805  000D' 1683               	bsf	3,5	;RP0=1, select bank1
  1806  000E' 1303               	bcf	3,6	;RP1=0, select bank1
  1807  000F' 0080'              	movwf	(pow@x+3)^(0+128)
  1808  0010' 1283               	bcf	3,5	;RP0=0, select bank2
  1809  0011' 1703               	bsf	3,6	;RP1=1, select bank2
  1810  0012' 0800'              	movf	(vector_length@y+2)^(0+256),w
  1811  0013' 1683               	bsf	3,5	;RP0=1, select bank1
  1812  0014' 1303               	bcf	3,6	;RP1=0, select bank1
  1813  0015' 0080'              	movwf	(pow@x+2)^(0+128)
  1814  0016' 1283               	bcf	3,5	;RP0=0, select bank2
  1815  0017' 1703               	bsf	3,6	;RP1=1, select bank2
  1816  0018' 0800'              	movf	(vector_length@y+1)^(0+256),w
  1817  0019' 1683               	bsf	3,5	;RP0=1, select bank1
  1818  001A' 1303               	bcf	3,6	;RP1=0, select bank1
  1819  001B' 0080'              	movwf	(pow@x+1)^(0+128)
  1820  001C' 1283               	bcf	3,5	;RP0=0, select bank2
  1821  001D' 1703               	bsf	3,6	;RP1=1, select bank2
  1822  001E' 0800'              	movf	vector_length@y^(0+256),w
  1823  001F' 1683               	bsf	3,5	;RP0=1, select bank1
  1824  0020' 1303               	bcf	3,6	;RP1=0, select bank1
  1825  0021' 0080'              	movwf	pow@x^(0+128)
  1826  0022' 118A' 2000' 118A'  	fcall	_pow
  1827  0025' 0800'              	movf	(?_pow+3)^(0+128),w
  1828  0026' 1283               	bcf	3,5	;RP0=0, select bank2
  1829  0027' 1703               	bsf	3,6	;RP1=1, select bank2
  1830  0028' 0080'              	movwf	(_vector_length$1244+3)^(0+256)
  1831  0029' 1683               	bsf	3,5	;RP0=1, select bank1
  1832  002A' 1303               	bcf	3,6	;RP1=0, select bank1
  1833  002B' 0800'              	movf	(?_pow+2)^(0+128),w
  1834  002C' 1283               	bcf	3,5	;RP0=0, select bank2
  1835  002D' 1703               	bsf	3,6	;RP1=1, select bank2
  1836  002E' 0080'              	movwf	(_vector_length$1244+2)^(0+256)
  1837  002F' 1683               	bsf	3,5	;RP0=1, select bank1
  1838  0030' 1303               	bcf	3,6	;RP1=0, select bank1
  1839  0031' 0800'              	movf	(?_pow+1)^(0+128),w
  1840  0032' 1283               	bcf	3,5	;RP0=0, select bank2
  1841  0033' 1703               	bsf	3,6	;RP1=1, select bank2
  1842  0034' 0080'              	movwf	(_vector_length$1244+1)^(0+256)
  1843  0035' 1683               	bsf	3,5	;RP0=1, select bank1
  1844  0036' 1303               	bcf	3,6	;RP1=0, select bank1
  1845  0037' 0800'              	movf	?_pow^(0+128),w
  1846  0038' 1283               	bcf	3,5	;RP0=0, select bank2
  1847  0039' 1703               	bsf	3,6	;RP1=1, select bank2
  1848  003A' 0080'              	movwf	_vector_length$1244^(0+256)
  1849                           
  1850                           ;main.c: 779:     return sqrt(pow(x, 2) + pow(y, 2) * 1.0);
  1851  003B' 3040               	movlw	64
  1852  003C' 1683               	bsf	3,5	;RP0=1, select bank1
  1853  003D' 1303               	bcf	3,6	;RP1=0, select bank1
  1854  003E' 0080'              	movwf	(pow@y+3)^(0+128)
  1855  003F' 3000               	movlw	0
  1856  0040' 0080'              	movwf	(pow@y+2)^(0+128)
  1857  0041' 3000               	movlw	0
  1858  0042' 0080'              	movwf	(pow@y+1)^(0+128)
  1859  0043' 3000               	movlw	0
  1860  0044' 0080'              	movwf	pow@y^(0+128)
  1861  0045' 1283               	bcf	3,5	;RP0=0, select bank2
  1862  0046' 1703               	bsf	3,6	;RP1=1, select bank2
  1863  0047' 0800'              	movf	(vector_length@x+3)^(0+256),w
  1864  0048' 1683               	bsf	3,5	;RP0=1, select bank1
  1865  0049' 1303               	bcf	3,6	;RP1=0, select bank1
  1866  004A' 0080'              	movwf	(pow@x+3)^(0+128)
  1867  004B' 1283               	bcf	3,5	;RP0=0, select bank2
  1868  004C' 1703               	bsf	3,6	;RP1=1, select bank2
  1869  004D' 0800'              	movf	(vector_length@x+2)^(0+256),w
  1870  004E' 1683               	bsf	3,5	;RP0=1, select bank1
  1871  004F' 1303               	bcf	3,6	;RP1=0, select bank1
  1872  0050' 0080'              	movwf	(pow@x+2)^(0+128)
  1873  0051' 1283               	bcf	3,5	;RP0=0, select bank2
  1874  0052' 1703               	bsf	3,6	;RP1=1, select bank2
  1875  0053' 0800'              	movf	(vector_length@x+1)^(0+256),w
  1876  0054' 1683               	bsf	3,5	;RP0=1, select bank1
  1877  0055' 1303               	bcf	3,6	;RP1=0, select bank1
  1878  0056' 0080'              	movwf	(pow@x+1)^(0+128)
  1879  0057' 1283               	bcf	3,5	;RP0=0, select bank2
  1880  0058' 1703               	bsf	3,6	;RP1=1, select bank2
  1881  0059' 0800'              	movf	vector_length@x^(0+256),w
  1882  005A' 1683               	bsf	3,5	;RP0=1, select bank1
  1883  005B' 1303               	bcf	3,6	;RP1=0, select bank1
  1884  005C' 0080'              	movwf	pow@x^(0+128)
  1885  005D' 118A' 2000' 118A'  	fcall	_pow
  1886  0060' 0800'              	movf	(?_pow+3)^(0+128),w
  1887  0061' 1283               	bcf	3,5	;RP0=0, select bank2
  1888  0062' 1703               	bsf	3,6	;RP1=1, select bank2
  1889  0063' 0080'              	movwf	(_vector_length$1245+3)^(0+256)
  1890  0064' 1683               	bsf	3,5	;RP0=1, select bank1
  1891  0065' 1303               	bcf	3,6	;RP1=0, select bank1
  1892  0066' 0800'              	movf	(?_pow+2)^(0+128),w
  1893  0067' 1283               	bcf	3,5	;RP0=0, select bank2
  1894  0068' 1703               	bsf	3,6	;RP1=1, select bank2
  1895  0069' 0080'              	movwf	(_vector_length$1245+2)^(0+256)
  1896  006A' 1683               	bsf	3,5	;RP0=1, select bank1
  1897  006B' 1303               	bcf	3,6	;RP1=0, select bank1
  1898  006C' 0800'              	movf	(?_pow+1)^(0+128),w
  1899  006D' 1283               	bcf	3,5	;RP0=0, select bank2
  1900  006E' 1703               	bsf	3,6	;RP1=1, select bank2
  1901  006F' 0080'              	movwf	(_vector_length$1245+1)^(0+256)
  1902  0070' 1683               	bsf	3,5	;RP0=1, select bank1
  1903  0071' 1303               	bcf	3,6	;RP1=0, select bank1
  1904  0072' 0800'              	movf	?_pow^(0+128),w
  1905  0073' 1283               	bcf	3,5	;RP0=0, select bank2
  1906  0074' 1703               	bsf	3,6	;RP1=1, select bank2
  1907  0075' 0080'              	movwf	_vector_length$1245^(0+256)
  1908                           
  1909                           ;main.c: 779:     return sqrt(pow(x, 2) + pow(y, 2) * 1.0);
  1910  0076' 303F               	movlw	63
  1911  0077' 1303               	bcf	3,6	;RP1=0, select bank0
  1912  0078' 00A0'              	movwf	___flmul@b+3
  1913  0079' 3080               	movlw	128
  1914  007A' 009F'              	movwf	___flmul@b+2
  1915  007B' 3000               	movlw	0
  1916  007C' 009E'              	movwf	___flmul@b+1
  1917  007D' 3000               	movlw	0
  1918  007E' 009D'              	movwf	___flmul@b
  1919  007F' 1703               	bsf	3,6	;RP1=1, select bank2
  1920  0080' 0800'              	movf	(_vector_length$1244+3)^(0+256),w
  1921  0081' 1303               	bcf	3,6	;RP1=0, select bank0
  1922  0082' 00A4'              	movwf	___flmul@a+3
  1923  0083' 1703               	bsf	3,6	;RP1=1, select bank2
  1924  0084' 0800'              	movf	(_vector_length$1244+2)^(0+256),w
  1925  0085' 1303               	bcf	3,6	;RP1=0, select bank0
  1926  0086' 00A3'              	movwf	___flmul@a+2
  1927  0087' 1703               	bsf	3,6	;RP1=1, select bank2
  1928  0088' 0800'              	movf	(_vector_length$1244+1)^(0+256),w
  1929  0089' 1303               	bcf	3,6	;RP1=0, select bank0
  1930  008A' 00A2'              	movwf	___flmul@a+1
  1931  008B' 1703               	bsf	3,6	;RP1=1, select bank2
  1932  008C' 0800'              	movf	_vector_length$1244^(0+256),w
  1933  008D' 1303               	bcf	3,6	;RP1=0, select bank0
  1934  008E' 00A1'              	movwf	___flmul@a
  1935  008F' 118A' 2000' 118A'  	fcall	___flmul
  1936  0092' 0820'              	movf	?___flmul+3,w
  1937  0093' 00BA'              	movwf	___fladd@b+3
  1938  0094' 081F'              	movf	?___flmul+2,w
  1939  0095' 00B9'              	movwf	___fladd@b+2
  1940  0096' 081E'              	movf	?___flmul+1,w
  1941  0097' 00B8'              	movwf	___fladd@b+1
  1942  0098' 081D'              	movf	?___flmul,w
  1943  0099' 00B7'              	movwf	___fladd@b
  1944  009A' 1703               	bsf	3,6	;RP1=1, select bank2
  1945  009B' 0800'              	movf	(_vector_length$1245+3)^(0+256),w
  1946  009C' 1303               	bcf	3,6	;RP1=0, select bank0
  1947  009D' 00BE'              	movwf	___fladd@a+3
  1948  009E' 1703               	bsf	3,6	;RP1=1, select bank2
  1949  009F' 0800'              	movf	(_vector_length$1245+2)^(0+256),w
  1950  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
  1951  00A1' 00BD'              	movwf	___fladd@a+2
  1952  00A2' 1703               	bsf	3,6	;RP1=1, select bank2
  1953  00A3' 0800'              	movf	(_vector_length$1245+1)^(0+256),w
  1954  00A4' 1303               	bcf	3,6	;RP1=0, select bank0
  1955  00A5' 00BC'              	movwf	___fladd@a+1
  1956  00A6' 1703               	bsf	3,6	;RP1=1, select bank2
  1957  00A7' 0800'              	movf	_vector_length$1245^(0+256),w
  1958  00A8' 1303               	bcf	3,6	;RP1=0, select bank0
  1959  00A9' 00BB'              	movwf	___fladd@a
  1960  00AA' 118A' 2000' 118A'  	fcall	___fladd
  1961  00AD' 083A'              	movf	?___fladd+3,w
  1962  00AE' 1683               	bsf	3,5	;RP0=1, select bank1
  1963  00AF' 0080'              	movwf	(sqrt@a+3)^(0+128)
  1964  00B0' 1283               	bcf	3,5	;RP0=0, select bank0
  1965  00B1' 0839'              	movf	?___fladd+2,w
  1966  00B2' 1683               	bsf	3,5	;RP0=1, select bank1
  1967  00B3' 0080'              	movwf	(sqrt@a+2)^(0+128)
  1968  00B4' 1283               	bcf	3,5	;RP0=0, select bank0
  1969  00B5' 0838'              	movf	?___fladd+1,w
  1970  00B6' 1683               	bsf	3,5	;RP0=1, select bank1
  1971  00B7' 0080'              	movwf	(sqrt@a+1)^(0+128)
  1972  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
  1973  00B9' 0837'              	movf	?___fladd,w
  1974  00BA' 1683               	bsf	3,5	;RP0=1, select bank1
  1975  00BB' 0080'              	movwf	sqrt@a^(0+128)
  1976  00BC' 118A' 2000'        	fcall	_sqrt
  1977  00BE' 0800'              	movf	(?_sqrt+3)^(0+128),w
  1978  00BF' 1283               	bcf	3,5	;RP0=0, select bank2
  1979  00C0' 1703               	bsf	3,6	;RP1=1, select bank2
  1980  00C1' 0080'              	movwf	(?_vector_length+3)^(0+256)
  1981  00C2' 1683               	bsf	3,5	;RP0=1, select bank1
  1982  00C3' 1303               	bcf	3,6	;RP1=0, select bank1
  1983  00C4' 0800'              	movf	(?_sqrt+2)^(0+128),w
  1984  00C5' 1283               	bcf	3,5	;RP0=0, select bank2
  1985  00C6' 1703               	bsf	3,6	;RP1=1, select bank2
  1986  00C7' 0080'              	movwf	(?_vector_length+2)^(0+256)
  1987  00C8' 1683               	bsf	3,5	;RP0=1, select bank1
  1988  00C9' 1303               	bcf	3,6	;RP1=0, select bank1
  1989  00CA' 0800'              	movf	(?_sqrt+1)^(0+128),w
  1990  00CB' 1283               	bcf	3,5	;RP0=0, select bank2
  1991  00CC' 1703               	bsf	3,6	;RP1=1, select bank2
  1992  00CD' 0080'              	movwf	(?_vector_length+1)^(0+256)
  1993  00CE' 1683               	bsf	3,5	;RP0=1, select bank1
  1994  00CF' 1303               	bcf	3,6	;RP1=0, select bank1
  1995  00D0' 0800'              	movf	?_sqrt^(0+128),w
  1996  00D1' 1283               	bcf	3,5	;RP0=0, select bank2
  1997  00D2' 1703               	bsf	3,6	;RP1=1, select bank2
  1998  00D3' 0080'              	movwf	?_vector_length^(0+256)
  1999  00D4' 0008               	return
  2000  00D5'                    __end_of_vector_length:
  2001                           
  2002                           	psect	text5
  2003  0000'                    __ptext5:	
  2004 ;; *************** function _sqrt *****************
  2005 ;; Defined at:
  2006 ;;		line 9 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcsqrt.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  a               4   51[BANK1 ] float 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  frac            4   76[BANK1 ] unsigned long 
  2011 ;;  root            4   72[BANK1 ] struct .
  2012 ;;  grs             4   66[BANK1 ] unsigned long 
  2013 ;;  tfrac           4   61[BANK1 ] unsigned long 
  2014 ;;  exp             2   70[BANK1 ] int 
  2015 ;;  p               1   65[BANK1 ] unsigned char 
  2016 ;;  i               1   60[BANK1 ] unsigned char 
  2017 ;;  sign            1   59[BANK1 ] unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  4   51[BANK1 ] unsigned char 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0, btemp+1
  2022 ;; Tracked objects:
  2023 ;;		On entry : 300/100
  2024 ;;		On exit  : 300/100
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2027 ;;      Params:         0       0       4       0
  2028 ;;      Locals:         0       0      21       0
  2029 ;;      Temps:          0       0       4       0
  2030 ;;      Totals:         0       0      29       0
  2031 ;;Total ram usage:       29 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_vector_length
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040  0000'                    _sqrt:	
  2041                           ;psect for function _sqrt
  2042                           
  2043                           
  2044                           ;incstack = 0
  2045                           ; Regs used in _sqrt: [wreg+status,2+status,0+btemp+1]
  2046  0000' 0803'              	movf	(sqrt@a^(0+128)+3),w
  2047  0001' 3980               	andlw	128
  2048  0002' 0080'              	movwf	sqrt@sign^(0+128)
  2049  0003' 0803'              	movf	(sqrt@a^(0+128)+3),w
  2050  0004' 0080'              	movwf	??_sqrt^(0+128)
  2051  0005' 0700'              	addwf	??_sqrt^(0+128),w
  2052  0006' 0080'              	movwf	sqrt@p^(0+128)
  2053  0007' 1B82'              	btfsc	(sqrt@a^(0+128)+2),7
  2054  0008' 1400'              	bsf	sqrt@p^(0+128),0
  2055  0009' 0800'              	movf	sqrt@p^(0+128),w
  2056  000A' 0080'              	movwf	??_sqrt^(0+128)
  2057  000B' 0181'              	clrf	(??_sqrt^(0+128)+1)
  2058  000C' 0800'              	movf	??_sqrt^(0+128),w
  2059  000D' 0080'              	movwf	sqrt@exp^(0+128)
  2060  000E' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2061  000F' 0080'              	movwf	(sqrt@exp+1)^(0+128)
  2062  0010' 30FF               	movlw	255
  2063  0011' 0500'              	andwf	sqrt@a^(0+128),w
  2064  0012' 0080'              	movwf	sqrt@frac^(0+128)
  2065  0013' 30FF               	movlw	255
  2066  0014' 0500'              	andwf	(sqrt@a+1)^(0+128),w
  2067  0015' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2068  0016' 307F               	movlw	127
  2069  0017' 0500'              	andwf	(sqrt@a+2)^(0+128),w
  2070  0018' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2071  0019' 3000               	movlw	0
  2072  001A' 0500'              	andwf	(sqrt@a+3)^(0+128),w
  2073  001B' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2074  001C' 0800'              	movf	sqrt@exp^(0+128),w
  2075  001D' 0400'              	iorwf	(sqrt@exp+1)^(0+128),w
  2076  001E' 1903               	btfsc	3,2
  2077  001F' 2800'              	goto	l4221
  2078  0020' 1782'              	bsf	(sqrt@frac^(0+128)+2),7
  2079  0021' 0A00'              	incf	sqrt@exp^(0+128),w
  2080  0022' 0400'              	iorwf	(sqrt@exp+1)^(0+128),w
  2081  0023' 1D03               	btfss	3,2
  2082  0024' 2800'              	goto	l4225
  2083  0025'                    l4221:
  2084  0025' 3000               	movlw	0
  2085  0026' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2086  0027' 3000               	movlw	0
  2087  0028' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2088  0029' 3000               	movlw	0
  2089  002A' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2090  002B' 3000               	movlw	0
  2091  002C' 0080'              	movwf	sqrt@frac^(0+128)
  2092  002D'                    l4225:
  2093  002D' 0800'              	movf	sqrt@exp^(0+128),w
  2094  002E' 0400'              	iorwf	(sqrt@exp+1)^(0+128),w
  2095  002F' 1D03               	btfss	3,2
  2096  0030' 2800'              	goto	l4231
  2097  0031' 3000               	movlw	0
  2098  0032' 0080'              	movwf	(?_sqrt+3)^(0+128)
  2099  0033' 3000               	movlw	0
  2100  0034' 0080'              	movwf	(?_sqrt+2)^(0+128)
  2101  0035' 3000               	movlw	0
  2102  0036' 0080'              	movwf	(?_sqrt+1)^(0+128)
  2103  0037' 3000               	movlw	0
  2104  0038' 0080'              	movwf	?_sqrt^(0+128)
  2105  0039' 0008               	return
  2106  003A'                    l4231:
  2107  003A' 0800'              	movf	sqrt@sign^(0+128),w
  2108  003B' 1903               	btfsc	3,2
  2109  003C' 2800'              	goto	l4237
  2110  003D' 3000               	movlw	0
  2111  003E' 0080'              	movwf	(sqrt@root+3)^(0+128)
  2112  003F' 3040               	movlw	64
  2113  0040' 0080'              	movwf	(sqrt@root+2)^(0+128)
  2114  0041' 3000               	movlw	0
  2115  0042' 0080'              	movwf	(sqrt@root+1)^(0+128)
  2116  0043' 3000               	movlw	0
  2117  0044' 0080'              	movwf	sqrt@root^(0+128)
  2118  0045' 3080               	movlw	128
  2119  0046' 0482'              	iorwf	(sqrt@root^(0+128)+2),f
  2120  0047' 30FF               	movlw	255
  2121  0048' 0482'              	iorwf	((sqrt@root+1)^(0+128)+2),f
  2122  0049' 3021               	movlw	33
  2123  004A' 1283               	bcf	3,5	;RP0=0, select bank2
  2124  004B' 1703               	bsf	3,6	;RP1=1, select bank2
  2125  004C' 0080'              	movwf	_errno^(0+256)
  2126  004D' 3000               	movlw	0
  2127  004E' 0081'              	movwf	(_errno^(0+256)+1)
  2128  004F' 1683               	bsf	3,5	;RP0=1, select bank1
  2129  0050' 1303               	bcf	3,6	;RP1=0, select bank1
  2130  0051' 0800'              	movf	(sqrt@root+3)^(0+128),w
  2131  0052' 0080'              	movwf	(?_sqrt+3)^(0+128)
  2132  0053' 0800'              	movf	(sqrt@root+2)^(0+128),w
  2133  0054' 0080'              	movwf	(?_sqrt+2)^(0+128)
  2134  0055' 0800'              	movf	(sqrt@root+1)^(0+128),w
  2135  0056' 0080'              	movwf	(?_sqrt+1)^(0+128)
  2136  0057' 0800'              	movf	sqrt@root^(0+128),w
  2137  0058' 0080'              	movwf	?_sqrt^(0+128)
  2138  0059' 0008               	return
  2139  005A'                    l4237:
  2140  005A' 0A00'              	incf	sqrt@exp^(0+128),w
  2141  005B' 0400'              	iorwf	(sqrt@exp+1)^(0+128),w
  2142  005C' 1D03               	btfss	3,2
  2143  005D' 2800'              	goto	l4243
  2144  005E' 307F               	movlw	127
  2145  005F' 0080'              	movwf	(sqrt@root+3)^(0+128)
  2146  0060' 3080               	movlw	128
  2147  0061' 0080'              	movwf	(sqrt@root+2)^(0+128)
  2148  0062' 3000               	movlw	0
  2149  0063' 0080'              	movwf	(sqrt@root+1)^(0+128)
  2150  0064' 3000               	movlw	0
  2151  0065' 0080'              	movwf	sqrt@root^(0+128)
  2152  0066' 0800'              	movf	(sqrt@root+3)^(0+128),w
  2153  0067' 0080'              	movwf	(?_sqrt+3)^(0+128)
  2154  0068' 0800'              	movf	(sqrt@root+2)^(0+128),w
  2155  0069' 0080'              	movwf	(?_sqrt+2)^(0+128)
  2156  006A' 0800'              	movf	(sqrt@root+1)^(0+128),w
  2157  006B' 0080'              	movwf	(?_sqrt+1)^(0+128)
  2158  006C' 0800'              	movf	sqrt@root^(0+128),w
  2159  006D' 0080'              	movwf	?_sqrt^(0+128)
  2160  006E' 0008               	return
  2161  006F'                    l4243:
  2162  006F' 3081               	movlw	129
  2163  0070' 0780'              	addwf	sqrt@exp^(0+128),f
  2164  0071' 1803               	skipnc
  2165  0072' 0A80'              	incf	(sqrt@exp+1)^(0+128),f
  2166  0073' 30FF               	movlw	255
  2167  0074' 0780'              	addwf	(sqrt@exp+1)^(0+128),f
  2168  0075' 0800'              	movf	sqrt@exp^(0+128),w
  2169  0076' 3901               	andlw	1
  2170  0077' 0080'              	movwf	sqrt@p^(0+128)
  2171  0078' 3001               	movlw	1
  2172  0079' 00FF               	movwf	127
  2173  007A'                    u6055:
  2174  007A' 0D00'              	rlf	(sqrt@exp+1)^(0+128),w
  2175  007B' 0C80'              	rrf	(sqrt@exp+1)^(0+128),f
  2176  007C' 0C80'              	rrf	sqrt@exp^(0+128),f
  2177  007D' 0BFF               	decfsz	127,f
  2178  007E' 2800'              	goto	u6055
  2179  007F' 307F               	movlw	127
  2180  0080' 0780'              	addwf	sqrt@exp^(0+128),f
  2181  0081' 1803               	skipnc
  2182  0082' 0A80'              	incf	(sqrt@exp+1)^(0+128),f
  2183  0083' 3000               	movlw	0
  2184  0084' 0780'              	addwf	(sqrt@exp+1)^(0+128),f
  2185  0085' 1003               	clrc
  2186  0086' 0D00'              	rlf	sqrt@frac^(0+128),w
  2187  0087' 0080'              	movwf	sqrt@tfrac^(0+128)
  2188  0088' 0D00'              	rlf	(sqrt@frac+1)^(0+128),w
  2189  0089' 0080'              	movwf	(sqrt@tfrac+1)^(0+128)
  2190  008A' 0D00'              	rlf	(sqrt@frac+2)^(0+128),w
  2191  008B' 0080'              	movwf	(sqrt@tfrac+2)^(0+128)
  2192  008C' 0D00'              	rlf	(sqrt@frac+3)^(0+128),w
  2193  008D' 0080'              	movwf	(sqrt@tfrac+3)^(0+128)
  2194  008E' 3000               	movlw	0
  2195  008F' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2196  0090' 3000               	movlw	0
  2197  0091' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2198  0092' 3000               	movlw	0
  2199  0093' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2200  0094' 3000               	movlw	0
  2201  0095' 0080'              	movwf	sqrt@frac^(0+128)
  2202  0096' 3001               	movlw	1
  2203  0097' 0080'              	movwf	(sqrt@grs+3)^(0+128)
  2204  0098' 3000               	movlw	0
  2205  0099' 0080'              	movwf	(sqrt@grs+2)^(0+128)
  2206  009A' 3000               	movlw	0
  2207  009B' 0080'              	movwf	(sqrt@grs+1)^(0+128)
  2208  009C' 3000               	movlw	0
  2209  009D' 0080'              	movwf	sqrt@grs^(0+128)
  2210  009E' 0800'              	movf	sqrt@p^(0+128),w
  2211  009F' 1903               	btfsc	3,2
  2212  00A0' 2800'              	goto	l4261
  2213  00A1' 3001               	movlw	1
  2214  00A2' 0080'              	movwf	??_sqrt^(0+128)
  2215  00A3'                    u6075:
  2216  00A3' 1003               	clrc
  2217  00A4' 0D80'              	rlf	sqrt@tfrac^(0+128),f
  2218  00A5' 0D80'              	rlf	(sqrt@tfrac+1)^(0+128),f
  2219  00A6' 0D80'              	rlf	(sqrt@tfrac+2)^(0+128),f
  2220  00A7' 0D80'              	rlf	(sqrt@tfrac+3)^(0+128),f
  2221  00A8' 0B80'              	decfsz	??_sqrt^(0+128),f
  2222  00A9' 2800'              	goto	u6075
  2223  00AA'                    l4261:
  2224  00AA' 0180'              	clrf	sqrt@i^(0+128)
  2225  00AB'                    l4269:
  2226  00AB' 3019               	movlw	25
  2227  00AC' 0200'              	subwf	sqrt@i^(0+128),w
  2228  00AD' 1803               	btfsc	3,0
  2229  00AE' 2800'              	goto	l4271
  2230  00AF' 0800'              	movf	sqrt@grs^(0+128),w
  2231  00B0' 0480'              	iorwf	sqrt@frac^(0+128),f
  2232  00B1' 0800'              	movf	(sqrt@grs+1)^(0+128),w
  2233  00B2' 0480'              	iorwf	(sqrt@frac+1)^(0+128),f
  2234  00B3' 0800'              	movf	(sqrt@grs+2)^(0+128),w
  2235  00B4' 0480'              	iorwf	(sqrt@frac+2)^(0+128),f
  2236  00B5' 0800'              	movf	(sqrt@grs+3)^(0+128),w
  2237  00B6' 0480'              	iorwf	(sqrt@frac+3)^(0+128),f
  2238  00B7' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2239  00B8' 0200'              	subwf	(sqrt@tfrac+3)^(0+128),w
  2240  00B9' 1D03               	skipz
  2241  00BA' 2800'              	goto	u6085
  2242  00BB' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2243  00BC' 0200'              	subwf	(sqrt@tfrac+2)^(0+128),w
  2244  00BD' 1D03               	skipz
  2245  00BE' 2800'              	goto	u6085
  2246  00BF' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2247  00C0' 0200'              	subwf	(sqrt@tfrac+1)^(0+128),w
  2248  00C1' 1D03               	skipz
  2249  00C2' 2800'              	goto	u6085
  2250  00C3' 0800'              	movf	sqrt@frac^(0+128),w
  2251  00C4' 0200'              	subwf	sqrt@tfrac^(0+128),w
  2252  00C5'                    u6085:
  2253  00C5' 1C03               	skipc
  2254  00C6' 2800'              	goto	l4267
  2255  00C7' 0800'              	movf	sqrt@frac^(0+128),w
  2256  00C8' 0280'              	subwf	sqrt@tfrac^(0+128),f
  2257  00C9' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2258  00CA' 1C03               	skipc
  2259  00CB' 0F00'              	incfsz	(sqrt@frac+1)^(0+128),w
  2260  00CC' 0280'              	subwf	(sqrt@tfrac+1)^(0+128),f
  2261  00CD' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2262  00CE' 1C03               	skipc
  2263  00CF' 0F00'              	incfsz	(sqrt@frac+2)^(0+128),w
  2264  00D0' 0280'              	subwf	(sqrt@tfrac+2)^(0+128),f
  2265  00D1' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2266  00D2' 1C03               	skipc
  2267  00D3' 0F00'              	incfsz	(sqrt@frac+3)^(0+128),w
  2268  00D4' 0280'              	subwf	(sqrt@tfrac+3)^(0+128),f
  2269  00D5' 0800'              	movf	sqrt@grs^(0+128),w
  2270  00D6' 0780'              	addwf	sqrt@frac^(0+128),f
  2271  00D7' 0800'              	movf	(sqrt@grs+1)^(0+128),w
  2272  00D8' 1103               	clrz
  2273  00D9' 1803               	skipnc
  2274  00DA' 3E01               	addlw	1
  2275  00DB' 1D03               	btfss	3,2
  2276  00DC' 0780'              	addwf	(sqrt@frac+1)^(0+128),f
  2277  00DD' 0800'              	movf	(sqrt@grs+2)^(0+128),w
  2278  00DE' 1103               	clrz
  2279  00DF' 1803               	skipnc
  2280  00E0' 3E01               	addlw	1
  2281  00E1' 1D03               	btfss	3,2
  2282  00E2' 0780'              	addwf	(sqrt@frac+2)^(0+128),f
  2283  00E3' 0800'              	movf	(sqrt@grs+3)^(0+128),w
  2284  00E4' 1103               	clrz
  2285  00E5' 1803               	skipnc
  2286  00E6' 3E01               	addlw	1
  2287  00E7' 1D03               	btfss	3,2
  2288  00E8' 0780'              	addwf	(sqrt@frac+3)^(0+128),f
  2289  00E9' 2800'              	goto	l795
  2290  00EA'                    l4267:
  2291  00EA' 0900'              	comf	sqrt@grs^(0+128),w
  2292  00EB' 0080'              	movwf	??_sqrt^(0+128)
  2293  00EC' 0900'              	comf	(sqrt@grs+1)^(0+128),w
  2294  00ED' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2295  00EE' 0900'              	comf	(sqrt@grs+2)^(0+128),w
  2296  00EF' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2297  00F0' 0900'              	comf	(sqrt@grs+3)^(0+128),w
  2298  00F1' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2299  00F2' 0800'              	movf	??_sqrt^(0+128),w
  2300  00F3' 0580'              	andwf	sqrt@frac^(0+128),f
  2301  00F4' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2302  00F5' 0580'              	andwf	(sqrt@frac+1)^(0+128),f
  2303  00F6' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2304  00F7' 0580'              	andwf	(sqrt@frac+2)^(0+128),f
  2305  00F8' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2306  00F9' 0580'              	andwf	(sqrt@frac+3)^(0+128),f
  2307  00FA'                    l795:
  2308  00FA' 0800'              	movf	sqrt@grs^(0+128),w
  2309  00FB' 0080'              	movwf	??_sqrt^(0+128)
  2310  00FC' 0800'              	movf	(sqrt@grs+1)^(0+128),w
  2311  00FD' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2312  00FE' 0800'              	movf	(sqrt@grs+2)^(0+128),w
  2313  00FF' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2314  0100' 0800'              	movf	(sqrt@grs+3)^(0+128),w
  2315  0101' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2316  0102' 3001               	movlw	1
  2317  0103'                    u6105:
  2318  0103' 1003               	clrc
  2319  0104' 0C83'              	rrf	(??_sqrt^(0+128)+3),f
  2320  0105' 0C82'              	rrf	(??_sqrt^(0+128)+2),f
  2321  0106' 0C81'              	rrf	(??_sqrt^(0+128)+1),f
  2322  0107' 0C80'              	rrf	??_sqrt^(0+128),f
  2323  0108' 3EFF               	addlw	-1
  2324  0109' 1D03               	skipz
  2325  010A' 2800'              	goto	u6105
  2326  010B' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2327  010C' 0080'              	movwf	(sqrt@grs+3)^(0+128)
  2328  010D' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2329  010E' 0080'              	movwf	(sqrt@grs+2)^(0+128)
  2330  010F' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2331  0110' 0080'              	movwf	(sqrt@grs+1)^(0+128)
  2332  0111' 0800'              	movf	??_sqrt^(0+128),w
  2333  0112' 0080'              	movwf	sqrt@grs^(0+128)
  2334  0113' 3001               	movlw	1
  2335  0114' 0080'              	movwf	??_sqrt^(0+128)
  2336  0115'                    u6115:
  2337  0115' 1003               	clrc
  2338  0116' 0D80'              	rlf	sqrt@tfrac^(0+128),f
  2339  0117' 0D80'              	rlf	(sqrt@tfrac+1)^(0+128),f
  2340  0118' 0D80'              	rlf	(sqrt@tfrac+2)^(0+128),f
  2341  0119' 0D80'              	rlf	(sqrt@tfrac+3)^(0+128),f
  2342  011A' 0B80'              	decfsz	??_sqrt^(0+128),f
  2343  011B' 2800'              	goto	u6115
  2344  011C' 3001               	movlw	1
  2345  011D' 0080'              	movwf	??_sqrt^(0+128)
  2346  011E' 0800'              	movf	??_sqrt^(0+128),w
  2347  011F' 0780'              	addwf	sqrt@i^(0+128),f
  2348  0120' 2800'              	goto	l4269
  2349  0121'                    l4271:
  2350  0121' 0800'              	movf	sqrt@frac^(0+128),w
  2351  0122' 0080'              	movwf	??_sqrt^(0+128)
  2352  0123' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2353  0124' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2354  0125' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2355  0126' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2356  0127' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2357  0128' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2358  0129' 3001               	movlw	1
  2359  012A'                    u6135:
  2360  012A' 1003               	clrc
  2361  012B' 0C83'              	rrf	(??_sqrt^(0+128)+3),f
  2362  012C' 0C82'              	rrf	(??_sqrt^(0+128)+2),f
  2363  012D' 0C81'              	rrf	(??_sqrt^(0+128)+1),f
  2364  012E' 0C80'              	rrf	??_sqrt^(0+128),f
  2365  012F' 3EFF               	addlw	-1
  2366  0130' 1D03               	skipz
  2367  0131' 2800'              	goto	u6135
  2368  0132' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2369  0133' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2370  0134' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2371  0135' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2372  0136' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2373  0137' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2374  0138' 0800'              	movf	??_sqrt^(0+128),w
  2375  0139' 0080'              	movwf	sqrt@frac^(0+128)
  2376  013A' 3001               	movlw	1
  2377  013B' 0500'              	andwf	sqrt@frac^(0+128),w
  2378  013C' 0080'              	movwf	sqrt@grs^(0+128)
  2379  013D' 3000               	movlw	0
  2380  013E' 0500'              	andwf	(sqrt@frac+1)^(0+128),w
  2381  013F' 0080'              	movwf	(sqrt@grs+1)^(0+128)
  2382  0140' 3000               	movlw	0
  2383  0141' 0500'              	andwf	(sqrt@frac+2)^(0+128),w
  2384  0142' 0080'              	movwf	(sqrt@grs+2)^(0+128)
  2385  0143' 3000               	movlw	0
  2386  0144' 0500'              	andwf	(sqrt@frac+3)^(0+128),w
  2387  0145' 0080'              	movwf	(sqrt@grs+3)^(0+128)
  2388  0146' 0800'              	movf	sqrt@frac^(0+128),w
  2389  0147' 0080'              	movwf	??_sqrt^(0+128)
  2390  0148' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2391  0149' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2392  014A' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2393  014B' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2394  014C' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2395  014D' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2396  014E' 3001               	movlw	1
  2397  014F'                    u6145:
  2398  014F' 1003               	clrc
  2399  0150' 0C83'              	rrf	(??_sqrt^(0+128)+3),f
  2400  0151' 0C82'              	rrf	(??_sqrt^(0+128)+2),f
  2401  0152' 0C81'              	rrf	(??_sqrt^(0+128)+1),f
  2402  0153' 0C80'              	rrf	??_sqrt^(0+128),f
  2403  0154' 3EFF               	addlw	-1
  2404  0155' 1D03               	skipz
  2405  0156' 2800'              	goto	u6145
  2406  0157' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2407  0158' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2408  0159' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2409  015A' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2410  015B' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2411  015C' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2412  015D' 0800'              	movf	??_sqrt^(0+128),w
  2413  015E' 0080'              	movwf	sqrt@frac^(0+128)
  2414  015F' 0800'              	movf	sqrt@grs^(0+128),w
  2415  0160' 0780'              	addwf	sqrt@frac^(0+128),f
  2416  0161' 0800'              	movf	(sqrt@grs+1)^(0+128),w
  2417  0162' 1103               	clrz
  2418  0163' 1803               	skipnc
  2419  0164' 3E01               	addlw	1
  2420  0165' 1D03               	btfss	3,2
  2421  0166' 0780'              	addwf	(sqrt@frac+1)^(0+128),f
  2422  0167' 0800'              	movf	(sqrt@grs+2)^(0+128),w
  2423  0168' 1103               	clrz
  2424  0169' 1803               	skipnc
  2425  016A' 3E01               	addlw	1
  2426  016B' 1D03               	btfss	3,2
  2427  016C' 0780'              	addwf	(sqrt@frac+2)^(0+128),f
  2428  016D' 0800'              	movf	(sqrt@grs+3)^(0+128),w
  2429  016E' 1103               	clrz
  2430  016F' 1803               	skipnc
  2431  0170' 3E01               	addlw	1
  2432  0171' 1D03               	btfss	3,2
  2433  0172' 0780'              	addwf	(sqrt@frac+3)^(0+128),f
  2434  0173' 1C00'              	btfss	(sqrt@frac+3)^(0+128),0
  2435  0174' 2800'              	goto	l4283
  2436  0175' 0800'              	movf	sqrt@frac^(0+128),w
  2437  0176' 0080'              	movwf	??_sqrt^(0+128)
  2438  0177' 0800'              	movf	(sqrt@frac+1)^(0+128),w
  2439  0178' 0081'              	movwf	(??_sqrt^(0+128)+1)
  2440  0179' 0800'              	movf	(sqrt@frac+2)^(0+128),w
  2441  017A' 0082'              	movwf	(??_sqrt^(0+128)+2)
  2442  017B' 0800'              	movf	(sqrt@frac+3)^(0+128),w
  2443  017C' 0083'              	movwf	(??_sqrt^(0+128)+3)
  2444  017D' 3001               	movlw	1
  2445  017E'                    u6175:
  2446  017E' 1003               	clrc
  2447  017F' 0C83'              	rrf	(??_sqrt^(0+128)+3),f
  2448  0180' 0C82'              	rrf	(??_sqrt^(0+128)+2),f
  2449  0181' 0C81'              	rrf	(??_sqrt^(0+128)+1),f
  2450  0182' 0C80'              	rrf	??_sqrt^(0+128),f
  2451  0183' 3EFF               	addlw	-1
  2452  0184' 1D03               	skipz
  2453  0185' 2800'              	goto	u6175
  2454  0186' 0800'              	movf	(??_sqrt+3)^(0+128),w
  2455  0187' 0080'              	movwf	(sqrt@frac+3)^(0+128)
  2456  0188' 0800'              	movf	(??_sqrt+2)^(0+128),w
  2457  0189' 0080'              	movwf	(sqrt@frac+2)^(0+128)
  2458  018A' 0800'              	movf	(??_sqrt+1)^(0+128),w
  2459  018B' 0080'              	movwf	(sqrt@frac+1)^(0+128)
  2460  018C' 0800'              	movf	??_sqrt^(0+128),w
  2461  018D' 0080'              	movwf	sqrt@frac^(0+128)
  2462  018E' 3001               	movlw	1
  2463  018F' 0780'              	addwf	sqrt@exp^(0+128),f
  2464  0190' 1803               	skipnc
  2465  0191' 0A80'              	incf	(sqrt@exp+1)^(0+128),f
  2466  0192' 3000               	movlw	0
  2467  0193' 0780'              	addwf	(sqrt@exp+1)^(0+128),f
  2468  0194'                    l4283:
  2469  0194' 30FF               	movlw	255
  2470  0195' 0500'              	andwf	sqrt@frac^(0+128),w
  2471  0196' 0080'              	movwf	sqrt@root^(0+128)
  2472  0197' 30FF               	movlw	255
  2473  0198' 0500'              	andwf	(sqrt@frac+1)^(0+128),w
  2474  0199' 0080'              	movwf	(sqrt@root+1)^(0+128)
  2475  019A' 307F               	movlw	127
  2476  019B' 0500'              	andwf	(sqrt@frac+2)^(0+128),w
  2477  019C' 0080'              	movwf	(sqrt@root+2)^(0+128)
  2478  019D' 3000               	movlw	0
  2479  019E' 0500'              	andwf	(sqrt@frac+3)^(0+128),w
  2480  019F' 0080'              	movwf	(sqrt@root+3)^(0+128)
  2481  01A0' 0800'              	movf	sqrt@exp^(0+128),w
  2482  01A1' 0080'              	movwf	sqrt@p^(0+128)
  2483  01A2' 1800'              	btfsc	sqrt@p^(0+128),0
  2484  01A3' 1782'              	bsf	(sqrt@root^(0+128)+2),7
  2485  01A4' 0800'              	movf	sqrt@p^(0+128),w
  2486  01A5' 0080'              	movwf	??_sqrt^(0+128)
  2487  01A6' 1003               	clrc
  2488  01A7' 0C00'              	rrf	??_sqrt^(0+128),w
  2489  01A8' 0083'              	movwf	(sqrt@root^(0+128)+3)
  2490  01A9' 307F               	movlw	127
  2491  01AA' 0080'              	movwf	??_sqrt^(0+128)
  2492  01AB' 0800'              	movf	??_sqrt^(0+128),w
  2493  01AC' 0583'              	andwf	(sqrt@root^(0+128)+3),f
  2494  01AD' 0800'              	movf	(sqrt@root+3)^(0+128),w
  2495  01AE' 0080'              	movwf	(?_sqrt+3)^(0+128)
  2496  01AF' 0800'              	movf	(sqrt@root+2)^(0+128),w
  2497  01B0' 0080'              	movwf	(?_sqrt+2)^(0+128)
  2498  01B1' 0800'              	movf	(sqrt@root+1)^(0+128),w
  2499  01B2' 0080'              	movwf	(?_sqrt+1)^(0+128)
  2500  01B3' 0800'              	movf	sqrt@root^(0+128),w
  2501  01B4' 0080'              	movwf	?_sqrt^(0+128)
  2502  01B5' 0008               	return
  2503  01B6'                    __end_of_sqrt:
  2504                           
  2505                           	psect	text6
  2506  0000'                    __ptext6:	
  2507 ;; *************** function _pow *****************
  2508 ;; Defined at:
  2509 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/pow.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  x               4   30[BANK1 ] unsigned char 
  2512 ;;  y               4   34[BANK1 ] unsigned char 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  yi              4   47[BANK1 ] unsigned long 
  2515 ;;  sign            1   46[BANK1 ] unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  4   30[BANK1 ] unsigned char 
  2518 ;; Registers used:
  2519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 300/100
  2522 ;;		On exit  : 300/100
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2525 ;;      Params:         0       0       8       0
  2526 ;;      Locals:         0       0      13       0
  2527 ;;      Temps:          0       0       0       0
  2528 ;;      Totals:         0       0      21       0
  2529 ;;Total ram usage:       21 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; Hardware stack levels required when called: 4
  2532 ;; This function calls:
  2533 ;;		___fleq
  2534 ;;		___flge
  2535 ;;		___flmul
  2536 ;;		___flneg
  2537 ;;		___fltol
  2538 ;;		___xxtofl
  2539 ;;		_exp
  2540 ;;		_log
  2541 ;; This function is called by:
  2542 ;;		_vector_length
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546  0000'                    _pow:	
  2547                           ;psect for function _pow
  2548                           
  2549                           
  2550                           ;incstack = 0
  2551                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2552  0000' 0180'              	clrf	pow@sign^(0+128)
  2553  0001' 0800'              	movf	(pow@x+3)^(0+128),w
  2554  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  2555  0003' 008D'              	movwf	___fleq@ff1+3
  2556  0004' 1683               	bsf	3,5	;RP0=1, select bank1
  2557  0005' 0800'              	movf	(pow@x+2)^(0+128),w
  2558  0006' 1283               	bcf	3,5	;RP0=0, select bank0
  2559  0007' 008C'              	movwf	___fleq@ff1+2
  2560  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  2561  0009' 0800'              	movf	(pow@x+1)^(0+128),w
  2562  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  2563  000B' 008B'              	movwf	___fleq@ff1+1
  2564  000C' 1683               	bsf	3,5	;RP0=1, select bank1
  2565  000D' 0800'              	movf	pow@x^(0+128),w
  2566  000E' 1283               	bcf	3,5	;RP0=0, select bank0
  2567  000F' 008A'              	movwf	___fleq@ff1
  2568  0010' 3000               	movlw	0
  2569  0011' 0091'              	movwf	___fleq@ff2+3
  2570  0012' 3000               	movlw	0
  2571  0013' 0090'              	movwf	___fleq@ff2+2
  2572  0014' 3000               	movlw	0
  2573  0015' 008F'              	movwf	___fleq@ff2+1
  2574  0016' 3000               	movlw	0
  2575  0017' 008E'              	movwf	___fleq@ff2
  2576  0018' 118A' 2000' 118A'  	fcall	___fleq
  2577  001B' 1C03               	btfss	3,0
  2578  001C' 2800'              	goto	l4175
  2579  001D' 3000               	movlw	0
  2580  001E' 0083'              	movwf	___flge@ff1+3
  2581  001F' 3000               	movlw	0
  2582  0020' 0082'              	movwf	___flge@ff1+2
  2583  0021' 3000               	movlw	0
  2584  0022' 0081'              	movwf	___flge@ff1+1
  2585  0023' 3000               	movlw	0
  2586  0024' 0080'              	movwf	___flge@ff1
  2587  0025' 1683               	bsf	3,5	;RP0=1, select bank1
  2588  0026' 0800'              	movf	(pow@y+3)^(0+128),w
  2589  0027' 0087'              	movwf	___flge@ff2+3
  2590  0028' 0800'              	movf	(pow@y+2)^(0+128),w
  2591  0029' 0086'              	movwf	___flge@ff2+2
  2592  002A' 0800'              	movf	(pow@y+1)^(0+128),w
  2593  002B' 0085'              	movwf	___flge@ff2+1
  2594  002C' 0800'              	movf	pow@y^(0+128),w
  2595  002D' 0084'              	movwf	___flge@ff2
  2596  002E' 118A' 2000' 118A'  	fcall	___flge
  2597  0031' 1C03               	btfss	3,0
  2598  0032' 2800'              	goto	l852
  2599  0033' 3021               	movlw	33
  2600  0034' 1283               	bcf	3,5	;RP0=0, select bank2
  2601  0035' 1703               	bsf	3,6	;RP1=1, select bank2
  2602  0036' 0080'              	movwf	_errno^(0+256)
  2603  0037' 3000               	movlw	0
  2604  0038' 0081'              	movwf	(_errno^(0+256)+1)
  2605  0039'                    l852:
  2606  0039' 3000               	movlw	0
  2607  003A' 1683               	bsf	3,5	;RP0=1, select bank1
  2608  003B' 1303               	bcf	3,6	;RP1=0, select bank1
  2609  003C' 0080'              	movwf	(?_pow+3)^(0+128)
  2610  003D' 3000               	movlw	0
  2611  003E' 0080'              	movwf	(?_pow+2)^(0+128)
  2612  003F' 3000               	movlw	0
  2613  0040' 0080'              	movwf	(?_pow+1)^(0+128)
  2614  0041' 3000               	movlw	0
  2615  0042' 0080'              	movwf	?_pow^(0+128)
  2616  0043' 0008               	return
  2617  0044'                    l4175:
  2618  0044' 1683               	bsf	3,5	;RP0=1, select bank1
  2619  0045' 0800'              	movf	(pow@y+3)^(0+128),w
  2620  0046' 1283               	bcf	3,5	;RP0=0, select bank0
  2621  0047' 008D'              	movwf	___fleq@ff1+3
  2622  0048' 1683               	bsf	3,5	;RP0=1, select bank1
  2623  0049' 0800'              	movf	(pow@y+2)^(0+128),w
  2624  004A' 1283               	bcf	3,5	;RP0=0, select bank0
  2625  004B' 008C'              	movwf	___fleq@ff1+2
  2626  004C' 1683               	bsf	3,5	;RP0=1, select bank1
  2627  004D' 0800'              	movf	(pow@y+1)^(0+128),w
  2628  004E' 1283               	bcf	3,5	;RP0=0, select bank0
  2629  004F' 008B'              	movwf	___fleq@ff1+1
  2630  0050' 1683               	bsf	3,5	;RP0=1, select bank1
  2631  0051' 0800'              	movf	pow@y^(0+128),w
  2632  0052' 1283               	bcf	3,5	;RP0=0, select bank0
  2633  0053' 008A'              	movwf	___fleq@ff1
  2634  0054' 3000               	movlw	0
  2635  0055' 0091'              	movwf	___fleq@ff2+3
  2636  0056' 3000               	movlw	0
  2637  0057' 0090'              	movwf	___fleq@ff2+2
  2638  0058' 3000               	movlw	0
  2639  0059' 008F'              	movwf	___fleq@ff2+1
  2640  005A' 3000               	movlw	0
  2641  005B' 008E'              	movwf	___fleq@ff2
  2642  005C' 118A' 2000' 118A'  	fcall	___fleq
  2643  005F' 1C03               	btfss	3,0
  2644  0060' 2800'              	goto	l4181
  2645  0061' 303F               	movlw	63
  2646  0062' 1683               	bsf	3,5	;RP0=1, select bank1
  2647  0063' 0080'              	movwf	(?_pow+3)^(0+128)
  2648  0064' 3080               	movlw	128
  2649  0065' 0080'              	movwf	(?_pow+2)^(0+128)
  2650  0066' 3000               	movlw	0
  2651  0067' 0080'              	movwf	(?_pow+1)^(0+128)
  2652  0068' 3000               	movlw	0
  2653  0069' 0080'              	movwf	?_pow^(0+128)
  2654  006A' 0008               	return
  2655  006B'                    l4181:
  2656  006B' 1683               	bsf	3,5	;RP0=1, select bank1
  2657  006C' 0800'              	movf	(pow@x+3)^(0+128),w
  2658  006D' 0083'              	movwf	___flge@ff1+3
  2659  006E' 0800'              	movf	(pow@x+2)^(0+128),w
  2660  006F' 0082'              	movwf	___flge@ff1+2
  2661  0070' 0800'              	movf	(pow@x+1)^(0+128),w
  2662  0071' 0081'              	movwf	___flge@ff1+1
  2663  0072' 0800'              	movf	pow@x^(0+128),w
  2664  0073' 0080'              	movwf	___flge@ff1
  2665  0074' 3000               	movlw	0
  2666  0075' 0087'              	movwf	___flge@ff2+3
  2667  0076' 3000               	movlw	0
  2668  0077' 0086'              	movwf	___flge@ff2+2
  2669  0078' 3000               	movlw	0
  2670  0079' 0085'              	movwf	___flge@ff2+1
  2671  007A' 3000               	movlw	0
  2672  007B' 0084'              	movwf	___flge@ff2
  2673  007C' 118A' 2000' 118A'  	fcall	___flge
  2674  007F' 1803               	btfsc	3,0
  2675  0080' 2800'              	goto	l4193
  2676  0081' 1683               	bsf	3,5	;RP0=1, select bank1
  2677  0082' 0800'              	movf	(pow@y+3)^(0+128),w
  2678  0083' 0083'              	movwf	___fltol@f1+3
  2679  0084' 0800'              	movf	(pow@y+2)^(0+128),w
  2680  0085' 0082'              	movwf	___fltol@f1+2
  2681  0086' 0800'              	movf	(pow@y+1)^(0+128),w
  2682  0087' 0081'              	movwf	___fltol@f1+1
  2683  0088' 0800'              	movf	pow@y^(0+128),w
  2684  0089' 0080'              	movwf	___fltol@f1
  2685  008A' 118A' 2000' 118A'  	fcall	___fltol
  2686  008D' 0803'              	movf	?___fltol+3,w
  2687  008E' 1683               	bsf	3,5	;RP0=1, select bank1
  2688  008F' 1303               	bcf	3,6	;RP1=0, select bank1
  2689  0090' 0080'              	movwf	(pow@yi+3)^(0+128)
  2690  0091' 0802'              	movf	?___fltol+2,w
  2691  0092' 0080'              	movwf	(pow@yi+2)^(0+128)
  2692  0093' 0801'              	movf	?___fltol+1,w
  2693  0094' 0080'              	movwf	(pow@yi+1)^(0+128)
  2694  0095' 0800'              	movf	?___fltol,w
  2695  0096' 0080'              	movwf	pow@yi^(0+128)
  2696  0097' 0800'              	movf	(pow@yi+3)^(0+128),w
  2697  0098' 008D'              	movwf	___xxtofl@val+3
  2698  0099' 0800'              	movf	(pow@yi+2)^(0+128),w
  2699  009A' 008C'              	movwf	___xxtofl@val+2
  2700  009B' 0800'              	movf	(pow@yi+1)^(0+128),w
  2701  009C' 008B'              	movwf	___xxtofl@val+1
  2702  009D' 0800'              	movf	pow@yi^(0+128),w
  2703  009E' 008A'              	movwf	___xxtofl@val
  2704  009F' 3000               	movlw	0
  2705  00A0' 118A' 2000' 118A'  	fcall	___xxtofl
  2706  00A3' 080D'              	movf	?___xxtofl+3,w
  2707  00A4' 008D'              	movwf	___fleq@ff1+3
  2708  00A5' 080C'              	movf	?___xxtofl+2,w
  2709  00A6' 008C'              	movwf	___fleq@ff1+2
  2710  00A7' 080B'              	movf	?___xxtofl+1,w
  2711  00A8' 008B'              	movwf	___fleq@ff1+1
  2712  00A9' 080A'              	movf	?___xxtofl,w
  2713  00AA' 008A'              	movwf	___fleq@ff1
  2714  00AB' 1683               	bsf	3,5	;RP0=1, select bank1
  2715  00AC' 0800'              	movf	(pow@y+3)^(0+128),w
  2716  00AD' 1283               	bcf	3,5	;RP0=0, select bank0
  2717  00AE' 0091'              	movwf	___fleq@ff2+3
  2718  00AF' 1683               	bsf	3,5	;RP0=1, select bank1
  2719  00B0' 0800'              	movf	(pow@y+2)^(0+128),w
  2720  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
  2721  00B2' 0090'              	movwf	___fleq@ff2+2
  2722  00B3' 1683               	bsf	3,5	;RP0=1, select bank1
  2723  00B4' 0800'              	movf	(pow@y+1)^(0+128),w
  2724  00B5' 1283               	bcf	3,5	;RP0=0, select bank0
  2725  00B6' 008F'              	movwf	___fleq@ff2+1
  2726  00B7' 1683               	bsf	3,5	;RP0=1, select bank1
  2727  00B8' 0800'              	movf	pow@y^(0+128),w
  2728  00B9' 1283               	bcf	3,5	;RP0=0, select bank0
  2729  00BA' 008E'              	movwf	___fleq@ff2
  2730  00BB' 118A' 2000' 118A'  	fcall	___fleq
  2731  00BE' 1803               	btfsc	3,0
  2732  00BF' 2800'              	goto	l4189
  2733  00C0' 3021               	movlw	33
  2734  00C1' 1703               	bsf	3,6	;RP1=1, select bank2
  2735  00C2' 0080'              	movwf	_errno^(0+256)
  2736  00C3' 3000               	movlw	0
  2737  00C4' 0081'              	movwf	(_errno^(0+256)+1)
  2738  00C5' 3000               	movlw	0
  2739  00C6' 1683               	bsf	3,5	;RP0=1, select bank1
  2740  00C7' 1303               	bcf	3,6	;RP1=0, select bank1
  2741  00C8' 0080'              	movwf	(?_pow+3)^(0+128)
  2742  00C9' 3000               	movlw	0
  2743  00CA' 0080'              	movwf	(?_pow+2)^(0+128)
  2744  00CB' 3000               	movlw	0
  2745  00CC' 0080'              	movwf	(?_pow+1)^(0+128)
  2746  00CD' 3000               	movlw	0
  2747  00CE' 0080'              	movwf	?_pow^(0+128)
  2748  00CF' 0008               	return
  2749  00D0'                    l4189:
  2750  00D0' 1683               	bsf	3,5	;RP0=1, select bank1
  2751  00D1' 0800'              	movf	pow@yi^(0+128),w
  2752  00D2' 3901               	andlw	1
  2753  00D3' 0080'              	movwf	pow@sign^(0+128)
  2754  00D4' 0800'              	movf	(pow@x+3)^(0+128),w
  2755  00D5' 0083'              	movwf	___flneg@f1+3
  2756  00D6' 0800'              	movf	(pow@x+2)^(0+128),w
  2757  00D7' 0082'              	movwf	___flneg@f1+2
  2758  00D8' 0800'              	movf	(pow@x+1)^(0+128),w
  2759  00D9' 0081'              	movwf	___flneg@f1+1
  2760  00DA' 0800'              	movf	pow@x^(0+128),w
  2761  00DB' 0080'              	movwf	___flneg@f1
  2762  00DC' 118A' 2000' 118A'  	fcall	___flneg
  2763  00DF' 0803'              	movf	?___flneg+3,w
  2764  00E0' 0080'              	movwf	(pow@x+3)^(0+128)
  2765  00E1' 0802'              	movf	?___flneg+2,w
  2766  00E2' 0080'              	movwf	(pow@x+2)^(0+128)
  2767  00E3' 0801'              	movf	?___flneg+1,w
  2768  00E4' 0080'              	movwf	(pow@x+1)^(0+128)
  2769  00E5' 0800'              	movf	?___flneg,w
  2770  00E6' 0080'              	movwf	pow@x^(0+128)
  2771  00E7'                    l4193:
  2772  00E7' 1683               	bsf	3,5	;RP0=1, select bank1
  2773  00E8' 0800'              	movf	(pow@x+3)^(0+128),w
  2774  00E9' 0080'              	movwf	(log@x+3)^(0+128)
  2775  00EA' 0800'              	movf	(pow@x+2)^(0+128),w
  2776  00EB' 0080'              	movwf	(log@x+2)^(0+128)
  2777  00EC' 0800'              	movf	(pow@x+1)^(0+128),w
  2778  00ED' 0080'              	movwf	(log@x+1)^(0+128)
  2779  00EE' 0800'              	movf	pow@x^(0+128),w
  2780  00EF' 0080'              	movwf	log@x^(0+128)
  2781  00F0' 118A' 2000' 118A'  	fcall	_log
  2782  00F3' 0800'              	movf	(?_log+3)^(0+128),w
  2783  00F4' 0080'              	movwf	(_pow$1246+3)^(0+128)
  2784  00F5' 0800'              	movf	(?_log+2)^(0+128),w
  2785  00F6' 0080'              	movwf	(_pow$1246+2)^(0+128)
  2786  00F7' 0800'              	movf	(?_log+1)^(0+128),w
  2787  00F8' 0080'              	movwf	(_pow$1246+1)^(0+128)
  2788  00F9' 0800'              	movf	?_log^(0+128),w
  2789  00FA' 0080'              	movwf	_pow$1246^(0+128)
  2790  00FB' 0800'              	movf	(pow@y+3)^(0+128),w
  2791  00FC' 1283               	bcf	3,5	;RP0=0, select bank0
  2792  00FD' 00A0'              	movwf	___flmul@b+3
  2793  00FE' 1683               	bsf	3,5	;RP0=1, select bank1
  2794  00FF' 0800'              	movf	(pow@y+2)^(0+128),w
  2795  0100' 1283               	bcf	3,5	;RP0=0, select bank0
  2796  0101' 009F'              	movwf	___flmul@b+2
  2797  0102' 1683               	bsf	3,5	;RP0=1, select bank1
  2798  0103' 0800'              	movf	(pow@y+1)^(0+128),w
  2799  0104' 1283               	bcf	3,5	;RP0=0, select bank0
  2800  0105' 009E'              	movwf	___flmul@b+1
  2801  0106' 1683               	bsf	3,5	;RP0=1, select bank1
  2802  0107' 0800'              	movf	pow@y^(0+128),w
  2803  0108' 1283               	bcf	3,5	;RP0=0, select bank0
  2804  0109' 009D'              	movwf	___flmul@b
  2805  010A' 1683               	bsf	3,5	;RP0=1, select bank1
  2806  010B' 0800'              	movf	(_pow$1246+3)^(0+128),w
  2807  010C' 1283               	bcf	3,5	;RP0=0, select bank0
  2808  010D' 00A4'              	movwf	___flmul@a+3
  2809  010E' 1683               	bsf	3,5	;RP0=1, select bank1
  2810  010F' 0800'              	movf	(_pow$1246+2)^(0+128),w
  2811  0110' 1283               	bcf	3,5	;RP0=0, select bank0
  2812  0111' 00A3'              	movwf	___flmul@a+2
  2813  0112' 1683               	bsf	3,5	;RP0=1, select bank1
  2814  0113' 0800'              	movf	(_pow$1246+1)^(0+128),w
  2815  0114' 1283               	bcf	3,5	;RP0=0, select bank0
  2816  0115' 00A2'              	movwf	___flmul@a+1
  2817  0116' 1683               	bsf	3,5	;RP0=1, select bank1
  2818  0117' 0800'              	movf	_pow$1246^(0+128),w
  2819  0118' 1283               	bcf	3,5	;RP0=0, select bank0
  2820  0119' 00A1'              	movwf	___flmul@a
  2821  011A' 118A' 2000' 118A'  	fcall	___flmul
  2822  011D' 0820'              	movf	?___flmul+3,w
  2823  011E' 1683               	bsf	3,5	;RP0=1, select bank1
  2824  011F' 0080'              	movwf	(_pow$1247+3)^(0+128)
  2825  0120' 1283               	bcf	3,5	;RP0=0, select bank0
  2826  0121' 081F'              	movf	?___flmul+2,w
  2827  0122' 1683               	bsf	3,5	;RP0=1, select bank1
  2828  0123' 0080'              	movwf	(_pow$1247+2)^(0+128)
  2829  0124' 1283               	bcf	3,5	;RP0=0, select bank0
  2830  0125' 081E'              	movf	?___flmul+1,w
  2831  0126' 1683               	bsf	3,5	;RP0=1, select bank1
  2832  0127' 0080'              	movwf	(_pow$1247+1)^(0+128)
  2833  0128' 1283               	bcf	3,5	;RP0=0, select bank0
  2834  0129' 081D'              	movf	?___flmul,w
  2835  012A' 1683               	bsf	3,5	;RP0=1, select bank1
  2836  012B' 0080'              	movwf	_pow$1247^(0+128)
  2837  012C' 0800'              	movf	(_pow$1247+3)^(0+128),w
  2838  012D' 0080'              	movwf	(exp@x+3)^(0+128)
  2839  012E' 0800'              	movf	(_pow$1247+2)^(0+128),w
  2840  012F' 0080'              	movwf	(exp@x+2)^(0+128)
  2841  0130' 0800'              	movf	(_pow$1247+1)^(0+128),w
  2842  0131' 0080'              	movwf	(exp@x+1)^(0+128)
  2843  0132' 0800'              	movf	_pow$1247^(0+128),w
  2844  0133' 0080'              	movwf	exp@x^(0+128)
  2845  0134' 118A' 2000' 118A'  	fcall	_exp
  2846  0137' 0800'              	movf	(?_exp+3)^(0+128),w
  2847  0138' 0080'              	movwf	(pow@x+3)^(0+128)
  2848  0139' 0800'              	movf	(?_exp+2)^(0+128),w
  2849  013A' 0080'              	movwf	(pow@x+2)^(0+128)
  2850  013B' 0800'              	movf	(?_exp+1)^(0+128),w
  2851  013C' 0080'              	movwf	(pow@x+1)^(0+128)
  2852  013D' 0800'              	movf	?_exp^(0+128),w
  2853  013E' 0080'              	movwf	pow@x^(0+128)
  2854  013F' 0800'              	movf	pow@sign^(0+128),w
  2855  0140' 1903               	btfsc	3,2
  2856  0141' 0008               	return
  2857  0142' 0800'              	movf	(pow@x+3)^(0+128),w
  2858  0143' 0083'              	movwf	___flneg@f1+3
  2859  0144' 0800'              	movf	(pow@x+2)^(0+128),w
  2860  0145' 0082'              	movwf	___flneg@f1+2
  2861  0146' 0800'              	movf	(pow@x+1)^(0+128),w
  2862  0147' 0081'              	movwf	___flneg@f1+1
  2863  0148' 0800'              	movf	pow@x^(0+128),w
  2864  0149' 0080'              	movwf	___flneg@f1
  2865  014A' 118A' 2000'        	fcall	___flneg
  2866  014C' 0803'              	movf	?___flneg+3,w
  2867  014D' 0080'              	movwf	(?_pow+3)^(0+128)
  2868  014E' 0802'              	movf	?___flneg+2,w
  2869  014F' 0080'              	movwf	(?_pow+2)^(0+128)
  2870  0150' 0801'              	movf	?___flneg+1,w
  2871  0151' 0080'              	movwf	(?_pow+1)^(0+128)
  2872  0152' 0800'              	movf	?___flneg,w
  2873  0153' 0080'              	movwf	?_pow^(0+128)
  2874  0154' 0008               	return
  2875  0155'                    __end_of_pow:
  2876                           
  2877                           	psect	text7
  2878  0000'                    __ptext7:	
  2879 ;; *************** function _log *****************
  2880 ;; Defined at:
  2881 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/log.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  x               4   11[BANK1 ] unsigned char 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  exponent        2   15[BANK1 ] int 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  4   11[BANK1 ] int 
  2888 ;; Registers used:
  2889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 300/100
  2892 ;;		On exit  : 300/100
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2895 ;;      Params:         0       0       4       0
  2896 ;;      Locals:         0       0       2       0
  2897 ;;      Temps:          0       0       0       0
  2898 ;;      Totals:         0       0       6       0
  2899 ;;Total ram usage:        6 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 3
  2902 ;; This function calls:
  2903 ;;		___fladd
  2904 ;;		___fleq
  2905 ;;		___flge
  2906 ;;		___flmul
  2907 ;;		___xxtofl
  2908 ;;		_eval_poly
  2909 ;;		_frexp
  2910 ;; This function is called by:
  2911 ;;		_pow
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915  0000'                    _log:	
  2916                           ;psect for function _log
  2917                           
  2918                           
  2919                           ;incstack = 0
  2920                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2921  0000' 0800'              	movf	(log@x+3)^(0+128),w
  2922  0001' 0083'              	movwf	___flge@ff1+3
  2923  0002' 0800'              	movf	(log@x+2)^(0+128),w
  2924  0003' 0082'              	movwf	___flge@ff1+2
  2925  0004' 0800'              	movf	(log@x+1)^(0+128),w
  2926  0005' 0081'              	movwf	___flge@ff1+1
  2927  0006' 0800'              	movf	log@x^(0+128),w
  2928  0007' 0080'              	movwf	___flge@ff1
  2929  0008' 3000               	movlw	0
  2930  0009' 0087'              	movwf	___flge@ff2+3
  2931  000A' 3000               	movlw	0
  2932  000B' 0086'              	movwf	___flge@ff2+2
  2933  000C' 3000               	movlw	0
  2934  000D' 0085'              	movwf	___flge@ff2+1
  2935  000E' 3000               	movlw	0
  2936  000F' 0084'              	movwf	___flge@ff2
  2937  0010' 118A' 2000' 118A'  	fcall	___flge
  2938  0013' 1803               	btfsc	3,0
  2939  0014' 2800'              	goto	l4103
  2940  0015' 3021               	movlw	33
  2941  0016' 1283               	bcf	3,5	;RP0=0, select bank2
  2942  0017' 1703               	bsf	3,6	;RP1=1, select bank2
  2943  0018' 0080'              	movwf	_errno^(0+256)
  2944  0019' 3000               	movlw	0
  2945  001A' 0081'              	movwf	(_errno^(0+256)+1)
  2946  001B' 3000               	movlw	0
  2947  001C' 1683               	bsf	3,5	;RP0=1, select bank1
  2948  001D' 1303               	bcf	3,6	;RP1=0, select bank1
  2949  001E' 0080'              	movwf	(?_log+3)^(0+128)
  2950  001F' 3000               	movlw	0
  2951  0020' 0080'              	movwf	(?_log+2)^(0+128)
  2952  0021' 3000               	movlw	0
  2953  0022' 0080'              	movwf	(?_log+1)^(0+128)
  2954  0023' 3000               	movlw	0
  2955  0024' 0080'              	movwf	?_log^(0+128)
  2956  0025' 0008               	return
  2957  0026'                    l4103:
  2958  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  2959  0027' 0800'              	movf	(log@x+3)^(0+128),w
  2960  0028' 1283               	bcf	3,5	;RP0=0, select bank0
  2961  0029' 008D'              	movwf	___fleq@ff1+3
  2962  002A' 1683               	bsf	3,5	;RP0=1, select bank1
  2963  002B' 0800'              	movf	(log@x+2)^(0+128),w
  2964  002C' 1283               	bcf	3,5	;RP0=0, select bank0
  2965  002D' 008C'              	movwf	___fleq@ff1+2
  2966  002E' 1683               	bsf	3,5	;RP0=1, select bank1
  2967  002F' 0800'              	movf	(log@x+1)^(0+128),w
  2968  0030' 1283               	bcf	3,5	;RP0=0, select bank0
  2969  0031' 008B'              	movwf	___fleq@ff1+1
  2970  0032' 1683               	bsf	3,5	;RP0=1, select bank1
  2971  0033' 0800'              	movf	log@x^(0+128),w
  2972  0034' 1283               	bcf	3,5	;RP0=0, select bank0
  2973  0035' 008A'              	movwf	___fleq@ff1
  2974  0036' 3000               	movlw	0
  2975  0037' 0091'              	movwf	___fleq@ff2+3
  2976  0038' 3000               	movlw	0
  2977  0039' 0090'              	movwf	___fleq@ff2+2
  2978  003A' 3000               	movlw	0
  2979  003B' 008F'              	movwf	___fleq@ff2+1
  2980  003C' 3000               	movlw	0
  2981  003D' 008E'              	movwf	___fleq@ff2
  2982  003E' 118A' 2000' 118A'  	fcall	___fleq
  2983  0041' 1C03               	btfss	3,0
  2984  0042' 2800'              	goto	l4109
  2985  0043' 3022               	movlw	34
  2986  0044' 1703               	bsf	3,6	;RP1=1, select bank2
  2987  0045' 0080'              	movwf	_errno^(0+256)
  2988  0046' 3000               	movlw	0
  2989  0047' 0081'              	movwf	(_errno^(0+256)+1)
  2990  0048' 3000               	movlw	0
  2991  0049' 1683               	bsf	3,5	;RP0=1, select bank1
  2992  004A' 1303               	bcf	3,6	;RP1=0, select bank1
  2993  004B' 0080'              	movwf	(?_log+3)^(0+128)
  2994  004C' 3000               	movlw	0
  2995  004D' 0080'              	movwf	(?_log+2)^(0+128)
  2996  004E' 3000               	movlw	0
  2997  004F' 0080'              	movwf	(?_log+1)^(0+128)
  2998  0050' 3000               	movlw	0
  2999  0051' 0080'              	movwf	?_log^(0+128)
  3000  0052' 0008               	return
  3001  0053'                    l4109:
  3002  0053' 30BF               	movlw	191
  3003  0054' 00BA'              	movwf	___fladd@b+3
  3004  0055' 3080               	movlw	128
  3005  0056' 00B9'              	movwf	___fladd@b+2
  3006  0057' 3000               	movlw	0
  3007  0058' 00B8'              	movwf	___fladd@b+1
  3008  0059' 3000               	movlw	0
  3009  005A' 00B7'              	movwf	___fladd@b
  3010  005B' 3040               	movlw	64
  3011  005C' 00A0'              	movwf	___flmul@b+3
  3012  005D' 3000               	movlw	0
  3013  005E' 009F'              	movwf	___flmul@b+2
  3014  005F' 3000               	movlw	0
  3015  0060' 009E'              	movwf	___flmul@b+1
  3016  0061' 3000               	movlw	0
  3017  0062' 009D'              	movwf	___flmul@b
  3018  0063' 3000'              	movlw	(low (log@exponent| 0))& (0+255)
  3019  0064' 009A'              	movwf	frexp@eptr
  3020  0065' 1683               	bsf	3,5	;RP0=1, select bank1
  3021  0066' 0800'              	movf	(log@x+3)^(0+128),w
  3022  0067' 1283               	bcf	3,5	;RP0=0, select bank0
  3023  0068' 0099'              	movwf	frexp@value+3
  3024  0069' 1683               	bsf	3,5	;RP0=1, select bank1
  3025  006A' 0800'              	movf	(log@x+2)^(0+128),w
  3026  006B' 1283               	bcf	3,5	;RP0=0, select bank0
  3027  006C' 0098'              	movwf	frexp@value+2
  3028  006D' 1683               	bsf	3,5	;RP0=1, select bank1
  3029  006E' 0800'              	movf	(log@x+1)^(0+128),w
  3030  006F' 1283               	bcf	3,5	;RP0=0, select bank0
  3031  0070' 0097'              	movwf	frexp@value+1
  3032  0071' 1683               	bsf	3,5	;RP0=1, select bank1
  3033  0072' 0800'              	movf	log@x^(0+128),w
  3034  0073' 1283               	bcf	3,5	;RP0=0, select bank0
  3035  0074' 0096'              	movwf	frexp@value
  3036  0075' 118A' 2000' 118A'  	fcall	_frexp
  3037  0078' 0819'              	movf	?_frexp+3,w
  3038  0079' 00A4'              	movwf	___flmul@a+3
  3039  007A' 0818'              	movf	?_frexp+2,w
  3040  007B' 00A3'              	movwf	___flmul@a+2
  3041  007C' 0817'              	movf	?_frexp+1,w
  3042  007D' 00A2'              	movwf	___flmul@a+1
  3043  007E' 0816'              	movf	?_frexp,w
  3044  007F' 00A1'              	movwf	___flmul@a
  3045  0080' 118A' 2000' 118A'  	fcall	___flmul
  3046  0083' 0820'              	movf	?___flmul+3,w
  3047  0084' 00BE'              	movwf	___fladd@a+3
  3048  0085' 081F'              	movf	?___flmul+2,w
  3049  0086' 00BD'              	movwf	___fladd@a+2
  3050  0087' 081E'              	movf	?___flmul+1,w
  3051  0088' 00BC'              	movwf	___fladd@a+1
  3052  0089' 081D'              	movf	?___flmul,w
  3053  008A' 00BB'              	movwf	___fladd@a
  3054  008B' 118A' 2000' 118A'  	fcall	___fladd
  3055  008E' 083A'              	movf	?___fladd+3,w
  3056  008F' 1683               	bsf	3,5	;RP0=1, select bank1
  3057  0090' 0080'              	movwf	(log@x+3)^(0+128)
  3058  0091' 1283               	bcf	3,5	;RP0=0, select bank0
  3059  0092' 0839'              	movf	?___fladd+2,w
  3060  0093' 1683               	bsf	3,5	;RP0=1, select bank1
  3061  0094' 0080'              	movwf	(log@x+2)^(0+128)
  3062  0095' 1283               	bcf	3,5	;RP0=0, select bank0
  3063  0096' 0838'              	movf	?___fladd+1,w
  3064  0097' 1683               	bsf	3,5	;RP0=1, select bank1
  3065  0098' 0080'              	movwf	(log@x+1)^(0+128)
  3066  0099' 1283               	bcf	3,5	;RP0=0, select bank0
  3067  009A' 0837'              	movf	?___fladd,w
  3068  009B' 1683               	bsf	3,5	;RP0=1, select bank1
  3069  009C' 0080'              	movwf	log@x^(0+128)
  3070  009D' 30FF               	movlw	255
  3071  009E' 0780'              	addwf	log@exponent^(0+128),f
  3072  009F' 1803               	skipnc
  3073  00A0' 0A80'              	incf	(log@exponent+1)^(0+128),f
  3074  00A1' 30FF               	movlw	255
  3075  00A2' 0780'              	addwf	(log@exponent+1)^(0+128),f
  3076  00A3' 0800'              	movf	(log@x+3)^(0+128),w
  3077  00A4' 0080'              	movwf	(eval_poly@x+3)^(0+128)
  3078  00A5' 0800'              	movf	(log@x+2)^(0+128),w
  3079  00A6' 0080'              	movwf	(eval_poly@x+2)^(0+128)
  3080  00A7' 0800'              	movf	(log@x+1)^(0+128),w
  3081  00A8' 0080'              	movwf	(eval_poly@x+1)^(0+128)
  3082  00A9' 0800'              	movf	log@x^(0+128),w
  3083  00AA' 0080'              	movwf	eval_poly@x^(0+128)
  3084  00AB' 3029               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  3085  00AC' 0080'              	movwf	eval_poly@d^(0+128)
  3086  00AD' 3008               	movlw	8
  3087  00AE' 0080'              	movwf	eval_poly@n^(0+128)
  3088  00AF' 3000               	movlw	0
  3089  00B0' 0081'              	movwf	(eval_poly@n^(0+128)+1)
  3090  00B1' 118A' 2000' 118A'  	fcall	_eval_poly
  3091  00B4' 0800'              	movf	(?_eval_poly+3)^(0+128),w
  3092  00B5' 0080'              	movwf	(log@x+3)^(0+128)
  3093  00B6' 0800'              	movf	(?_eval_poly+2)^(0+128),w
  3094  00B7' 0080'              	movwf	(log@x+2)^(0+128)
  3095  00B8' 0800'              	movf	(?_eval_poly+1)^(0+128),w
  3096  00B9' 0080'              	movwf	(log@x+1)^(0+128)
  3097  00BA' 0800'              	movf	?_eval_poly^(0+128),w
  3098  00BB' 0080'              	movwf	log@x^(0+128)
  3099  00BC' 0800'              	movf	(log@x+3)^(0+128),w
  3100  00BD' 1283               	bcf	3,5	;RP0=0, select bank0
  3101  00BE' 00BA'              	movwf	___fladd@b+3
  3102  00BF' 1683               	bsf	3,5	;RP0=1, select bank1
  3103  00C0' 0800'              	movf	(log@x+2)^(0+128),w
  3104  00C1' 1283               	bcf	3,5	;RP0=0, select bank0
  3105  00C2' 00B9'              	movwf	___fladd@b+2
  3106  00C3' 1683               	bsf	3,5	;RP0=1, select bank1
  3107  00C4' 0800'              	movf	(log@x+1)^(0+128),w
  3108  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  3109  00C6' 00B8'              	movwf	___fladd@b+1
  3110  00C7' 1683               	bsf	3,5	;RP0=1, select bank1
  3111  00C8' 0800'              	movf	log@x^(0+128),w
  3112  00C9' 1283               	bcf	3,5	;RP0=0, select bank0
  3113  00CA' 00B7'              	movwf	___fladd@b
  3114  00CB' 303F               	movlw	63
  3115  00CC' 00A0'              	movwf	___flmul@b+3
  3116  00CD' 3031               	movlw	49
  3117  00CE' 009F'              	movwf	___flmul@b+2
  3118  00CF' 3072               	movlw	114
  3119  00D0' 009E'              	movwf	___flmul@b+1
  3120  00D1' 3018               	movlw	24
  3121  00D2' 009D'              	movwf	___flmul@b
  3122  00D3' 1683               	bsf	3,5	;RP0=1, select bank1
  3123  00D4' 0800'              	movf	log@exponent^(0+128),w
  3124  00D5' 008A'              	movwf	___xxtofl@val
  3125  00D6' 0800'              	movf	(log@exponent+1)^(0+128),w
  3126  00D7' 008B'              	movwf	___xxtofl@val+1
  3127  00D8' 3000               	movlw	0
  3128  00D9' 1B8B'              	btfsc	___xxtofl@val+1,7
  3129  00DA' 30FF               	movlw	255
  3130  00DB' 008C'              	movwf	___xxtofl@val+2
  3131  00DC' 008D'              	movwf	___xxtofl@val+3
  3132  00DD' 3001               	movlw	1
  3133  00DE' 118A' 2000' 118A'  	fcall	___xxtofl
  3134  00E1' 080D'              	movf	?___xxtofl+3,w
  3135  00E2' 00A4'              	movwf	___flmul@a+3
  3136  00E3' 080C'              	movf	?___xxtofl+2,w
  3137  00E4' 00A3'              	movwf	___flmul@a+2
  3138  00E5' 080B'              	movf	?___xxtofl+1,w
  3139  00E6' 00A2'              	movwf	___flmul@a+1
  3140  00E7' 080A'              	movf	?___xxtofl,w
  3141  00E8' 00A1'              	movwf	___flmul@a
  3142  00E9' 118A' 2000' 118A'  	fcall	___flmul
  3143  00EC' 0820'              	movf	?___flmul+3,w
  3144  00ED' 00BE'              	movwf	___fladd@a+3
  3145  00EE' 081F'              	movf	?___flmul+2,w
  3146  00EF' 00BD'              	movwf	___fladd@a+2
  3147  00F0' 081E'              	movf	?___flmul+1,w
  3148  00F1' 00BC'              	movwf	___fladd@a+1
  3149  00F2' 081D'              	movf	?___flmul,w
  3150  00F3' 00BB'              	movwf	___fladd@a
  3151  00F4' 118A' 2000'        	fcall	___fladd
  3152  00F6' 083A'              	movf	?___fladd+3,w
  3153  00F7' 1683               	bsf	3,5	;RP0=1, select bank1
  3154  00F8' 0080'              	movwf	(?_log+3)^(0+128)
  3155  00F9' 1283               	bcf	3,5	;RP0=0, select bank0
  3156  00FA' 0839'              	movf	?___fladd+2,w
  3157  00FB' 1683               	bsf	3,5	;RP0=1, select bank1
  3158  00FC' 0080'              	movwf	(?_log+2)^(0+128)
  3159  00FD' 1283               	bcf	3,5	;RP0=0, select bank0
  3160  00FE' 0838'              	movf	?___fladd+1,w
  3161  00FF' 1683               	bsf	3,5	;RP0=1, select bank1
  3162  0100' 0080'              	movwf	(?_log+1)^(0+128)
  3163  0101' 1283               	bcf	3,5	;RP0=0, select bank0
  3164  0102' 0837'              	movf	?___fladd,w
  3165  0103' 1683               	bsf	3,5	;RP0=1, select bank1
  3166  0104' 0080'              	movwf	?_log^(0+128)
  3167  0105' 0008               	return
  3168  0106'                    __end_of_log:
  3169                           
  3170                           	psect	text8
  3171  0000'                    __ptext8:	
  3172 ;; *************** function _exp *****************
  3173 ;; Defined at:
  3174 ;;		line 12 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/exp.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  x               4   19[BANK1 ] int 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  exponent        2   27[BANK1 ] int 
  3179 ;;  sign            1   29[BANK1 ] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  4   19[BANK1 ] unsigned char 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 300/100
  3186 ;;		On exit  : 300/100
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3189 ;;      Params:         0       0       4       0
  3190 ;;      Locals:         0       0       7       0
  3191 ;;      Temps:          0       0       0       0
  3192 ;;      Totals:         0       0      11       0
  3193 ;;Total ram usage:       11 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 3
  3196 ;; This function calls:
  3197 ;;		___fldiv
  3198 ;;		___fleq
  3199 ;;		___flge
  3200 ;;		___flmul
  3201 ;;		___flneg
  3202 ;;		___flsub
  3203 ;;		___fltol
  3204 ;;		___xxtofl
  3205 ;;		_eval_poly
  3206 ;;		_floor
  3207 ;;		_ldexp
  3208 ;; This function is called by:
  3209 ;;		_pow
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213  0000'                    _exp:	
  3214                           ;psect for function _exp
  3215                           
  3216                           
  3217                           ;incstack = 0
  3218                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3219  0000' 0800'              	movf	(exp@x+3)^(0+128),w
  3220  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  3221  0002' 008D'              	movwf	___fleq@ff1+3
  3222  0003' 1683               	bsf	3,5	;RP0=1, select bank1
  3223  0004' 0800'              	movf	(exp@x+2)^(0+128),w
  3224  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  3225  0006' 008C'              	movwf	___fleq@ff1+2
  3226  0007' 1683               	bsf	3,5	;RP0=1, select bank1
  3227  0008' 0800'              	movf	(exp@x+1)^(0+128),w
  3228  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  3229  000A' 008B'              	movwf	___fleq@ff1+1
  3230  000B' 1683               	bsf	3,5	;RP0=1, select bank1
  3231  000C' 0800'              	movf	exp@x^(0+128),w
  3232  000D' 1283               	bcf	3,5	;RP0=0, select bank0
  3233  000E' 008A'              	movwf	___fleq@ff1
  3234  000F' 3000               	movlw	0
  3235  0010' 0091'              	movwf	___fleq@ff2+3
  3236  0011' 3000               	movlw	0
  3237  0012' 0090'              	movwf	___fleq@ff2+2
  3238  0013' 3000               	movlw	0
  3239  0014' 008F'              	movwf	___fleq@ff2+1
  3240  0015' 3000               	movlw	0
  3241  0016' 008E'              	movwf	___fleq@ff2
  3242  0017' 118A' 2000' 118A'  	fcall	___fleq
  3243  001A' 1C03               	btfss	3,0
  3244  001B' 2800'              	goto	l4125
  3245  001C' 303F               	movlw	63
  3246  001D' 1683               	bsf	3,5	;RP0=1, select bank1
  3247  001E' 0080'              	movwf	(?_exp+3)^(0+128)
  3248  001F' 3080               	movlw	128
  3249  0020' 0080'              	movwf	(?_exp+2)^(0+128)
  3250  0021' 3000               	movlw	0
  3251  0022' 0080'              	movwf	(?_exp+1)^(0+128)
  3252  0023' 3000               	movlw	0
  3253  0024' 0080'              	movwf	?_exp^(0+128)
  3254  0025' 0008               	return
  3255  0026'                    l4125:
  3256  0026' 3044               	movlw	68
  3257  0027' 0083'              	movwf	___flge@ff1+3
  3258  0028' 3031               	movlw	49
  3259  0029' 0082'              	movwf	___flge@ff1+2
  3260  002A' 3072               	movlw	114
  3261  002B' 0081'              	movwf	___flge@ff1+1
  3262  002C' 3018               	movlw	24
  3263  002D' 0080'              	movwf	___flge@ff1
  3264  002E' 1683               	bsf	3,5	;RP0=1, select bank1
  3265  002F' 0800'              	movf	(exp@x+3)^(0+128),w
  3266  0030' 0087'              	movwf	___flge@ff2+3
  3267  0031' 0800'              	movf	(exp@x+2)^(0+128),w
  3268  0032' 0086'              	movwf	___flge@ff2+2
  3269  0033' 0800'              	movf	(exp@x+1)^(0+128),w
  3270  0034' 0085'              	movwf	___flge@ff2+1
  3271  0035' 0800'              	movf	exp@x^(0+128),w
  3272  0036' 0084'              	movwf	___flge@ff2
  3273  0037' 118A' 2000' 118A'  	fcall	___flge
  3274  003A' 1803               	btfsc	3,0
  3275  003B' 2800'              	goto	l4131
  3276  003C' 3022               	movlw	34
  3277  003D' 1283               	bcf	3,5	;RP0=0, select bank2
  3278  003E' 1703               	bsf	3,6	;RP1=1, select bank2
  3279  003F' 0080'              	movwf	_errno^(0+256)
  3280  0040' 3000               	movlw	0
  3281  0041' 0081'              	movwf	(_errno^(0+256)+1)
  3282  0042' 307F               	movlw	127
  3283  0043' 1683               	bsf	3,5	;RP0=1, select bank1
  3284  0044' 1303               	bcf	3,6	;RP1=0, select bank1
  3285  0045' 0080'              	movwf	(?_exp+3)^(0+128)
  3286  0046' 307F               	movlw	127
  3287  0047' 0080'              	movwf	(?_exp+2)^(0+128)
  3288  0048' 30FF               	movlw	255
  3289  0049' 0080'              	movwf	(?_exp+1)^(0+128)
  3290  004A' 30FF               	movlw	255
  3291  004B' 0080'              	movwf	?_exp^(0+128)
  3292  004C' 0008               	return
  3293  004D'                    l4131:
  3294  004D' 1683               	bsf	3,5	;RP0=1, select bank1
  3295  004E' 0800'              	movf	(exp@x+3)^(0+128),w
  3296  004F' 0083'              	movwf	___flge@ff1+3
  3297  0050' 0800'              	movf	(exp@x+2)^(0+128),w
  3298  0051' 0082'              	movwf	___flge@ff1+2
  3299  0052' 0800'              	movf	(exp@x+1)^(0+128),w
  3300  0053' 0081'              	movwf	___flge@ff1+1
  3301  0054' 0800'              	movf	exp@x^(0+128),w
  3302  0055' 0080'              	movwf	___flge@ff1
  3303  0056' 30C4               	movlw	196
  3304  0057' 0087'              	movwf	___flge@ff2+3
  3305  0058' 303A               	movlw	58
  3306  0059' 0086'              	movwf	___flge@ff2+2
  3307  005A' 3048               	movlw	72
  3308  005B' 0085'              	movwf	___flge@ff2+1
  3309  005C' 3087               	movlw	135
  3310  005D' 0084'              	movwf	___flge@ff2
  3311  005E' 118A' 2000' 118A'  	fcall	___flge
  3312  0061' 1803               	btfsc	3,0
  3313  0062' 2800'              	goto	l4137
  3314  0063' 3022               	movlw	34
  3315  0064' 1283               	bcf	3,5	;RP0=0, select bank2
  3316  0065' 1703               	bsf	3,6	;RP1=1, select bank2
  3317  0066' 0080'              	movwf	_errno^(0+256)
  3318  0067' 3000               	movlw	0
  3319  0068' 0081'              	movwf	(_errno^(0+256)+1)
  3320  0069' 3000               	movlw	0
  3321  006A' 1683               	bsf	3,5	;RP0=1, select bank1
  3322  006B' 1303               	bcf	3,6	;RP1=0, select bank1
  3323  006C' 0080'              	movwf	(?_exp+3)^(0+128)
  3324  006D' 3000               	movlw	0
  3325  006E' 0080'              	movwf	(?_exp+2)^(0+128)
  3326  006F' 3000               	movlw	0
  3327  0070' 0080'              	movwf	(?_exp+1)^(0+128)
  3328  0071' 3000               	movlw	0
  3329  0072' 0080'              	movwf	?_exp^(0+128)
  3330  0073' 0008               	return
  3331  0074'                    l4137:
  3332  0074' 1683               	bsf	3,5	;RP0=1, select bank1
  3333  0075' 0800'              	movf	(exp@x+3)^(0+128),w
  3334  0076' 0083'              	movwf	___flge@ff1+3
  3335  0077' 0800'              	movf	(exp@x+2)^(0+128),w
  3336  0078' 0082'              	movwf	___flge@ff1+2
  3337  0079' 0800'              	movf	(exp@x+1)^(0+128),w
  3338  007A' 0081'              	movwf	___flge@ff1+1
  3339  007B' 0800'              	movf	exp@x^(0+128),w
  3340  007C' 0080'              	movwf	___flge@ff1
  3341  007D' 3000               	movlw	0
  3342  007E' 0087'              	movwf	___flge@ff2+3
  3343  007F' 3000               	movlw	0
  3344  0080' 0086'              	movwf	___flge@ff2+2
  3345  0081' 3000               	movlw	0
  3346  0082' 0085'              	movwf	___flge@ff2+1
  3347  0083' 3000               	movlw	0
  3348  0084' 0084'              	movwf	___flge@ff2
  3349  0085' 118A' 2000' 118A'  	fcall	___flge
  3350  0088' 1803               	btfsc	3,0
  3351  0089' 2800'              	goto	u5880
  3352  008A' 3001               	movlw	1
  3353  008B' 2800'              	goto	u5890
  3354  008C'                    u5880:
  3355  008C' 3000               	movlw	0
  3356  008D'                    u5890:
  3357  008D' 1683               	bsf	3,5	;RP0=1, select bank1
  3358  008E' 0080'              	movwf	exp@sign^(0+128)
  3359  008F' 0800'              	movf	exp@sign^(0+128),w
  3360  0090' 1903               	btfsc	3,2
  3361  0091' 2800'              	goto	l4143
  3362  0092' 0800'              	movf	(exp@x+3)^(0+128),w
  3363  0093' 0083'              	movwf	___flneg@f1+3
  3364  0094' 0800'              	movf	(exp@x+2)^(0+128),w
  3365  0095' 0082'              	movwf	___flneg@f1+2
  3366  0096' 0800'              	movf	(exp@x+1)^(0+128),w
  3367  0097' 0081'              	movwf	___flneg@f1+1
  3368  0098' 0800'              	movf	exp@x^(0+128),w
  3369  0099' 0080'              	movwf	___flneg@f1
  3370  009A' 118A' 2000' 118A'  	fcall	___flneg
  3371  009D' 0803'              	movf	?___flneg+3,w
  3372  009E' 0080'              	movwf	(exp@x+3)^(0+128)
  3373  009F' 0802'              	movf	?___flneg+2,w
  3374  00A0' 0080'              	movwf	(exp@x+2)^(0+128)
  3375  00A1' 0801'              	movf	?___flneg+1,w
  3376  00A2' 0080'              	movwf	(exp@x+1)^(0+128)
  3377  00A3' 0800'              	movf	?___flneg,w
  3378  00A4' 0080'              	movwf	exp@x^(0+128)
  3379  00A5'                    l4143:
  3380  00A5' 303F               	movlw	63
  3381  00A6' 1283               	bcf	3,5	;RP0=0, select bank0
  3382  00A7' 00A0'              	movwf	___flmul@b+3
  3383  00A8' 30B8               	movlw	184
  3384  00A9' 009F'              	movwf	___flmul@b+2
  3385  00AA' 30AA               	movlw	170
  3386  00AB' 009E'              	movwf	___flmul@b+1
  3387  00AC' 303B               	movlw	59
  3388  00AD' 009D'              	movwf	___flmul@b
  3389  00AE' 1683               	bsf	3,5	;RP0=1, select bank1
  3390  00AF' 0800'              	movf	(exp@x+3)^(0+128),w
  3391  00B0' 1283               	bcf	3,5	;RP0=0, select bank0
  3392  00B1' 00A4'              	movwf	___flmul@a+3
  3393  00B2' 1683               	bsf	3,5	;RP0=1, select bank1
  3394  00B3' 0800'              	movf	(exp@x+2)^(0+128),w
  3395  00B4' 1283               	bcf	3,5	;RP0=0, select bank0
  3396  00B5' 00A3'              	movwf	___flmul@a+2
  3397  00B6' 1683               	bsf	3,5	;RP0=1, select bank1
  3398  00B7' 0800'              	movf	(exp@x+1)^(0+128),w
  3399  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
  3400  00B9' 00A2'              	movwf	___flmul@a+1
  3401  00BA' 1683               	bsf	3,5	;RP0=1, select bank1
  3402  00BB' 0800'              	movf	exp@x^(0+128),w
  3403  00BC' 1283               	bcf	3,5	;RP0=0, select bank0
  3404  00BD' 00A1'              	movwf	___flmul@a
  3405  00BE' 118A' 2000' 118A'  	fcall	___flmul
  3406  00C1' 0820'              	movf	?___flmul+3,w
  3407  00C2' 1683               	bsf	3,5	;RP0=1, select bank1
  3408  00C3' 0080'              	movwf	(exp@x+3)^(0+128)
  3409  00C4' 1283               	bcf	3,5	;RP0=0, select bank0
  3410  00C5' 081F'              	movf	?___flmul+2,w
  3411  00C6' 1683               	bsf	3,5	;RP0=1, select bank1
  3412  00C7' 0080'              	movwf	(exp@x+2)^(0+128)
  3413  00C8' 1283               	bcf	3,5	;RP0=0, select bank0
  3414  00C9' 081E'              	movf	?___flmul+1,w
  3415  00CA' 1683               	bsf	3,5	;RP0=1, select bank1
  3416  00CB' 0080'              	movwf	(exp@x+1)^(0+128)
  3417  00CC' 1283               	bcf	3,5	;RP0=0, select bank0
  3418  00CD' 081D'              	movf	?___flmul,w
  3419  00CE' 1683               	bsf	3,5	;RP0=1, select bank1
  3420  00CF' 0080'              	movwf	exp@x^(0+128)
  3421  00D0' 0800'              	movf	(exp@x+3)^(0+128),w
  3422  00D1' 1283               	bcf	3,5	;RP0=0, select bank0
  3423  00D2' 00CE'              	movwf	floor@x+3
  3424  00D3' 1683               	bsf	3,5	;RP0=1, select bank1
  3425  00D4' 0800'              	movf	(exp@x+2)^(0+128),w
  3426  00D5' 1283               	bcf	3,5	;RP0=0, select bank0
  3427  00D6' 00CD'              	movwf	floor@x+2
  3428  00D7' 1683               	bsf	3,5	;RP0=1, select bank1
  3429  00D8' 0800'              	movf	(exp@x+1)^(0+128),w
  3430  00D9' 1283               	bcf	3,5	;RP0=0, select bank0
  3431  00DA' 00CC'              	movwf	floor@x+1
  3432  00DB' 1683               	bsf	3,5	;RP0=1, select bank1
  3433  00DC' 0800'              	movf	exp@x^(0+128),w
  3434  00DD' 1283               	bcf	3,5	;RP0=0, select bank0
  3435  00DE' 00CB'              	movwf	floor@x
  3436  00DF' 118A' 2000' 118A'  	fcall	_floor
  3437  00E2' 1283               	bcf	3,5	;RP0=0, select bank0
  3438  00E3' 084E'              	movf	?_floor+3,w
  3439  00E4' 1683               	bsf	3,5	;RP0=1, select bank1
  3440  00E5' 0080'              	movwf	(_exp$1248+3)^(0+128)
  3441  00E6' 1283               	bcf	3,5	;RP0=0, select bank0
  3442  00E7' 084D'              	movf	?_floor+2,w
  3443  00E8' 1683               	bsf	3,5	;RP0=1, select bank1
  3444  00E9' 0080'              	movwf	(_exp$1248+2)^(0+128)
  3445  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
  3446  00EB' 084C'              	movf	?_floor+1,w
  3447  00EC' 1683               	bsf	3,5	;RP0=1, select bank1
  3448  00ED' 0080'              	movwf	(_exp$1248+1)^(0+128)
  3449  00EE' 1283               	bcf	3,5	;RP0=0, select bank0
  3450  00EF' 084B'              	movf	?_floor,w
  3451  00F0' 1683               	bsf	3,5	;RP0=1, select bank1
  3452  00F1' 0080'              	movwf	_exp$1248^(0+128)
  3453  00F2' 0800'              	movf	(_exp$1248+3)^(0+128),w
  3454  00F3' 0083'              	movwf	___fltol@f1+3
  3455  00F4' 0800'              	movf	(_exp$1248+2)^(0+128),w
  3456  00F5' 0082'              	movwf	___fltol@f1+2
  3457  00F6' 0800'              	movf	(_exp$1248+1)^(0+128),w
  3458  00F7' 0081'              	movwf	___fltol@f1+1
  3459  00F8' 0800'              	movf	_exp$1248^(0+128),w
  3460  00F9' 0080'              	movwf	___fltol@f1
  3461  00FA' 118A' 2000' 118A'  	fcall	___fltol
  3462  00FD' 0801'              	movf	?___fltol+1,w
  3463  00FE' 1683               	bsf	3,5	;RP0=1, select bank1
  3464  00FF' 1303               	bcf	3,6	;RP1=0, select bank1
  3465  0100' 0080'              	movwf	(exp@exponent+1)^(0+128)
  3466  0101' 0800'              	movf	?___fltol,w
  3467  0102' 0080'              	movwf	exp@exponent^(0+128)
  3468  0103' 0800'              	movf	exp@exponent^(0+128),w
  3469  0104' 008A'              	movwf	___xxtofl@val
  3470  0105' 0800'              	movf	(exp@exponent+1)^(0+128),w
  3471  0106' 008B'              	movwf	___xxtofl@val+1
  3472  0107' 3000               	movlw	0
  3473  0108' 1B8B'              	btfsc	___xxtofl@val+1,7
  3474  0109' 30FF               	movlw	255
  3475  010A' 008C'              	movwf	___xxtofl@val+2
  3476  010B' 008D'              	movwf	___xxtofl@val+3
  3477  010C' 3001               	movlw	1
  3478  010D' 118A' 2000' 118A'  	fcall	___xxtofl
  3479  0110' 080D'              	movf	?___xxtofl+3,w
  3480  0111' 1683               	bsf	3,5	;RP0=1, select bank1
  3481  0112' 0080'              	movwf	(___flsub@a+3)^(0+128)
  3482  0113' 080C'              	movf	?___xxtofl+2,w
  3483  0114' 0080'              	movwf	(___flsub@a+2)^(0+128)
  3484  0115' 080B'              	movf	?___xxtofl+1,w
  3485  0116' 0080'              	movwf	(___flsub@a+1)^(0+128)
  3486  0117' 080A'              	movf	?___xxtofl,w
  3487  0118' 0080'              	movwf	___flsub@a^(0+128)
  3488  0119' 0800'              	movf	(exp@x+3)^(0+128),w
  3489  011A' 0080'              	movwf	(___flsub@b+3)^(0+128)
  3490  011B' 0800'              	movf	(exp@x+2)^(0+128),w
  3491  011C' 0080'              	movwf	(___flsub@b+2)^(0+128)
  3492  011D' 0800'              	movf	(exp@x+1)^(0+128),w
  3493  011E' 0080'              	movwf	(___flsub@b+1)^(0+128)
  3494  011F' 0800'              	movf	exp@x^(0+128),w
  3495  0120' 0080'              	movwf	___flsub@b^(0+128)
  3496  0121' 118A' 2000' 118A'  	fcall	___flsub
  3497  0124' 0800'              	movf	(?___flsub+3)^(0+128),w
  3498  0125' 0080'              	movwf	(exp@x+3)^(0+128)
  3499  0126' 0800'              	movf	(?___flsub+2)^(0+128),w
  3500  0127' 0080'              	movwf	(exp@x+2)^(0+128)
  3501  0128' 0800'              	movf	(?___flsub+1)^(0+128),w
  3502  0129' 0080'              	movwf	(exp@x+1)^(0+128)
  3503  012A' 0800'              	movf	?___flsub^(0+128),w
  3504  012B' 0080'              	movwf	exp@x^(0+128)
  3505  012C' 0800'              	movf	(exp@x+3)^(0+128),w
  3506  012D' 0080'              	movwf	(eval_poly@x+3)^(0+128)
  3507  012E' 0800'              	movf	(exp@x+2)^(0+128),w
  3508  012F' 0080'              	movwf	(eval_poly@x+2)^(0+128)
  3509  0130' 0800'              	movf	(exp@x+1)^(0+128),w
  3510  0131' 0080'              	movwf	(eval_poly@x+1)^(0+128)
  3511  0132' 0800'              	movf	exp@x^(0+128),w
  3512  0133' 0080'              	movwf	eval_poly@x^(0+128)
  3513  0134' 3001               	movlw	(low ((exp@coeff-__stringbase)| (0+32768)))& (0+255)
  3514  0135' 0080'              	movwf	eval_poly@d^(0+128)
  3515  0136' 3009               	movlw	9
  3516  0137' 0080'              	movwf	eval_poly@n^(0+128)
  3517  0138' 3000               	movlw	0
  3518  0139' 0081'              	movwf	(eval_poly@n^(0+128)+1)
  3519  013A' 118A' 2000' 118A'  	fcall	_eval_poly
  3520  013D' 0800'              	movf	(?_eval_poly+3)^(0+128),w
  3521  013E' 0080'              	movwf	(ldexp@value+3)^(0+128)
  3522  013F' 0800'              	movf	(?_eval_poly+2)^(0+128),w
  3523  0140' 0080'              	movwf	(ldexp@value+2)^(0+128)
  3524  0141' 0800'              	movf	(?_eval_poly+1)^(0+128),w
  3525  0142' 0080'              	movwf	(ldexp@value+1)^(0+128)
  3526  0143' 0800'              	movf	?_eval_poly^(0+128),w
  3527  0144' 0080'              	movwf	ldexp@value^(0+128)
  3528  0145' 0800'              	movf	(exp@exponent+1)^(0+128),w
  3529  0146' 0080'              	movwf	(ldexp@newexp+1)^(0+128)
  3530  0147' 0800'              	movf	exp@exponent^(0+128),w
  3531  0148' 0080'              	movwf	ldexp@newexp^(0+128)
  3532  0149' 118A' 2000' 118A'  	fcall	_ldexp
  3533  014C' 0800'              	movf	(?_ldexp+3)^(0+128),w
  3534  014D' 0080'              	movwf	(exp@x+3)^(0+128)
  3535  014E' 0800'              	movf	(?_ldexp+2)^(0+128),w
  3536  014F' 0080'              	movwf	(exp@x+2)^(0+128)
  3537  0150' 0800'              	movf	(?_ldexp+1)^(0+128),w
  3538  0151' 0080'              	movwf	(exp@x+1)^(0+128)
  3539  0152' 0800'              	movf	?_ldexp^(0+128),w
  3540  0153' 0080'              	movwf	exp@x^(0+128)
  3541  0154' 0800'              	movf	exp@sign^(0+128),w
  3542  0155' 1903               	btfsc	3,2
  3543  0156' 0008               	return
  3544  0157' 0800'              	movf	(exp@x+3)^(0+128),w
  3545  0158' 1283               	bcf	3,5	;RP0=0, select bank0
  3546  0159' 008D'              	movwf	___fleq@ff1+3
  3547  015A' 1683               	bsf	3,5	;RP0=1, select bank1
  3548  015B' 0800'              	movf	(exp@x+2)^(0+128),w
  3549  015C' 1283               	bcf	3,5	;RP0=0, select bank0
  3550  015D' 008C'              	movwf	___fleq@ff1+2
  3551  015E' 1683               	bsf	3,5	;RP0=1, select bank1
  3552  015F' 0800'              	movf	(exp@x+1)^(0+128),w
  3553  0160' 1283               	bcf	3,5	;RP0=0, select bank0
  3554  0161' 008B'              	movwf	___fleq@ff1+1
  3555  0162' 1683               	bsf	3,5	;RP0=1, select bank1
  3556  0163' 0800'              	movf	exp@x^(0+128),w
  3557  0164' 1283               	bcf	3,5	;RP0=0, select bank0
  3558  0165' 008A'              	movwf	___fleq@ff1
  3559  0166' 307F               	movlw	127
  3560  0167' 0091'              	movwf	___fleq@ff2+3
  3561  0168' 307F               	movlw	127
  3562  0169' 0090'              	movwf	___fleq@ff2+2
  3563  016A' 30FF               	movlw	255
  3564  016B' 008F'              	movwf	___fleq@ff2+1
  3565  016C' 30FF               	movlw	255
  3566  016D' 008E'              	movwf	___fleq@ff2
  3567  016E' 118A' 2000' 118A'  	fcall	___fleq
  3568  0171' 1C03               	btfss	3,0
  3569  0172' 2800'              	goto	l4161
  3570  0173' 3000               	movlw	0
  3571  0174' 1683               	bsf	3,5	;RP0=1, select bank1
  3572  0175' 0080'              	movwf	(?_exp+3)^(0+128)
  3573  0176' 3000               	movlw	0
  3574  0177' 0080'              	movwf	(?_exp+2)^(0+128)
  3575  0178' 3000               	movlw	0
  3576  0179' 0080'              	movwf	(?_exp+1)^(0+128)
  3577  017A' 3000               	movlw	0
  3578  017B' 0080'              	movwf	?_exp^(0+128)
  3579  017C' 0008               	return
  3580  017D'                    l4161:
  3581  017D' 1683               	bsf	3,5	;RP0=1, select bank1
  3582  017E' 0800'              	movf	(exp@x+3)^(0+128),w
  3583  017F' 0083'              	movwf	___fldiv@a+3
  3584  0180' 0800'              	movf	(exp@x+2)^(0+128),w
  3585  0181' 0082'              	movwf	___fldiv@a+2
  3586  0182' 0800'              	movf	(exp@x+1)^(0+128),w
  3587  0183' 0081'              	movwf	___fldiv@a+1
  3588  0184' 0800'              	movf	exp@x^(0+128),w
  3589  0185' 0080'              	movwf	___fldiv@a
  3590  0186' 303F               	movlw	63
  3591  0187' 0087'              	movwf	___fldiv@b+3
  3592  0188' 3080               	movlw	128
  3593  0189' 0086'              	movwf	___fldiv@b+2
  3594  018A' 3000               	movlw	0
  3595  018B' 0085'              	movwf	___fldiv@b+1
  3596  018C' 3000               	movlw	0
  3597  018D' 0084'              	movwf	___fldiv@b
  3598  018E' 118A' 2000'        	fcall	___fldiv
  3599  0190' 0803'              	movf	?___fldiv+3,w
  3600  0191' 1683               	bsf	3,5	;RP0=1, select bank1
  3601  0192' 0080'              	movwf	(?_exp+3)^(0+128)
  3602  0193' 0802'              	movf	?___fldiv+2,w
  3603  0194' 0080'              	movwf	(?_exp+2)^(0+128)
  3604  0195' 0801'              	movf	?___fldiv+1,w
  3605  0196' 0080'              	movwf	(?_exp+1)^(0+128)
  3606  0197' 0800'              	movf	?___fldiv,w
  3607  0198' 0080'              	movwf	?_exp^(0+128)
  3608  0199' 0008               	return
  3609  019A'                    __end_of_exp:
  3610                           
  3611                           	psect	text9
  3612  0000'                    __ptext9:	
  3613 ;; *************** function _ldexp *****************
  3614 ;; Defined at:
  3615 ;;		line 277 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/frexp.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  value           4   11[BANK1 ] unsigned char 
  3618 ;;  newexp          2   15[BANK1 ] int 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  4   11[BANK1 ] int 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 300/100
  3627 ;;		On exit  : 300/100
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3630 ;;      Params:         0       0       6       0
  3631 ;;      Locals:         0       0       0       0
  3632 ;;      Temps:          0       0       2       0
  3633 ;;      Totals:         0       0       8       0
  3634 ;;Total ram usage:        8 bytes
  3635 ;; Hardware stack levels used: 1
  3636 ;; Hardware stack levels required when called: 1
  3637 ;; This function calls:
  3638 ;;		___fleq
  3639 ;;		___flge
  3640 ;; This function is called by:
  3641 ;;		_exp
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645  0000'                    _ldexp:	
  3646                           ;psect for function _ldexp
  3647                           
  3648                           
  3649                           ;incstack = 0
  3650                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3651  0000' 0800'              	movf	(ldexp@value+3)^(0+128),w
  3652  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  3653  0002' 008D'              	movwf	___fleq@ff1+3
  3654  0003' 1683               	bsf	3,5	;RP0=1, select bank1
  3655  0004' 0800'              	movf	(ldexp@value+2)^(0+128),w
  3656  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  3657  0006' 008C'              	movwf	___fleq@ff1+2
  3658  0007' 1683               	bsf	3,5	;RP0=1, select bank1
  3659  0008' 0800'              	movf	(ldexp@value+1)^(0+128),w
  3660  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  3661  000A' 008B'              	movwf	___fleq@ff1+1
  3662  000B' 1683               	bsf	3,5	;RP0=1, select bank1
  3663  000C' 0800'              	movf	ldexp@value^(0+128),w
  3664  000D' 1283               	bcf	3,5	;RP0=0, select bank0
  3665  000E' 008A'              	movwf	___fleq@ff1
  3666  000F' 3000               	movlw	0
  3667  0010' 0091'              	movwf	___fleq@ff2+3
  3668  0011' 3000               	movlw	0
  3669  0012' 0090'              	movwf	___fleq@ff2+2
  3670  0013' 3000               	movlw	0
  3671  0014' 008F'              	movwf	___fleq@ff2+1
  3672  0015' 3000               	movlw	0
  3673  0016' 008E'              	movwf	___fleq@ff2
  3674  0017' 118A' 2000' 118A'  	fcall	___fleq
  3675  001A' 1C03               	btfss	3,0
  3676  001B' 2800'              	goto	l4065
  3677  001C' 3000               	movlw	0
  3678  001D' 1683               	bsf	3,5	;RP0=1, select bank1
  3679  001E' 0080'              	movwf	(?_ldexp+3)^(0+128)
  3680  001F' 3000               	movlw	0
  3681  0020' 0080'              	movwf	(?_ldexp+2)^(0+128)
  3682  0021' 3000               	movlw	0
  3683  0022' 0080'              	movwf	(?_ldexp+1)^(0+128)
  3684  0023' 3000               	movlw	0
  3685  0024' 0080'              	movwf	?_ldexp^(0+128)
  3686  0025' 0008               	return
  3687  0026'                    l4065:
  3688  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  3689  0027' 0803'              	movf	(ldexp@value^(0+128)+3),w
  3690  0028' 397F               	andlw	127
  3691  0029' 0080'              	movwf	??_ldexp^(0+128)
  3692  002A' 0181'              	clrf	(??_ldexp^(0+128)+1)
  3693  002B' 1003               	clrc
  3694  002C' 0D80'              	rlf	??_ldexp^(0+128),f
  3695  002D' 0D81'              	rlf	(??_ldexp^(0+128)+1),f
  3696  002E' 0800'              	movf	??_ldexp^(0+128),w
  3697  002F' 0780'              	addwf	ldexp@newexp^(0+128),f
  3698  0030' 1803               	skipnc
  3699  0031' 0A80'              	incf	(ldexp@newexp+1)^(0+128),f
  3700  0032' 0800'              	movf	(??_ldexp+1)^(0+128),w
  3701  0033' 0780'              	addwf	(ldexp@newexp+1)^(0+128),f
  3702  0034' 0D02'              	rlf	(ldexp@value^(0+128)+2),w
  3703  0035' 0D02'              	rlf	(ldexp@value^(0+128)+2),w
  3704  0036' 3901               	andlw	1
  3705  0037' 0080'              	movwf	??_ldexp^(0+128)
  3706  0038' 0181'              	clrf	(??_ldexp^(0+128)+1)
  3707  0039' 0800'              	movf	??_ldexp^(0+128),w
  3708  003A' 0780'              	addwf	ldexp@newexp^(0+128),f
  3709  003B' 1803               	skipnc
  3710  003C' 0A80'              	incf	(ldexp@newexp+1)^(0+128),f
  3711  003D' 0800'              	movf	(??_ldexp+1)^(0+128),w
  3712  003E' 0780'              	addwf	(ldexp@newexp+1)^(0+128),f
  3713  003F' 1F80'              	btfss	(ldexp@newexp+1)^(0+128),7
  3714  0040' 2800'              	goto	l4075
  3715  0041' 3022               	movlw	34
  3716  0042' 1283               	bcf	3,5	;RP0=0, select bank2
  3717  0043' 1703               	bsf	3,6	;RP1=1, select bank2
  3718  0044' 0080'              	movwf	_errno^(0+256)
  3719  0045' 3000               	movlw	0
  3720  0046' 0081'              	movwf	(_errno^(0+256)+1)
  3721  0047' 3000               	movlw	0
  3722  0048' 1683               	bsf	3,5	;RP0=1, select bank1
  3723  0049' 1303               	bcf	3,6	;RP1=0, select bank1
  3724  004A' 0080'              	movwf	(?_ldexp+3)^(0+128)
  3725  004B' 3000               	movlw	0
  3726  004C' 0080'              	movwf	(?_ldexp+2)^(0+128)
  3727  004D' 3000               	movlw	0
  3728  004E' 0080'              	movwf	(?_ldexp+1)^(0+128)
  3729  004F' 3000               	movlw	0
  3730  0050' 0080'              	movwf	?_ldexp^(0+128)
  3731  0051' 0008               	return
  3732  0052'                    l4075:
  3733  0052' 0800'              	movf	(ldexp@newexp+1)^(0+128),w
  3734  0053' 3A80               	xorlw	128
  3735  0054' 00FF               	movwf	127
  3736  0055' 3081               	movlw	129
  3737  0056' 027F               	subwf	127,w
  3738  0057' 1D03               	skipz
  3739  0058' 2800'              	goto	u5815
  3740  0059' 3000               	movlw	0
  3741  005A' 0200'              	subwf	ldexp@newexp^(0+128),w
  3742  005B'                    u5815:
  3743  005B' 1C03               	skipc
  3744  005C' 2800'              	goto	l4091
  3745  005D' 3022               	movlw	34
  3746  005E' 1283               	bcf	3,5	;RP0=0, select bank2
  3747  005F' 1703               	bsf	3,6	;RP1=1, select bank2
  3748  0060' 0080'              	movwf	_errno^(0+256)
  3749  0061' 3000               	movlw	0
  3750  0062' 0081'              	movwf	(_errno^(0+256)+1)
  3751  0063' 1683               	bsf	3,5	;RP0=1, select bank1
  3752  0064' 1303               	bcf	3,6	;RP1=0, select bank1
  3753  0065' 0800'              	movf	(ldexp@value+3)^(0+128),w
  3754  0066' 0083'              	movwf	___flge@ff1+3
  3755  0067' 0800'              	movf	(ldexp@value+2)^(0+128),w
  3756  0068' 0082'              	movwf	___flge@ff1+2
  3757  0069' 0800'              	movf	(ldexp@value+1)^(0+128),w
  3758  006A' 0081'              	movwf	___flge@ff1+1
  3759  006B' 0800'              	movf	ldexp@value^(0+128),w
  3760  006C' 0080'              	movwf	___flge@ff1
  3761  006D' 3000               	movlw	0
  3762  006E' 0087'              	movwf	___flge@ff2+3
  3763  006F' 3000               	movlw	0
  3764  0070' 0086'              	movwf	___flge@ff2+2
  3765  0071' 3000               	movlw	0
  3766  0072' 0085'              	movwf	___flge@ff2+1
  3767  0073' 3000               	movlw	0
  3768  0074' 0084'              	movwf	___flge@ff2
  3769  0075' 118A' 2000' 118A'  	fcall	___flge
  3770  0078' 1803               	btfsc	3,0
  3771  0079' 2800'              	goto	l4087
  3772  007A' 30FF               	movlw	255
  3773  007B' 1683               	bsf	3,5	;RP0=1, select bank1
  3774  007C' 0080'              	movwf	(?_ldexp+3)^(0+128)
  3775  007D' 307F               	movlw	127
  3776  007E' 0080'              	movwf	(?_ldexp+2)^(0+128)
  3777  007F' 30FF               	movlw	255
  3778  0080' 0080'              	movwf	(?_ldexp+1)^(0+128)
  3779  0081' 30FF               	movlw	255
  3780  0082' 0080'              	movwf	?_ldexp^(0+128)
  3781  0083' 0008               	return
  3782  0084'                    l4087:
  3783  0084' 307F               	movlw	127
  3784  0085' 1683               	bsf	3,5	;RP0=1, select bank1
  3785  0086' 0080'              	movwf	(?_ldexp+3)^(0+128)
  3786  0087' 307F               	movlw	127
  3787  0088' 0080'              	movwf	(?_ldexp+2)^(0+128)
  3788  0089' 30FF               	movlw	255
  3789  008A' 0080'              	movwf	(?_ldexp+1)^(0+128)
  3790  008B' 30FF               	movlw	255
  3791  008C' 0080'              	movwf	?_ldexp^(0+128)
  3792  008D' 0008               	return
  3793  008E'                    l4091:
  3794  008E' 1683               	bsf	3,5	;RP0=1, select bank1
  3795  008F' 1303               	bcf	3,6	;RP1=0, select bank1
  3796  0090' 0800'              	movf	(ldexp@newexp+1)^(0+128),w
  3797  0091' 0081'              	movwf	(??_ldexp^(0+128)+1)
  3798  0092' 0800'              	movf	ldexp@newexp^(0+128),w
  3799  0093' 0080'              	movwf	??_ldexp^(0+128)
  3800  0094' 0D01'              	rlf	(??_ldexp^(0+128)+1),w
  3801  0095' 0C81'              	rrf	(??_ldexp^(0+128)+1),f
  3802  0096' 0C80'              	rrf	??_ldexp^(0+128),f
  3803  0097' 0803'              	movf	(ldexp@value^(0+128)+3),w
  3804  0098' 0600'              	xorwf	??_ldexp^(0+128),w
  3805  0099' 3980               	andlw	-128
  3806  009A' 0600'              	xorwf	??_ldexp^(0+128),w
  3807  009B' 0083'              	movwf	(ldexp@value^(0+128)+3)
  3808  009C' 0800'              	movf	ldexp@newexp^(0+128),w
  3809  009D' 3901               	andlw	1
  3810  009E' 0080'              	movwf	??_ldexp^(0+128)
  3811  009F' 0C80'              	rrf	??_ldexp^(0+128),f
  3812  00A0' 0C80'              	rrf	??_ldexp^(0+128),f
  3813  00A1' 0802'              	movf	(ldexp@value^(0+128)+2),w
  3814  00A2' 0600'              	xorwf	??_ldexp^(0+128),w
  3815  00A3' 397F               	andlw	-129
  3816  00A4' 0600'              	xorwf	??_ldexp^(0+128),w
  3817  00A5' 0082'              	movwf	(ldexp@value^(0+128)+2)
  3818  00A6' 0008               	return
  3819  00A7'                    __end_of_ldexp:
  3820                           
  3821                           	psect	text10
  3822  0000'                    __ptext10:	
  3823 ;; *************** function _floor *****************
  3824 ;; Defined at:
  3825 ;;		line 13 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/floor.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  x               4   75[BANK0 ] int 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  i               4    0[BANK1 ] int 
  3830 ;;  expon           2    4[BANK1 ] int 
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  4   75[BANK0 ] int 
  3833 ;; Registers used:
  3834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3835 ;; Tracked objects:
  3836 ;;		On entry : 300/0
  3837 ;;		On exit  : 200/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3840 ;;      Params:         0       4       0       0
  3841 ;;      Locals:         0       0       6       0
  3842 ;;      Temps:          0       0       0       0
  3843 ;;      Totals:         0       4       6       0
  3844 ;;Total ram usage:       10 bytes
  3845 ;; Hardware stack levels used: 1
  3846 ;; Hardware stack levels required when called: 2
  3847 ;; This function calls:
  3848 ;;		___fladd
  3849 ;;		___flge
  3850 ;;		___fltol
  3851 ;;		___xxtofl
  3852 ;;		_frexp
  3853 ;; This function is called by:
  3854 ;;		_exp
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858  0000'                    _floor:	
  3859                           ;psect for function _floor
  3860                           
  3861                           
  3862                           ;incstack = 0
  3863                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3864  0000' 084E'              	movf	floor@x+3,w
  3865  0001' 0099'              	movwf	frexp@value+3
  3866  0002' 084D'              	movf	floor@x+2,w
  3867  0003' 0098'              	movwf	frexp@value+2
  3868  0004' 084C'              	movf	floor@x+1,w
  3869  0005' 0097'              	movwf	frexp@value+1
  3870  0006' 084B'              	movf	floor@x,w
  3871  0007' 0096'              	movwf	frexp@value
  3872  0008' 3000'              	movlw	(low (floor@expon| 0))& (0+255)
  3873  0009' 009A'              	movwf	frexp@eptr
  3874  000A' 118A' 2000' 118A'  	fcall	_frexp
  3875  000D' 1683               	bsf	3,5	;RP0=1, select bank1
  3876  000E' 1F80'              	btfss	(floor@expon+1)^(0+128),7
  3877  000F' 2800'              	goto	l4035
  3878  0010' 1283               	bcf	3,5	;RP0=0, select bank0
  3879  0011' 084E'              	movf	floor@x+3,w
  3880  0012' 0083'              	movwf	___flge@ff1+3
  3881  0013' 084D'              	movf	floor@x+2,w
  3882  0014' 0082'              	movwf	___flge@ff1+2
  3883  0015' 084C'              	movf	floor@x+1,w
  3884  0016' 0081'              	movwf	___flge@ff1+1
  3885  0017' 084B'              	movf	floor@x,w
  3886  0018' 0080'              	movwf	___flge@ff1
  3887  0019' 3000               	movlw	0
  3888  001A' 0087'              	movwf	___flge@ff2+3
  3889  001B' 3000               	movlw	0
  3890  001C' 0086'              	movwf	___flge@ff2+2
  3891  001D' 3000               	movlw	0
  3892  001E' 0085'              	movwf	___flge@ff2+1
  3893  001F' 3000               	movlw	0
  3894  0020' 0084'              	movwf	___flge@ff2
  3895  0021' 118A' 2000' 118A'  	fcall	___flge
  3896  0024' 1803               	btfsc	3,0
  3897  0025' 2800'              	goto	l4031
  3898  0026' 30BF               	movlw	191
  3899  0027' 1283               	bcf	3,5	;RP0=0, select bank0
  3900  0028' 00CE'              	movwf	?_floor+3
  3901  0029' 3080               	movlw	128
  3902  002A' 00CD'              	movwf	?_floor+2
  3903  002B' 3000               	movlw	0
  3904  002C' 00CC'              	movwf	?_floor+1
  3905  002D' 3000               	movlw	0
  3906  002E' 00CB'              	movwf	?_floor
  3907  002F' 0008               	return
  3908  0030'                    l4031:
  3909  0030' 3000               	movlw	0
  3910  0031' 1283               	bcf	3,5	;RP0=0, select bank0
  3911  0032' 00CE'              	movwf	?_floor+3
  3912  0033' 3000               	movlw	0
  3913  0034' 00CD'              	movwf	?_floor+2
  3914  0035' 3000               	movlw	0
  3915  0036' 00CC'              	movwf	?_floor+1
  3916  0037' 3000               	movlw	0
  3917  0038' 00CB'              	movwf	?_floor
  3918  0039' 0008               	return
  3919  003A'                    l4035:
  3920  003A' 3000               	movlw	0
  3921  003B' 0200'              	subwf	(floor@expon+1)^(0+128),w
  3922  003C' 301D               	movlw	29
  3923  003D' 1903               	skipnz
  3924  003E' 0200'              	subwf	floor@expon^(0+128),w
  3925  003F' 1803               	btfsc	3,0
  3926  0040' 0008               	return
  3927  0041' 1283               	bcf	3,5	;RP0=0, select bank0
  3928  0042' 084E'              	movf	floor@x+3,w
  3929  0043' 0083'              	movwf	___fltol@f1+3
  3930  0044' 084D'              	movf	floor@x+2,w
  3931  0045' 0082'              	movwf	___fltol@f1+2
  3932  0046' 084C'              	movf	floor@x+1,w
  3933  0047' 0081'              	movwf	___fltol@f1+1
  3934  0048' 084B'              	movf	floor@x,w
  3935  0049' 0080'              	movwf	___fltol@f1
  3936  004A' 118A' 2000' 118A'  	fcall	___fltol
  3937  004D' 0803'              	movf	?___fltol+3,w
  3938  004E' 008D'              	movwf	___xxtofl@val+3
  3939  004F' 0802'              	movf	?___fltol+2,w
  3940  0050' 008C'              	movwf	___xxtofl@val+2
  3941  0051' 0801'              	movf	?___fltol+1,w
  3942  0052' 008B'              	movwf	___xxtofl@val+1
  3943  0053' 0800'              	movf	?___fltol,w
  3944  0054' 008A'              	movwf	___xxtofl@val
  3945  0055' 3001               	movlw	1
  3946  0056' 118A' 2000' 118A'  	fcall	___xxtofl
  3947  0059' 080D'              	movf	?___xxtofl+3,w
  3948  005A' 1683               	bsf	3,5	;RP0=1, select bank1
  3949  005B' 0080'              	movwf	(floor@i+3)^(0+128)
  3950  005C' 080C'              	movf	?___xxtofl+2,w
  3951  005D' 0080'              	movwf	(floor@i+2)^(0+128)
  3952  005E' 080B'              	movf	?___xxtofl+1,w
  3953  005F' 0080'              	movwf	(floor@i+1)^(0+128)
  3954  0060' 080A'              	movf	?___xxtofl,w
  3955  0061' 0080'              	movwf	floor@i^(0+128)
  3956  0062' 1283               	bcf	3,5	;RP0=0, select bank0
  3957  0063' 084E'              	movf	floor@x+3,w
  3958  0064' 0083'              	movwf	___flge@ff1+3
  3959  0065' 084D'              	movf	floor@x+2,w
  3960  0066' 0082'              	movwf	___flge@ff1+2
  3961  0067' 084C'              	movf	floor@x+1,w
  3962  0068' 0081'              	movwf	___flge@ff1+1
  3963  0069' 084B'              	movf	floor@x,w
  3964  006A' 0080'              	movwf	___flge@ff1
  3965  006B' 1683               	bsf	3,5	;RP0=1, select bank1
  3966  006C' 0800'              	movf	(floor@i+3)^(0+128),w
  3967  006D' 0087'              	movwf	___flge@ff2+3
  3968  006E' 0800'              	movf	(floor@i+2)^(0+128),w
  3969  006F' 0086'              	movwf	___flge@ff2+2
  3970  0070' 0800'              	movf	(floor@i+1)^(0+128),w
  3971  0071' 0085'              	movwf	___flge@ff2+1
  3972  0072' 0800'              	movf	floor@i^(0+128),w
  3973  0073' 0084'              	movwf	___flge@ff2
  3974  0074' 118A' 2000' 118A'  	fcall	___flge
  3975  0077' 1803               	btfsc	3,0
  3976  0078' 2800'              	goto	l4045
  3977  0079' 30BF               	movlw	191
  3978  007A' 1283               	bcf	3,5	;RP0=0, select bank0
  3979  007B' 00BA'              	movwf	___fladd@b+3
  3980  007C' 3080               	movlw	128
  3981  007D' 00B9'              	movwf	___fladd@b+2
  3982  007E' 3000               	movlw	0
  3983  007F' 00B8'              	movwf	___fladd@b+1
  3984  0080' 3000               	movlw	0
  3985  0081' 00B7'              	movwf	___fladd@b
  3986  0082' 1683               	bsf	3,5	;RP0=1, select bank1
  3987  0083' 0800'              	movf	(floor@i+3)^(0+128),w
  3988  0084' 1283               	bcf	3,5	;RP0=0, select bank0
  3989  0085' 00BE'              	movwf	___fladd@a+3
  3990  0086' 1683               	bsf	3,5	;RP0=1, select bank1
  3991  0087' 0800'              	movf	(floor@i+2)^(0+128),w
  3992  0088' 1283               	bcf	3,5	;RP0=0, select bank0
  3993  0089' 00BD'              	movwf	___fladd@a+2
  3994  008A' 1683               	bsf	3,5	;RP0=1, select bank1
  3995  008B' 0800'              	movf	(floor@i+1)^(0+128),w
  3996  008C' 1283               	bcf	3,5	;RP0=0, select bank0
  3997  008D' 00BC'              	movwf	___fladd@a+1
  3998  008E' 1683               	bsf	3,5	;RP0=1, select bank1
  3999  008F' 0800'              	movf	floor@i^(0+128),w
  4000  0090' 1283               	bcf	3,5	;RP0=0, select bank0
  4001  0091' 00BB'              	movwf	___fladd@a
  4002  0092' 118A' 2000'        	fcall	___fladd
  4003  0094' 083A'              	movf	?___fladd+3,w
  4004  0095' 00CE'              	movwf	?_floor+3
  4005  0096' 0839'              	movf	?___fladd+2,w
  4006  0097' 00CD'              	movwf	?_floor+2
  4007  0098' 0838'              	movf	?___fladd+1,w
  4008  0099' 00CC'              	movwf	?_floor+1
  4009  009A' 0837'              	movf	?___fladd,w
  4010  009B' 00CB'              	movwf	?_floor
  4011  009C' 0008               	return
  4012  009D'                    l4045:
  4013  009D' 1683               	bsf	3,5	;RP0=1, select bank1
  4014  009E' 0800'              	movf	(floor@i+3)^(0+128),w
  4015  009F' 1283               	bcf	3,5	;RP0=0, select bank0
  4016  00A0' 00CE'              	movwf	?_floor+3
  4017  00A1' 1683               	bsf	3,5	;RP0=1, select bank1
  4018  00A2' 0800'              	movf	(floor@i+2)^(0+128),w
  4019  00A3' 1283               	bcf	3,5	;RP0=0, select bank0
  4020  00A4' 00CD'              	movwf	?_floor+2
  4021  00A5' 1683               	bsf	3,5	;RP0=1, select bank1
  4022  00A6' 0800'              	movf	(floor@i+1)^(0+128),w
  4023  00A7' 1283               	bcf	3,5	;RP0=0, select bank0
  4024  00A8' 00CC'              	movwf	?_floor+1
  4025  00A9' 1683               	bsf	3,5	;RP0=1, select bank1
  4026  00AA' 0800'              	movf	floor@i^(0+128),w
  4027  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
  4028  00AC' 00CB'              	movwf	?_floor
  4029  00AD' 0008               	return
  4030  00AE'                    __end_of_floor:
  4031                           
  4032                           	psect	text11
  4033  0000'                    __ptext11:	
  4034 ;; *************** function _frexp *****************
  4035 ;; Defined at:
  4036 ;;		line 254 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/frexp.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  value           4   22[BANK0 ] int 
  4039 ;;  eptr            1   26[BANK0 ] PTR int 
  4040 ;;		 -> log@exponent(2), floor@expon(2), 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  4   22[BANK0 ] PTR int 
  4045 ;; Registers used:
  4046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 300/0
  4049 ;;		On exit  : B00/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4052 ;;      Params:         0       5       0       0
  4053 ;;      Locals:         0       0       0       0
  4054 ;;      Temps:          0       2       0       0
  4055 ;;      Totals:         0       7       0       0
  4056 ;;Total ram usage:        7 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; Hardware stack levels required when called: 1
  4059 ;; This function calls:
  4060 ;;		___fleq
  4061 ;; This function is called by:
  4062 ;;		_floor
  4063 ;;		_log
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067  0000'                    _frexp:	
  4068                           ;psect for function _frexp
  4069                           
  4070                           
  4071                           ;incstack = 0
  4072                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4073  0000' 0819'              	movf	frexp@value+3,w
  4074  0001' 008D'              	movwf	___fleq@ff1+3
  4075  0002' 0818'              	movf	frexp@value+2,w
  4076  0003' 008C'              	movwf	___fleq@ff1+2
  4077  0004' 0817'              	movf	frexp@value+1,w
  4078  0005' 008B'              	movwf	___fleq@ff1+1
  4079  0006' 0816'              	movf	frexp@value,w
  4080  0007' 008A'              	movwf	___fleq@ff1
  4081  0008' 3000               	movlw	0
  4082  0009' 0091'              	movwf	___fleq@ff2+3
  4083  000A' 3000               	movlw	0
  4084  000B' 0090'              	movwf	___fleq@ff2+2
  4085  000C' 3000               	movlw	0
  4086  000D' 008F'              	movwf	___fleq@ff2+1
  4087  000E' 3000               	movlw	0
  4088  000F' 008E'              	movwf	___fleq@ff2
  4089  0010' 118A' 2000' 118A'  	fcall	___fleq
  4090  0013' 1C03               	btfss	3,0
  4091  0014' 2800'              	goto	l3853
  4092  0015' 081A'              	movf	frexp@eptr,w
  4093  0016' 0084               	movwf	4
  4094  0017' 1383               	bcf	3,7	;select IRP bank0
  4095  0018' 0180               	clrf	0
  4096  0019' 0A84               	incf	4,f
  4097  001A' 0180               	clrf	0
  4098  001B' 3000               	movlw	0
  4099  001C' 0099'              	movwf	?_frexp+3
  4100  001D' 3000               	movlw	0
  4101  001E' 0098'              	movwf	?_frexp+2
  4102  001F' 3000               	movlw	0
  4103  0020' 0097'              	movwf	?_frexp+1
  4104  0021' 3000               	movlw	0
  4105  0022' 0096'              	movwf	?_frexp
  4106  0023' 0008               	return
  4107  0024'                    l3853:
  4108  0024' 0819'              	movf	frexp@value+3,w
  4109  0025' 397F               	andlw	127
  4110  0026' 009B'              	movwf	??_frexp
  4111  0027' 019C'              	clrf	??_frexp+1
  4112  0028' 1003               	clrc
  4113  0029' 0D9B'              	rlf	??_frexp,f
  4114  002A' 0D9C'              	rlf	??_frexp+1,f
  4115  002B' 081A'              	movf	frexp@eptr,w
  4116  002C' 0084               	movwf	4
  4117  002D' 081B'              	movf	??_frexp,w
  4118  002E' 1383               	bcf	3,7	;select IRP bank0
  4119  002F' 0080               	movwf	0
  4120  0030' 0A84               	incf	4,f
  4121  0031' 081C'              	movf	??_frexp+1,w
  4122  0032' 0080               	movwf	0
  4123  0033' 0D18'              	rlf	frexp@value+2,w
  4124  0034' 0D18'              	rlf	frexp@value+2,w
  4125  0035' 3901               	andlw	1
  4126  0036' 009B'              	movwf	??_frexp
  4127  0037' 019C'              	clrf	??_frexp+1
  4128  0038' 081A'              	movf	frexp@eptr,w
  4129  0039' 0084               	movwf	4
  4130  003A' 081B'              	movf	??_frexp,w
  4131  003B' 0480               	iorwf	0,f
  4132  003C' 0A84               	incf	4,f
  4133  003D' 081C'              	movf	??_frexp+1,w
  4134  003E' 0480               	iorwf	0,f
  4135  003F' 081A'              	movf	frexp@eptr,w
  4136  0040' 0084               	movwf	4
  4137  0041' 3082               	movlw	130
  4138  0042' 0780               	addwf	0,f
  4139  0043' 0F84               	incfsz	4,f
  4140  0044' 0800               	movf	0,w
  4141  0045' 1803               	skipnc
  4142  0046' 0A00               	incf	0,w
  4143  0047' 00FF               	movwf	127
  4144  0048' 30FF               	movlw	255
  4145  0049' 077F               	addwf	127,w
  4146  004A' 0080               	movwf	0
  4147  004B' 0384               	decf	4,f
  4148  004C' 0819'              	movf	frexp@value+3,w
  4149  004D' 3980               	andlw	-128
  4150  004E' 383F               	iorlw	63
  4151  004F' 0099'              	movwf	frexp@value+3
  4152  0050' 1398'              	bcf	frexp@value+2,7
  4153  0051' 0008               	return
  4154  0052'                    __end_of_frexp:
  4155                           
  4156                           	psect	text12
  4157  0000'                    __ptext12:	
  4158 ;; *************** function ___fleq *****************
  4159 ;; Defined at:
  4160 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/fleq.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  ff1             4   10[BANK0 ] PTR int 
  4163 ;;  ff2             4   14[BANK0 ] PTR int 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;		None               void
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0
  4170 ;; Tracked objects:
  4171 ;;		On entry : 300/0
  4172 ;;		On exit  : 300/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4175 ;;      Params:         0       8       0       0
  4176 ;;      Locals:         0       0       0       0
  4177 ;;      Temps:          0       4       0       0
  4178 ;;      Totals:         0      12       0       0
  4179 ;;Total ram usage:       12 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_pow
  4185 ;;		_exp
  4186 ;;		_frexp
  4187 ;;		_ldexp
  4188 ;;		_log
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192  0000'                    ___fleq:	
  4193                           ;psect for function ___fleq
  4194                           
  4195                           
  4196                           ;incstack = 0
  4197                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  4198  0000' 3000               	movlw	0
  4199  0001' 050A'              	andwf	___fleq@ff1,w
  4200  0002' 0092'              	movwf	??___fleq
  4201  0003' 3000               	movlw	0
  4202  0004' 050B'              	andwf	___fleq@ff1+1,w
  4203  0005' 0093'              	movwf	??___fleq+1
  4204  0006' 3080               	movlw	128
  4205  0007' 050C'              	andwf	___fleq@ff1+2,w
  4206  0008' 0094'              	movwf	??___fleq+2
  4207  0009' 307F               	movlw	127
  4208  000A' 050D'              	andwf	___fleq@ff1+3,w
  4209  000B' 0095'              	movwf	??___fleq+3
  4210  000C' 0815'              	movf	??___fleq+3,w
  4211  000D' 0414'              	iorwf	??___fleq+2,w
  4212  000E' 0413'              	iorwf	??___fleq+1,w
  4213  000F' 0412'              	iorwf	??___fleq,w
  4214  0010' 1D03               	skipz
  4215  0011' 2800'              	goto	l537
  4216  0012' 3000               	movlw	0
  4217  0013' 008D'              	movwf	___fleq@ff1+3
  4218  0014' 3000               	movlw	0
  4219  0015' 008C'              	movwf	___fleq@ff1+2
  4220  0016' 3000               	movlw	0
  4221  0017' 008B'              	movwf	___fleq@ff1+1
  4222  0018' 3000               	movlw	0
  4223  0019' 008A'              	movwf	___fleq@ff1
  4224  001A'                    l537:
  4225  001A' 3000               	movlw	0
  4226  001B' 050E'              	andwf	___fleq@ff2,w
  4227  001C' 0092'              	movwf	??___fleq
  4228  001D' 3000               	movlw	0
  4229  001E' 050F'              	andwf	___fleq@ff2+1,w
  4230  001F' 0093'              	movwf	??___fleq+1
  4231  0020' 3080               	movlw	128
  4232  0021' 0510'              	andwf	___fleq@ff2+2,w
  4233  0022' 0094'              	movwf	??___fleq+2
  4234  0023' 307F               	movlw	127
  4235  0024' 0511'              	andwf	___fleq@ff2+3,w
  4236  0025' 0095'              	movwf	??___fleq+3
  4237  0026' 0815'              	movf	??___fleq+3,w
  4238  0027' 0414'              	iorwf	??___fleq+2,w
  4239  0028' 0413'              	iorwf	??___fleq+1,w
  4240  0029' 0412'              	iorwf	??___fleq,w
  4241  002A' 1D03               	skipz
  4242  002B' 2800'              	goto	l538
  4243  002C' 3000               	movlw	0
  4244  002D' 0091'              	movwf	___fleq@ff2+3
  4245  002E' 3000               	movlw	0
  4246  002F' 0090'              	movwf	___fleq@ff2+2
  4247  0030' 3000               	movlw	0
  4248  0031' 008F'              	movwf	___fleq@ff2+1
  4249  0032' 3000               	movlw	0
  4250  0033' 008E'              	movwf	___fleq@ff2
  4251  0034'                    l538:
  4252  0034' 0811'              	movf	___fleq@ff2+3,w
  4253  0035' 060D'              	xorwf	___fleq@ff1+3,w
  4254  0036' 1D03               	skipz
  4255  0037' 2800'              	goto	u4235
  4256  0038' 0810'              	movf	___fleq@ff2+2,w
  4257  0039' 060C'              	xorwf	___fleq@ff1+2,w
  4258  003A' 1D03               	skipz
  4259  003B' 2800'              	goto	u4235
  4260  003C' 080F'              	movf	___fleq@ff2+1,w
  4261  003D' 060B'              	xorwf	___fleq@ff1+1,w
  4262  003E' 1D03               	skipz
  4263  003F' 2800'              	goto	u4235
  4264  0040' 080E'              	movf	___fleq@ff2,w
  4265  0041' 060A'              	xorwf	___fleq@ff1,w
  4266  0042'                    u4235:
  4267  0042' 1903               	skipnz
  4268  0043' 2800'              	goto	l3393
  4269  0044' 1003               	clrc
  4270  0045' 0008               	return
  4271  0046'                    l3393:
  4272  0046' 1403               	setc
  4273  0047' 0008               	return
  4274  0048'                    __end_of___fleq:
  4275                           
  4276                           	psect	text13
  4277  0000'                    __ptext13:	
  4278 ;; *************** function ___xxtofl *****************
  4279 ;; Defined at:
  4280 ;;		line 10 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/xxtofl.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  sign            1    wreg     unsigned char 
  4283 ;;  val             4   10[COMMON] long 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  sign            1    4[BANK0 ] unsigned char 
  4286 ;;  arg             4    6[BANK0 ] unsigned long 
  4287 ;;  exp             1    5[BANK0 ] unsigned char 
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  4   10[COMMON] unsigned char 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/100
  4294 ;;		On exit  : 300/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4297 ;;      Params:         4       0       0       0
  4298 ;;      Locals:         0       6       0       0
  4299 ;;      Temps:          0       4       0       0
  4300 ;;      Totals:         4      10       0       0
  4301 ;;Total ram usage:       14 bytes
  4302 ;; Hardware stack levels used: 1
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_pow
  4307 ;;		_exp
  4308 ;;		_floor
  4309 ;;		_log
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313  0000'                    ___xxtofl:	
  4314                           ;psect for function ___xxtofl
  4315                           
  4316                           
  4317                           ;incstack = 0
  4318                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4319                           ;___xxtofl@sign stored from wreg
  4320  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4321  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4322  0002' 0084'              	movwf	___xxtofl@sign
  4323  0003' 0804'              	movf	___xxtofl@sign,w
  4324  0004' 1D03               	btfss	3,2
  4325  0005' 1F8D'              	btfss	___xxtofl@val+3,7
  4326  0006' 2800'              	goto	l3807
  4327  0007' 090A'              	comf	___xxtofl@val,w
  4328  0008' 0086'              	movwf	___xxtofl@arg
  4329  0009' 090B'              	comf	___xxtofl@val+1,w
  4330  000A' 0087'              	movwf	___xxtofl@arg+1
  4331  000B' 090C'              	comf	___xxtofl@val+2,w
  4332  000C' 0088'              	movwf	___xxtofl@arg+2
  4333  000D' 090D'              	comf	___xxtofl@val+3,w
  4334  000E' 0089'              	movwf	___xxtofl@arg+3
  4335  000F' 0A86'              	incf	___xxtofl@arg,f
  4336  0010' 1903               	skipnz
  4337  0011' 0A87'              	incf	___xxtofl@arg+1,f
  4338  0012' 1903               	skipnz
  4339  0013' 0A88'              	incf	___xxtofl@arg+2,f
  4340  0014' 1903               	skipnz
  4341  0015' 0A89'              	incf	___xxtofl@arg+3,f
  4342  0016' 2800'              	goto	l821
  4343  0017'                    l3807:
  4344  0017' 080D'              	movf	___xxtofl@val+3,w
  4345  0018' 0089'              	movwf	___xxtofl@arg+3
  4346  0019' 080C'              	movf	___xxtofl@val+2,w
  4347  001A' 0088'              	movwf	___xxtofl@arg+2
  4348  001B' 080B'              	movf	___xxtofl@val+1,w
  4349  001C' 0087'              	movwf	___xxtofl@arg+1
  4350  001D' 080A'              	movf	___xxtofl@val,w
  4351  001E' 0086'              	movwf	___xxtofl@arg
  4352  001F'                    l821:
  4353  001F' 080D'              	movf	___xxtofl@val+3,w
  4354  0020' 040C'              	iorwf	___xxtofl@val+2,w
  4355  0021' 040B'              	iorwf	___xxtofl@val+1,w
  4356  0022' 040A'              	iorwf	___xxtofl@val,w
  4357  0023' 1D03               	skipz
  4358  0024' 2800'              	goto	l3813
  4359  0025' 3000               	movlw	0
  4360  0026' 008D'              	movwf	?___xxtofl+3
  4361  0027' 3000               	movlw	0
  4362  0028' 008C'              	movwf	?___xxtofl+2
  4363  0029' 3000               	movlw	0
  4364  002A' 008B'              	movwf	?___xxtofl+1
  4365  002B' 3000               	movlw	0
  4366  002C' 008A'              	movwf	?___xxtofl
  4367  002D' 0008               	return
  4368  002E'                    l3813:
  4369  002E' 3096               	movlw	150
  4370  002F' 0085'              	movwf	___xxtofl@exp
  4371  0030'                    l3817:
  4372  0030' 30FE               	movlw	254
  4373  0031' 0509'              	andwf	___xxtofl@arg+3,w
  4374  0032' 1903               	btfsc	3,2
  4375  0033' 2800'              	goto	l827
  4376  0034' 3001               	movlw	1
  4377  0035' 0080'              	movwf	??___xxtofl
  4378  0036' 0800'              	movf	??___xxtofl,w
  4379  0037' 0785'              	addwf	___xxtofl@exp,f
  4380  0038' 3001               	movlw	1
  4381  0039'                    u5295:
  4382  0039' 1003               	clrc
  4383  003A' 0C89'              	rrf	___xxtofl@arg+3,f
  4384  003B' 0C88'              	rrf	___xxtofl@arg+2,f
  4385  003C' 0C87'              	rrf	___xxtofl@arg+1,f
  4386  003D' 0C86'              	rrf	___xxtofl@arg,f
  4387  003E' 3EFF               	addlw	-1
  4388  003F' 1D03               	skipz
  4389  0040' 2800'              	goto	u5295
  4390  0041' 2800'              	goto	l3817
  4391  0042'                    l3819:
  4392  0042' 3001               	movlw	1
  4393  0043' 0080'              	movwf	??___xxtofl
  4394  0044' 0800'              	movf	??___xxtofl,w
  4395  0045' 0785'              	addwf	___xxtofl@exp,f
  4396  0046' 3001               	movlw	1
  4397  0047' 0786'              	addwf	___xxtofl@arg,f
  4398  0048' 3000               	movlw	0
  4399  0049' 1803               	skipnc
  4400  004A' 3001               	movlw	1
  4401  004B' 0787'              	addwf	___xxtofl@arg+1,f
  4402  004C' 3000               	movlw	0
  4403  004D' 1803               	skipnc
  4404  004E' 3001               	movlw	1
  4405  004F' 0788'              	addwf	___xxtofl@arg+2,f
  4406  0050' 3000               	movlw	0
  4407  0051' 1803               	skipnc
  4408  0052' 3001               	movlw	1
  4409  0053' 0789'              	addwf	___xxtofl@arg+3,f
  4410  0054' 3001               	movlw	1
  4411  0055'                    u5315:
  4412  0055' 1003               	clrc
  4413  0056' 0C89'              	rrf	___xxtofl@arg+3,f
  4414  0057' 0C88'              	rrf	___xxtofl@arg+2,f
  4415  0058' 0C87'              	rrf	___xxtofl@arg+1,f
  4416  0059' 0C86'              	rrf	___xxtofl@arg,f
  4417  005A' 3EFF               	addlw	-1
  4418  005B' 1D03               	skipz
  4419  005C' 2800'              	goto	u5315
  4420  005D'                    l827:
  4421  005D' 30FF               	movlw	255
  4422  005E' 0509'              	andwf	___xxtofl@arg+3,w
  4423  005F' 1903               	btfsc	3,2
  4424  0060' 2800'              	goto	l3827
  4425  0061' 2800'              	goto	l3819
  4426  0062'                    l3829:
  4427  0062' 3002               	movlw	2
  4428  0063' 0205'              	subwf	___xxtofl@exp,w
  4429  0064' 1C03               	btfss	3,0
  4430  0065' 2800'              	goto	l834
  4431  0066' 3001               	movlw	1
  4432  0067' 0285'              	subwf	___xxtofl@exp,f
  4433  0068' 3001               	movlw	1
  4434  0069' 0080'              	movwf	??___xxtofl
  4435  006A'                    u5335:
  4436  006A' 1003               	clrc
  4437  006B' 0D86'              	rlf	___xxtofl@arg,f
  4438  006C' 0D87'              	rlf	___xxtofl@arg+1,f
  4439  006D' 0D88'              	rlf	___xxtofl@arg+2,f
  4440  006E' 0D89'              	rlf	___xxtofl@arg+3,f
  4441  006F' 0B80'              	decfsz	??___xxtofl,f
  4442  0070' 2800'              	goto	u5335
  4443  0071'                    l3827:
  4444  0071' 1F88'              	btfss	___xxtofl@arg+2,7
  4445  0072' 2800'              	goto	l3829
  4446  0073'                    l834:
  4447  0073' 1805'              	btfsc	___xxtofl@exp,0
  4448  0074' 2800'              	goto	l835
  4449  0075' 30FF               	movlw	255
  4450  0076' 0586'              	andwf	___xxtofl@arg,f
  4451  0077' 30FF               	movlw	255
  4452  0078' 0587'              	andwf	___xxtofl@arg+1,f
  4453  0079' 307F               	movlw	127
  4454  007A' 0588'              	andwf	___xxtofl@arg+2,f
  4455  007B' 30FF               	movlw	255
  4456  007C' 0589'              	andwf	___xxtofl@arg+3,f
  4457  007D'                    l835:
  4458  007D' 1003               	clrc
  4459  007E' 0C85'              	rrf	___xxtofl@exp,f
  4460  007F' 0805'              	movf	___xxtofl@exp,w
  4461  0080' 0080'              	movwf	??___xxtofl
  4462  0081' 0181'              	clrf	??___xxtofl+1
  4463  0082' 0182'              	clrf	??___xxtofl+2
  4464  0083' 0183'              	clrf	??___xxtofl+3
  4465  0084' 3018               	movlw	24
  4466  0085'                    u5375:
  4467  0085' 1003               	clrc
  4468  0086' 0D80'              	rlf	??___xxtofl,f
  4469  0087' 0D81'              	rlf	??___xxtofl+1,f
  4470  0088' 0D82'              	rlf	??___xxtofl+2,f
  4471  0089' 0D83'              	rlf	??___xxtofl+3,f
  4472  008A' 3EFF               	addlw	-1
  4473  008B' 1D03               	skipz
  4474  008C' 2800'              	goto	u5375
  4475  008D' 0800'              	movf	??___xxtofl,w
  4476  008E' 0486'              	iorwf	___xxtofl@arg,f
  4477  008F' 0801'              	movf	??___xxtofl+1,w
  4478  0090' 0487'              	iorwf	___xxtofl@arg+1,f
  4479  0091' 0802'              	movf	??___xxtofl+2,w
  4480  0092' 0488'              	iorwf	___xxtofl@arg+2,f
  4481  0093' 0803'              	movf	??___xxtofl+3,w
  4482  0094' 0489'              	iorwf	___xxtofl@arg+3,f
  4483  0095' 0804'              	movf	___xxtofl@sign,w
  4484  0096' 1D03               	btfss	3,2
  4485  0097' 1F8D'              	btfss	___xxtofl@val+3,7
  4486  0098' 2800'              	goto	l3841
  4487  0099' 1789'              	bsf	___xxtofl@arg+3,7
  4488  009A'                    l3841:
  4489  009A' 0809'              	movf	___xxtofl@arg+3,w
  4490  009B' 008D'              	movwf	?___xxtofl+3
  4491  009C' 0808'              	movf	___xxtofl@arg+2,w
  4492  009D' 008C'              	movwf	?___xxtofl+2
  4493  009E' 0807'              	movf	___xxtofl@arg+1,w
  4494  009F' 008B'              	movwf	?___xxtofl+1
  4495  00A0' 0806'              	movf	___xxtofl@arg,w
  4496  00A1' 008A'              	movwf	?___xxtofl
  4497  00A2' 0008               	return
  4498  00A3'                    __end_of___xxtofl:
  4499                           
  4500                           	psect	text14
  4501  0000'                    __ptext14:	
  4502 ;; *************** function ___flge *****************
  4503 ;; Defined at:
  4504 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/flge.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  ff1             4    0[COMMON] unsigned char 
  4507 ;;  ff2             4    4[COMMON] unsigned char 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;		None
  4510 ;; Return value:  Size  Location     Type
  4511 ;;		None               void
  4512 ;; Registers used:
  4513 ;;		wreg, status,2, status,0
  4514 ;; Tracked objects:
  4515 ;;		On entry : 200/100
  4516 ;;		On exit  : 200/0
  4517 ;;		Unchanged: 200/0
  4518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4519 ;;      Params:         8       0       0       0
  4520 ;;      Locals:         0       0       0       0
  4521 ;;      Temps:          4       0       0       0
  4522 ;;      Totals:        12       0       0       0
  4523 ;;Total ram usage:       12 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_pow
  4529 ;;		_exp
  4530 ;;		_floor
  4531 ;;		_ldexp
  4532 ;;		_log
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536  0000'                    ___flge:	
  4537                           ;psect for function ___flge
  4538                           
  4539                           
  4540                           ;incstack = 0
  4541                           ; Regs used in ___flge: [wreg+status,2+status,0]
  4542  0000' 3000               	movlw	0
  4543  0001' 0500'              	andwf	___flge@ff1,w
  4544  0002' 0088'              	movwf	??___flge
  4545  0003' 3000               	movlw	0
  4546  0004' 0501'              	andwf	___flge@ff1+1,w
  4547  0005' 0089'              	movwf	??___flge+1
  4548  0006' 3080               	movlw	128
  4549  0007' 0502'              	andwf	___flge@ff1+2,w
  4550  0008' 008A'              	movwf	??___flge+2
  4551  0009' 307F               	movlw	127
  4552  000A' 0503'              	andwf	___flge@ff1+3,w
  4553  000B' 008B'              	movwf	??___flge+3
  4554  000C' 080B'              	movf	??___flge+3,w
  4555  000D' 040A'              	iorwf	??___flge+2,w
  4556  000E' 0409'              	iorwf	??___flge+1,w
  4557  000F' 0408'              	iorwf	??___flge,w
  4558  0010' 1D03               	skipz
  4559  0011' 2800'              	goto	l542
  4560  0012' 3000               	movlw	0
  4561  0013' 0083'              	movwf	___flge@ff1+3
  4562  0014' 3000               	movlw	0
  4563  0015' 0082'              	movwf	___flge@ff1+2
  4564  0016' 3000               	movlw	0
  4565  0017' 0081'              	movwf	___flge@ff1+1
  4566  0018' 3000               	movlw	0
  4567  0019' 0080'              	movwf	___flge@ff1
  4568  001A'                    l542:
  4569  001A' 3000               	movlw	0
  4570  001B' 0504'              	andwf	___flge@ff2,w
  4571  001C' 0088'              	movwf	??___flge
  4572  001D' 3000               	movlw	0
  4573  001E' 0505'              	andwf	___flge@ff2+1,w
  4574  001F' 0089'              	movwf	??___flge+1
  4575  0020' 3080               	movlw	128
  4576  0021' 0506'              	andwf	___flge@ff2+2,w
  4577  0022' 008A'              	movwf	??___flge+2
  4578  0023' 307F               	movlw	127
  4579  0024' 0507'              	andwf	___flge@ff2+3,w
  4580  0025' 008B'              	movwf	??___flge+3
  4581  0026' 080B'              	movf	??___flge+3,w
  4582  0027' 040A'              	iorwf	??___flge+2,w
  4583  0028' 0409'              	iorwf	??___flge+1,w
  4584  0029' 0408'              	iorwf	??___flge,w
  4585  002A' 1D03               	skipz
  4586  002B' 2800'              	goto	l3417
  4587  002C' 3000               	movlw	0
  4588  002D' 0087'              	movwf	___flge@ff2+3
  4589  002E' 3000               	movlw	0
  4590  002F' 0086'              	movwf	___flge@ff2+2
  4591  0030' 3000               	movlw	0
  4592  0031' 0085'              	movwf	___flge@ff2+1
  4593  0032' 3000               	movlw	0
  4594  0033' 0084'              	movwf	___flge@ff2
  4595  0034'                    l3417:
  4596  0034' 1F83'              	btfss	___flge@ff1+3,7
  4597  0035' 2800'              	goto	l3421
  4598  0036' 3000               	movlw	0
  4599  0037' 0088'              	movwf	??___flge
  4600  0038' 3000               	movlw	0
  4601  0039' 0089'              	movwf	??___flge+1
  4602  003A' 3000               	movlw	0
  4603  003B' 008A'              	movwf	??___flge+2
  4604  003C' 3080               	movlw	128
  4605  003D' 008B'              	movwf	??___flge+3
  4606  003E' 0800'              	movf	___flge@ff1,w
  4607  003F' 0288'              	subwf	??___flge,f
  4608  0040' 0801'              	movf	___flge@ff1+1,w
  4609  0041' 1C03               	skipc
  4610  0042' 0F01'              	incfsz	___flge@ff1+1,w
  4611  0043' 2800'              	goto	u4301
  4612  0044' 2800'              	goto	u4302
  4613  0045'                    u4301:
  4614  0045' 0289'              	subwf	??___flge+1,f
  4615  0046'                    u4302:
  4616  0046' 0802'              	movf	___flge@ff1+2,w
  4617  0047' 1C03               	skipc
  4618  0048' 0F02'              	incfsz	___flge@ff1+2,w
  4619  0049' 2800'              	goto	u4303
  4620  004A' 2800'              	goto	u4304
  4621  004B'                    u4303:
  4622  004B' 028A'              	subwf	??___flge+2,f
  4623  004C'                    u4304:
  4624  004C' 0803'              	movf	___flge@ff1+3,w
  4625  004D' 1C03               	skipc
  4626  004E' 0F03'              	incfsz	___flge@ff1+3,w
  4627  004F' 2800'              	goto	u4305
  4628  0050' 2800'              	goto	u4306
  4629  0051'                    u4305:
  4630  0051' 028B'              	subwf	??___flge+3,f
  4631  0052'                    u4306:
  4632  0052' 080B'              	movf	??___flge+3,w
  4633  0053' 0083'              	movwf	___flge@ff1+3
  4634  0054' 080A'              	movf	??___flge+2,w
  4635  0055' 0082'              	movwf	___flge@ff1+2
  4636  0056' 0809'              	movf	??___flge+1,w
  4637  0057' 0081'              	movwf	___flge@ff1+1
  4638  0058' 0808'              	movf	??___flge,w
  4639  0059' 0080'              	movwf	___flge@ff1
  4640  005A'                    l3421:
  4641  005A' 1F87'              	btfss	___flge@ff2+3,7
  4642  005B' 2800'              	goto	l545
  4643  005C' 3000               	movlw	0
  4644  005D' 0088'              	movwf	??___flge
  4645  005E' 3000               	movlw	0
  4646  005F' 0089'              	movwf	??___flge+1
  4647  0060' 3000               	movlw	0
  4648  0061' 008A'              	movwf	??___flge+2
  4649  0062' 3080               	movlw	128
  4650  0063' 008B'              	movwf	??___flge+3
  4651  0064' 0804'              	movf	___flge@ff2,w
  4652  0065' 0288'              	subwf	??___flge,f
  4653  0066' 0805'              	movf	___flge@ff2+1,w
  4654  0067' 1C03               	skipc
  4655  0068' 0F05'              	incfsz	___flge@ff2+1,w
  4656  0069' 2800'              	goto	u4321
  4657  006A' 2800'              	goto	u4322
  4658  006B'                    u4321:
  4659  006B' 0289'              	subwf	??___flge+1,f
  4660  006C'                    u4322:
  4661  006C' 0806'              	movf	___flge@ff2+2,w
  4662  006D' 1C03               	skipc
  4663  006E' 0F06'              	incfsz	___flge@ff2+2,w
  4664  006F' 2800'              	goto	u4323
  4665  0070' 2800'              	goto	u4324
  4666  0071'                    u4323:
  4667  0071' 028A'              	subwf	??___flge+2,f
  4668  0072'                    u4324:
  4669  0072' 0807'              	movf	___flge@ff2+3,w
  4670  0073' 1C03               	skipc
  4671  0074' 0F07'              	incfsz	___flge@ff2+3,w
  4672  0075' 2800'              	goto	u4325
  4673  0076' 2800'              	goto	u4326
  4674  0077'                    u4325:
  4675  0077' 028B'              	subwf	??___flge+3,f
  4676  0078'                    u4326:
  4677  0078' 080B'              	movf	??___flge+3,w
  4678  0079' 0087'              	movwf	___flge@ff2+3
  4679  007A' 080A'              	movf	??___flge+2,w
  4680  007B' 0086'              	movwf	___flge@ff2+2
  4681  007C' 0809'              	movf	??___flge+1,w
  4682  007D' 0085'              	movwf	___flge@ff2+1
  4683  007E' 0808'              	movf	??___flge,w
  4684  007F' 0084'              	movwf	___flge@ff2
  4685  0080'                    l545:
  4686  0080' 3080               	movlw	128
  4687  0081' 0683'              	xorwf	___flge@ff1+3,f
  4688  0082' 3080               	movlw	128
  4689  0083' 0687'              	xorwf	___flge@ff2+3,f
  4690  0084' 0807'              	movf	___flge@ff2+3,w
  4691  0085' 0203'              	subwf	___flge@ff1+3,w
  4692  0086' 1D03               	skipz
  4693  0087' 0008               	return
  4694  0088' 0806'              	movf	___flge@ff2+2,w
  4695  0089' 0202'              	subwf	___flge@ff1+2,w
  4696  008A' 1D03               	skipz
  4697  008B' 0008               	return
  4698  008C' 0805'              	movf	___flge@ff2+1,w
  4699  008D' 0201'              	subwf	___flge@ff1+1,w
  4700  008E' 1D03               	skipz
  4701  008F' 0008               	return
  4702  0090' 0804'              	movf	___flge@ff2,w
  4703  0091' 0200'              	subwf	___flge@ff1,w
  4704  0092' 0008               	return
  4705  0093'                    __end_of___flge:
  4706                           
  4707                           	psect	text15
  4708  0000'                    __ptext15:	
  4709 ;; *************** function _eval_poly *****************
  4710 ;; Defined at:
  4711 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/evalpoly.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  x               4    0[BANK1 ] unsigned char 
  4714 ;;  d               1    4[BANK1 ] PTR const 
  4715 ;;		 -> log@coeff(36), exp@coeff(40), 
  4716 ;;  n               2    5[BANK1 ] int 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  res             4    7[BANK1 ] int 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  4    0[BANK1 ] int 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 300/100
  4725 ;;		On exit  : 300/100
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4728 ;;      Params:         0       0       7       0
  4729 ;;      Locals:         0       0       4       0
  4730 ;;      Temps:          0       5       0       0
  4731 ;;      Totals:         0       5      11       0
  4732 ;;Total ram usage:       16 bytes
  4733 ;; Hardware stack levels used: 1
  4734 ;; Hardware stack levels required when called: 2
  4735 ;; This function calls:
  4736 ;;		___fladd
  4737 ;;		___flmul
  4738 ;; This function is called by:
  4739 ;;		_exp
  4740 ;;		_log
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744  0000'                    _eval_poly:	
  4745                           ;psect for function _eval_poly
  4746                           
  4747                           
  4748                           ;incstack = 0
  4749 ;; using string table level
  4750                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4751  0000' 0800'              	movf	eval_poly@n^(0+128),w
  4752  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  4753  0002' 00CB'              	movwf	??_eval_poly
  4754  0003' 3001               	movlw	1
  4755  0004'                    u5765:
  4756  0004' 1003               	clrc
  4757  0005' 0DCB'              	rlf	??_eval_poly,f
  4758  0006' 3EFF               	addlw	-1
  4759  0007' 1D03               	skipz
  4760  0008' 2800'              	goto	u5765
  4761  0009' 1003               	clrc
  4762  000A' 0D4B'              	rlf	??_eval_poly,w
  4763  000B' 1683               	bsf	3,5	;RP0=1, select bank1
  4764  000C' 0700'              	addwf	eval_poly@d^(0+128),w
  4765  000D' 0084               	movwf	4
  4766  000E' 118A' 2000' 118A'  	fcall	stringdir
  4767  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  4768  0012' 00CC'              	movwf	??_eval_poly+1
  4769  0013' 118A' 2000' 118A'  	fcall	stringdir
  4770  0016' 00CD'              	movwf	??_eval_poly+2
  4771  0017' 118A' 2000' 118A'  	fcall	stringdir
  4772  001A' 00CE'              	movwf	??_eval_poly+3
  4773  001B' 118A' 2000' 118A'  	fcall	stringdir
  4774  001E' 00CF'              	movwf	??_eval_poly+4
  4775  001F' 084F'              	movf	??_eval_poly+4,w
  4776  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  4777  0021' 0080'              	movwf	(eval_poly@res+3)^(0+128)
  4778  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  4779  0023' 084E'              	movf	??_eval_poly+3,w
  4780  0024' 1683               	bsf	3,5	;RP0=1, select bank1
  4781  0025' 0080'              	movwf	(eval_poly@res+2)^(0+128)
  4782  0026' 1283               	bcf	3,5	;RP0=0, select bank0
  4783  0027' 084D'              	movf	??_eval_poly+2,w
  4784  0028' 1683               	bsf	3,5	;RP0=1, select bank1
  4785  0029' 0080'              	movwf	(eval_poly@res+1)^(0+128)
  4786  002A' 1283               	bcf	3,5	;RP0=0, select bank0
  4787  002B' 084C'              	movf	??_eval_poly+1,w
  4788  002C'                    L2:
  4789  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  4790  002D' 0080'              	movwf	eval_poly@res^(0+128)
  4791  002E' 0800'              	movf	eval_poly@n^(0+128),w
  4792  002F' 0400'              	iorwf	(eval_poly@n+1)^(0+128),w
  4793  0030' 1903               	btfsc	3,2
  4794  0031' 2800'              	goto	l4055
  4795  0032' 30FF               	movlw	255
  4796  0033' 0780'              	addwf	eval_poly@n^(0+128),f
  4797  0034' 1803               	skipnc
  4798  0035' 0A80'              	incf	(eval_poly@n+1)^(0+128),f
  4799  0036' 30FF               	movlw	255
  4800  0037' 0780'              	addwf	(eval_poly@n+1)^(0+128),f
  4801  0038' 0800'              	movf	eval_poly@n^(0+128),w
  4802  0039' 1283               	bcf	3,5	;RP0=0, select bank0
  4803  003A' 00CB'              	movwf	??_eval_poly
  4804  003B' 3001               	movlw	1
  4805  003C'                    u5775:
  4806  003C' 1003               	clrc
  4807  003D' 0DCB'              	rlf	??_eval_poly,f
  4808  003E' 3EFF               	addlw	-1
  4809  003F' 1D03               	skipz
  4810  0040' 2800'              	goto	u5775
  4811  0041' 1003               	clrc
  4812  0042' 0D4B'              	rlf	??_eval_poly,w
  4813  0043' 1683               	bsf	3,5	;RP0=1, select bank1
  4814  0044' 0700'              	addwf	eval_poly@d^(0+128),w
  4815  0045' 0084               	movwf	4
  4816  0046' 118A' 2000' 118A'  	fcall	stringdir
  4817  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  4818  004A' 00CC'              	movwf	??_eval_poly+1
  4819  004B' 118A' 2000' 118A'  	fcall	stringdir
  4820  004E' 00CD'              	movwf	??_eval_poly+2
  4821  004F' 118A' 2000' 118A'  	fcall	stringdir
  4822  0052' 00CE'              	movwf	??_eval_poly+3
  4823  0053' 118A' 2000' 118A'  	fcall	stringdir
  4824  0056' 00CF'              	movwf	??_eval_poly+4
  4825  0057' 084F'              	movf	??_eval_poly+4,w
  4826  0058' 00BA'              	movwf	___fladd@b+3
  4827  0059' 084E'              	movf	??_eval_poly+3,w
  4828  005A' 00B9'              	movwf	___fladd@b+2
  4829  005B' 084D'              	movf	??_eval_poly+2,w
  4830  005C' 00B8'              	movwf	___fladd@b+1
  4831  005D' 084C'              	movf	??_eval_poly+1,w
  4832  005E' 00B7'              	movwf	___fladd@b
  4833  005F' 1683               	bsf	3,5	;RP0=1, select bank1
  4834  0060' 0800'              	movf	(eval_poly@res+3)^(0+128),w
  4835  0061' 1283               	bcf	3,5	;RP0=0, select bank0
  4836  0062' 00A0'              	movwf	___flmul@b+3
  4837  0063' 1683               	bsf	3,5	;RP0=1, select bank1
  4838  0064' 0800'              	movf	(eval_poly@res+2)^(0+128),w
  4839  0065' 1283               	bcf	3,5	;RP0=0, select bank0
  4840  0066' 009F'              	movwf	___flmul@b+2
  4841  0067' 1683               	bsf	3,5	;RP0=1, select bank1
  4842  0068' 0800'              	movf	(eval_poly@res+1)^(0+128),w
  4843  0069' 1283               	bcf	3,5	;RP0=0, select bank0
  4844  006A' 009E'              	movwf	___flmul@b+1
  4845  006B' 1683               	bsf	3,5	;RP0=1, select bank1
  4846  006C' 0800'              	movf	eval_poly@res^(0+128),w
  4847  006D' 1283               	bcf	3,5	;RP0=0, select bank0
  4848  006E' 009D'              	movwf	___flmul@b
  4849  006F' 1683               	bsf	3,5	;RP0=1, select bank1
  4850  0070' 0800'              	movf	(eval_poly@x+3)^(0+128),w
  4851  0071' 1283               	bcf	3,5	;RP0=0, select bank0
  4852  0072' 00A4'              	movwf	___flmul@a+3
  4853  0073' 1683               	bsf	3,5	;RP0=1, select bank1
  4854  0074' 0800'              	movf	(eval_poly@x+2)^(0+128),w
  4855  0075' 1283               	bcf	3,5	;RP0=0, select bank0
  4856  0076' 00A3'              	movwf	___flmul@a+2
  4857  0077' 1683               	bsf	3,5	;RP0=1, select bank1
  4858  0078' 0800'              	movf	(eval_poly@x+1)^(0+128),w
  4859  0079' 1283               	bcf	3,5	;RP0=0, select bank0
  4860  007A' 00A2'              	movwf	___flmul@a+1
  4861  007B' 1683               	bsf	3,5	;RP0=1, select bank1
  4862  007C' 0800'              	movf	eval_poly@x^(0+128),w
  4863  007D' 1283               	bcf	3,5	;RP0=0, select bank0
  4864  007E' 00A1'              	movwf	___flmul@a
  4865  007F' 118A' 2000' 118A'  	fcall	___flmul
  4866  0082' 0820'              	movf	?___flmul+3,w
  4867  0083' 00BE'              	movwf	___fladd@a+3
  4868  0084' 081F'              	movf	?___flmul+2,w
  4869  0085' 00BD'              	movwf	___fladd@a+2
  4870  0086' 081E'              	movf	?___flmul+1,w
  4871  0087' 00BC'              	movwf	___fladd@a+1
  4872  0088' 081D'              	movf	?___flmul,w
  4873  0089' 00BB'              	movwf	___fladd@a
  4874  008A' 118A' 2000' 118A'  	fcall	___fladd
  4875  008D' 083A'              	movf	?___fladd+3,w
  4876  008E' 1683               	bsf	3,5	;RP0=1, select bank1
  4877  008F' 0080'              	movwf	(eval_poly@res+3)^(0+128)
  4878  0090' 1283               	bcf	3,5	;RP0=0, select bank0
  4879  0091' 0839'              	movf	?___fladd+2,w
  4880  0092' 1683               	bsf	3,5	;RP0=1, select bank1
  4881  0093' 0080'              	movwf	(eval_poly@res+2)^(0+128)
  4882  0094' 1283               	bcf	3,5	;RP0=0, select bank0
  4883  0095' 0838'              	movf	?___fladd+1,w
  4884  0096' 1683               	bsf	3,5	;RP0=1, select bank1
  4885  0097' 0080'              	movwf	(eval_poly@res+1)^(0+128)
  4886  0098' 1283               	bcf	3,5	;RP0=0, select bank0
  4887  0099' 0837'              	movf	?___fladd,w
  4888  009A' 2800'              	goto	L2
  4889  009B'                    l4055:
  4890  009B' 0800'              	movf	(eval_poly@res+3)^(0+128),w
  4891  009C' 0080'              	movwf	(?_eval_poly+3)^(0+128)
  4892  009D' 0800'              	movf	(eval_poly@res+2)^(0+128),w
  4893  009E' 0080'              	movwf	(?_eval_poly+2)^(0+128)
  4894  009F' 0800'              	movf	(eval_poly@res+1)^(0+128),w
  4895  00A0' 0080'              	movwf	(?_eval_poly+1)^(0+128)
  4896  00A1' 0800'              	movf	eval_poly@res^(0+128),w
  4897  00A2' 0080'              	movwf	?_eval_poly^(0+128)
  4898  00A3' 0008               	return
  4899  00A4'                    __end_of_eval_poly:
  4900                           
  4901                           	psect	text16
  4902  0000'                    __ptext16:	
  4903 ;; *************** function ___flmul *****************
  4904 ;; Defined at:
  4905 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcmul.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  b               4   29[BANK0 ] int 
  4908 ;;  a               4   33[BANK0 ] int 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  prod            4   49[BANK0 ] struct .
  4911 ;;  grs             4   45[BANK0 ] unsigned long 
  4912 ;;  temp            2   53[BANK0 ] struct .
  4913 ;;  bexp            1   44[BANK0 ] unsigned char 
  4914 ;;  aexp            1   43[BANK0 ] unsigned char 
  4915 ;;  sign            1   42[BANK0 ] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  4   29[BANK0 ] unsigned char 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : 300/0
  4922 ;;		On exit  : 300/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4925 ;;      Params:         0       8       0       0
  4926 ;;      Locals:         0      13       0       0
  4927 ;;      Temps:          0       5       0       0
  4928 ;;      Totals:         0      26       0       0
  4929 ;;Total ram usage:       26 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 1
  4932 ;; This function calls:
  4933 ;;		__Umul8_16
  4934 ;; This function is called by:
  4935 ;;		_vector_length
  4936 ;;		_pow
  4937 ;;		_exp
  4938 ;;		_eval_poly
  4939 ;;		_log
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943  0000'                    ___flmul:	
  4944                           ;psect for function ___flmul
  4945                           
  4946                           
  4947                           ;incstack = 0
  4948                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4949  0000' 0820'              	movf	___flmul@b+3,w
  4950  0001' 3980               	andlw	128
  4951  0002' 00AA'              	movwf	___flmul@sign
  4952  0003' 0820'              	movf	___flmul@b+3,w
  4953  0004' 00A5'              	movwf	??___flmul
  4954  0005' 0725'              	addwf	??___flmul,w
  4955  0006' 00AC'              	movwf	___flmul@bexp
  4956  0007' 1B9F'              	btfsc	___flmul@b+2,7
  4957  0008' 142C'              	bsf	___flmul@bexp,0
  4958  0009' 082C'              	movf	___flmul@bexp,w
  4959  000A' 1903               	btfsc	3,2
  4960  000B' 2800'              	goto	l3677
  4961  000C' 0A2C'              	incf	___flmul@bexp,w
  4962  000D' 1D03               	btfss	3,2
  4963  000E' 2800'              	goto	l3675
  4964  000F' 3000               	movlw	0
  4965  0010' 00A0'              	movwf	___flmul@b+3
  4966  0011' 3000               	movlw	0
  4967  0012' 009F'              	movwf	___flmul@b+2
  4968  0013' 3000               	movlw	0
  4969  0014' 009E'              	movwf	___flmul@b+1
  4970  0015' 3000               	movlw	0
  4971  0016' 009D'              	movwf	___flmul@b
  4972  0017'                    l3675:
  4973  0017' 179F'              	bsf	___flmul@b+2,7
  4974  0018' 2800'              	goto	l3679
  4975  0019'                    l3677:
  4976  0019' 3000               	movlw	0
  4977  001A' 00A0'              	movwf	___flmul@b+3
  4978  001B' 3000               	movlw	0
  4979  001C' 009F'              	movwf	___flmul@b+2
  4980  001D' 3000               	movlw	0
  4981  001E' 009E'              	movwf	___flmul@b+1
  4982  001F' 3000               	movlw	0
  4983  0020' 009D'              	movwf	___flmul@b
  4984  0021'                    l3679:
  4985  0021' 0824'              	movf	___flmul@a+3,w
  4986  0022' 3980               	andlw	128
  4987  0023' 00A5'              	movwf	??___flmul
  4988  0024' 0825'              	movf	??___flmul,w
  4989  0025' 06AA'              	xorwf	___flmul@sign,f
  4990  0026' 0824'              	movf	___flmul@a+3,w
  4991  0027' 00A5'              	movwf	??___flmul
  4992  0028' 0725'              	addwf	??___flmul,w
  4993  0029' 00AB'              	movwf	___flmul@aexp
  4994  002A' 1BA3'              	btfsc	___flmul@a+2,7
  4995  002B' 142B'              	bsf	___flmul@aexp,0
  4996  002C' 082B'              	movf	___flmul@aexp,w
  4997  002D' 1903               	btfsc	3,2
  4998  002E' 2800'              	goto	l3695
  4999  002F' 0A2B'              	incf	___flmul@aexp,w
  5000  0030' 1D03               	btfss	3,2
  5001  0031' 2800'              	goto	l3693
  5002  0032' 3000               	movlw	0
  5003  0033' 00A4'              	movwf	___flmul@a+3
  5004  0034' 3000               	movlw	0
  5005  0035' 00A3'              	movwf	___flmul@a+2
  5006  0036' 3000               	movlw	0
  5007  0037' 00A2'              	movwf	___flmul@a+1
  5008  0038' 3000               	movlw	0
  5009  0039' 00A1'              	movwf	___flmul@a
  5010  003A'                    l3693:
  5011  003A' 17A3'              	bsf	___flmul@a+2,7
  5012  003B' 2800'              	goto	l3697
  5013  003C'                    l3695:
  5014  003C' 3000               	movlw	0
  5015  003D' 00A4'              	movwf	___flmul@a+3
  5016  003E' 3000               	movlw	0
  5017  003F' 00A3'              	movwf	___flmul@a+2
  5018  0040' 3000               	movlw	0
  5019  0041' 00A2'              	movwf	___flmul@a+1
  5020  0042' 3000               	movlw	0
  5021  0043' 00A1'              	movwf	___flmul@a
  5022  0044'                    l3697:
  5023  0044' 082B'              	movf	___flmul@aexp,w
  5024  0045' 1D03               	btfss	3,2
  5025  0046' 082C'              	movf	___flmul@bexp,w
  5026  0047' 1D03               	btfss	3,2
  5027  0048' 2800'              	goto	l3705
  5028  0049' 3000               	movlw	0
  5029  004A' 00A0'              	movwf	?___flmul+3
  5030  004B' 3000               	movlw	0
  5031  004C' 009F'              	movwf	?___flmul+2
  5032  004D' 3000               	movlw	0
  5033  004E' 009E'              	movwf	?___flmul+1
  5034  004F' 3000               	movlw	0
  5035  0050' 009D'              	movwf	?___flmul
  5036  0051' 0008               	return
  5037  0052'                    l3705:
  5038  0052' 081D'              	movf	___flmul@b,w
  5039  0053' 0080'              	movwf	__Umul8_16@multiplicand
  5040  0054' 0823'              	movf	___flmul@a+2,w
  5041  0055' 118A' 2000' 118A'  	fcall	__Umul8_16
  5042  0058' 0801'              	movf	?__Umul8_16+1,w
  5043  0059' 00B6'              	movwf	___flmul@temp+1
  5044  005A' 0800'              	movf	?__Umul8_16,w
  5045  005B' 00B5'              	movwf	___flmul@temp
  5046  005C' 0835'              	movf	___flmul@temp,w
  5047  005D' 00A5'              	movwf	??___flmul
  5048  005E' 01A6'              	clrf	??___flmul+1
  5049  005F' 01A7'              	clrf	??___flmul+2
  5050  0060' 01A8'              	clrf	??___flmul+3
  5051  0061' 0828'              	movf	??___flmul+3,w
  5052  0062' 00B0'              	movwf	___flmul@grs+3
  5053  0063' 0827'              	movf	??___flmul+2,w
  5054  0064' 00AF'              	movwf	___flmul@grs+2
  5055  0065' 0826'              	movf	??___flmul+1,w
  5056  0066' 00AE'              	movwf	___flmul@grs+1
  5057  0067' 0825'              	movf	??___flmul,w
  5058  0068' 00AD'              	movwf	___flmul@grs
  5059  0069' 0836'              	movf	___flmul@temp+1,w
  5060  006A' 00A5'              	movwf	??___flmul
  5061  006B' 01A6'              	clrf	??___flmul+1
  5062  006C' 01A7'              	clrf	??___flmul+2
  5063  006D' 01A8'              	clrf	??___flmul+3
  5064  006E' 0828'              	movf	??___flmul+3,w
  5065  006F' 00B4'              	movwf	___flmul@prod+3
  5066  0070' 0827'              	movf	??___flmul+2,w
  5067  0071' 00B3'              	movwf	___flmul@prod+2
  5068  0072' 0826'              	movf	??___flmul+1,w
  5069  0073' 00B2'              	movwf	___flmul@prod+1
  5070  0074' 0825'              	movf	??___flmul,w
  5071  0075' 00B1'              	movwf	___flmul@prod
  5072  0076' 081E'              	movf	___flmul@b+1,w
  5073  0077' 0080'              	movwf	__Umul8_16@multiplicand
  5074  0078' 0822'              	movf	___flmul@a+1,w
  5075  0079' 118A' 2000' 118A'  	fcall	__Umul8_16
  5076  007C' 0801'              	movf	?__Umul8_16+1,w
  5077  007D' 00B6'              	movwf	___flmul@temp+1
  5078  007E' 0800'              	movf	?__Umul8_16,w
  5079  007F' 00B5'              	movwf	___flmul@temp
  5080  0080' 0835'              	movf	___flmul@temp,w
  5081  0081' 00A5'              	movwf	??___flmul
  5082  0082' 01A6'              	clrf	??___flmul+1
  5083  0083' 01A7'              	clrf	??___flmul+2
  5084  0084' 01A8'              	clrf	??___flmul+3
  5085  0085' 0825'              	movf	??___flmul,w
  5086  0086' 07AD'              	addwf	___flmul@grs,f
  5087  0087' 0826'              	movf	??___flmul+1,w
  5088  0088' 1103               	clrz
  5089  0089' 1803               	skipnc
  5090  008A' 3E01               	addlw	1
  5091  008B' 1D03               	btfss	3,2
  5092  008C' 07AE'              	addwf	___flmul@grs+1,f
  5093  008D' 0827'              	movf	??___flmul+2,w
  5094  008E' 1103               	clrz
  5095  008F' 1803               	skipnc
  5096  0090' 3E01               	addlw	1
  5097  0091' 1D03               	btfss	3,2
  5098  0092' 07AF'              	addwf	___flmul@grs+2,f
  5099  0093' 0828'              	movf	??___flmul+3,w
  5100  0094' 1103               	clrz
  5101  0095' 1803               	skipnc
  5102  0096' 3E01               	addlw	1
  5103  0097' 1D03               	btfss	3,2
  5104  0098' 07B0'              	addwf	___flmul@grs+3,f
  5105  0099' 0836'              	movf	___flmul@temp+1,w
  5106  009A' 00A5'              	movwf	??___flmul
  5107  009B' 01A6'              	clrf	??___flmul+1
  5108  009C' 01A7'              	clrf	??___flmul+2
  5109  009D' 01A8'              	clrf	??___flmul+3
  5110  009E' 0825'              	movf	??___flmul,w
  5111  009F' 07B1'              	addwf	___flmul@prod,f
  5112  00A0' 0826'              	movf	??___flmul+1,w
  5113  00A1' 1103               	clrz
  5114  00A2' 1803               	skipnc
  5115  00A3' 3E01               	addlw	1
  5116  00A4' 1D03               	btfss	3,2
  5117  00A5' 07B2'              	addwf	___flmul@prod+1,f
  5118  00A6' 0827'              	movf	??___flmul+2,w
  5119  00A7' 1103               	clrz
  5120  00A8' 1803               	skipnc
  5121  00A9' 3E01               	addlw	1
  5122  00AA' 1D03               	btfss	3,2
  5123  00AB' 07B3'              	addwf	___flmul@prod+2,f
  5124  00AC' 0828'              	movf	??___flmul+3,w
  5125  00AD' 1103               	clrz
  5126  00AE' 1803               	skipnc
  5127  00AF' 3E01               	addlw	1
  5128  00B0' 1D03               	btfss	3,2
  5129  00B1' 07B4'              	addwf	___flmul@prod+3,f
  5130  00B2' 081F'              	movf	___flmul@b+2,w
  5131  00B3' 0080'              	movwf	__Umul8_16@multiplicand
  5132  00B4' 0821'              	movf	___flmul@a,w
  5133  00B5' 118A' 2000' 118A'  	fcall	__Umul8_16
  5134  00B8' 0801'              	movf	?__Umul8_16+1,w
  5135  00B9' 00B6'              	movwf	___flmul@temp+1
  5136  00BA' 0800'              	movf	?__Umul8_16,w
  5137  00BB' 00B5'              	movwf	___flmul@temp
  5138  00BC' 0835'              	movf	___flmul@temp,w
  5139  00BD' 00A5'              	movwf	??___flmul
  5140  00BE' 01A6'              	clrf	??___flmul+1
  5141  00BF' 01A7'              	clrf	??___flmul+2
  5142  00C0' 01A8'              	clrf	??___flmul+3
  5143  00C1' 0825'              	movf	??___flmul,w
  5144  00C2' 07AD'              	addwf	___flmul@grs,f
  5145  00C3' 0826'              	movf	??___flmul+1,w
  5146  00C4' 1103               	clrz
  5147  00C5' 1803               	skipnc
  5148  00C6' 3E01               	addlw	1
  5149  00C7' 1D03               	btfss	3,2
  5150  00C8' 07AE'              	addwf	___flmul@grs+1,f
  5151  00C9' 0827'              	movf	??___flmul+2,w
  5152  00CA' 1103               	clrz
  5153  00CB' 1803               	skipnc
  5154  00CC' 3E01               	addlw	1
  5155  00CD' 1D03               	btfss	3,2
  5156  00CE' 07AF'              	addwf	___flmul@grs+2,f
  5157  00CF' 0828'              	movf	??___flmul+3,w
  5158  00D0' 1103               	clrz
  5159  00D1' 1803               	skipnc
  5160  00D2' 3E01               	addlw	1
  5161  00D3' 1D03               	btfss	3,2
  5162  00D4' 07B0'              	addwf	___flmul@grs+3,f
  5163  00D5' 0836'              	movf	___flmul@temp+1,w
  5164  00D6' 00A5'              	movwf	??___flmul
  5165  00D7' 01A6'              	clrf	??___flmul+1
  5166  00D8' 01A7'              	clrf	??___flmul+2
  5167  00D9' 01A8'              	clrf	??___flmul+3
  5168  00DA' 0825'              	movf	??___flmul,w
  5169  00DB' 07B1'              	addwf	___flmul@prod,f
  5170  00DC' 0826'              	movf	??___flmul+1,w
  5171  00DD' 1103               	clrz
  5172  00DE' 1803               	skipnc
  5173  00DF' 3E01               	addlw	1
  5174  00E0' 1D03               	btfss	3,2
  5175  00E1' 07B2'              	addwf	___flmul@prod+1,f
  5176  00E2' 0827'              	movf	??___flmul+2,w
  5177  00E3' 1103               	clrz
  5178  00E4' 1803               	skipnc
  5179  00E5' 3E01               	addlw	1
  5180  00E6' 1D03               	btfss	3,2
  5181  00E7' 07B3'              	addwf	___flmul@prod+2,f
  5182  00E8' 0828'              	movf	??___flmul+3,w
  5183  00E9' 1103               	clrz
  5184  00EA' 1803               	skipnc
  5185  00EB' 3E01               	addlw	1
  5186  00EC' 1D03               	btfss	3,2
  5187  00ED' 07B4'              	addwf	___flmul@prod+3,f
  5188  00EE' 3008               	movlw	8
  5189  00EF' 00A5'              	movwf	??___flmul
  5190  00F0'                    u5025:
  5191  00F0' 1003               	clrc
  5192  00F1' 0DAD'              	rlf	___flmul@grs,f
  5193  00F2' 0DAE'              	rlf	___flmul@grs+1,f
  5194  00F3' 0DAF'              	rlf	___flmul@grs+2,f
  5195  00F4' 0DB0'              	rlf	___flmul@grs+3,f
  5196  00F5' 0BA5'              	decfsz	??___flmul,f
  5197  00F6' 2800'              	goto	u5025
  5198  00F7' 081E'              	movf	___flmul@b+1,w
  5199  00F8' 0080'              	movwf	__Umul8_16@multiplicand
  5200  00F9' 0821'              	movf	___flmul@a,w
  5201  00FA' 118A' 2000' 118A'  	fcall	__Umul8_16
  5202  00FD' 0801'              	movf	?__Umul8_16+1,w
  5203  00FE' 00B6'              	movwf	___flmul@temp+1
  5204  00FF' 0800'              	movf	?__Umul8_16,w
  5205  0100' 00B5'              	movwf	___flmul@temp
  5206  0101' 0835'              	movf	___flmul@temp,w
  5207  0102' 00A5'              	movwf	??___flmul
  5208  0103' 0836'              	movf	___flmul@temp+1,w
  5209  0104' 00A6'              	movwf	??___flmul+1
  5210  0105' 01A7'              	clrf	??___flmul+2
  5211  0106' 01A8'              	clrf	??___flmul+3
  5212  0107' 0825'              	movf	??___flmul,w
  5213  0108' 07AD'              	addwf	___flmul@grs,f
  5214  0109' 0826'              	movf	??___flmul+1,w
  5215  010A' 1103               	clrz
  5216  010B' 1803               	skipnc
  5217  010C' 3E01               	addlw	1
  5218  010D' 1D03               	btfss	3,2
  5219  010E' 07AE'              	addwf	___flmul@grs+1,f
  5220  010F' 0827'              	movf	??___flmul+2,w
  5221  0110' 1103               	clrz
  5222  0111' 1803               	skipnc
  5223  0112' 3E01               	addlw	1
  5224  0113' 1D03               	btfss	3,2
  5225  0114' 07AF'              	addwf	___flmul@grs+2,f
  5226  0115' 0828'              	movf	??___flmul+3,w
  5227  0116' 1103               	clrz
  5228  0117' 1803               	skipnc
  5229  0118' 3E01               	addlw	1
  5230  0119' 1D03               	btfss	3,2
  5231  011A' 07B0'              	addwf	___flmul@grs+3,f
  5232  011B' 081D'              	movf	___flmul@b,w
  5233  011C' 0080'              	movwf	__Umul8_16@multiplicand
  5234  011D' 0822'              	movf	___flmul@a+1,w
  5235  011E' 118A' 2000' 118A'  	fcall	__Umul8_16
  5236  0121' 0801'              	movf	?__Umul8_16+1,w
  5237  0122' 00B6'              	movwf	___flmul@temp+1
  5238  0123' 0800'              	movf	?__Umul8_16,w
  5239  0124' 00B5'              	movwf	___flmul@temp
  5240  0125' 0835'              	movf	___flmul@temp,w
  5241  0126' 00A5'              	movwf	??___flmul
  5242  0127' 0836'              	movf	___flmul@temp+1,w
  5243  0128' 00A6'              	movwf	??___flmul+1
  5244  0129' 01A7'              	clrf	??___flmul+2
  5245  012A' 01A8'              	clrf	??___flmul+3
  5246  012B' 0825'              	movf	??___flmul,w
  5247  012C' 07AD'              	addwf	___flmul@grs,f
  5248  012D' 0826'              	movf	??___flmul+1,w
  5249  012E' 1103               	clrz
  5250  012F' 1803               	skipnc
  5251  0130' 3E01               	addlw	1
  5252  0131' 1D03               	btfss	3,2
  5253  0132' 07AE'              	addwf	___flmul@grs+1,f
  5254  0133' 0827'              	movf	??___flmul+2,w
  5255  0134' 1103               	clrz
  5256  0135' 1803               	skipnc
  5257  0136' 3E01               	addlw	1
  5258  0137' 1D03               	btfss	3,2
  5259  0138' 07AF'              	addwf	___flmul@grs+2,f
  5260  0139' 0828'              	movf	??___flmul+3,w
  5261  013A' 1103               	clrz
  5262  013B' 1803               	skipnc
  5263  013C' 3E01               	addlw	1
  5264  013D' 1D03               	btfss	3,2
  5265  013E' 07B0'              	addwf	___flmul@grs+3,f
  5266  013F' 3008               	movlw	8
  5267  0140' 00A5'              	movwf	??___flmul
  5268  0141'                    u5055:
  5269  0141' 1003               	clrc
  5270  0142' 0DAD'              	rlf	___flmul@grs,f
  5271  0143' 0DAE'              	rlf	___flmul@grs+1,f
  5272  0144' 0DAF'              	rlf	___flmul@grs+2,f
  5273  0145' 0DB0'              	rlf	___flmul@grs+3,f
  5274  0146' 0BA5'              	decfsz	??___flmul,f
  5275  0147' 2800'              	goto	u5055
  5276  0148' 081D'              	movf	___flmul@b,w
  5277  0149' 0080'              	movwf	__Umul8_16@multiplicand
  5278  014A' 0821'              	movf	___flmul@a,w
  5279  014B' 118A' 2000' 118A'  	fcall	__Umul8_16
  5280  014E' 0801'              	movf	?__Umul8_16+1,w
  5281  014F' 00B6'              	movwf	___flmul@temp+1
  5282  0150' 0800'              	movf	?__Umul8_16,w
  5283  0151' 00B5'              	movwf	___flmul@temp
  5284  0152' 0835'              	movf	___flmul@temp,w
  5285  0153' 00A5'              	movwf	??___flmul
  5286  0154' 0836'              	movf	___flmul@temp+1,w
  5287  0155' 00A6'              	movwf	??___flmul+1
  5288  0156' 01A7'              	clrf	??___flmul+2
  5289  0157' 01A8'              	clrf	??___flmul+3
  5290  0158' 0825'              	movf	??___flmul,w
  5291  0159' 07AD'              	addwf	___flmul@grs,f
  5292  015A' 0826'              	movf	??___flmul+1,w
  5293  015B' 1103               	clrz
  5294  015C' 1803               	skipnc
  5295  015D' 3E01               	addlw	1
  5296  015E' 1D03               	btfss	3,2
  5297  015F' 07AE'              	addwf	___flmul@grs+1,f
  5298  0160' 0827'              	movf	??___flmul+2,w
  5299  0161' 1103               	clrz
  5300  0162' 1803               	skipnc
  5301  0163' 3E01               	addlw	1
  5302  0164' 1D03               	btfss	3,2
  5303  0165' 07AF'              	addwf	___flmul@grs+2,f
  5304  0166' 0828'              	movf	??___flmul+3,w
  5305  0167' 1103               	clrz
  5306  0168' 1803               	skipnc
  5307  0169' 3E01               	addlw	1
  5308  016A' 1D03               	btfss	3,2
  5309  016B' 07B0'              	addwf	___flmul@grs+3,f
  5310  016C' 081E'              	movf	___flmul@b+1,w
  5311  016D' 0080'              	movwf	__Umul8_16@multiplicand
  5312  016E' 0823'              	movf	___flmul@a+2,w
  5313  016F' 118A' 2000' 118A'  	fcall	__Umul8_16
  5314  0172' 0801'              	movf	?__Umul8_16+1,w
  5315  0173' 00B6'              	movwf	___flmul@temp+1
  5316  0174' 0800'              	movf	?__Umul8_16,w
  5317  0175' 00B5'              	movwf	___flmul@temp
  5318  0176' 0835'              	movf	___flmul@temp,w
  5319  0177' 00A5'              	movwf	??___flmul
  5320  0178' 0836'              	movf	___flmul@temp+1,w
  5321  0179' 00A6'              	movwf	??___flmul+1
  5322  017A' 01A7'              	clrf	??___flmul+2
  5323  017B' 01A8'              	clrf	??___flmul+3
  5324  017C' 0825'              	movf	??___flmul,w
  5325  017D' 07B1'              	addwf	___flmul@prod,f
  5326  017E' 0826'              	movf	??___flmul+1,w
  5327  017F' 1103               	clrz
  5328  0180' 1803               	skipnc
  5329  0181' 3E01               	addlw	1
  5330  0182' 1D03               	btfss	3,2
  5331  0183' 07B2'              	addwf	___flmul@prod+1,f
  5332  0184' 0827'              	movf	??___flmul+2,w
  5333  0185' 1103               	clrz
  5334  0186' 1803               	skipnc
  5335  0187' 3E01               	addlw	1
  5336  0188' 1D03               	btfss	3,2
  5337  0189' 07B3'              	addwf	___flmul@prod+2,f
  5338  018A' 0828'              	movf	??___flmul+3,w
  5339  018B' 1103               	clrz
  5340  018C' 1803               	skipnc
  5341  018D' 3E01               	addlw	1
  5342  018E' 1D03               	btfss	3,2
  5343  018F' 07B4'              	addwf	___flmul@prod+3,f
  5344  0190' 081F'              	movf	___flmul@b+2,w
  5345  0191' 0080'              	movwf	__Umul8_16@multiplicand
  5346  0192' 0822'              	movf	___flmul@a+1,w
  5347  0193' 118A' 2000' 118A'  	fcall	__Umul8_16
  5348  0196' 0801'              	movf	?__Umul8_16+1,w
  5349  0197' 00B6'              	movwf	___flmul@temp+1
  5350  0198' 0800'              	movf	?__Umul8_16,w
  5351  0199' 00B5'              	movwf	___flmul@temp
  5352  019A' 0835'              	movf	___flmul@temp,w
  5353  019B' 00A5'              	movwf	??___flmul
  5354  019C' 0836'              	movf	___flmul@temp+1,w
  5355  019D' 00A6'              	movwf	??___flmul+1
  5356  019E' 01A7'              	clrf	??___flmul+2
  5357  019F' 01A8'              	clrf	??___flmul+3
  5358  01A0' 0825'              	movf	??___flmul,w
  5359  01A1' 07B1'              	addwf	___flmul@prod,f
  5360  01A2' 0826'              	movf	??___flmul+1,w
  5361  01A3' 1103               	clrz
  5362  01A4' 1803               	skipnc
  5363  01A5' 3E01               	addlw	1
  5364  01A6' 1D03               	btfss	3,2
  5365  01A7' 07B2'              	addwf	___flmul@prod+1,f
  5366  01A8' 0827'              	movf	??___flmul+2,w
  5367  01A9' 1103               	clrz
  5368  01AA' 1803               	skipnc
  5369  01AB' 3E01               	addlw	1
  5370  01AC' 1D03               	btfss	3,2
  5371  01AD' 07B3'              	addwf	___flmul@prod+2,f
  5372  01AE' 0828'              	movf	??___flmul+3,w
  5373  01AF' 1103               	clrz
  5374  01B0' 1803               	skipnc
  5375  01B1' 3E01               	addlw	1
  5376  01B2' 1D03               	btfss	3,2
  5377  01B3' 07B4'              	addwf	___flmul@prod+3,f
  5378  01B4' 081F'              	movf	___flmul@b+2,w
  5379  01B5' 0080'              	movwf	__Umul8_16@multiplicand
  5380  01B6' 0823'              	movf	___flmul@a+2,w
  5381  01B7' 118A' 2000' 118A'  	fcall	__Umul8_16
  5382  01BA' 0801'              	movf	?__Umul8_16+1,w
  5383  01BB' 00B6'              	movwf	___flmul@temp+1
  5384  01BC' 0800'              	movf	?__Umul8_16,w
  5385  01BD' 00B5'              	movwf	___flmul@temp
  5386  01BE' 0835'              	movf	___flmul@temp,w
  5387  01BF' 00A5'              	movwf	??___flmul
  5388  01C0' 0836'              	movf	___flmul@temp+1,w
  5389  01C1' 00A6'              	movwf	??___flmul+1
  5390  01C2' 01A7'              	clrf	??___flmul+2
  5391  01C3' 01A8'              	clrf	??___flmul+3
  5392  01C4' 3008               	movlw	8
  5393  01C5'                    u5095:
  5394  01C5' 1003               	clrc
  5395  01C6' 0DA5'              	rlf	??___flmul,f
  5396  01C7' 0DA6'              	rlf	??___flmul+1,f
  5397  01C8' 0DA7'              	rlf	??___flmul+2,f
  5398  01C9' 0DA8'              	rlf	??___flmul+3,f
  5399  01CA' 3EFF               	addlw	-1
  5400  01CB' 1D03               	skipz
  5401  01CC' 2800'              	goto	u5095
  5402  01CD' 0825'              	movf	??___flmul,w
  5403  01CE' 07B1'              	addwf	___flmul@prod,f
  5404  01CF' 0826'              	movf	??___flmul+1,w
  5405  01D0' 1103               	clrz
  5406  01D1' 1803               	skipnc
  5407  01D2' 3E01               	addlw	1
  5408  01D3' 1D03               	btfss	3,2
  5409  01D4' 07B2'              	addwf	___flmul@prod+1,f
  5410  01D5' 0827'              	movf	??___flmul+2,w
  5411  01D6' 1103               	clrz
  5412  01D7' 1803               	skipnc
  5413  01D8' 3E01               	addlw	1
  5414  01D9' 1D03               	btfss	3,2
  5415  01DA' 07B3'              	addwf	___flmul@prod+2,f
  5416  01DB' 0828'              	movf	??___flmul+3,w
  5417  01DC' 1103               	clrz
  5418  01DD' 1803               	skipnc
  5419  01DE' 3E01               	addlw	1
  5420  01DF' 1D03               	btfss	3,2
  5421  01E0' 07B4'              	addwf	___flmul@prod+3,f
  5422  01E1' 0830'              	movf	___flmul@grs+3,w
  5423  01E2' 00A5'              	movwf	??___flmul
  5424  01E3' 01A6'              	clrf	??___flmul+1
  5425  01E4' 01A7'              	clrf	??___flmul+2
  5426  01E5' 01A8'              	clrf	??___flmul+3
  5427  01E6' 0825'              	movf	??___flmul,w
  5428  01E7' 07B1'              	addwf	___flmul@prod,f
  5429  01E8' 0826'              	movf	??___flmul+1,w
  5430  01E9' 1103               	clrz
  5431  01EA' 1803               	skipnc
  5432  01EB' 3E01               	addlw	1
  5433  01EC' 1D03               	btfss	3,2
  5434  01ED' 07B2'              	addwf	___flmul@prod+1,f
  5435  01EE' 0827'              	movf	??___flmul+2,w
  5436  01EF' 1103               	clrz
  5437  01F0' 1803               	skipnc
  5438  01F1' 3E01               	addlw	1
  5439  01F2' 1D03               	btfss	3,2
  5440  01F3' 07B3'              	addwf	___flmul@prod+2,f
  5441  01F4' 0828'              	movf	??___flmul+3,w
  5442  01F5' 1103               	clrz
  5443  01F6' 1803               	skipnc
  5444  01F7' 3E01               	addlw	1
  5445  01F8' 1D03               	btfss	3,2
  5446  01F9' 07B4'              	addwf	___flmul@prod+3,f
  5447  01FA' 3008               	movlw	8
  5448  01FB' 00A5'              	movwf	??___flmul
  5449  01FC'                    u5125:
  5450  01FC' 1003               	clrc
  5451  01FD' 0DAD'              	rlf	___flmul@grs,f
  5452  01FE' 0DAE'              	rlf	___flmul@grs+1,f
  5453  01FF' 0DAF'              	rlf	___flmul@grs+2,f
  5454  0200' 0DB0'              	rlf	___flmul@grs+3,f
  5455  0201' 0BA5'              	decfsz	??___flmul,f
  5456  0202' 2800'              	goto	u5125
  5457  0203' 082C'              	movf	___flmul@bexp,w
  5458  0204' 072B'              	addwf	___flmul@aexp,w
  5459  0205' 00A5'              	movwf	??___flmul
  5460  0206' 01A6'              	clrf	??___flmul+1
  5461  0207' 0DA6'              	rlf	??___flmul+1,f
  5462  0208' 0825'              	movf	??___flmul,w
  5463  0209' 3E82               	addlw	130
  5464  020A' 00B5'              	movwf	___flmul@temp
  5465  020B' 0826'              	movf	??___flmul+1,w
  5466  020C' 1803               	skipnc
  5467  020D' 3E01               	addlw	1
  5468  020E' 3EFF               	addlw	255
  5469  020F' 00B6'              	movwf	___flmul@temp+1
  5470  0210'                    l3757:
  5471  0210' 1BB3'              	btfsc	___flmul@prod+2,7
  5472  0211' 2800'              	goto	l3759
  5473  0212' 3001               	movlw	1
  5474  0213' 00A5'              	movwf	??___flmul
  5475  0214'                    u5135:
  5476  0214' 1003               	clrc
  5477  0215' 0DB1'              	rlf	___flmul@prod,f
  5478  0216' 0DB2'              	rlf	___flmul@prod+1,f
  5479  0217' 0DB3'              	rlf	___flmul@prod+2,f
  5480  0218' 0DB4'              	rlf	___flmul@prod+3,f
  5481  0219' 0BA5'              	decfsz	??___flmul,f
  5482  021A' 2800'              	goto	u5135
  5483  021B' 1BB0'              	btfsc	___flmul@grs+3,7
  5484  021C' 1431'              	bsf	___flmul@prod,0
  5485  021D' 3001               	movlw	1
  5486  021E' 00A5'              	movwf	??___flmul
  5487  021F'                    u5155:
  5488  021F' 1003               	clrc
  5489  0220' 0DAD'              	rlf	___flmul@grs,f
  5490  0221' 0DAE'              	rlf	___flmul@grs+1,f
  5491  0222' 0DAF'              	rlf	___flmul@grs+2,f
  5492  0223' 0DB0'              	rlf	___flmul@grs+3,f
  5493  0224' 0BA5'              	decfsz	??___flmul,f
  5494  0225' 2800'              	goto	u5155
  5495  0226' 30FF               	movlw	255
  5496  0227' 07B5'              	addwf	___flmul@temp,f
  5497  0228' 1803               	skipnc
  5498  0229' 0AB6'              	incf	___flmul@temp+1,f
  5499  022A' 30FF               	movlw	255
  5500  022B' 07B6'              	addwf	___flmul@temp+1,f
  5501  022C' 2800'              	goto	l3757
  5502  022D'                    l3759:
  5503  022D' 01AB'              	clrf	___flmul@aexp
  5504  022E' 1FB0'              	btfss	___flmul@grs+3,7
  5505  022F' 2800'              	goto	l3769
  5506  0230' 30FF               	movlw	255
  5507  0231' 052D'              	andwf	___flmul@grs,w
  5508  0232' 00A5'              	movwf	??___flmul
  5509  0233' 30FF               	movlw	255
  5510  0234' 052E'              	andwf	___flmul@grs+1,w
  5511  0235' 00A6'              	movwf	??___flmul+1
  5512  0236' 30FF               	movlw	255
  5513  0237' 052F'              	andwf	___flmul@grs+2,w
  5514  0238' 00A7'              	movwf	??___flmul+2
  5515  0239' 307F               	movlw	127
  5516  023A' 0530'              	andwf	___flmul@grs+3,w
  5517  023B' 00A8'              	movwf	??___flmul+3
  5518  023C' 0828'              	movf	??___flmul+3,w
  5519  023D' 0427'              	iorwf	??___flmul+2,w
  5520  023E' 0426'              	iorwf	??___flmul+1,w
  5521  023F' 0425'              	iorwf	??___flmul,w
  5522  0240' 1903               	skipnz
  5523  0241' 1831'              	btfsc	___flmul@prod,0
  5524  0242' 2800'              	goto	l3765
  5525  0243' 2800'              	goto	l3769
  5526  0244'                    l3765:
  5527  0244' 01AB'              	clrf	___flmul@aexp
  5528  0245' 0AAB'              	incf	___flmul@aexp,f
  5529  0246'                    l3769:
  5530  0246' 082B'              	movf	___flmul@aexp,w
  5531  0247' 1903               	btfsc	3,2
  5532  0248' 2800'              	goto	l3779
  5533  0249' 3001               	movlw	1
  5534  024A' 07B1'              	addwf	___flmul@prod,f
  5535  024B' 3000               	movlw	0
  5536  024C' 1803               	skipnc
  5537  024D' 3001               	movlw	1
  5538  024E' 07B2'              	addwf	___flmul@prod+1,f
  5539  024F' 3000               	movlw	0
  5540  0250' 1803               	skipnc
  5541  0251' 3001               	movlw	1
  5542  0252' 07B3'              	addwf	___flmul@prod+2,f
  5543  0253' 3000               	movlw	0
  5544  0254' 1803               	skipnc
  5545  0255' 3001               	movlw	1
  5546  0256' 07B4'              	addwf	___flmul@prod+3,f
  5547  0257' 1C34'              	btfss	___flmul@prod+3,0
  5548  0258' 2800'              	goto	l3779
  5549  0259' 0831'              	movf	___flmul@prod,w
  5550  025A' 00A5'              	movwf	??___flmul
  5551  025B' 0832'              	movf	___flmul@prod+1,w
  5552  025C' 00A6'              	movwf	??___flmul+1
  5553  025D' 0833'              	movf	___flmul@prod+2,w
  5554  025E' 00A7'              	movwf	??___flmul+2
  5555  025F' 0834'              	movf	___flmul@prod+3,w
  5556  0260' 00A8'              	movwf	??___flmul+3
  5557  0261' 3001               	movlw	1
  5558  0262' 00A9'              	movwf	??___flmul+4
  5559  0263'                    u5225:
  5560  0263' 0D28'              	rlf	??___flmul+3,w
  5561  0264' 0CA8'              	rrf	??___flmul+3,f
  5562  0265' 0CA7'              	rrf	??___flmul+2,f
  5563  0266' 0CA6'              	rrf	??___flmul+1,f
  5564  0267' 0CA5'              	rrf	??___flmul,f
  5565  0268' 0BA9'              	decfsz	??___flmul+4,f
  5566  0269' 2800'              	goto	u5225
  5567  026A' 0828'              	movf	??___flmul+3,w
  5568  026B' 00B4'              	movwf	___flmul@prod+3
  5569  026C' 0827'              	movf	??___flmul+2,w
  5570  026D' 00B3'              	movwf	___flmul@prod+2
  5571  026E' 0826'              	movf	??___flmul+1,w
  5572  026F' 00B2'              	movwf	___flmul@prod+1
  5573  0270' 0825'              	movf	??___flmul,w
  5574  0271' 00B1'              	movwf	___flmul@prod
  5575  0272' 3001               	movlw	1
  5576  0273' 07B5'              	addwf	___flmul@temp,f
  5577  0274' 1803               	skipnc
  5578  0275' 0AB6'              	incf	___flmul@temp+1,f
  5579  0276' 3000               	movlw	0
  5580  0277' 07B6'              	addwf	___flmul@temp+1,f
  5581  0278'                    l3779:
  5582  0278' 0836'              	movf	___flmul@temp+1,w
  5583  0279' 3A80               	xorlw	128
  5584  027A' 00FF               	movwf	127
  5585  027B' 3080               	movlw	128
  5586  027C' 027F               	subwf	127,w
  5587  027D' 1D03               	skipz
  5588  027E' 2800'              	goto	u5235
  5589  027F' 30FF               	movlw	255
  5590  0280' 0235'              	subwf	___flmul@temp,w
  5591  0281'                    u5235:
  5592  0281' 1C03               	skipc
  5593  0282' 2800'              	goto	l3783
  5594  0283' 307F               	movlw	127
  5595  0284' 1283               	bcf	3,5	;RP0=0, select bank0
  5596  0285' 1303               	bcf	3,6	;RP1=0, select bank0
  5597  0286' 00B4'              	movwf	___flmul@prod+3
  5598  0287' 3080               	movlw	128
  5599  0288' 00B3'              	movwf	___flmul@prod+2
  5600  0289' 3000               	movlw	0
  5601  028A' 00B2'              	movwf	___flmul@prod+1
  5602  028B' 3000               	movlw	0
  5603  028C' 00B1'              	movwf	___flmul@prod
  5604  028D' 2800'              	goto	l769
  5605  028E'                    l3783:
  5606  028E' 1283               	bcf	3,5	;RP0=0, select bank0
  5607  028F' 1303               	bcf	3,6	;RP1=0, select bank0
  5608  0290' 0836'              	movf	___flmul@temp+1,w
  5609  0291' 3A80               	xorlw	128
  5610  0292' 00FF               	movwf	127
  5611  0293' 3080               	movlw	128
  5612  0294' 027F               	subwf	127,w
  5613  0295' 1D03               	skipz
  5614  0296' 2800'              	goto	u5245
  5615  0297' 3001               	movlw	1
  5616  0298' 0235'              	subwf	___flmul@temp,w
  5617  0299'                    u5245:
  5618  0299' 1803               	skipnc
  5619  029A' 2800'              	goto	l3789
  5620  029B' 3000               	movlw	0
  5621  029C' 1283               	bcf	3,5	;RP0=0, select bank0
  5622  029D' 1303               	bcf	3,6	;RP1=0, select bank0
  5623  029E' 00B4'              	movwf	___flmul@prod+3
  5624  029F' 3000               	movlw	0
  5625  02A0' 00B3'              	movwf	___flmul@prod+2
  5626  02A1' 3000               	movlw	0
  5627  02A2' 00B2'              	movwf	___flmul@prod+1
  5628  02A3' 3000               	movlw	0
  5629  02A4' 00B1'              	movwf	___flmul@prod
  5630  02A5' 01AA'              	clrf	___flmul@sign
  5631  02A6' 2800'              	goto	l769
  5632  02A7'                    l3789:
  5633  02A7' 1283               	bcf	3,5	;RP0=0, select bank0
  5634  02A8' 1303               	bcf	3,6	;RP1=0, select bank0
  5635  02A9' 0835'              	movf	___flmul@temp,w
  5636  02AA' 00AC'              	movwf	___flmul@bexp
  5637  02AB' 30FF               	movlw	255
  5638  02AC' 05B1'              	andwf	___flmul@prod,f
  5639  02AD' 30FF               	movlw	255
  5640  02AE' 05B2'              	andwf	___flmul@prod+1,f
  5641  02AF' 307F               	movlw	127
  5642  02B0' 05B3'              	andwf	___flmul@prod+2,f
  5643  02B1' 3000               	movlw	0
  5644  02B2' 05B4'              	andwf	___flmul@prod+3,f
  5645  02B3' 182C'              	btfsc	___flmul@bexp,0
  5646  02B4' 17B3'              	bsf	___flmul@prod+2,7
  5647  02B5' 082C'              	movf	___flmul@bexp,w
  5648  02B6' 00A5'              	movwf	??___flmul
  5649  02B7' 1003               	clrc
  5650  02B8' 0C25'              	rrf	??___flmul,w
  5651  02B9' 00B4'              	movwf	___flmul@prod+3
  5652  02BA'                    l769:
  5653  02BA' 082A'              	movf	___flmul@sign,w
  5654  02BB' 00A5'              	movwf	??___flmul
  5655  02BC' 0825'              	movf	??___flmul,w
  5656  02BD' 04B4'              	iorwf	___flmul@prod+3,f
  5657  02BE' 0834'              	movf	___flmul@prod+3,w
  5658  02BF' 00A0'              	movwf	?___flmul+3
  5659  02C0' 0833'              	movf	___flmul@prod+2,w
  5660  02C1' 009F'              	movwf	?___flmul+2
  5661  02C2' 0832'              	movf	___flmul@prod+1,w
  5662  02C3' 009E'              	movwf	?___flmul+1
  5663  02C4' 0831'              	movf	___flmul@prod,w
  5664  02C5' 009D'              	movwf	?___flmul
  5665  02C6' 0008               	return
  5666  02C7'                    __end_of___flmul:
  5667                           
  5668                           	psect	text17
  5669  0000'                    __ptext17:	
  5670 ;; *************** function __Umul8_16 *****************
  5671 ;; Defined at:
  5672 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul8_16.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  multiplier      1    wreg     unsigned char 
  5675 ;;  multiplicand    1    0[COMMON] unsigned char 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  multiplier      1    8[COMMON] unsigned char 
  5678 ;;  word_mpld       2    6[COMMON] unsigned int 
  5679 ;;  product         2    4[COMMON] unsigned int 
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  2    0[COMMON] unsigned int 
  5682 ;; Registers used:
  5683 ;;		wreg, status,2, status,0
  5684 ;; Tracked objects:
  5685 ;;		On entry : 300/0
  5686 ;;		On exit  : 300/0
  5687 ;;		Unchanged: 300/0
  5688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5689 ;;      Params:         2       0       0       0
  5690 ;;      Locals:         5       0       0       0
  5691 ;;      Temps:          2       0       0       0
  5692 ;;      Totals:         9       0       0       0
  5693 ;;Total ram usage:        9 bytes
  5694 ;; Hardware stack levels used: 1
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		___flmul
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702  0000'                    __Umul8_16:	
  5703                           ;psect for function __Umul8_16
  5704                           
  5705                           
  5706                           ;incstack = 0
  5707                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5708                           ;__Umul8_16@multiplier stored from wreg
  5709  0000' 0088'              	movwf	__Umul8_16@multiplier
  5710  0001' 0184'              	clrf	__Umul8_16@product
  5711  0002' 0185'              	clrf	__Umul8_16@product+1
  5712  0003' 0800'              	movf	__Umul8_16@multiplicand,w
  5713  0004' 0082'              	movwf	??__Umul8_16
  5714  0005' 0183'              	clrf	??__Umul8_16+1
  5715  0006' 0802'              	movf	??__Umul8_16,w
  5716  0007' 0086'              	movwf	__Umul8_16@word_mpld
  5717  0008' 0803'              	movf	??__Umul8_16+1,w
  5718  0009' 0087'              	movwf	__Umul8_16@word_mpld+1
  5719  000A'                    l3401:
  5720  000A' 1C08'              	btfss	__Umul8_16@multiplier,0
  5721  000B' 2800'              	goto	l776
  5722  000C' 0806'              	movf	__Umul8_16@word_mpld,w
  5723  000D' 0784'              	addwf	__Umul8_16@product,f
  5724  000E' 1803               	skipnc
  5725  000F' 0A85'              	incf	__Umul8_16@product+1,f
  5726  0010' 0807'              	movf	__Umul8_16@word_mpld+1,w
  5727  0011' 0785'              	addwf	__Umul8_16@product+1,f
  5728  0012'                    l776:
  5729  0012' 3001               	movlw	1
  5730  0013'                    u4255:
  5731  0013' 1003               	clrc
  5732  0014' 0D86'              	rlf	__Umul8_16@word_mpld,f
  5733  0015' 0D87'              	rlf	__Umul8_16@word_mpld+1,f
  5734  0016' 3EFF               	addlw	-1
  5735  0017' 1D03               	skipz
  5736  0018' 2800'              	goto	u4255
  5737  0019' 1003               	clrc
  5738  001A' 0C88'              	rrf	__Umul8_16@multiplier,f
  5739  001B' 0808'              	movf	__Umul8_16@multiplier,w
  5740  001C' 1D03               	btfss	3,2
  5741  001D' 2800'              	goto	l3401
  5742  001E' 0805'              	movf	__Umul8_16@product+1,w
  5743  001F' 0081'              	movwf	?__Umul8_16+1
  5744  0020' 0804'              	movf	__Umul8_16@product,w
  5745  0021' 0080'              	movwf	?__Umul8_16
  5746  0022' 0008               	return
  5747  0023'                    __end_of__Umul8_16:
  5748                           
  5749                           	psect	text18
  5750  0000'                    __ptext18:	
  5751 ;; *************** function ___flsub *****************
  5752 ;; Defined at:
  5753 ;;		line 242 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcadd.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  a               4    0[BANK1 ] unsigned int 
  5756 ;;  b               4    4[BANK1 ] unsigned int 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;		None
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  4    0[BANK1 ] unsigned int 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5763 ;; Tracked objects:
  5764 ;;		On entry : 300/100
  5765 ;;		On exit  : 300/100
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5768 ;;      Params:         0       0       8       0
  5769 ;;      Locals:         0       0       0       0
  5770 ;;      Temps:          0       0       0       0
  5771 ;;      Totals:         0       0       8       0
  5772 ;;Total ram usage:        8 bytes
  5773 ;; Hardware stack levels used: 1
  5774 ;; Hardware stack levels required when called: 1
  5775 ;; This function calls:
  5776 ;;		___fladd
  5777 ;; This function is called by:
  5778 ;;		_exp
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782  0000'                    ___flsub:	
  5783                           ;psect for function ___flsub
  5784                           
  5785                           
  5786                           ;incstack = 0
  5787                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5788  0000' 3080               	movlw	128
  5789  0001' 0680'              	xorwf	(___flsub@a+3)^(0+128),f
  5790  0002' 0800'              	movf	(___flsub@b+3)^(0+128),w
  5791  0003' 1283               	bcf	3,5	;RP0=0, select bank0
  5792  0004' 00BA'              	movwf	___fladd@b+3
  5793  0005' 1683               	bsf	3,5	;RP0=1, select bank1
  5794  0006' 0800'              	movf	(___flsub@b+2)^(0+128),w
  5795  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  5796  0008' 00B9'              	movwf	___fladd@b+2
  5797  0009' 1683               	bsf	3,5	;RP0=1, select bank1
  5798  000A' 0800'              	movf	(___flsub@b+1)^(0+128),w
  5799  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  5800  000C' 00B8'              	movwf	___fladd@b+1
  5801  000D' 1683               	bsf	3,5	;RP0=1, select bank1
  5802  000E' 0800'              	movf	___flsub@b^(0+128),w
  5803  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  5804  0010' 00B7'              	movwf	___fladd@b
  5805  0011' 1683               	bsf	3,5	;RP0=1, select bank1
  5806  0012' 0800'              	movf	(___flsub@a+3)^(0+128),w
  5807  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  5808  0014' 00BE'              	movwf	___fladd@a+3
  5809  0015' 1683               	bsf	3,5	;RP0=1, select bank1
  5810  0016' 0800'              	movf	(___flsub@a+2)^(0+128),w
  5811  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  5812  0018' 00BD'              	movwf	___fladd@a+2
  5813  0019' 1683               	bsf	3,5	;RP0=1, select bank1
  5814  001A' 0800'              	movf	(___flsub@a+1)^(0+128),w
  5815  001B' 1283               	bcf	3,5	;RP0=0, select bank0
  5816  001C' 00BC'              	movwf	___fladd@a+1
  5817  001D' 1683               	bsf	3,5	;RP0=1, select bank1
  5818  001E' 0800'              	movf	___flsub@a^(0+128),w
  5819  001F' 1283               	bcf	3,5	;RP0=0, select bank0
  5820  0020' 00BB'              	movwf	___fladd@a
  5821  0021' 118A' 2000'        	fcall	___fladd
  5822  0023' 083A'              	movf	?___fladd+3,w
  5823  0024' 1683               	bsf	3,5	;RP0=1, select bank1
  5824  0025' 0080'              	movwf	(?___flsub+3)^(0+128)
  5825  0026' 1283               	bcf	3,5	;RP0=0, select bank0
  5826  0027' 0839'              	movf	?___fladd+2,w
  5827  0028' 1683               	bsf	3,5	;RP0=1, select bank1
  5828  0029' 0080'              	movwf	(?___flsub+2)^(0+128)
  5829  002A' 1283               	bcf	3,5	;RP0=0, select bank0
  5830  002B' 0838'              	movf	?___fladd+1,w
  5831  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  5832  002D' 0080'              	movwf	(?___flsub+1)^(0+128)
  5833  002E' 1283               	bcf	3,5	;RP0=0, select bank0
  5834  002F' 0837'              	movf	?___fladd,w
  5835  0030' 1683               	bsf	3,5	;RP0=1, select bank1
  5836  0031' 0080'              	movwf	?___flsub^(0+128)
  5837  0032' 0008               	return
  5838  0033'                    __end_of___flsub:
  5839                           
  5840                           	psect	text19
  5841  0000'                    __ptext19:	
  5842 ;; *************** function ___fladd *****************
  5843 ;; Defined at:
  5844 ;;		line 10 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcadd.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  b               4   55[BANK0 ] unsigned int 
  5847 ;;  a               4   59[BANK0 ] unsigned int 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  grs             1   74[BANK0 ] unsigned char 
  5850 ;;  bexp            1   73[BANK0 ] unsigned char 
  5851 ;;  aexp            1   72[BANK0 ] unsigned char 
  5852 ;;  signs           1   71[BANK0 ] unsigned char 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  4   55[BANK0 ] unsigned char 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, status,0, btemp+1
  5857 ;; Tracked objects:
  5858 ;;		On entry : 300/0
  5859 ;;		On exit  : 300/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5862 ;;      Params:         0       8       0       0
  5863 ;;      Locals:         0       4       0       0
  5864 ;;      Temps:          0       8       0       0
  5865 ;;      Totals:         0      20       0       0
  5866 ;;Total ram usage:       20 bytes
  5867 ;; Hardware stack levels used: 1
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_vector_length
  5872 ;;		___flsub
  5873 ;;		_eval_poly
  5874 ;;		_floor
  5875 ;;		_log
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879  0000'                    ___fladd:	
  5880                           ;psect for function ___fladd
  5881                           
  5882                           
  5883                           ;incstack = 0
  5884                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5885  0000' 083A'              	movf	___fladd@b+3,w
  5886  0001' 3980               	andlw	128
  5887  0002' 00C7'              	movwf	___fladd@signs
  5888  0003' 083A'              	movf	___fladd@b+3,w
  5889  0004' 00BF'              	movwf	??___fladd
  5890  0005' 073F'              	addwf	??___fladd,w
  5891  0006' 00C9'              	movwf	___fladd@bexp
  5892  0007' 1BB9'              	btfsc	___fladd@b+2,7
  5893  0008' 1449'              	bsf	___fladd@bexp,0
  5894  0009' 0849'              	movf	___fladd@bexp,w
  5895  000A' 1903               	btfsc	3,2
  5896  000B' 2800'              	goto	l3485
  5897  000C' 0A49'              	incf	___fladd@bexp,w
  5898  000D' 1D03               	btfss	3,2
  5899  000E' 2800'              	goto	l3481
  5900  000F' 3000               	movlw	0
  5901  0010' 00BA'              	movwf	___fladd@b+3
  5902  0011' 3000               	movlw	0
  5903  0012' 00B9'              	movwf	___fladd@b+2
  5904  0013' 3000               	movlw	0
  5905  0014' 00B8'              	movwf	___fladd@b+1
  5906  0015' 3000               	movlw	0
  5907  0016' 00B7'              	movwf	___fladd@b
  5908  0017'                    l3481:
  5909  0017' 17B9'              	bsf	___fladd@b+2,7
  5910  0018' 01BA'              	clrf	___fladd@b+3
  5911  0019' 2800'              	goto	l3487
  5912  001A'                    l3485:
  5913  001A' 3000               	movlw	0
  5914  001B' 00BA'              	movwf	___fladd@b+3
  5915  001C' 3000               	movlw	0
  5916  001D' 00B9'              	movwf	___fladd@b+2
  5917  001E' 3000               	movlw	0
  5918  001F' 00B8'              	movwf	___fladd@b+1
  5919  0020' 3000               	movlw	0
  5920  0021' 00B7'              	movwf	___fladd@b
  5921  0022'                    l3487:
  5922  0022' 083E'              	movf	___fladd@a+3,w
  5923  0023' 3980               	andlw	128
  5924  0024' 00C8'              	movwf	___fladd@aexp
  5925  0025' 0848'              	movf	___fladd@aexp,w
  5926  0026' 0647'              	xorwf	___fladd@signs,w
  5927  0027' 1D03               	btfss	3,2
  5928  0028' 1747'              	bsf	___fladd@signs,6
  5929  0029' 083E'              	movf	___fladd@a+3,w
  5930  002A' 00BF'              	movwf	??___fladd
  5931  002B' 073F'              	addwf	??___fladd,w
  5932  002C' 00C8'              	movwf	___fladd@aexp
  5933  002D' 1BBD'              	btfsc	___fladd@a+2,7
  5934  002E' 1448'              	bsf	___fladd@aexp,0
  5935  002F' 0848'              	movf	___fladd@aexp,w
  5936  0030' 1903               	btfsc	3,2
  5937  0031' 2800'              	goto	l3509
  5938  0032' 0A48'              	incf	___fladd@aexp,w
  5939  0033' 1D03               	btfss	3,2
  5940  0034' 2800'              	goto	l3505
  5941  0035' 3000               	movlw	0
  5942  0036' 00BE'              	movwf	___fladd@a+3
  5943  0037' 3000               	movlw	0
  5944  0038' 00BD'              	movwf	___fladd@a+2
  5945  0039' 3000               	movlw	0
  5946  003A' 00BC'              	movwf	___fladd@a+1
  5947  003B' 3000               	movlw	0
  5948  003C' 00BB'              	movwf	___fladd@a
  5949  003D'                    l3505:
  5950  003D' 17BD'              	bsf	___fladd@a+2,7
  5951  003E' 01BE'              	clrf	___fladd@a+3
  5952  003F' 2800'              	goto	l661
  5953  0040'                    l3509:
  5954  0040' 3000               	movlw	0
  5955  0041' 00BE'              	movwf	___fladd@a+3
  5956  0042' 3000               	movlw	0
  5957  0043' 00BD'              	movwf	___fladd@a+2
  5958  0044' 3000               	movlw	0
  5959  0045' 00BC'              	movwf	___fladd@a+1
  5960  0046' 3000               	movlw	0
  5961  0047' 00BB'              	movwf	___fladd@a
  5962  0048'                    l661:
  5963  0048' 0849'              	movf	___fladd@bexp,w
  5964  0049' 0248'              	subwf	___fladd@aexp,w
  5965  004A' 1803               	skipnc
  5966  004B' 2800'              	goto	l3545
  5967  004C' 1F47'              	btfss	___fladd@signs,6
  5968  004D' 2800'              	goto	l3515
  5969  004E' 3080               	movlw	128
  5970  004F' 00BF'              	movwf	??___fladd
  5971  0050' 083F'              	movf	??___fladd,w
  5972  0051' 06C7'              	xorwf	___fladd@signs,f
  5973  0052'                    l3515:
  5974  0052' 0849'              	movf	___fladd@bexp,w
  5975  0053' 00CA'              	movwf	___fladd@grs
  5976  0054' 0848'              	movf	___fladd@aexp,w
  5977  0055' 00C9'              	movwf	___fladd@bexp
  5978  0056' 084A'              	movf	___fladd@grs,w
  5979  0057' 00C8'              	movwf	___fladd@aexp
  5980  0058' 0837'              	movf	___fladd@b,w
  5981  0059' 00CA'              	movwf	___fladd@grs
  5982  005A' 083B'              	movf	___fladd@a,w
  5983  005B' 00B7'              	movwf	___fladd@b
  5984  005C' 084A'              	movf	___fladd@grs,w
  5985  005D' 00BB'              	movwf	___fladd@a
  5986  005E' 0838'              	movf	___fladd@b+1,w
  5987  005F' 00CA'              	movwf	___fladd@grs
  5988  0060' 083C'              	movf	___fladd@a+1,w
  5989  0061' 00B8'              	movwf	___fladd@b+1
  5990  0062' 084A'              	movf	___fladd@grs,w
  5991  0063' 00BC'              	movwf	___fladd@a+1
  5992  0064' 0839'              	movf	___fladd@b+2,w
  5993  0065' 00CA'              	movwf	___fladd@grs
  5994  0066' 083D'              	movf	___fladd@a+2,w
  5995  0067' 00B9'              	movwf	___fladd@b+2
  5996  0068' 084A'              	movf	___fladd@grs,w
  5997  0069' 00BD'              	movwf	___fladd@a+2
  5998  006A' 083A'              	movf	___fladd@b+3,w
  5999  006B' 00CA'              	movwf	___fladd@grs
  6000  006C' 083E'              	movf	___fladd@a+3,w
  6001  006D' 00BA'              	movwf	___fladd@b+3
  6002  006E' 084A'              	movf	___fladd@grs,w
  6003  006F' 00BE'              	movwf	___fladd@a+3
  6004  0070'                    l3545:
  6005  0070' 01CA'              	clrf	___fladd@grs
  6006  0071' 0848'              	movf	___fladd@aexp,w
  6007  0072' 00BF'              	movwf	??___fladd
  6008  0073' 01C0'              	clrf	??___fladd+1
  6009  0074' 0840'              	movf	??___fladd+1,w
  6010  0075' 00C2'              	movwf	??___fladd+3
  6011  0076' 0849'              	movf	___fladd@bexp,w
  6012  0077' 023F'              	subwf	??___fladd,w
  6013  0078' 00C1'              	movwf	??___fladd+2
  6014  0079' 1C03               	skipc
  6015  007A' 03C2'              	decf	??___fladd+3,f
  6016  007B' 0842'              	movf	??___fladd+3,w
  6017  007C' 3A80               	xorlw	128
  6018  007D' 00FF               	movwf	127
  6019  007E' 3080               	movlw	128
  6020  007F' 027F               	subwf	127,w
  6021  0080' 1D03               	skipz
  6022  0081' 2800'              	goto	u4535
  6023  0082' 301A               	movlw	26
  6024  0083' 0241'              	subwf	??___fladd+2,w
  6025  0084'                    u4535:
  6026  0084' 1C03               	skipc
  6027  0085' 2800'              	goto	l3563
  6028  0086' 1283               	bcf	3,5	;RP0=0, select bank0
  6029  0087' 1303               	bcf	3,6	;RP1=0, select bank0
  6030  0088' 083A'              	movf	___fladd@b+3,w
  6031  0089' 0439'              	iorwf	___fladd@b+2,w
  6032  008A' 0438'              	iorwf	___fladd@b+1,w
  6033  008B' 0437'              	iorwf	___fladd@b,w
  6034  008C' 1903               	btfsc	3,2
  6035  008D' 2800'              	goto	u4540
  6036  008E' 3001               	movlw	1
  6037  008F' 2800'              	goto	u4550
  6038  0090'                    u4540:
  6039  0090' 3000               	movlw	0
  6040  0091'                    u4550:
  6041  0091' 00CA'              	movwf	___fladd@grs
  6042  0092' 3000               	movlw	0
  6043  0093' 00BA'              	movwf	___fladd@b+3
  6044  0094' 3000               	movlw	0
  6045  0095' 00B9'              	movwf	___fladd@b+2
  6046  0096' 3000               	movlw	0
  6047  0097' 00B8'              	movwf	___fladd@b+1
  6048  0098' 3000               	movlw	0
  6049  0099' 00B7'              	movwf	___fladd@b
  6050  009A' 0848'              	movf	___fladd@aexp,w
  6051  009B' 00C9'              	movwf	___fladd@bexp
  6052  009C' 2800'              	goto	l665
  6053  009D'                    l667:
  6054  009D' 1C4A'              	btfss	___fladd@grs,0
  6055  009E' 2800'              	goto	l3553
  6056  009F' 084A'              	movf	___fladd@grs,w
  6057  00A0' 00BF'              	movwf	??___fladd
  6058  00A1' 1003               	clrc
  6059  00A2' 0C3F'              	rrf	??___fladd,w
  6060  00A3' 3801               	iorlw	1
  6061  00A4' 00CA'              	movwf	___fladd@grs
  6062  00A5' 2800'              	goto	l3555
  6063  00A6'                    l3553:
  6064  00A6' 1003               	clrc
  6065  00A7' 0CCA'              	rrf	___fladd@grs,f
  6066  00A8'                    l3555:
  6067  00A8' 1837'              	btfsc	___fladd@b,0
  6068  00A9' 17CA'              	bsf	___fladd@grs,7
  6069  00AA' 3001               	movlw	1
  6070  00AB' 00BF'              	movwf	??___fladd
  6071  00AC'                    u4585:
  6072  00AC' 0D3A'              	rlf	___fladd@b+3,w
  6073  00AD' 0CBA'              	rrf	___fladd@b+3,f
  6074  00AE' 0CB9'              	rrf	___fladd@b+2,f
  6075  00AF' 0CB8'              	rrf	___fladd@b+1,f
  6076  00B0' 0CB7'              	rrf	___fladd@b,f
  6077  00B1' 0B80'              	decfsz	??___fladd& (0+127),f
  6078  00B2' 2800'              	goto	u4585
  6079  00B3' 3001               	movlw	1
  6080  00B4' 00BF'              	movwf	??___fladd
  6081  00B5' 083F'              	movf	??___fladd,w
  6082  00B6' 07C9'              	addwf	___fladd@bexp,f
  6083  00B7'                    l3563:
  6084  00B7' 1283               	bcf	3,5	;RP0=0, select bank0
  6085  00B8' 1303               	bcf	3,6	;RP1=0, select bank0
  6086  00B9' 0848'              	movf	___fladd@aexp,w
  6087  00BA' 0249'              	subwf	___fladd@bexp,w
  6088  00BB' 1C03               	skipc
  6089  00BC' 2800'              	goto	l667
  6090  00BD'                    l665:
  6091  00BD' 1B47'              	btfsc	___fladd@signs,6
  6092  00BE' 2800'              	goto	l3589
  6093  00BF' 0849'              	movf	___fladd@bexp,w
  6094  00C0' 1D03               	btfss	3,2
  6095  00C1' 2800'              	goto	l3571
  6096  00C2' 3000               	movlw	0
  6097  00C3' 00BA'              	movwf	?___fladd+3
  6098  00C4' 3000               	movlw	0
  6099  00C5' 00B9'              	movwf	?___fladd+2
  6100  00C6' 3000               	movlw	0
  6101  00C7' 00B8'              	movwf	?___fladd+1
  6102  00C8' 3000               	movlw	0
  6103  00C9' 00B7'              	movwf	?___fladd
  6104  00CA' 0008               	return
  6105  00CB'                    l3571:
  6106  00CB' 083B'              	movf	___fladd@a,w
  6107  00CC' 07B7'              	addwf	___fladd@b,f
  6108  00CD' 083C'              	movf	___fladd@a+1,w
  6109  00CE' 1103               	clrz
  6110  00CF' 1803               	skipnc
  6111  00D0' 3E01               	addlw	1
  6112  00D1' 1D03               	btfss	3,2
  6113  00D2' 07B8'              	addwf	___fladd@b+1,f
  6114  00D3' 083D'              	movf	___fladd@a+2,w
  6115  00D4' 1103               	clrz
  6116  00D5' 1803               	skipnc
  6117  00D6' 3E01               	addlw	1
  6118  00D7' 1D03               	btfss	3,2
  6119  00D8' 07B9'              	addwf	___fladd@b+2,f
  6120  00D9' 083E'              	movf	___fladd@a+3,w
  6121  00DA' 1103               	clrz
  6122  00DB' 1803               	skipnc
  6123  00DC' 3E01               	addlw	1
  6124  00DD' 1D03               	btfss	3,2
  6125  00DE' 07BA'              	addwf	___fladd@b+3,f
  6126  00DF' 1C3A'              	btfss	___fladd@b+3,0
  6127  00E0' 2800'              	goto	l3623
  6128  00E1' 1C4A'              	btfss	___fladd@grs,0
  6129  00E2' 2800'              	goto	l3579
  6130  00E3' 084A'              	movf	___fladd@grs,w
  6131  00E4' 00BF'              	movwf	??___fladd
  6132  00E5' 1003               	clrc
  6133  00E6' 0C3F'              	rrf	??___fladd,w
  6134  00E7' 3801               	iorlw	1
  6135  00E8' 00CA'              	movwf	___fladd@grs
  6136  00E9' 2800'              	goto	l3581
  6137  00EA'                    l3579:
  6138  00EA' 1003               	clrc
  6139  00EB' 0CCA'              	rrf	___fladd@grs,f
  6140  00EC'                    l3581:
  6141  00EC' 1837'              	btfsc	___fladd@b,0
  6142  00ED' 17CA'              	bsf	___fladd@grs,7
  6143  00EE' 3001               	movlw	1
  6144  00EF' 00BF'              	movwf	??___fladd
  6145  00F0'                    u4665:
  6146  00F0' 0D3A'              	rlf	___fladd@b+3,w
  6147  00F1' 0CBA'              	rrf	___fladd@b+3,f
  6148  00F2' 0CB9'              	rrf	___fladd@b+2,f
  6149  00F3' 0CB8'              	rrf	___fladd@b+1,f
  6150  00F4' 0CB7'              	rrf	___fladd@b,f
  6151  00F5' 0B80'              	decfsz	??___fladd& (0+127),f
  6152  00F6' 2800'              	goto	u4665
  6153  00F7' 3001               	movlw	1
  6154  00F8' 00BF'              	movwf	??___fladd
  6155  00F9' 083F'              	movf	??___fladd,w
  6156  00FA' 07C9'              	addwf	___fladd@bexp,f
  6157  00FB' 2800'              	goto	l3623
  6158  00FC'                    l3589:
  6159  00FC' 083A'              	movf	___fladd@b+3,w
  6160  00FD' 3A80               	xorlw	128
  6161  00FE' 00FF               	movwf	127
  6162  00FF' 083E'              	movf	___fladd@a+3,w
  6163  0100' 3A80               	xorlw	128
  6164  0101' 027F               	subwf	127,w
  6165  0102' 1D03               	skipz
  6166  0103' 2800'              	goto	u4673
  6167  0104' 083D'              	movf	___fladd@a+2,w
  6168  0105' 0239'              	subwf	___fladd@b+2,w
  6169  0106' 1D03               	skipz
  6170  0107' 2800'              	goto	u4673
  6171  0108' 083C'              	movf	___fladd@a+1,w
  6172  0109' 0238'              	subwf	___fladd@b+1,w
  6173  010A' 1D03               	skipz
  6174  010B' 2800'              	goto	u4673
  6175  010C' 083B'              	movf	___fladd@a,w
  6176  010D' 0237'              	subwf	___fladd@b,w
  6177  010E'                    u4673:
  6178  010E' 1803               	skipnc
  6179  010F' 2800'              	goto	l3599
  6180  0110' 30FF               	movlw	255
  6181  0111' 00BF'              	movwf	??___fladd
  6182  0112' 30FF               	movlw	255
  6183  0113' 00C0'              	movwf	??___fladd+1
  6184  0114' 30FF               	movlw	255
  6185  0115' 00C1'              	movwf	??___fladd+2
  6186  0116' 30FF               	movlw	255
  6187  0117' 00C2'              	movwf	??___fladd+3
  6188  0118' 083B'              	movf	___fladd@a,w
  6189  0119' 00C3'              	movwf	??___fladd+4
  6190  011A' 083C'              	movf	___fladd@a+1,w
  6191  011B' 00C4'              	movwf	??___fladd+5
  6192  011C' 083D'              	movf	___fladd@a+2,w
  6193  011D' 00C5'              	movwf	??___fladd+6
  6194  011E' 083E'              	movf	___fladd@a+3,w
  6195  011F' 00C6'              	movwf	??___fladd+7
  6196  0120' 0837'              	movf	___fladd@b,w
  6197  0121' 02C3'              	subwf	??___fladd+4,f
  6198  0122' 0838'              	movf	___fladd@b+1,w
  6199  0123' 1C03               	skipc
  6200  0124' 0F38'              	incfsz	___fladd@b+1,w
  6201  0125' 2800'              	goto	u4681
  6202  0126' 2800'              	goto	u4682
  6203  0127'                    u4681:
  6204  0127' 02C4'              	subwf	??___fladd+5,f
  6205  0128'                    u4682:
  6206  0128' 0839'              	movf	___fladd@b+2,w
  6207  0129' 1C03               	skipc
  6208  012A' 0F39'              	incfsz	___fladd@b+2,w
  6209  012B' 2800'              	goto	u4683
  6210  012C' 2800'              	goto	u4684
  6211  012D'                    u4683:
  6212  012D' 02C5'              	subwf	??___fladd+6,f
  6213  012E'                    u4684:
  6214  012E' 083A'              	movf	___fladd@b+3,w
  6215  012F' 1C03               	skipc
  6216  0130' 0F3A'              	incfsz	___fladd@b+3,w
  6217  0131' 2800'              	goto	u4685
  6218  0132' 2800'              	goto	u4686
  6219  0133'                    u4685:
  6220  0133' 02C6'              	subwf	??___fladd+7,f
  6221  0134'                    u4686:
  6222  0134' 0843'              	movf	??___fladd+4,w
  6223  0135' 07BF'              	addwf	??___fladd,f
  6224  0136' 0844'              	movf	??___fladd+5,w
  6225  0137' 1803               	skipnc
  6226  0138' 0F44'              	incfsz	??___fladd+5,w
  6227  0139' 2800'              	goto	u4690
  6228  013A' 2800'              	goto	u4691
  6229  013B'                    u4690:
  6230  013B' 07C0'              	addwf	??___fladd+1,f
  6231  013C'                    u4691:
  6232  013C' 0845'              	movf	??___fladd+6,w
  6233  013D' 1803               	skipnc
  6234  013E' 0F45'              	incfsz	??___fladd+6,w
  6235  013F' 2800'              	goto	u4692
  6236  0140' 2800'              	goto	u4693
  6237  0141'                    u4692:
  6238  0141' 07C1'              	addwf	??___fladd+2,f
  6239  0142'                    u4693:
  6240  0142' 0846'              	movf	??___fladd+7,w
  6241  0143' 1803               	skipnc
  6242  0144' 0A46'              	incf	??___fladd+7,w
  6243  0145' 07C2'              	addwf	??___fladd+3,f
  6244  0146' 0842'              	movf	??___fladd+3,w
  6245  0147' 00BA'              	movwf	___fladd@b+3
  6246  0148' 0841'              	movf	??___fladd+2,w
  6247  0149' 00B9'              	movwf	___fladd@b+2
  6248  014A' 0840'              	movf	??___fladd+1,w
  6249  014B' 00B8'              	movwf	___fladd@b+1
  6250  014C' 083F'              	movf	??___fladd,w
  6251  014D' 00B7'              	movwf	___fladd@b
  6252  014E' 3080               	movlw	128
  6253  014F' 00BF'              	movwf	??___fladd
  6254  0150' 083F'              	movf	??___fladd,w
  6255  0151' 06C7'              	xorwf	___fladd@signs,f
  6256  0152' 09CA'              	comf	___fladd@grs,f
  6257  0153' 0ACA'              	incf	___fladd@grs,f
  6258  0154' 084A'              	movf	___fladd@grs,w
  6259  0155' 1D03               	btfss	3,2
  6260  0156' 2800'              	goto	l682
  6261  0157' 3001               	movlw	1
  6262  0158' 07B7'              	addwf	___fladd@b,f
  6263  0159' 3000               	movlw	0
  6264  015A' 1803               	skipnc
  6265  015B' 3001               	movlw	1
  6266  015C' 07B8'              	addwf	___fladd@b+1,f
  6267  015D' 3000               	movlw	0
  6268  015E' 1803               	skipnc
  6269  015F' 3001               	movlw	1
  6270  0160' 07B9'              	addwf	___fladd@b+2,f
  6271  0161' 3000               	movlw	0
  6272  0162' 1803               	skipnc
  6273  0163' 3001               	movlw	1
  6274  0164' 07BA'              	addwf	___fladd@b+3,f
  6275  0165' 2800'              	goto	l682
  6276  0166'                    l3599:
  6277  0166' 083B'              	movf	___fladd@a,w
  6278  0167' 02B7'              	subwf	___fladd@b,f
  6279  0168' 083C'              	movf	___fladd@a+1,w
  6280  0169' 1C03               	skipc
  6281  016A' 0F3C'              	incfsz	___fladd@a+1,w
  6282  016B' 02B8'              	subwf	___fladd@b+1,f
  6283  016C' 083D'              	movf	___fladd@a+2,w
  6284  016D' 1C03               	skipc
  6285  016E' 0F3D'              	incfsz	___fladd@a+2,w
  6286  016F' 02B9'              	subwf	___fladd@b+2,f
  6287  0170' 083E'              	movf	___fladd@a+3,w
  6288  0171' 1C03               	skipc
  6289  0172' 0F3E'              	incfsz	___fladd@a+3,w
  6290  0173' 02BA'              	subwf	___fladd@b+3,f
  6291  0174'                    l682:
  6292  0174' 083A'              	movf	___fladd@b+3,w
  6293  0175' 0439'              	iorwf	___fladd@b+2,w
  6294  0176' 0438'              	iorwf	___fladd@b+1,w
  6295  0177' 0437'              	iorwf	___fladd@b,w
  6296  0178' 1D03               	skipz
  6297  0179' 2800'              	goto	l3621
  6298  017A' 084A'              	movf	___fladd@grs,w
  6299  017B' 1D03               	btfss	3,2
  6300  017C' 2800'              	goto	l3621
  6301  017D' 3000               	movlw	0
  6302  017E' 00BA'              	movwf	?___fladd+3
  6303  017F' 3000               	movlw	0
  6304  0180' 00B9'              	movwf	?___fladd+2
  6305  0181' 3000               	movlw	0
  6306  0182' 00B8'              	movwf	?___fladd+1
  6307  0183' 3000               	movlw	0
  6308  0184' 00B7'              	movwf	?___fladd
  6309  0185' 0008               	return
  6310  0186'                    l3607:
  6311  0186' 3001               	movlw	1
  6312  0187' 00BF'              	movwf	??___fladd
  6313  0188'                    u4735:
  6314  0188' 1003               	clrc
  6315  0189' 0DB7'              	rlf	___fladd@b,f
  6316  018A' 0DB8'              	rlf	___fladd@b+1,f
  6317  018B' 0DB9'              	rlf	___fladd@b+2,f
  6318  018C' 0DBA'              	rlf	___fladd@b+3,f
  6319  018D' 0BBF'              	decfsz	??___fladd,f
  6320  018E' 2800'              	goto	u4735
  6321  018F' 1BCA'              	btfsc	___fladd@grs,7
  6322  0190' 1437'              	bsf	___fladd@b,0
  6323  0191' 1C4A'              	btfss	___fladd@grs,0
  6324  0192' 2800'              	goto	l3615
  6325  0193' 1403               	setc
  6326  0194' 2800'              	goto	L3
  6327  0195'                    l3615:
  6328  0195' 1003               	clrc
  6329  0196'                    L3:
  6330  0196' 0DCA'              	rlf	___fladd@grs,f
  6331  0197' 0849'              	movf	___fladd@bexp,w
  6332  0198' 1903               	btfsc	3,2
  6333  0199' 2800'              	goto	l3621
  6334  019A' 3001               	movlw	1
  6335  019B' 02C9'              	subwf	___fladd@bexp,f
  6336  019C'                    l3621:
  6337  019C' 1FB9'              	btfss	___fladd@b+2,7
  6338  019D' 2800'              	goto	l3607
  6339  019E'                    l3623:
  6340  019E' 01C8'              	clrf	___fladd@aexp
  6341  019F' 1FCA'              	btfss	___fladd@grs,7
  6342  01A0' 2800'              	goto	l3633
  6343  01A1' 084A'              	movf	___fladd@grs,w
  6344  01A2' 397F               	andlw	127
  6345  01A3' 1903               	btfsc	3,2
  6346  01A4' 1837'              	btfsc	___fladd@b,0
  6347  01A5' 2800'              	goto	l3629
  6348  01A6' 2800'              	goto	l3633
  6349  01A7'                    l3629:
  6350  01A7' 01C8'              	clrf	___fladd@aexp
  6351  01A8' 0AC8'              	incf	___fladd@aexp,f
  6352  01A9'                    l3633:
  6353  01A9' 0848'              	movf	___fladd@aexp,w
  6354  01AA' 1903               	btfsc	3,2
  6355  01AB' 2800'              	goto	l695
  6356  01AC' 3001               	movlw	1
  6357  01AD' 07B7'              	addwf	___fladd@b,f
  6358  01AE' 3000               	movlw	0
  6359  01AF' 1803               	skipnc
  6360  01B0' 3001               	movlw	1
  6361  01B1' 07B8'              	addwf	___fladd@b+1,f
  6362  01B2' 3000               	movlw	0
  6363  01B3' 1803               	skipnc
  6364  01B4' 3001               	movlw	1
  6365  01B5' 07B9'              	addwf	___fladd@b+2,f
  6366  01B6' 3000               	movlw	0
  6367  01B7' 1803               	skipnc
  6368  01B8' 3001               	movlw	1
  6369  01B9' 07BA'              	addwf	___fladd@b+3,f
  6370  01BA' 1C3A'              	btfss	___fladd@b+3,0
  6371  01BB' 2800'              	goto	l695
  6372  01BC' 0837'              	movf	___fladd@b,w
  6373  01BD' 00BF'              	movwf	??___fladd
  6374  01BE' 0838'              	movf	___fladd@b+1,w
  6375  01BF' 00C0'              	movwf	??___fladd+1
  6376  01C0' 0839'              	movf	___fladd@b+2,w
  6377  01C1' 00C1'              	movwf	??___fladd+2
  6378  01C2' 083A'              	movf	___fladd@b+3,w
  6379  01C3' 00C2'              	movwf	??___fladd+3
  6380  01C4' 3001               	movlw	1
  6381  01C5' 00C3'              	movwf	??___fladd+4
  6382  01C6'                    u4835:
  6383  01C6' 0D42'              	rlf	??___fladd+3,w
  6384  01C7' 0CC2'              	rrf	??___fladd+3,f
  6385  01C8' 0CC1'              	rrf	??___fladd+2,f
  6386  01C9' 0CC0'              	rrf	??___fladd+1,f
  6387  01CA' 0CBF'              	rrf	??___fladd,f
  6388  01CB' 0BC3'              	decfsz	??___fladd+4,f
  6389  01CC' 2800'              	goto	u4835
  6390  01CD' 0842'              	movf	??___fladd+3,w
  6391  01CE' 00BA'              	movwf	___fladd@b+3
  6392  01CF' 0841'              	movf	??___fladd+2,w
  6393  01D0' 00B9'              	movwf	___fladd@b+2
  6394  01D1' 0840'              	movf	??___fladd+1,w
  6395  01D2' 00B8'              	movwf	___fladd@b+1
  6396  01D3' 083F'              	movf	??___fladd,w
  6397  01D4' 00B7'              	movwf	___fladd@b
  6398  01D5' 0A49'              	incf	___fladd@bexp,w
  6399  01D6' 1903               	btfsc	3,2
  6400  01D7' 2800'              	goto	l695
  6401  01D8' 3001               	movlw	1
  6402  01D9' 00BF'              	movwf	??___fladd
  6403  01DA' 083F'              	movf	??___fladd,w
  6404  01DB' 07C9'              	addwf	___fladd@bexp,f
  6405  01DC'                    l695:
  6406  01DC' 0A49'              	incf	___fladd@bexp,w
  6407  01DD' 1D03               	btfss	3,2
  6408  01DE' 0849'              	movf	___fladd@bexp,w
  6409  01DF' 1D03               	btfss	3,2
  6410  01E0' 2800'              	goto	l3651
  6411  01E1' 3000               	movlw	0
  6412  01E2' 00BA'              	movwf	___fladd@b+3
  6413  01E3' 3000               	movlw	0
  6414  01E4' 00B9'              	movwf	___fladd@b+2
  6415  01E5' 3000               	movlw	0
  6416  01E6' 00B8'              	movwf	___fladd@b+1
  6417  01E7' 3000               	movlw	0
  6418  01E8' 00B7'              	movwf	___fladd@b
  6419  01E9' 0849'              	movf	___fladd@bexp,w
  6420  01EA' 1903               	btfsc	3,2
  6421  01EB' 01C7'              	clrf	___fladd@signs
  6422  01EC'                    l3651:
  6423  01EC' 1C49'              	btfss	___fladd@bexp,0
  6424  01ED' 2800'              	goto	l3655
  6425  01EE' 17B9'              	bsf	___fladd@b+2,7
  6426  01EF' 2800'              	goto	l703
  6427  01F0'                    l3655:
  6428  01F0' 307F               	movlw	127
  6429  01F1' 00BF'              	movwf	??___fladd
  6430  01F2' 083F'              	movf	??___fladd,w
  6431  01F3' 05B9'              	andwf	___fladd@b+2,f
  6432  01F4'                    l703:
  6433  01F4' 0849'              	movf	___fladd@bexp,w
  6434  01F5' 00BF'              	movwf	??___fladd
  6435  01F6' 1003               	clrc
  6436  01F7' 0C3F'              	rrf	??___fladd,w
  6437  01F8' 00BA'              	movwf	___fladd@b+3
  6438  01F9' 1FC7'              	btfss	___fladd@signs,7
  6439  01FA' 0008               	return
  6440  01FB' 17BA'              	bsf	___fladd@b+3,7
  6441  01FC' 0008               	return
  6442  01FD'                    __end_of___fladd:
  6443                           
  6444                           	psect	text20
  6445  0000'                    __ptext20:	
  6446 ;; *************** function ___flneg *****************
  6447 ;; Defined at:
  6448 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/flneg.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  f1              4    0[COMMON] unsigned char 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  4    0[COMMON] unsigned char 
  6455 ;; Registers used:
  6456 ;;		wreg
  6457 ;; Tracked objects:
  6458 ;;		On entry : 300/100
  6459 ;;		On exit  : 300/100
  6460 ;;		Unchanged: 300/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6462 ;;      Params:         4       0       0       0
  6463 ;;      Locals:         0       0       0       0
  6464 ;;      Temps:          0       0       0       0
  6465 ;;      Totals:         4       0       0       0
  6466 ;;Total ram usage:        4 bytes
  6467 ;; Hardware stack levels used: 1
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_pow
  6472 ;;		_exp
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476  0000'                    ___flneg:	
  6477                           ;psect for function ___flneg
  6478                           
  6479                           
  6480                           ;incstack = 0
  6481                           ; Regs used in ___flneg: [wreg]
  6482  0000' 0803'              	movf	___flneg@f1+3,w
  6483  0001' 0402'              	iorwf	___flneg@f1+2,w
  6484  0002' 0401'              	iorwf	___flneg@f1+1,w
  6485  0003' 0400'              	iorwf	___flneg@f1,w
  6486  0004' 1903               	skipnz
  6487  0005' 0008               	return
  6488  0006' 3080               	movlw	128
  6489  0007' 0683'              	xorwf	___flneg@f1+3,f
  6490  0008' 0008               	return
  6491  0009'                    __end_of___flneg:
  6492                           
  6493                           	psect	text21
  6494  0000'                    __ptext21:	
  6495 ;; *************** function ___fldiv *****************
  6496 ;; Defined at:
  6497 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcdiv.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;  a               4    0[COMMON] unsigned char 
  6500 ;;  b               4    4[COMMON] unsigned char 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  grs             4    7[BANK0 ] unsigned long 
  6503 ;;  rem             4    0[BANK0 ] unsigned long 
  6504 ;;  new_exp         2    5[BANK0 ] int 
  6505 ;;  aexp            1   12[BANK0 ] unsigned char 
  6506 ;;  bexp            1   11[BANK0 ] unsigned char 
  6507 ;;  sign            1    4[BANK0 ] unsigned char 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  4    0[COMMON] unsigned char 
  6510 ;; Registers used:
  6511 ;;		wreg, status,2, status,0, btemp+1
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/200
  6514 ;;		On exit  : 300/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6517 ;;      Params:         8       0       0       0
  6518 ;;      Locals:         0      13       0       0
  6519 ;;      Temps:          5       0       0       0
  6520 ;;      Totals:        13      13       0       0
  6521 ;;Total ram usage:       26 bytes
  6522 ;; Hardware stack levels used: 1
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_normalized
  6527 ;;		_exp
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531  0000'                    ___fldiv:	
  6532                           ;psect for function ___fldiv
  6533                           
  6534                           
  6535                           ;incstack = 0
  6536                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6537  0000' 0807'              	movf	___fldiv@b+3,w
  6538  0001' 3980               	andlw	128
  6539  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  6540  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  6541  0004' 0084'              	movwf	___fldiv@sign
  6542  0005' 0807'              	movf	___fldiv@b+3,w
  6543  0006' 0088'              	movwf	??___fldiv
  6544  0007' 0708'              	addwf	??___fldiv,w
  6545  0008' 008B'              	movwf	___fldiv@bexp
  6546  0009' 1B86'              	btfsc	___fldiv@b+2,7
  6547  000A' 140B'              	bsf	___fldiv@bexp,0
  6548  000B' 080B'              	movf	___fldiv@bexp,w
  6549  000C' 1903               	btfsc	3,2
  6550  000D' 2800'              	goto	l3897
  6551  000E' 0A0B'              	incf	___fldiv@bexp,w
  6552  000F' 1D03               	btfss	3,2
  6553  0010' 2800'              	goto	l3893
  6554  0011' 3000               	movlw	0
  6555  0012' 0087'              	movwf	___fldiv@b+3
  6556  0013' 3000               	movlw	0
  6557  0014' 0086'              	movwf	___fldiv@b+2
  6558  0015' 3000               	movlw	0
  6559  0016' 0085'              	movwf	___fldiv@b+1
  6560  0017' 3000               	movlw	0
  6561  0018' 0084'              	movwf	___fldiv@b
  6562  0019'                    l3893:
  6563  0019' 1786'              	bsf	___fldiv@b+2,7
  6564  001A' 0187'              	clrf	___fldiv@b+3
  6565  001B' 2800'              	goto	l3899
  6566  001C'                    l3897:
  6567  001C' 3000               	movlw	0
  6568  001D' 0087'              	movwf	___fldiv@b+3
  6569  001E' 3000               	movlw	0
  6570  001F' 0086'              	movwf	___fldiv@b+2
  6571  0020' 3000               	movlw	0
  6572  0021' 0085'              	movwf	___fldiv@b+1
  6573  0022' 3000               	movlw	0
  6574  0023' 0084'              	movwf	___fldiv@b
  6575  0024'                    l3899:
  6576  0024' 0803'              	movf	___fldiv@a+3,w
  6577  0025' 3980               	andlw	128
  6578  0026' 0088'              	movwf	??___fldiv
  6579  0027' 0808'              	movf	??___fldiv,w
  6580  0028' 0684'              	xorwf	___fldiv@sign,f
  6581  0029' 0803'              	movf	___fldiv@a+3,w
  6582  002A' 0088'              	movwf	??___fldiv
  6583  002B' 0708'              	addwf	??___fldiv,w
  6584  002C' 008C'              	movwf	___fldiv@aexp
  6585  002D' 1B82'              	btfsc	___fldiv@a+2,7
  6586  002E' 140C'              	bsf	___fldiv@aexp,0
  6587  002F' 080C'              	movf	___fldiv@aexp,w
  6588  0030' 1903               	btfsc	3,2
  6589  0031' 2800'              	goto	l3917
  6590  0032' 0A0C'              	incf	___fldiv@aexp,w
  6591  0033' 1D03               	btfss	3,2
  6592  0034' 2800'              	goto	l3913
  6593  0035' 3000               	movlw	0
  6594  0036' 0083'              	movwf	___fldiv@a+3
  6595  0037' 3000               	movlw	0
  6596  0038' 0082'              	movwf	___fldiv@a+2
  6597  0039' 3000               	movlw	0
  6598  003A' 0081'              	movwf	___fldiv@a+1
  6599  003B' 3000               	movlw	0
  6600  003C' 0080'              	movwf	___fldiv@a
  6601  003D'                    l3913:
  6602  003D' 1782'              	bsf	___fldiv@a+2,7
  6603  003E' 0183'              	clrf	___fldiv@a+3
  6604  003F' 2800'              	goto	l717
  6605  0040'                    l3917:
  6606  0040' 3000               	movlw	0
  6607  0041' 0083'              	movwf	___fldiv@a+3
  6608  0042' 3000               	movlw	0
  6609  0043' 0082'              	movwf	___fldiv@a+2
  6610  0044' 3000               	movlw	0
  6611  0045' 0081'              	movwf	___fldiv@a+1
  6612  0046' 3000               	movlw	0
  6613  0047' 0080'              	movwf	___fldiv@a
  6614  0048'                    l717:
  6615  0048' 0803'              	movf	___fldiv@a+3,w
  6616  0049' 0402'              	iorwf	___fldiv@a+2,w
  6617  004A' 0401'              	iorwf	___fldiv@a+1,w
  6618  004B' 0400'              	iorwf	___fldiv@a,w
  6619  004C' 1D03               	skipz
  6620  004D' 2800'              	goto	l3927
  6621  004E' 3000               	movlw	0
  6622  004F' 0087'              	movwf	___fldiv@b+3
  6623  0050' 3000               	movlw	0
  6624  0051' 0086'              	movwf	___fldiv@b+2
  6625  0052' 3000               	movlw	0
  6626  0053' 0085'              	movwf	___fldiv@b+1
  6627  0054' 3000               	movlw	0
  6628  0055' 0084'              	movwf	___fldiv@b
  6629  0056' 3080               	movlw	128
  6630  0057' 0486'              	iorwf	___fldiv@b+2,f
  6631  0058' 307F               	movlw	127
  6632  0059' 0487'              	iorwf	___fldiv@b+3,f
  6633  005A'                    L4:
  6634  005A' 0804'              	movf	___fldiv@sign,w
  6635  005B' 0088'              	movwf	??___fldiv
  6636  005C' 0808'              	movf	??___fldiv,w
  6637  005D' 0487'              	iorwf	___fldiv@b+3,f
  6638  005E' 0807'              	movf	___fldiv@b+3,w
  6639  005F' 0083'              	movwf	?___fldiv+3
  6640  0060' 0806'              	movf	___fldiv@b+2,w
  6641  0061' 0082'              	movwf	?___fldiv+2
  6642  0062' 0805'              	movf	___fldiv@b+1,w
  6643  0063' 0081'              	movwf	?___fldiv+1
  6644  0064' 0804'              	movf	___fldiv@b,w
  6645  0065' 0080'              	movwf	?___fldiv
  6646  0066' 0008               	return
  6647  0067'                    l3927:
  6648  0067' 080B'              	movf	___fldiv@bexp,w
  6649  0068' 1D03               	btfss	3,2
  6650  0069' 2800'              	goto	l3933
  6651  006A' 3000               	movlw	0
  6652  006B' 0083'              	movwf	?___fldiv+3
  6653  006C' 3000               	movlw	0
  6654  006D' 0082'              	movwf	?___fldiv+2
  6655  006E' 3000               	movlw	0
  6656  006F' 0081'              	movwf	?___fldiv+1
  6657  0070' 3000               	movlw	0
  6658  0071' 0080'              	movwf	?___fldiv
  6659  0072' 0008               	return
  6660  0073'                    l3933:
  6661  0073' 080B'              	movf	___fldiv@bexp,w
  6662  0074' 0088'              	movwf	??___fldiv
  6663  0075' 0189'              	clrf	??___fldiv+1
  6664  0076' 0809'              	movf	??___fldiv+1,w
  6665  0077' 008B'              	movwf	??___fldiv+3
  6666  0078' 080C'              	movf	___fldiv@aexp,w
  6667  0079' 0208'              	subwf	??___fldiv,w
  6668  007A' 008A'              	movwf	??___fldiv+2
  6669  007B' 1C03               	skipc
  6670  007C' 038B'              	decf	??___fldiv+3,f
  6671  007D' 080A'              	movf	??___fldiv+2,w
  6672  007E' 3E7F               	addlw	127
  6673  007F' 0085'              	movwf	___fldiv@new_exp
  6674  0080' 080B'              	movf	??___fldiv+3,w
  6675  0081' 1803               	skipnc
  6676  0082' 3E01               	addlw	1
  6677  0083' 3E00               	addlw	0
  6678  0084' 0086'              	movwf	___fldiv@new_exp+1
  6679  0085' 0807'              	movf	___fldiv@b+3,w
  6680  0086' 0083'              	movwf	___fldiv@rem+3
  6681  0087' 0806'              	movf	___fldiv@b+2,w
  6682  0088' 0082'              	movwf	___fldiv@rem+2
  6683  0089' 0805'              	movf	___fldiv@b+1,w
  6684  008A' 0081'              	movwf	___fldiv@rem+1
  6685  008B' 0804'              	movf	___fldiv@b,w
  6686  008C' 0080'              	movwf	___fldiv@rem
  6687  008D' 3000               	movlw	0
  6688  008E' 0087'              	movwf	___fldiv@b+3
  6689  008F' 3000               	movlw	0
  6690  0090' 0086'              	movwf	___fldiv@b+2
  6691  0091' 3000               	movlw	0
  6692  0092' 0085'              	movwf	___fldiv@b+1
  6693  0093' 3000               	movlw	0
  6694  0094' 0084'              	movwf	___fldiv@b
  6695  0095' 3000               	movlw	0
  6696  0096' 008A'              	movwf	___fldiv@grs+3
  6697  0097' 3000               	movlw	0
  6698  0098' 0089'              	movwf	___fldiv@grs+2
  6699  0099' 3000               	movlw	0
  6700  009A' 0088'              	movwf	___fldiv@grs+1
  6701  009B' 3000               	movlw	0
  6702  009C' 0087'              	movwf	___fldiv@grs
  6703  009D' 018C'              	clrf	___fldiv@aexp
  6704  009E'                    l3961:
  6705  009E' 301A               	movlw	26
  6706  009F' 020C'              	subwf	___fldiv@aexp,w
  6707  00A0' 1803               	btfsc	3,0
  6708  00A1' 2800'              	goto	l3963
  6709  00A2' 080C'              	movf	___fldiv@aexp,w
  6710  00A3' 1903               	btfsc	3,2
  6711  00A4' 2800'              	goto	l3953
  6712  00A5' 3001               	movlw	1
  6713  00A6' 0088'              	movwf	??___fldiv
  6714  00A7'                    u5515:
  6715  00A7' 1003               	clrc
  6716  00A8' 0D80'              	rlf	___fldiv@rem,f
  6717  00A9' 0D81'              	rlf	___fldiv@rem+1,f
  6718  00AA' 0D82'              	rlf	___fldiv@rem+2,f
  6719  00AB' 0D83'              	rlf	___fldiv@rem+3,f
  6720  00AC' 0B88'              	decfsz	??___fldiv,f
  6721  00AD' 2800'              	goto	u5515
  6722  00AE' 3001               	movlw	1
  6723  00AF' 0088'              	movwf	??___fldiv
  6724  00B0'                    u5525:
  6725  00B0' 1003               	clrc
  6726  00B1' 0D84'              	rlf	___fldiv@b,f
  6727  00B2' 0D85'              	rlf	___fldiv@b+1,f
  6728  00B3' 0D86'              	rlf	___fldiv@b+2,f
  6729  00B4' 0D87'              	rlf	___fldiv@b+3,f
  6730  00B5' 0B88'              	decfsz	??___fldiv,f
  6731  00B6' 2800'              	goto	u5525
  6732  00B7' 1B8A'              	btfsc	___fldiv@grs+3,7
  6733  00B8' 1404'              	bsf	___fldiv@b,0
  6734  00B9' 3001               	movlw	1
  6735  00BA' 0088'              	movwf	??___fldiv
  6736  00BB'                    u5545:
  6737  00BB' 1003               	clrc
  6738  00BC' 0D87'              	rlf	___fldiv@grs,f
  6739  00BD' 0D88'              	rlf	___fldiv@grs+1,f
  6740  00BE' 0D89'              	rlf	___fldiv@grs+2,f
  6741  00BF' 0D8A'              	rlf	___fldiv@grs+3,f
  6742  00C0' 0B88'              	decfsz	??___fldiv,f
  6743  00C1' 2800'              	goto	u5545
  6744  00C2'                    l3953:
  6745  00C2' 0803'              	movf	___fldiv@a+3,w
  6746  00C3' 0203'              	subwf	___fldiv@rem+3,w
  6747  00C4' 1D03               	skipz
  6748  00C5' 2800'              	goto	u5555
  6749  00C6' 0802'              	movf	___fldiv@a+2,w
  6750  00C7' 0202'              	subwf	___fldiv@rem+2,w
  6751  00C8' 1D03               	skipz
  6752  00C9' 2800'              	goto	u5555
  6753  00CA' 0801'              	movf	___fldiv@a+1,w
  6754  00CB' 0201'              	subwf	___fldiv@rem+1,w
  6755  00CC' 1D03               	skipz
  6756  00CD' 2800'              	goto	u5555
  6757  00CE' 0800'              	movf	___fldiv@a,w
  6758  00CF' 0200'              	subwf	___fldiv@rem,w
  6759  00D0'                    u5555:
  6760  00D0' 1C03               	skipc
  6761  00D1' 2800'              	goto	l3959
  6762  00D2' 170A'              	bsf	___fldiv@grs+3,6
  6763  00D3' 0800'              	movf	___fldiv@a,w
  6764  00D4' 0280'              	subwf	___fldiv@rem,f
  6765  00D5' 0801'              	movf	___fldiv@a+1,w
  6766  00D6' 1C03               	skipc
  6767  00D7' 0F01'              	incfsz	___fldiv@a+1,w
  6768  00D8' 2800'              	goto	u5565
  6769  00D9' 2800'              	goto	u5566
  6770  00DA'                    u5565:
  6771  00DA' 0281'              	subwf	___fldiv@rem+1,f
  6772  00DB'                    u5566:
  6773  00DB' 0802'              	movf	___fldiv@a+2,w
  6774  00DC' 1C03               	skipc
  6775  00DD' 0F02'              	incfsz	___fldiv@a+2,w
  6776  00DE' 2800'              	goto	u5567
  6777  00DF' 2800'              	goto	u5568
  6778  00E0'                    u5567:
  6779  00E0' 0282'              	subwf	___fldiv@rem+2,f
  6780  00E1'                    u5568:
  6781  00E1' 0803'              	movf	___fldiv@a+3,w
  6782  00E2' 1C03               	skipc
  6783  00E3' 0F03'              	incfsz	___fldiv@a+3,w
  6784  00E4' 2800'              	goto	u5569
  6785  00E5' 2800'              	goto	l3959
  6786  00E6'                    u5569:
  6787  00E6' 0283'              	subwf	___fldiv@rem+3,f
  6788  00E7'                    l3959:
  6789  00E7' 3001               	movlw	1
  6790  00E8' 0088'              	movwf	??___fldiv
  6791  00E9' 0808'              	movf	??___fldiv,w
  6792  00EA' 078C'              	addwf	___fldiv@aexp,f
  6793  00EB' 2800'              	goto	l3961
  6794  00EC'                    l3963:
  6795  00EC' 0803'              	movf	___fldiv@rem+3,w
  6796  00ED' 0402'              	iorwf	___fldiv@rem+2,w
  6797  00EE' 0401'              	iorwf	___fldiv@rem+1,w
  6798  00EF' 0400'              	iorwf	___fldiv@rem,w
  6799  00F0' 1D03               	btfss	3,2
  6800  00F1' 1407'              	bsf	___fldiv@grs,0
  6801  00F2'                    l3977:
  6802  00F2' 1B86'              	btfsc	___fldiv@b+2,7
  6803  00F3' 2800'              	goto	l3979
  6804  00F4' 3001               	movlw	1
  6805  00F5' 0088'              	movwf	??___fldiv
  6806  00F6'                    u5595:
  6807  00F6' 1003               	clrc
  6808  00F7' 0D84'              	rlf	___fldiv@b,f
  6809  00F8' 0D85'              	rlf	___fldiv@b+1,f
  6810  00F9' 0D86'              	rlf	___fldiv@b+2,f
  6811  00FA' 0D87'              	rlf	___fldiv@b+3,f
  6812  00FB' 0B88'              	decfsz	??___fldiv,f
  6813  00FC' 2800'              	goto	u5595
  6814  00FD' 1B8A'              	btfsc	___fldiv@grs+3,7
  6815  00FE' 1404'              	bsf	___fldiv@b,0
  6816  00FF' 3001               	movlw	1
  6817  0100' 0088'              	movwf	??___fldiv
  6818  0101'                    u5615:
  6819  0101' 1003               	clrc
  6820  0102' 0D87'              	rlf	___fldiv@grs,f
  6821  0103' 0D88'              	rlf	___fldiv@grs+1,f
  6822  0104' 0D89'              	rlf	___fldiv@grs+2,f
  6823  0105' 0D8A'              	rlf	___fldiv@grs+3,f
  6824  0106' 0B88'              	decfsz	??___fldiv,f
  6825  0107' 2800'              	goto	u5615
  6826  0108' 30FF               	movlw	255
  6827  0109' 0785'              	addwf	___fldiv@new_exp,f
  6828  010A' 1803               	skipnc
  6829  010B' 0A86'              	incf	___fldiv@new_exp+1,f
  6830  010C' 30FF               	movlw	255
  6831  010D' 0786'              	addwf	___fldiv@new_exp+1,f
  6832  010E' 2800'              	goto	l3977
  6833  010F'                    l3979:
  6834  010F' 018C'              	clrf	___fldiv@aexp
  6835  0110' 1F8A'              	btfss	___fldiv@grs+3,7
  6836  0111' 2800'              	goto	l3989
  6837  0112' 30FF               	movlw	255
  6838  0113' 0507'              	andwf	___fldiv@grs,w
  6839  0114' 0088'              	movwf	??___fldiv
  6840  0115' 30FF               	movlw	255
  6841  0116' 0508'              	andwf	___fldiv@grs+1,w
  6842  0117' 0089'              	movwf	??___fldiv+1
  6843  0118' 30FF               	movlw	255
  6844  0119' 0509'              	andwf	___fldiv@grs+2,w
  6845  011A' 008A'              	movwf	??___fldiv+2
  6846  011B' 307F               	movlw	127
  6847  011C' 050A'              	andwf	___fldiv@grs+3,w
  6848  011D' 008B'              	movwf	??___fldiv+3
  6849  011E' 080B'              	movf	??___fldiv+3,w
  6850  011F' 040A'              	iorwf	??___fldiv+2,w
  6851  0120' 0409'              	iorwf	??___fldiv+1,w
  6852  0121' 0408'              	iorwf	??___fldiv,w
  6853  0122' 1903               	skipnz
  6854  0123' 1804'              	btfsc	___fldiv@b,0
  6855  0124' 2800'              	goto	l3985
  6856  0125' 2800'              	goto	l3989
  6857  0126'                    l3985:
  6858  0126' 018C'              	clrf	___fldiv@aexp
  6859  0127' 0A8C'              	incf	___fldiv@aexp,f
  6860  0128'                    l3989:
  6861  0128' 080C'              	movf	___fldiv@aexp,w
  6862  0129' 1903               	btfsc	3,2
  6863  012A' 2800'              	goto	l3999
  6864  012B' 3001               	movlw	1
  6865  012C' 0784'              	addwf	___fldiv@b,f
  6866  012D' 3000               	movlw	0
  6867  012E' 1803               	skipnc
  6868  012F' 3001               	movlw	1
  6869  0130' 0785'              	addwf	___fldiv@b+1,f
  6870  0131' 3000               	movlw	0
  6871  0132' 1803               	skipnc
  6872  0133' 3001               	movlw	1
  6873  0134' 0786'              	addwf	___fldiv@b+2,f
  6874  0135' 3000               	movlw	0
  6875  0136' 1803               	skipnc
  6876  0137' 3001               	movlw	1
  6877  0138' 0787'              	addwf	___fldiv@b+3,f
  6878  0139' 1C07'              	btfss	___fldiv@b+3,0
  6879  013A' 2800'              	goto	l3999
  6880  013B' 0804'              	movf	___fldiv@b,w
  6881  013C' 0088'              	movwf	??___fldiv
  6882  013D' 0805'              	movf	___fldiv@b+1,w
  6883  013E' 0089'              	movwf	??___fldiv+1
  6884  013F' 0806'              	movf	___fldiv@b+2,w
  6885  0140' 008A'              	movwf	??___fldiv+2
  6886  0141' 0807'              	movf	___fldiv@b+3,w
  6887  0142' 008B'              	movwf	??___fldiv+3
  6888  0143' 3001               	movlw	1
  6889  0144' 008C'              	movwf	??___fldiv+4
  6890  0145'                    u5685:
  6891  0145' 0D0B'              	rlf	??___fldiv+3,w
  6892  0146' 0C8B'              	rrf	??___fldiv+3,f
  6893  0147' 0C8A'              	rrf	??___fldiv+2,f
  6894  0148' 0C89'              	rrf	??___fldiv+1,f
  6895  0149' 0C88'              	rrf	??___fldiv,f
  6896  014A' 0B8C'              	decfsz	??___fldiv+4,f
  6897  014B' 2800'              	goto	u5685
  6898  014C' 080B'              	movf	??___fldiv+3,w
  6899  014D' 0087'              	movwf	___fldiv@b+3
  6900  014E' 080A'              	movf	??___fldiv+2,w
  6901  014F' 0086'              	movwf	___fldiv@b+2
  6902  0150' 0809'              	movf	??___fldiv+1,w
  6903  0151' 0085'              	movwf	___fldiv@b+1
  6904  0152' 0808'              	movf	??___fldiv,w
  6905  0153' 0084'              	movwf	___fldiv@b
  6906  0154' 3001               	movlw	1
  6907  0155' 0785'              	addwf	___fldiv@new_exp,f
  6908  0156' 1803               	skipnc
  6909  0157' 0A86'              	incf	___fldiv@new_exp+1,f
  6910  0158' 3000               	movlw	0
  6911  0159' 0786'              	addwf	___fldiv@new_exp+1,f
  6912  015A'                    l3999:
  6913  015A' 0806'              	movf	___fldiv@new_exp+1,w
  6914  015B' 3A80               	xorlw	128
  6915  015C' 00FF               	movwf	127
  6916  015D' 3080               	movlw	128
  6917  015E' 027F               	subwf	127,w
  6918  015F' 1D03               	skipz
  6919  0160' 2800'              	goto	u5695
  6920  0161' 30FF               	movlw	255
  6921  0162' 0205'              	subwf	___fldiv@new_exp,w
  6922  0163'                    u5695:
  6923  0163' 1C03               	skipc
  6924  0164' 2800'              	goto	l4003
  6925  0165' 30FF               	movlw	255
  6926  0166' 1283               	bcf	3,5	;RP0=0, select bank0
  6927  0167' 1303               	bcf	3,6	;RP1=0, select bank0
  6928  0168' 0085'              	movwf	___fldiv@new_exp
  6929  0169' 3000               	movlw	0
  6930  016A' 0086'              	movwf	___fldiv@new_exp+1
  6931  016B' 3000               	movlw	0
  6932  016C' 0087'              	movwf	___fldiv@b+3
  6933  016D' 3000               	movlw	0
  6934  016E' 0086'              	movwf	___fldiv@b+2
  6935  016F' 3000               	movlw	0
  6936  0170' 0085'              	movwf	___fldiv@b+1
  6937  0171' 3000               	movlw	0
  6938  0172' 0084'              	movwf	___fldiv@b
  6939  0173'                    l4003:
  6940  0173' 1283               	bcf	3,5	;RP0=0, select bank0
  6941  0174' 1303               	bcf	3,6	;RP1=0, select bank0
  6942  0175' 0806'              	movf	___fldiv@new_exp+1,w
  6943  0176' 3A80               	xorlw	128
  6944  0177' 00FF               	movwf	127
  6945  0178' 3080               	movlw	128
  6946  0179' 027F               	subwf	127,w
  6947  017A' 1D03               	skipz
  6948  017B' 2800'              	goto	u5705
  6949  017C' 3001               	movlw	1
  6950  017D' 0205'              	subwf	___fldiv@new_exp,w
  6951  017E'                    u5705:
  6952  017E' 1803               	skipnc
  6953  017F' 2800'              	goto	l739
  6954  0180' 1283               	bcf	3,5	;RP0=0, select bank0
  6955  0181' 1303               	bcf	3,6	;RP1=0, select bank0
  6956  0182' 0185'              	clrf	___fldiv@new_exp
  6957  0183' 0186'              	clrf	___fldiv@new_exp+1
  6958  0184' 3000               	movlw	0
  6959  0185' 0087'              	movwf	___fldiv@b+3
  6960  0186' 3000               	movlw	0
  6961  0187' 0086'              	movwf	___fldiv@b+2
  6962  0188' 3000               	movlw	0
  6963  0189' 0085'              	movwf	___fldiv@b+1
  6964  018A' 3000               	movlw	0
  6965  018B' 0084'              	movwf	___fldiv@b
  6966  018C' 0184'              	clrf	___fldiv@sign
  6967  018D'                    l739:
  6968  018D' 1283               	bcf	3,5	;RP0=0, select bank0
  6969  018E' 1303               	bcf	3,6	;RP1=0, select bank0
  6970  018F' 0805'              	movf	___fldiv@new_exp,w
  6971  0190' 008B'              	movwf	___fldiv@bexp
  6972  0191' 1C0B'              	btfss	___fldiv@bexp,0
  6973  0192' 2800'              	goto	l4015
  6974  0193' 1786'              	bsf	___fldiv@b+2,7
  6975  0194' 2800'              	goto	l741
  6976  0195'                    l4015:
  6977  0195' 307F               	movlw	127
  6978  0196' 0088'              	movwf	??___fldiv
  6979  0197' 0808'              	movf	??___fldiv,w
  6980  0198' 0586'              	andwf	___fldiv@b+2,f
  6981  0199'                    l741:
  6982  0199' 080B'              	movf	___fldiv@bexp,w
  6983  019A' 0088'              	movwf	??___fldiv
  6984  019B' 1003               	clrc
  6985  019C' 0C08'              	rrf	??___fldiv,w
  6986  019D' 0087'              	movwf	___fldiv@b+3
  6987  019E' 2800'              	goto	L4
  6988  019F'                    __end_of___fldiv:
  6989                           
  6990                           	psect	text22
  6991  0000'                    __ptext22:	
  6992 ;; *************** function _my_floor *****************
  6993 ;; Defined at:
  6994 ;;		line 788 in file "main.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;  f               4   10[COMMON] float 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  n               2    0[BANK0 ] int 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  2   10[COMMON] int 
  7001 ;; Registers used:
  7002 ;;		wreg, status,2, status,0, pclath, cstack
  7003 ;; Tracked objects:
  7004 ;;		On entry : 300/200
  7005 ;;		On exit  : 300/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7008 ;;      Params:         4       0       0       0
  7009 ;;      Locals:         0       2       0       0
  7010 ;;      Temps:          0       0       0       0
  7011 ;;      Totals:         4       2       0       0
  7012 ;;Total ram usage:        6 bytes
  7013 ;; Hardware stack levels used: 1
  7014 ;; Hardware stack levels required when called: 1
  7015 ;; This function calls:
  7016 ;;		___fltol
  7017 ;; This function is called by:
  7018 ;;		_updateANDset_ball_position
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022  0000'                    _my_floor:	
  7023                           ;psect for function _my_floor
  7024                           
  7025                           
  7026                           ;main.c: 795:     int n = (int)f;
  7027                           
  7028                           ;incstack = 0
  7029                           ; Regs used in _my_floor: [wreg+status,2+status,0+pclath+cstack]
  7030  0000' 080D'              	movf	my_floor@f+3,w
  7031  0001' 0083'              	movwf	___fltol@f1+3
  7032  0002' 080C'              	movf	my_floor@f+2,w
  7033  0003' 0082'              	movwf	___fltol@f1+2
  7034  0004' 080B'              	movf	my_floor@f+1,w
  7035  0005' 0081'              	movwf	___fltol@f1+1
  7036  0006' 080A'              	movf	my_floor@f,w
  7037  0007' 0080'              	movwf	___fltol@f1
  7038  0008' 118A' 2000'        	fcall	___fltol
  7039  000A' 0801'              	movf	?___fltol+1,w
  7040  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  7041  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  7042  000D' 0081'              	movwf	my_floor@n+1
  7043  000E' 0800'              	movf	?___fltol,w
  7044  000F' 0080'              	movwf	my_floor@n
  7045                           
  7046                           ;main.c: 796:     return n;
  7047  0010' 0801'              	movf	my_floor@n+1,w
  7048  0011' 008B'              	movwf	?_my_floor+1
  7049  0012' 0800'              	movf	my_floor@n,w
  7050  0013' 008A'              	movwf	?_my_floor
  7051  0014' 0008               	return
  7052  0015'                    __end_of_my_floor:
  7053                           
  7054                           	psect	text23
  7055  0000'                    __ptext23:	
  7056 ;; *************** function ___fltol *****************
  7057 ;; Defined at:
  7058 ;;		line 43 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/fltol.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  f1              4    0[COMMON] int 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;  exp1            1    9[COMMON] unsigned char 
  7063 ;;  sign1           1    8[COMMON] unsigned char 
  7064 ;; Return value:  Size  Location     Type
  7065 ;;                  4    0[COMMON] long 
  7066 ;; Registers used:
  7067 ;;		wreg, status,2, status,0
  7068 ;; Tracked objects:
  7069 ;;		On entry : 0/100
  7070 ;;		On exit  : 0/0
  7071 ;;		Unchanged: 0/0
  7072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7073 ;;      Params:         4       0       0       0
  7074 ;;      Locals:         2       0       0       0
  7075 ;;      Temps:          4       0       0       0
  7076 ;;      Totals:        10       0       0       0
  7077 ;;Total ram usage:       10 bytes
  7078 ;; Hardware stack levels used: 1
  7079 ;; This function calls:
  7080 ;;		Nothing
  7081 ;; This function is called by:
  7082 ;;		_my_floor
  7083 ;;		_pow
  7084 ;;		_exp
  7085 ;;		_floor
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089  0000'                    ___fltol:	
  7090                           ;psect for function ___fltol
  7091                           
  7092                           
  7093                           ;incstack = 0
  7094                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7095  0000' 1003               	clrc
  7096  0001' 0D02'              	rlf	___fltol@f1+2,w
  7097  0002' 0D03'              	rlf	___fltol@f1+3,w
  7098  0003' 0089'              	movwf	___fltol@exp1
  7099  0004' 0809'              	movf	___fltol@exp1,w
  7100  0005' 1D03               	btfss	3,2
  7101  0006' 2800'              	goto	l3437
  7102  0007'                    l3433:
  7103  0007' 3000               	movlw	0
  7104  0008' 0083'              	movwf	?___fltol+3
  7105  0009' 3000               	movlw	0
  7106  000A' 0082'              	movwf	?___fltol+2
  7107  000B' 3000               	movlw	0
  7108  000C' 0081'              	movwf	?___fltol+1
  7109  000D' 3000               	movlw	0
  7110  000E' 0080'              	movwf	?___fltol
  7111  000F' 0008               	return
  7112  0010'                    l3437:
  7113  0010' 0800'              	movf	___fltol@f1,w
  7114  0011' 0084'              	movwf	??___fltol
  7115  0012' 0801'              	movf	___fltol@f1+1,w
  7116  0013' 0085'              	movwf	??___fltol+1
  7117  0014' 0802'              	movf	___fltol@f1+2,w
  7118  0015' 0086'              	movwf	??___fltol+2
  7119  0016' 0803'              	movf	___fltol@f1+3,w
  7120  0017' 0087'              	movwf	??___fltol+3
  7121  0018' 301F               	movlw	31
  7122  0019'                    u4355:
  7123  0019' 1003               	clrc
  7124  001A' 0C87'              	rrf	??___fltol+3,f
  7125  001B' 0C86'              	rrf	??___fltol+2,f
  7126  001C' 0C85'              	rrf	??___fltol+1,f
  7127  001D' 0C84'              	rrf	??___fltol,f
  7128  001E' 3EFF               	addlw	-1
  7129  001F' 1D03               	skipz
  7130  0020' 2800'              	goto	u4355
  7131  0021' 0804'              	movf	??___fltol,w
  7132  0022' 0088'              	movwf	___fltol@sign1
  7133  0023' 1782'              	bsf	___fltol@f1+2,7
  7134  0024' 30FF               	movlw	255
  7135  0025' 0580'              	andwf	___fltol@f1,f
  7136  0026' 30FF               	movlw	255
  7137  0027' 0581'              	andwf	___fltol@f1+1,f
  7138  0028' 30FF               	movlw	255
  7139  0029' 0582'              	andwf	___fltol@f1+2,f
  7140  002A' 3000               	movlw	0
  7141  002B' 0583'              	andwf	___fltol@f1+3,f
  7142  002C' 3096               	movlw	150
  7143  002D' 0289'              	subwf	___fltol@exp1,f
  7144  002E' 1F89'              	btfss	___fltol@exp1,7
  7145  002F' 2800'              	goto	l3455
  7146  0030' 0809'              	movf	___fltol@exp1,w
  7147  0031' 3A80               	xorlw	128
  7148  0032' 3E97               	addlw	151
  7149  0033' 1C03               	btfss	3,0
  7150  0034' 2800'              	goto	l3433
  7151  0035'                    l3453:
  7152  0035' 3001               	movlw	1
  7153  0036'                    u4385:
  7154  0036' 1003               	clrc
  7155  0037' 0C83'              	rrf	___fltol@f1+3,f
  7156  0038' 0C82'              	rrf	___fltol@f1+2,f
  7157  0039' 0C81'              	rrf	___fltol@f1+1,f
  7158  003A' 0C80'              	rrf	___fltol@f1,f
  7159  003B' 3EFF               	addlw	-1
  7160  003C' 1D03               	skipz
  7161  003D' 2800'              	goto	u4385
  7162  003E' 3001               	movlw	1
  7163  003F' 0084'              	movwf	??___fltol
  7164  0040' 0804'              	movf	??___fltol,w
  7165  0041' 0789'              	addwf	___fltol@exp1,f
  7166  0042' 1903               	btfsc	3,2
  7167  0043' 2800'              	goto	l3463
  7168  0044' 2800'              	goto	l3453
  7169  0045'                    l3455:
  7170  0045' 3020               	movlw	32
  7171  0046' 0209'              	subwf	___fltol@exp1,w
  7172  0047' 1803               	btfsc	3,0
  7173  0048' 2800'              	goto	l3433
  7174  0049'                    l561:
  7175  0049' 0809'              	movf	___fltol@exp1,w
  7176  004A' 1903               	btfsc	3,2
  7177  004B' 2800'              	goto	l3463
  7178  004C' 3001               	movlw	1
  7179  004D' 0084'              	movwf	??___fltol
  7180  004E'                    u4415:
  7181  004E' 1003               	clrc
  7182  004F' 0D80'              	rlf	___fltol@f1,f
  7183  0050' 0D81'              	rlf	___fltol@f1+1,f
  7184  0051' 0D82'              	rlf	___fltol@f1+2,f
  7185  0052' 0D83'              	rlf	___fltol@f1+3,f
  7186  0053' 0B84'              	decfsz	??___fltol,f
  7187  0054' 2800'              	goto	u4415
  7188  0055' 3001               	movlw	1
  7189  0056' 0289'              	subwf	___fltol@exp1,f
  7190  0057' 2800'              	goto	l561
  7191  0058'                    l3463:
  7192  0058' 0808'              	movf	___fltol@sign1,w
  7193  0059' 1903               	btfsc	3,2
  7194  005A' 0008               	return
  7195  005B' 0980'              	comf	___fltol@f1,f
  7196  005C' 0981'              	comf	___fltol@f1+1,f
  7197  005D' 0982'              	comf	___fltol@f1+2,f
  7198  005E' 0983'              	comf	___fltol@f1+3,f
  7199  005F' 0A80'              	incf	___fltol@f1,f
  7200  0060' 1903               	skipnz
  7201  0061' 0A81'              	incf	___fltol@f1+1,f
  7202  0062' 1903               	skipnz
  7203  0063' 0A82'              	incf	___fltol@f1+2,f
  7204  0064' 1903               	skipnz
  7205  0065' 0A83'              	incf	___fltol@f1+3,f
  7206  0066' 0008               	return
  7207  0067'                    __end_of___fltol:
  7208                           
  7209                           	psect	text24
  7210  0000'                    __ptext24:	
  7211 ;; *************** function _setDisplayFillingMode *****************
  7212 ;; Defined at:
  7213 ;;		line 397 in file "main.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  hORv            1    wreg     unsigned char 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  hORv            1    7[COMMON] unsigned char 
  7218 ;;  madctl          1    8[COMMON] unsigned char 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      void 
  7221 ;; Registers used:
  7222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 300/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7228 ;;      Params:         0       0       0       0
  7229 ;;      Locals:         2       0       0       0
  7230 ;;      Temps:          2       0       0       0
  7231 ;;      Totals:         4       0       0       0
  7232 ;;Total ram usage:        4 bytes
  7233 ;; Hardware stack levels used: 1
  7234 ;; Hardware stack levels required when called: 3
  7235 ;; This function calls:
  7236 ;;		_sendCommand_and_8bit_Data
  7237 ;; This function is called by:
  7238 ;;		_main
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242  0000'                    _setDisplayFillingMode:	
  7243                           ;psect for function _setDisplayFillingMode
  7244                           
  7245                           
  7246                           ;incstack = 0
  7247                           ; Regs used in _setDisplayFillingMode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  7248                           ;setDisplayFillingMode@hORv stored from wreg
  7249  0000' 0087'              	movwf	setDisplayFillingMode@hORv
  7250                           
  7251                           ;main.c: 406:   uint8_t madctl = 0b00100100;
  7252  0001' 3024               	movlw	36
  7253  0002' 0088'              	movwf	setDisplayFillingMode@madctl
  7254                           
  7255                           ;main.c: 408:   mode = hORv;
  7256  0003' 0807'              	movf	setDisplayFillingMode@hORv,w
  7257  0004' 1283               	bcf	3,5	;RP0=0, select bank2
  7258  0005' 1703               	bsf	3,6	;RP1=1, select bank2
  7259  0006' 0080'              	movwf	_mode^(0+256)
  7260                           
  7261                           ;main.c: 410:   switch (mode) {
  7262  0007' 2800'              	goto	l3231
  7263  0008'                    l121:	
  7264                           ;main.c: 414:     case 1:
  7265                           
  7266                           
  7267                           ;main.c: 415:             madctl |= 0b00010000;
  7268  0008' 1608'              	bsf	setDisplayFillingMode@madctl,4
  7269                           
  7270                           ;main.c: 416:             break;
  7271  0009' 2800'              	goto	l3233
  7272  000A'                    l3225:
  7273                           
  7274                           ;main.c: 418:             madctl |= 0b00010010;
  7275  000A' 3012               	movlw	18
  7276  000B' 2800'              	goto	L5
  7277  000C'                    l123:	
  7278                           ;main.c: 420:     case 3:
  7279                           
  7280                           ;main.c: 419:             break;
  7281                           
  7282                           
  7283                           ;main.c: 421:             madctl |= 0b00000001;
  7284  000C' 1408'              	bsf	setDisplayFillingMode@madctl,0
  7285                           
  7286                           ;main.c: 422:             break;
  7287  000D' 2800'              	goto	l3233
  7288  000E'                    l3227:
  7289                           
  7290                           ;main.c: 424:             madctl |= 0b00010001;
  7291  000E' 3011               	movlw	17
  7292  000F'                    L5:
  7293  000F' 0085'              	movwf	??_setDisplayFillingMode
  7294  0010' 0805'              	movf	??_setDisplayFillingMode,w
  7295  0011' 0488'              	iorwf	setDisplayFillingMode@madctl,f
  7296                           
  7297                           ;main.c: 425:             break;
  7298  0012' 2800'              	goto	l3233
  7299  0013'                    l3231:
  7300  0013' 0800'              	movf	_mode^(0+256),w
  7301  0014' 0085'              	movwf	??_setDisplayFillingMode
  7302  0015' 0186'              	clrf	??_setDisplayFillingMode+1
  7303                           
  7304                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7305                           ; Switch size 1, requested type "simple"
  7306                           ; Number of cases is 1, Range of values is 0 to 0
  7307                           ; switch strategies available:
  7308                           ; Name         Instructions Cycles
  7309                           ; simple_byte            4     3 (average)
  7310                           ; direct_byte            9     7 (fixed)
  7311                           ; jumptable            260     6 (fixed)
  7312                           ;	Chosen strategy is simple_byte
  7313  0016' 0806'              	movf	??_setDisplayFillingMode+1,w
  7314  0017' 3A00               	xorlw	0	; case 0
  7315  0018' 1903               	skipnz
  7316  0019' 2800'              	goto	l4391
  7317  001A' 2800'              	goto	l3233
  7318  001B'                    l4391:
  7319                           
  7320                           ; Switch size 1, requested type "simple"
  7321                           ; Number of cases is 5, Range of values is 0 to 4
  7322                           ; switch strategies available:
  7323                           ; Name         Instructions Cycles
  7324                           ; simple_byte           16     9 (average)
  7325                           ; direct_byte           17     7 (fixed)
  7326                           ; jumptable            260     6 (fixed)
  7327                           ;	Chosen strategy is simple_byte
  7328  001B' 0805'              	movf	??_setDisplayFillingMode,w
  7329  001C' 3A00               	xorlw	0	; case 0
  7330  001D' 1903               	skipnz
  7331  001E' 2800'              	goto	l3233
  7332  001F' 3A01               	xorlw	1	; case 1
  7333  0020' 1903               	skipnz
  7334  0021' 2800'              	goto	l121
  7335  0022' 3A03               	xorlw	3	; case 2
  7336  0023' 1903               	skipnz
  7337  0024' 2800'              	goto	l3225
  7338  0025' 3A01               	xorlw	1	; case 3
  7339  0026' 1903               	skipnz
  7340  0027' 2800'              	goto	l123
  7341  0028' 3A07               	xorlw	7	; case 4
  7342  0029' 1903               	skipnz
  7343  002A' 2800'              	goto	l3227
  7344  002B' 2800'              	goto	l3233
  7345  002C'                    l3233:
  7346                           
  7347                           ;main.c: 428:   sendCommand_and_8bit_Data(0xA0, madctl);
  7348  002C' 0808'              	movf	setDisplayFillingMode@madctl,w
  7349  002D' 0083'              	movwf	sendCommand_and_8bit_Data@first_byte
  7350  002E' 30A0               	movlw	160
  7351  002F' 118A' 2000' 118A'  	fcall	_sendCommand_and_8bit_Data
  7352                           
  7353                           ;main.c: 429:   sendCommand_and_8bit_Data(0xA1, 0);
  7354  0032' 0183'              	clrf	sendCommand_and_8bit_Data@first_byte
  7355  0033' 30A1               	movlw	161
  7356  0034' 118A' 2000'        	fcall	_sendCommand_and_8bit_Data
  7357  0036' 0008               	return
  7358  0037'                    __end_of_setDisplayFillingMode:
  7359                           
  7360                           	psect	text25
  7361  0000'                    __ptext25:	
  7362 ;; *************** function _sendCommand_and_8bit_Data *****************
  7363 ;; Defined at:
  7364 ;;		line 310 in file "main.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  commandByte     1    wreg     unsigned char 
  7367 ;;  first_byte      1    3[COMMON] unsigned char 
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;  commandByte     1    4[COMMON] unsigned char 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  1    wreg      void 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/200
  7376 ;;		On exit  : 300/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7379 ;;      Params:         1       0       0       0
  7380 ;;      Locals:         1       0       0       0
  7381 ;;      Temps:          0       0       0       0
  7382 ;;      Totals:         2       0       0       0
  7383 ;;Total ram usage:        2 bytes
  7384 ;; Hardware stack levels used: 1
  7385 ;; Hardware stack levels required when called: 2
  7386 ;; This function calls:
  7387 ;;		_SPI_CS_HIGH
  7388 ;;		_SPI_CS_LOW
  7389 ;;		_SPI_DC_HIGH
  7390 ;;		_SPI_DC_LOW
  7391 ;;		_spiWrite
  7392 ;; This function is called by:
  7393 ;;		_setDisplayFillingMode
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397  0000'                    _sendCommand_and_8bit_Data:	
  7398                           ;psect for function _sendCommand_and_8bit_Data
  7399                           
  7400                           
  7401                           ;incstack = 0
  7402                           ; Regs used in _sendCommand_and_8bit_Data: [wreg+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  7403                           ;sendCommand_and_8bit_Data@commandByte stored from wreg
  7404  0000' 0084'              	movwf	sendCommand_and_8bit_Data@commandByte
  7405                           
  7406                           ;main.c: 312:   SPI_CS_LOW();
  7407  0001' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  7408                           
  7409                           ;main.c: 314:   SPI_DC_LOW();
  7410  0004' 118A' 2000' 118A'  	fcall	_SPI_DC_LOW
  7411                           
  7412                           ;main.c: 315:   spiWrite(commandByte);
  7413  0007' 0804'              	movf	sendCommand_and_8bit_Data@commandByte,w
  7414  0008' 118A' 2000' 118A'  	fcall	_spiWrite
  7415                           
  7416                           ;main.c: 316:   SPI_DC_HIGH();
  7417  000B' 118A' 2000' 118A'  	fcall	_SPI_DC_HIGH
  7418                           
  7419                           ;main.c: 318:   spiWrite(first_byte);
  7420  000E' 0803'              	movf	sendCommand_and_8bit_Data@first_byte,w
  7421  000F' 118A' 2000' 118A'  	fcall	_spiWrite
  7422                           
  7423                           ;main.c: 320:   SPI_CS_HIGH();
  7424  0012' 118A' 2000'        	fcall	_SPI_CS_HIGH
  7425  0014' 0008               	return
  7426  0015'                    __end_of_sendCommand_and_8bit_Data:
  7427                           
  7428                           	psect	text26
  7429  0000'                    __ptext26:	
  7430 ;; *************** function _setAllDisplayPixels_Hard *****************
  7431 ;; Defined at:
  7432 ;;		line 653 in file "main.c"
  7433 ;; Parameters:    Size  Location     Type
  7434 ;;  color           2   10[COMMON] unsigned int 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;  y               2    2[BANK0 ] int 
  7437 ;;  x               2    0[BANK0 ] int 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  1    wreg      void 
  7440 ;; Registers used:
  7441 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 300/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7447 ;;      Params:         2       0       0       0
  7448 ;;      Locals:         0       4       0       0
  7449 ;;      Temps:          0       0       0       0
  7450 ;;      Totals:         2       4       0       0
  7451 ;;Total ram usage:        6 bytes
  7452 ;; Hardware stack levels used: 1
  7453 ;; Hardware stack levels required when called: 3
  7454 ;; This function calls:
  7455 ;;		_SPI_CS_HIGH
  7456 ;;		_SPI_CS_LOW
  7457 ;;		_SPI_WRITE16_Hard
  7458 ;;		_my_setAddrWindow_Hard
  7459 ;; This function is called by:
  7460 ;;		_main
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464  0000'                    _setAllDisplayPixels_Hard:	
  7465                           ;psect for function _setAllDisplayPixels_Hard
  7466                           
  7467                           
  7468                           ;main.c: 654:     SPI_CS_LOW();
  7469                           
  7470                           ;incstack = 0
  7471                           ; Regs used in _setAllDisplayPixels_Hard: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7472  0000' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  7473                           
  7474                           ;main.c: 656:     my_setAddrWindow_Hard(0, 0, 127, 95);
  7475  0003' 3000               	movlw	0
  7476  0004' 0082'              	movwf	my_setAddrWindow_Hard@x_start
  7477  0005' 0083'              	movwf	my_setAddrWindow_Hard@x_start+1
  7478  0006' 3000               	movlw	0
  7479  0007' 0084'              	movwf	my_setAddrWindow_Hard@y_start
  7480  0008' 0085'              	movwf	my_setAddrWindow_Hard@y_start+1
  7481  0009' 307F               	movlw	127
  7482  000A' 0086'              	movwf	my_setAddrWindow_Hard@x_finish
  7483  000B' 3000               	movlw	0
  7484  000C' 0087'              	movwf	my_setAddrWindow_Hard@x_finish+1
  7485  000D' 305F               	movlw	95
  7486  000E' 0088'              	movwf	my_setAddrWindow_Hard@y_finish
  7487  000F' 3000               	movlw	0
  7488  0010' 0089'              	movwf	my_setAddrWindow_Hard@y_finish+1
  7489  0011' 118A' 2000' 118A'  	fcall	_my_setAddrWindow_Hard
  7490                           
  7491                           ;main.c: 660:     for(y = 0; y < 96; y++) {
  7492  0014' 0182'              	clrf	setAllDisplayPixels_Hard@y
  7493  0015' 0183'              	clrf	setAllDisplayPixels_Hard@y+1
  7494  0016'                    l3265:
  7495                           
  7496                           ;main.c: 661:         for(x = 0; x < 128; x++) {
  7497  0016' 1283               	bcf	3,5	;RP0=0, select bank0
  7498  0017' 1303               	bcf	3,6	;RP1=0, select bank0
  7499  0018' 0180'              	clrf	setAllDisplayPixels_Hard@x
  7500  0019' 0181'              	clrf	setAllDisplayPixels_Hard@x+1
  7501  001A'                    l3271:
  7502                           
  7503                           ;main.c: 662:             SPI_WRITE16_Hard(color);
  7504  001A' 080B'              	movf	setAllDisplayPixels_Hard@color+1,w
  7505  001B' 0082'              	movwf	SPI_WRITE16_Hard@w+1
  7506  001C' 080A'              	movf	setAllDisplayPixels_Hard@color,w
  7507  001D' 0081'              	movwf	SPI_WRITE16_Hard@w
  7508  001E' 118A' 2000' 118A'  	fcall	_SPI_WRITE16_Hard
  7509                           
  7510                           ;main.c: 663:         }
  7511  0021' 3001               	movlw	1
  7512  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  7513  0023' 0780'              	addwf	setAllDisplayPixels_Hard@x,f
  7514  0024' 1803               	skipnc
  7515  0025' 0A81'              	incf	setAllDisplayPixels_Hard@x+1,f
  7516  0026' 3000               	movlw	0
  7517  0027' 0781'              	addwf	setAllDisplayPixels_Hard@x+1,f
  7518  0028' 0801'              	movf	setAllDisplayPixels_Hard@x+1,w
  7519  0029' 3A80               	xorlw	128
  7520  002A' 00FF               	movwf	127
  7521  002B' 3080               	movlw	128
  7522  002C' 027F               	subwf	127,w
  7523  002D' 1D03               	skipz
  7524  002E' 2800'              	goto	u4165
  7525  002F' 3080               	movlw	128
  7526  0030' 0200'              	subwf	setAllDisplayPixels_Hard@x,w
  7527  0031'                    u4165:
  7528  0031' 1C03               	skipc
  7529  0032' 2800'              	goto	l3271
  7530                           
  7531                           ;main.c: 664:     }
  7532  0033' 3001               	movlw	1
  7533  0034' 1283               	bcf	3,5	;RP0=0, select bank0
  7534  0035' 1303               	bcf	3,6	;RP1=0, select bank0
  7535  0036' 0782'              	addwf	setAllDisplayPixels_Hard@y,f
  7536  0037' 1803               	skipnc
  7537  0038' 0A83'              	incf	setAllDisplayPixels_Hard@y+1,f
  7538  0039' 3000               	movlw	0
  7539  003A' 0783'              	addwf	setAllDisplayPixels_Hard@y+1,f
  7540  003B' 0803'              	movf	setAllDisplayPixels_Hard@y+1,w
  7541  003C' 3A80               	xorlw	128
  7542  003D' 00FF               	movwf	127
  7543  003E' 3080               	movlw	128
  7544  003F' 027F               	subwf	127,w
  7545  0040' 1D03               	skipz
  7546  0041' 2800'              	goto	u4175
  7547  0042' 3060               	movlw	96
  7548  0043' 0202'              	subwf	setAllDisplayPixels_Hard@y,w
  7549  0044'                    u4175:
  7550  0044' 1C03               	skipc
  7551  0045' 2800'              	goto	l3265
  7552                           
  7553                           ;main.c: 666:     SPI_CS_HIGH();
  7554  0046' 118A' 2000'        	fcall	_SPI_CS_HIGH
  7555  0048' 0008               	return
  7556  0049'                    __end_of_setAllDisplayPixels_Hard:
  7557                           
  7558                           	psect	text27
  7559  0000'                    __ptext27:	
  7560 ;; *************** function _sendCommand_Hard *****************
  7561 ;; Defined at:
  7562 ;;		line 605 in file "main.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;  commandByte     1    wreg     unsigned char 
  7565 ;; Auto vars:     Size  Location     Type
  7566 ;;  commandByte     1    1[COMMON] unsigned char 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  1    wreg      void 
  7569 ;; Registers used:
  7570 ;;		wreg, status,2, status,0, pclath, cstack
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 300/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7576 ;;      Params:         0       0       0       0
  7577 ;;      Locals:         1       0       0       0
  7578 ;;      Temps:          0       0       0       0
  7579 ;;      Totals:         1       0       0       0
  7580 ;;Total ram usage:        1 bytes
  7581 ;; Hardware stack levels used: 1
  7582 ;; Hardware stack levels required when called: 1
  7583 ;; This function calls:
  7584 ;;		_SPI_CS_HIGH
  7585 ;;		_SPI_CS_LOW
  7586 ;;		_SPI_DC_HIGH
  7587 ;;		_SPI_DC_LOW
  7588 ;;		_spi_send_recv
  7589 ;; This function is called by:
  7590 ;;		_main
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594  0000'                    _sendCommand_Hard:	
  7595                           ;psect for function _sendCommand_Hard
  7596                           
  7597                           
  7598                           ;incstack = 0
  7599                           ; Regs used in _sendCommand_Hard: [wreg+status,2+status,0+pclath+cstack]
  7600                           ;sendCommand_Hard@commandByte stored from wreg
  7601  0000' 0081'              	movwf	sendCommand_Hard@commandByte
  7602                           
  7603                           ;main.c: 607:   SPI_CS_LOW();
  7604  0001' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  7605                           
  7606                           ;main.c: 609:   SPI_DC_LOW();
  7607  0004' 118A' 2000' 118A'  	fcall	_SPI_DC_LOW
  7608                           
  7609                           ;main.c: 610:   spi_send_recv(commandByte);
  7610  0007' 0801'              	movf	sendCommand_Hard@commandByte,w
  7611  0008' 118A' 2000' 118A'  	fcall	_spi_send_recv
  7612                           
  7613                           ;main.c: 611:   SPI_DC_HIGH();
  7614  000B' 118A' 2000' 118A'  	fcall	_SPI_DC_HIGH
  7615                           
  7616                           ;main.c: 613:   SPI_CS_HIGH();
  7617  000E' 118A' 2000'        	fcall	_SPI_CS_HIGH
  7618  0010' 0008               	return
  7619  0011'                    __end_of_sendCommand_Hard:
  7620                           
  7621                           	psect	text28
  7622  0000'                    __ptext28:	
  7623 ;; *************** function _sendCommand *****************
  7624 ;; Defined at:
  7625 ;;		line 296 in file "main.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  commandByte     1    wreg     unsigned char 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  commandByte     1    3[COMMON] unsigned char 
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  1    wreg      void 
  7632 ;; Registers used:
  7633 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7634 ;; Tracked objects:
  7635 ;;		On entry : 300/0
  7636 ;;		On exit  : 300/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7639 ;;      Params:         0       0       0       0
  7640 ;;      Locals:         1       0       0       0
  7641 ;;      Temps:          0       0       0       0
  7642 ;;      Totals:         1       0       0       0
  7643 ;;Total ram usage:        1 bytes
  7644 ;; Hardware stack levels used: 1
  7645 ;; Hardware stack levels required when called: 2
  7646 ;; This function calls:
  7647 ;;		_SPI_CS_HIGH
  7648 ;;		_SPI_CS_LOW
  7649 ;;		_SPI_DC_HIGH
  7650 ;;		_SPI_DC_LOW
  7651 ;;		_spiWrite
  7652 ;; This function is called by:
  7653 ;;		_main
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657  0000'                    _sendCommand:	
  7658                           ;psect for function _sendCommand
  7659                           
  7660                           
  7661                           ;incstack = 0
  7662                           ; Regs used in _sendCommand: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7663                           ;sendCommand@commandByte stored from wreg
  7664  0000' 0083'              	movwf	sendCommand@commandByte
  7665                           
  7666                           ;main.c: 298:   SPI_CS_LOW();
  7667  0001' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  7668                           
  7669                           ;main.c: 300:   SPI_DC_LOW();
  7670  0004' 118A' 2000' 118A'  	fcall	_SPI_DC_LOW
  7671                           
  7672                           ;main.c: 301:   spiWrite(commandByte);
  7673  0007' 0803'              	movf	sendCommand@commandByte,w
  7674  0008' 118A' 2000' 118A'  	fcall	_spiWrite
  7675                           
  7676                           ;main.c: 302:   SPI_DC_HIGH();
  7677  000B' 118A' 2000' 118A'  	fcall	_SPI_DC_HIGH
  7678                           
  7679                           ;main.c: 304:   SPI_CS_HIGH();
  7680  000E' 118A' 2000'        	fcall	_SPI_CS_HIGH
  7681  0010' 0008               	return
  7682  0011'                    __end_of_sendCommand:
  7683                           
  7684                           	psect	text29
  7685  0000'                    __ptext29:	
  7686 ;; *************** function _spiWrite *****************
  7687 ;; Defined at:
  7688 ;;		line 358 in file "main.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  b               1    wreg     unsigned char 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  b               1    0[COMMON] unsigned char 
  7693 ;;  bit             2    1[COMMON] int 
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  1    wreg      void 
  7696 ;; Registers used:
  7697 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7698 ;; Tracked objects:
  7699 ;;		On entry : 300/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7703 ;;      Params:         0       0       0       0
  7704 ;;      Locals:         3       0       0       0
  7705 ;;      Temps:          0       0       0       0
  7706 ;;      Totals:         3       0       0       0
  7707 ;;Total ram usage:        3 bytes
  7708 ;; Hardware stack levels used: 1
  7709 ;; Hardware stack levels required when called: 1
  7710 ;; This function calls:
  7711 ;;		_SPI_MOSI_HIGH
  7712 ;;		_SPI_MOSI_LOW
  7713 ;;		_SPI_SCK_HIGH
  7714 ;;		_SPI_SCK_LOW
  7715 ;; This function is called by:
  7716 ;;		_sendCommand
  7717 ;;		_sendCommand_and_8bit_Data
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721  0000'                    _spiWrite:	
  7722                           ;psect for function _spiWrite
  7723                           
  7724                           
  7725                           ;incstack = 0
  7726                           ; Regs used in _spiWrite: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7727                           ;spiWrite@b stored from wreg
  7728  0000' 0080'              	movwf	spiWrite@b
  7729                           
  7730                           ;main.c: 359:     int bit = 0;
  7731  0001' 0181'              	clrf	spiWrite@bit
  7732  0002' 0182'              	clrf	spiWrite@bit+1
  7733                           
  7734                           ;main.c: 361:     for (bit = 0; bit < 8; bit++) {
  7735  0003' 0181'              	clrf	spiWrite@bit
  7736  0004' 0182'              	clrf	spiWrite@bit+1
  7737  0005'                    l104:
  7738                           
  7739                           ;main.c: 362:       if (b & 0x80) {
  7740  0005' 1F80'              	btfss	spiWrite@b,7
  7741  0006' 2800'              	goto	l3135
  7742                           
  7743                           ;main.c: 363:         SPI_MOSI_HIGH();
  7744  0007' 118A' 2000' 118A'  	fcall	_SPI_MOSI_HIGH
  7745                           
  7746                           ;main.c: 364:       } else {
  7747  000A' 2800'              	goto	l107
  7748  000B'                    l3135:
  7749                           
  7750                           ;main.c: 365:         SPI_MOSI_LOW();
  7751  000B' 118A' 2000' 118A'  	fcall	_SPI_MOSI_LOW
  7752  000E'                    l107:	
  7753                           ;main.c: 366:       }
  7754                           
  7755                           
  7756                           ;main.c: 367:       SPI_SCK_HIGH();
  7757  000E' 118A' 2000' 118A'  	fcall	_SPI_SCK_HIGH
  7758                           
  7759                           ;main.c: 368:       b <<= 1;
  7760  0011' 1003               	clrc
  7761  0012' 0D80'              	rlf	spiWrite@b,f
  7762                           
  7763                           ;main.c: 369:       SPI_SCK_LOW();
  7764  0013' 118A' 2000' 118A'  	fcall	_SPI_SCK_LOW
  7765                           
  7766                           ;main.c: 370:     }
  7767  0016' 3001               	movlw	1
  7768  0017' 0781'              	addwf	spiWrite@bit,f
  7769  0018' 1803               	skipnc
  7770  0019' 0A82'              	incf	spiWrite@bit+1,f
  7771  001A' 3000               	movlw	0
  7772  001B' 0782'              	addwf	spiWrite@bit+1,f
  7773  001C' 0802'              	movf	spiWrite@bit+1,w
  7774  001D' 3A80               	xorlw	128
  7775  001E' 00FF               	movwf	127
  7776  001F' 3080               	movlw	128
  7777  0020' 027F               	subwf	127,w
  7778  0021' 1D03               	skipz
  7779  0022' 2800'              	goto	u4115
  7780  0023' 3008               	movlw	8
  7781  0024' 0201'              	subwf	spiWrite@bit,w
  7782  0025'                    u4115:
  7783  0025' 1803               	btfsc	3,0
  7784  0026' 0008               	return
  7785  0027' 2800'              	goto	l104
  7786  0028'                    __end_of_spiWrite:
  7787                           
  7788                           	psect	text30
  7789  0000'                    __ptext30:	
  7790 ;; *************** function _SPI_SCK_LOW *****************
  7791 ;; Defined at:
  7792 ;;		line 254 in file "main.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;		None
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;		None
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  1    wreg      void 
  7799 ;; Registers used:
  7800 ;;		None
  7801 ;; Tracked objects:
  7802 ;;		On entry : 300/0
  7803 ;;		On exit  : 300/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7806 ;;      Params:         0       0       0       0
  7807 ;;      Locals:         0       0       0       0
  7808 ;;      Temps:          0       0       0       0
  7809 ;;      Totals:         0       0       0       0
  7810 ;;Total ram usage:        0 bytes
  7811 ;; Hardware stack levels used: 1
  7812 ;; This function calls:
  7813 ;;		Nothing
  7814 ;; This function is called by:
  7815 ;;		_spiWrite
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819  0000'                    _SPI_SCK_LOW:	
  7820                           ;psect for function _SPI_SCK_LOW
  7821                           
  7822                           
  7823                           ;main.c: 255:     RC6 = 0;
  7824                           
  7825                           ;incstack = 0
  7826                           ; Regs used in _SPI_SCK_LOW: []
  7827  0000' 1307               	bcf	7,6	;volatile
  7828  0001' 0008               	return
  7829  0002'                    __end_of_SPI_SCK_LOW:
  7830                           
  7831                           	psect	text31
  7832  0000'                    __ptext31:	
  7833 ;; *************** function _SPI_SCK_HIGH *****************
  7834 ;; Defined at:
  7835 ;;		line 257 in file "main.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;		None
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;		None
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  1    wreg      void 
  7842 ;; Registers used:
  7843 ;;		None
  7844 ;; Tracked objects:
  7845 ;;		On entry : 300/0
  7846 ;;		On exit  : 300/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7849 ;;      Params:         0       0       0       0
  7850 ;;      Locals:         0       0       0       0
  7851 ;;      Temps:          0       0       0       0
  7852 ;;      Totals:         0       0       0       0
  7853 ;;Total ram usage:        0 bytes
  7854 ;; Hardware stack levels used: 1
  7855 ;; This function calls:
  7856 ;;		Nothing
  7857 ;; This function is called by:
  7858 ;;		_spiWrite
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862  0000'                    _SPI_SCK_HIGH:	
  7863                           ;psect for function _SPI_SCK_HIGH
  7864                           
  7865                           
  7866                           ;main.c: 258:     RC6 = 1;
  7867                           
  7868                           ;incstack = 0
  7869                           ; Regs used in _SPI_SCK_HIGH: []
  7870  0000' 1707               	bsf	7,6	;volatile
  7871  0001' 0008               	return
  7872  0002'                    __end_of_SPI_SCK_HIGH:
  7873                           
  7874                           	psect	text32
  7875  0000'                    __ptext32:	
  7876 ;; *************** function _SPI_MOSI_LOW *****************
  7877 ;; Defined at:
  7878 ;;		line 247 in file "main.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;		None
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;		None
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  1    wreg      void 
  7885 ;; Registers used:
  7886 ;;		None
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 300/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7892 ;;      Params:         0       0       0       0
  7893 ;;      Locals:         0       0       0       0
  7894 ;;      Temps:          0       0       0       0
  7895 ;;      Totals:         0       0       0       0
  7896 ;;Total ram usage:        0 bytes
  7897 ;; Hardware stack levels used: 1
  7898 ;; This function calls:
  7899 ;;		Nothing
  7900 ;; This function is called by:
  7901 ;;		_spiWrite
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905  0000'                    _SPI_MOSI_LOW:	
  7906                           ;psect for function _SPI_MOSI_LOW
  7907                           
  7908                           
  7909                           ;main.c: 248:     RC4 = 0;
  7910                           
  7911                           ;incstack = 0
  7912                           ; Regs used in _SPI_MOSI_LOW: []
  7913  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7914  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7915  0002' 1207               	bcf	7,4	;volatile
  7916  0003' 0008               	return
  7917  0004'                    __end_of_SPI_MOSI_LOW:
  7918                           
  7919                           	psect	text33
  7920  0000'                    __ptext33:	
  7921 ;; *************** function _SPI_MOSI_HIGH *****************
  7922 ;; Defined at:
  7923 ;;		line 250 in file "main.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;		None
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;		None
  7928 ;; Return value:  Size  Location     Type
  7929 ;;                  1    wreg      void 
  7930 ;; Registers used:
  7931 ;;		None
  7932 ;; Tracked objects:
  7933 ;;		On entry : 0/0
  7934 ;;		On exit  : 300/0
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7937 ;;      Params:         0       0       0       0
  7938 ;;      Locals:         0       0       0       0
  7939 ;;      Temps:          0       0       0       0
  7940 ;;      Totals:         0       0       0       0
  7941 ;;Total ram usage:        0 bytes
  7942 ;; Hardware stack levels used: 1
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		_spiWrite
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950  0000'                    _SPI_MOSI_HIGH:	
  7951                           ;psect for function _SPI_MOSI_HIGH
  7952                           
  7953                           
  7954                           ;main.c: 251:     RC4 = 1;
  7955                           
  7956                           ;incstack = 0
  7957                           ; Regs used in _SPI_MOSI_HIGH: []
  7958  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7959  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7960  0002' 1607               	bsf	7,4	;volatile
  7961  0003' 0008               	return
  7962  0004'                    __end_of_SPI_MOSI_HIGH:
  7963                           
  7964                           	psect	text34
  7965  0000'                    __ptext34:	
  7966 ;; *************** function _init_Softwear_SPI *****************
  7967 ;; Defined at:
  7968 ;;		line 265 in file "main.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      void 
  7975 ;; Registers used:
  7976 ;;		wreg
  7977 ;; Tracked objects:
  7978 ;;		On entry : B00/0
  7979 ;;		On exit  : 300/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7982 ;;      Params:         0       0       0       0
  7983 ;;      Locals:         0       0       0       0
  7984 ;;      Temps:          2       0       0       0
  7985 ;;      Totals:         2       0       0       0
  7986 ;;Total ram usage:        2 bytes
  7987 ;; Hardware stack levels used: 1
  7988 ;; This function calls:
  7989 ;;		Nothing
  7990 ;; This function is called by:
  7991 ;;		_main
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995  0000'                    _init_Softwear_SPI:	
  7996                           ;psect for function _init_Softwear_SPI
  7997                           
  7998                           
  7999                           ;main.c: 266:     TRISB0 = 0;
  8000                           
  8001                           ;incstack = 0
  8002                           ; Regs used in _init_Softwear_SPI: [wreg]
  8003  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  8004  0001' 1006               	bcf	6,0	;volatile
  8005                           
  8006                           ;main.c: 267:     RB0 = 1;
  8007  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  8008  0003' 1406               	bsf	6,0	;volatile
  8009                           
  8010                           ;main.c: 269:     TRISB2 = 0;
  8011  0004' 1683               	bsf	3,5	;RP0=1, select bank1
  8012  0005' 1106               	bcf	6,2	;volatile
  8013                           
  8014                           ;main.c: 270:     RB2 = 1;
  8015  0006' 1283               	bcf	3,5	;RP0=0, select bank0
  8016  0007' 1506               	bsf	6,2	;volatile
  8017                           
  8018                           ;main.c: 272:     TRISC6 = 0;
  8019  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  8020  0009' 1307               	bcf	7,6	;volatile
  8021                           
  8022                           ;main.c: 273:     RC6 = 0;
  8023  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  8024  000B' 1307               	bcf	7,6	;volatile
  8025                           
  8026                           ;main.c: 275:     TRISC4 = 0;
  8027  000C' 1683               	bsf	3,5	;RP0=1, select bank1
  8028  000D' 1207               	bcf	7,4	;volatile
  8029                           
  8030                           ;main.c: 276:     RC4 = 0;
  8031  000E' 1283               	bcf	3,5	;RP0=0, select bank0
  8032  000F' 1207               	bcf	7,4	;volatile
  8033                           
  8034                           ;main.c: 279:     TRISB1 = 0;
  8035  0010' 1683               	bsf	3,5	;RP0=1, select bank1
  8036  0011' 1086               	bcf	6,1	;volatile
  8037                           
  8038                           ;main.c: 280:     RB1 = 1;
  8039  0012' 1283               	bcf	3,5	;RP0=0, select bank0
  8040  0013' 1486               	bsf	6,1	;volatile
  8041                           
  8042                           ;main.c: 281:      _delay((unsigned long)((5)*(20000000/4000.0)));
  8043  0014' 3021               	movlw	33
  8044  0015' 0081'              	movwf	??_init_Softwear_SPI+1
  8045  0016' 3076               	movlw	118
  8046  0017' 0080'              	movwf	??_init_Softwear_SPI
  8047  0018'                    u6267:
  8048  0018' 0B80'              	decfsz	??_init_Softwear_SPI,f
  8049  0019' 2800'              	goto	u6267
  8050  001A' 0B81'              	decfsz	??_init_Softwear_SPI+1,f
  8051  001B' 2800'              	goto	u6267
  8052  001C' 0000               	nop
  8053                           
  8054                           ;main.c: 283:     TRISB4 = 0;
  8055  001D' 1683               	bsf	3,5	;RP0=1, select bank1
  8056  001E' 1303               	bcf	3,6	;RP1=0, select bank1
  8057  001F' 1206               	bcf	6,4	;volatile
  8058                           
  8059                           ;main.c: 284:     RB4 = 1;
  8060  0020' 1283               	bcf	3,5	;RP0=0, select bank0
  8061  0021' 1606               	bsf	6,4	;volatile
  8062                           
  8063                           ;main.c: 285:     _delay((unsigned long)((1)*(20000000/4000.0)));
  8064  0022' 3007               	movlw	7
  8065  0023' 0081'              	movwf	??_init_Softwear_SPI+1
  8066  0024' 307D               	movlw	125
  8067  0025' 0080'              	movwf	??_init_Softwear_SPI
  8068  0026'                    u6277:
  8069  0026' 0B80'              	decfsz	??_init_Softwear_SPI,f
  8070  0027' 2800'              	goto	u6277
  8071  0028' 0B81'              	decfsz	??_init_Softwear_SPI+1,f
  8072  0029' 2800'              	goto	u6277
  8073                           
  8074                           ;main.c: 288:     RB1 = 0;
  8075  002A' 1283               	bcf	3,5	;RP0=0, select bank0
  8076  002B' 1303               	bcf	3,6	;RP1=0, select bank0
  8077  002C' 1086               	bcf	6,1	;volatile
  8078                           
  8079                           ;main.c: 289:     _delay((unsigned long)((2)*(20000000/4000000.0)));
  8080  002D' 3003               	movlw	3
  8081  002E' 0080'              	movwf	??_init_Softwear_SPI
  8082  002F'                    u6287:
  8083  002F' 0B80'              	decfsz	??_init_Softwear_SPI,f
  8084  0030' 2800'              	goto	u6287
  8085                           
  8086                           ;main.c: 290:     RB1 = 1;
  8087  0031' 1283               	bcf	3,5	;RP0=0, select bank0
  8088  0032' 1303               	bcf	3,6	;RP1=0, select bank0
  8089  0033' 1486               	bsf	6,1	;volatile
  8090  0034' 0008               	return
  8091  0035'                    __end_of_init_Softwear_SPI:
  8092                           
  8093                           	psect	text35
  8094  0000'                    __ptext35:	
  8095 ;; *************** function _init_Hardwear_SPI *****************
  8096 ;; Defined at:
  8097 ;;		line 580 in file "main.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;		None
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;		None
  8102 ;; Return value:  Size  Location     Type
  8103 ;;                  1    wreg      void 
  8104 ;; Registers used:
  8105 ;;		None
  8106 ;; Tracked objects:
  8107 ;;		On entry : 300/0
  8108 ;;		On exit  : 300/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8111 ;;      Params:         0       0       0       0
  8112 ;;      Locals:         0       0       0       0
  8113 ;;      Temps:          0       0       0       0
  8114 ;;      Totals:         0       0       0       0
  8115 ;;Total ram usage:        0 bytes
  8116 ;; Hardware stack levels used: 1
  8117 ;; This function calls:
  8118 ;;		Nothing
  8119 ;; This function is called by:
  8120 ;;		_main
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124  0000'                    _init_Hardwear_SPI:	
  8125                           ;psect for function _init_Hardwear_SPI
  8126                           
  8127                           
  8128                           ;main.c: 583:     TRISC7 = 1;
  8129                           
  8130                           ;incstack = 0
  8131                           ; Regs used in _init_Hardwear_SPI: []
  8132  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  8133  0001' 1787               	bsf	7,7	;volatile
  8134                           
  8135                           ;main.c: 584:     RC7 = 0;
  8136  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  8137  0003' 1387               	bcf	7,7	;volatile
  8138                           
  8139                           ;main.c: 588:     SSPCONbits.SSPEN = 0;
  8140  0004' 1294               	bcf	20,5	;volatile
  8141                           
  8142                           ;main.c: 599:     SSPSTATbits.CKE = 1;
  8143  0005' 1683               	bsf	3,5	;RP0=1, select bank1
  8144  0006' 1714               	bsf	20,6	;volatile
  8145                           
  8146                           ;main.c: 600:     SSPSTATbits.SMP = 0;
  8147  0007' 1394               	bcf	20,7	;volatile
  8148                           
  8149                           ;main.c: 602:     SSPCONbits.SSPEN = 1;
  8150  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  8151  0009' 1694               	bsf	20,5	;volatile
  8152  000A' 0008               	return
  8153  000B'                    __end_of_init_Hardwear_SPI:
  8154                           
  8155                           	psect	text36
  8156  0000'                    __ptext36:	
  8157 ;; *************** function _drawFastHLine_Hard *****************
  8158 ;; Defined at:
  8159 ;;		line 668 in file "main.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;  start_x         1    wreg     char 
  8162 ;;  length          1   10[COMMON] char 
  8163 ;;  in_HLine_y      1   11[COMMON] char 
  8164 ;;  color           2   12[COMMON] unsigned int 
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;  start_x         1    6[BANK0 ] char 
  8167 ;;  x_colum_hori    2    4[BANK0 ] int 
  8168 ;;  x2              1    3[BANK0 ] unsigned char 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  1    wreg      void 
  8171 ;; Registers used:
  8172 ;;		wreg, status,2, status,0, pclath, cstack
  8173 ;; Tracked objects:
  8174 ;;		On entry : 300/200
  8175 ;;		On exit  : 300/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8178 ;;      Params:         4       0       0       0
  8179 ;;      Locals:         0       4       0       0
  8180 ;;      Temps:          0       3       0       0
  8181 ;;      Totals:         4       7       0       0
  8182 ;;Total ram usage:       11 bytes
  8183 ;; Hardware stack levels used: 1
  8184 ;; Hardware stack levels required when called: 3
  8185 ;; This function calls:
  8186 ;;		_SPI_CS_HIGH
  8187 ;;		_SPI_CS_LOW
  8188 ;;		_SPI_WRITE16_Hard
  8189 ;;		_my_setAddrWindow_Hard
  8190 ;; This function is called by:
  8191 ;;		_main
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195  0000'                    _drawFastHLine_Hard:	
  8196                           ;psect for function _drawFastHLine_Hard
  8197                           
  8198                           
  8199                           ;incstack = 0
  8200                           ; Regs used in _drawFastHLine_Hard: [wreg+status,2+status,0+pclath+cstack]
  8201                           ;drawFastHLine_Hard@start_x stored from wreg
  8202  0000' 1303               	bcf	3,6	;RP1=0, select bank0
  8203  0001' 0086'              	movwf	drawFastHLine_Hard@start_x
  8204                           
  8205                           ;main.c: 669:     SPI_CS_LOW();
  8206  0002' 118A' 2000' 118A'  	fcall	_SPI_CS_LOW
  8207                           
  8208                           ;main.c: 671:     uint8_t x2 = start_x + length - 1;
  8209  0005' 080A'              	movf	drawFastHLine_Hard@length,w
  8210  0006' 0706'              	addwf	drawFastHLine_Hard@start_x,w
  8211  0007' 3EFF               	addlw	255
  8212  0008' 0083'              	movwf	drawFastHLine_Hard@x2
  8213                           
  8214                           ;main.c: 672:     my_setAddrWindow_Hard(start_x, in_HLine_y, x2, in_HLine_y);
  8215  0009' 0806'              	movf	drawFastHLine_Hard@start_x,w
  8216  000A' 0082'              	movwf	my_setAddrWindow_Hard@x_start
  8217  000B' 0183'              	clrf	my_setAddrWindow_Hard@x_start+1
  8218  000C' 1B82'              	btfsc	my_setAddrWindow_Hard@x_start,7
  8219  000D' 0383'              	decf	my_setAddrWindow_Hard@x_start+1,f
  8220  000E' 080B'              	movf	drawFastHLine_Hard@in_HLine_y,w
  8221  000F' 0084'              	movwf	my_setAddrWindow_Hard@y_start
  8222  0010' 0185'              	clrf	my_setAddrWindow_Hard@y_start+1
  8223  0011' 1B84'              	btfsc	my_setAddrWindow_Hard@y_start,7
  8224  0012' 0385'              	decf	my_setAddrWindow_Hard@y_start+1,f
  8225  0013' 0803'              	movf	drawFastHLine_Hard@x2,w
  8226  0014' 0080'              	movwf	??_drawFastHLine_Hard
  8227  0015' 0181'              	clrf	??_drawFastHLine_Hard+1
  8228  0016' 0800'              	movf	??_drawFastHLine_Hard,w
  8229  0017' 0086'              	movwf	my_setAddrWindow_Hard@x_finish
  8230  0018' 0801'              	movf	??_drawFastHLine_Hard+1,w
  8231  0019' 0087'              	movwf	my_setAddrWindow_Hard@x_finish+1
  8232  001A' 080B'              	movf	drawFastHLine_Hard@in_HLine_y,w
  8233  001B' 0088'              	movwf	my_setAddrWindow_Hard@y_finish
  8234  001C' 0189'              	clrf	my_setAddrWindow_Hard@y_finish+1
  8235  001D' 1B88'              	btfsc	my_setAddrWindow_Hard@y_finish,7
  8236  001E' 0389'              	decf	my_setAddrWindow_Hard@y_finish+1,f
  8237  001F' 118A' 2000' 118A'  	fcall	_my_setAddrWindow_Hard
  8238                           
  8239                           ;main.c: 675:     for(x_colum_horizontal = 0; x_colum_horizontal < length; x_colum_horiz
      +                          ontal++) {
  8240  0022' 0184'              	clrf	drawFastHLine_Hard@x_colum_horizontal
  8241  0023' 0185'              	clrf	drawFastHLine_Hard@x_colum_horizontal+1
  8242  0024'                    l3297:
  8243  0024' 080A'              	movf	drawFastHLine_Hard@length,w
  8244  0025' 0080'              	movwf	??_drawFastHLine_Hard
  8245  0026' 0181'              	clrf	??_drawFastHLine_Hard+1
  8246  0027' 1B80'              	btfsc	??_drawFastHLine_Hard,7
  8247  0028' 0381'              	decf	??_drawFastHLine_Hard+1,f
  8248  0029' 0805'              	movf	drawFastHLine_Hard@x_colum_horizontal+1,w
  8249  002A' 3A80               	xorlw	128
  8250  002B' 0082'              	movwf	??_drawFastHLine_Hard+2
  8251  002C' 0801'              	movf	??_drawFastHLine_Hard+1,w
  8252  002D' 3A80               	xorlw	128
  8253  002E' 0202'              	subwf	??_drawFastHLine_Hard+2,w
  8254  002F' 1D03               	skipz
  8255  0030' 2800'              	goto	u4185
  8256  0031' 0800'              	movf	??_drawFastHLine_Hard,w
  8257  0032' 0204'              	subwf	drawFastHLine_Hard@x_colum_horizontal,w
  8258  0033'                    u4185:
  8259  0033' 1803               	btfsc	3,0
  8260  0034' 2800'              	goto	l3299
  8261                           
  8262                           ;main.c: 676:         SPI_WRITE16_Hard(color);
  8263  0035' 080D'              	movf	drawFastHLine_Hard@color+1,w
  8264  0036' 0082'              	movwf	SPI_WRITE16_Hard@w+1
  8265  0037' 080C'              	movf	drawFastHLine_Hard@color,w
  8266  0038' 0081'              	movwf	SPI_WRITE16_Hard@w
  8267  0039' 118A' 2000' 118A'  	fcall	_SPI_WRITE16_Hard
  8268                           
  8269                           ;main.c: 677:     }
  8270  003C' 3001               	movlw	1
  8271  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  8272  003E' 0784'              	addwf	drawFastHLine_Hard@x_colum_horizontal,f
  8273  003F' 1803               	skipnc
  8274  0040' 0A85'              	incf	drawFastHLine_Hard@x_colum_horizontal+1,f
  8275  0041' 3000               	movlw	0
  8276  0042' 0785'              	addwf	drawFastHLine_Hard@x_colum_horizontal+1,f
  8277  0043' 2800'              	goto	l3297
  8278  0044'                    l3299:
  8279                           
  8280                           ;main.c: 679:     SPI_CS_HIGH();
  8281  0044' 118A' 2000'        	fcall	_SPI_CS_HIGH
  8282  0046' 0008               	return
  8283  0047'                    __end_of_drawFastHLine_Hard:
  8284                           
  8285                           	psect	text37
  8286  0000'                    __ptext37:	
  8287 ;; *************** function _my_setAddrWindow_Hard *****************
  8288 ;; Defined at:
  8289 ;;		line 643 in file "main.c"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;  x_start         2    2[COMMON] unsigned int 
  8292 ;;  y_start         2    4[COMMON] unsigned int 
  8293 ;;  x_finish        2    6[COMMON] unsigned int 
  8294 ;;  y_finish        2    8[COMMON] unsigned int 
  8295 ;; Auto vars:     Size  Location     Type
  8296 ;;		None
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  1    wreg      void 
  8299 ;; Registers used:
  8300 ;;		wreg, status,2, status,0, pclath, cstack
  8301 ;; Tracked objects:
  8302 ;;		On entry : 300/0
  8303 ;;		On exit  : 300/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8306 ;;      Params:         8       0       0       0
  8307 ;;      Locals:         0       0       0       0
  8308 ;;      Temps:          0       0       0       0
  8309 ;;      Totals:         8       0       0       0
  8310 ;;Total ram usage:        8 bytes
  8311 ;; Hardware stack levels used: 1
  8312 ;; Hardware stack levels required when called: 2
  8313 ;; This function calls:
  8314 ;;		_spi_send_recv
  8315 ;;		_writeCommand_Hard
  8316 ;; This function is called by:
  8317 ;;		_setAllDisplayPixels_Hard
  8318 ;;		_drawFastHLine_Hard
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322  0000'                    _my_setAddrWindow_Hard:	
  8323                           ;psect for function _my_setAddrWindow_Hard
  8324                           
  8325                           
  8326                           ;main.c: 644:     writeCommand_Hard(0x15);
  8327                           
  8328                           ;incstack = 0
  8329                           ; Regs used in _my_setAddrWindow_Hard: [wreg+status,2+status,0+pclath+cstack]
  8330  0000' 3015               	movlw	21
  8331  0001' 118A' 2000' 118A'  	fcall	_writeCommand_Hard
  8332                           
  8333                           ;main.c: 645:     spi_send_recv(x_start);
  8334  0004' 0802'              	movf	my_setAddrWindow_Hard@x_start,w
  8335  0005' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8336                           
  8337                           ;main.c: 646:     spi_send_recv(x_finish);
  8338  0008' 0806'              	movf	my_setAddrWindow_Hard@x_finish,w
  8339  0009' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8340                           
  8341                           ;main.c: 647:     writeCommand_Hard(0x75);
  8342  000C' 3075               	movlw	117
  8343  000D' 118A' 2000' 118A'  	fcall	_writeCommand_Hard
  8344                           
  8345                           ;main.c: 648:     spi_send_recv(y_start);
  8346  0010' 0804'              	movf	my_setAddrWindow_Hard@y_start,w
  8347  0011' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8348                           
  8349                           ;main.c: 649:     spi_send_recv(y_finish);
  8350  0014' 0808'              	movf	my_setAddrWindow_Hard@y_finish,w
  8351  0015' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8352                           
  8353                           ;main.c: 650:     writeCommand_Hard(0x5C);
  8354  0018' 305C               	movlw	92
  8355  0019' 118A' 2000'        	fcall	_writeCommand_Hard
  8356  001B' 0008               	return
  8357  001C'                    __end_of_my_setAddrWindow_Hard:
  8358                           
  8359                           	psect	text38
  8360  0000'                    __ptext38:	
  8361 ;; *************** function _writeCommand_Hard *****************
  8362 ;; Defined at:
  8363 ;;		line 615 in file "main.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;  cmd             1    wreg     unsigned char 
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  cmd             1    1[COMMON] unsigned char 
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      void 
  8370 ;; Registers used:
  8371 ;;		wreg, status,2, status,0, pclath, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 200/0
  8374 ;;		On exit  : 300/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8377 ;;      Params:         0       0       0       0
  8378 ;;      Locals:         1       0       0       0
  8379 ;;      Temps:          0       0       0       0
  8380 ;;      Totals:         1       0       0       0
  8381 ;;Total ram usage:        1 bytes
  8382 ;; Hardware stack levels used: 1
  8383 ;; Hardware stack levels required when called: 1
  8384 ;; This function calls:
  8385 ;;		_SPI_DC_HIGH
  8386 ;;		_SPI_DC_LOW
  8387 ;;		_spi_send_recv
  8388 ;; This function is called by:
  8389 ;;		_my_setAddrWindow_Hard
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393  0000'                    _writeCommand_Hard:	
  8394                           ;psect for function _writeCommand_Hard
  8395                           
  8396                           
  8397                           ;incstack = 0
  8398                           ; Regs used in _writeCommand_Hard: [wreg+status,2+status,0+pclath+cstack]
  8399                           ;writeCommand_Hard@cmd stored from wreg
  8400  0000' 0081'              	movwf	writeCommand_Hard@cmd
  8401                           
  8402                           ;main.c: 616:   SPI_DC_LOW();
  8403  0001' 118A' 2000' 118A'  	fcall	_SPI_DC_LOW
  8404                           
  8405                           ;main.c: 617:   spi_send_recv(cmd);
  8406  0004' 0801'              	movf	writeCommand_Hard@cmd,w
  8407  0005' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8408                           
  8409                           ;main.c: 618:   SPI_DC_HIGH();
  8410  0008' 118A' 2000'        	fcall	_SPI_DC_HIGH
  8411  000A' 0008               	return
  8412  000B'                    __end_of_writeCommand_Hard:
  8413                           
  8414                           	psect	text39
  8415  0000'                    __ptext39:	
  8416 ;; *************** function _SPI_DC_LOW *****************
  8417 ;; Defined at:
  8418 ;;		line 240 in file "main.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;		None
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;		None
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		None
  8427 ;; Tracked objects:
  8428 ;;		On entry : 200/0
  8429 ;;		On exit  : 300/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8432 ;;      Params:         0       0       0       0
  8433 ;;      Locals:         0       0       0       0
  8434 ;;      Temps:          0       0       0       0
  8435 ;;      Totals:         0       0       0       0
  8436 ;;Total ram usage:        0 bytes
  8437 ;; Hardware stack levels used: 1
  8438 ;; This function calls:
  8439 ;;		Nothing
  8440 ;; This function is called by:
  8441 ;;		_sendCommand
  8442 ;;		_sendCommand_and_8bit_Data
  8443 ;;		_sendCommand_Hard
  8444 ;;		_writeCommand_Hard
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448  0000'                    _SPI_DC_LOW:	
  8449                           ;psect for function _SPI_DC_LOW
  8450                           
  8451                           
  8452                           ;main.c: 241:     RB2 = 0;
  8453                           
  8454                           ;incstack = 0
  8455                           ; Regs used in _SPI_DC_LOW: []
  8456  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8457  0001' 1106               	bcf	6,2	;volatile
  8458  0002' 0008               	return
  8459  0003'                    __end_of_SPI_DC_LOW:
  8460                           
  8461                           	psect	text40
  8462  0000'                    __ptext40:	
  8463 ;; *************** function _SPI_DC_HIGH *****************
  8464 ;; Defined at:
  8465 ;;		line 243 in file "main.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;		None
  8468 ;; Auto vars:     Size  Location     Type
  8469 ;;		None
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  1    wreg      void 
  8472 ;; Registers used:
  8473 ;;		None
  8474 ;; Tracked objects:
  8475 ;;		On entry : 0/0
  8476 ;;		On exit  : 300/0
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8479 ;;      Params:         0       0       0       0
  8480 ;;      Locals:         0       0       0       0
  8481 ;;      Temps:          0       0       0       0
  8482 ;;      Totals:         0       0       0       0
  8483 ;;Total ram usage:        0 bytes
  8484 ;; Hardware stack levels used: 1
  8485 ;; This function calls:
  8486 ;;		Nothing
  8487 ;; This function is called by:
  8488 ;;		_sendCommand
  8489 ;;		_sendCommand_and_8bit_Data
  8490 ;;		_sendCommand_Hard
  8491 ;;		_writeCommand_Hard
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495  0000'                    _SPI_DC_HIGH:	
  8496                           ;psect for function _SPI_DC_HIGH
  8497                           
  8498                           
  8499                           ;main.c: 244:     RB2 = 1;
  8500                           
  8501                           ;incstack = 0
  8502                           ; Regs used in _SPI_DC_HIGH: []
  8503  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8504  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8505  0002' 1506               	bsf	6,2	;volatile
  8506  0003' 0008               	return
  8507  0004'                    __end_of_SPI_DC_HIGH:
  8508                           
  8509                           	psect	text41
  8510  0000'                    __ptext41:	
  8511 ;; *************** function _SPI_WRITE16_Hard *****************
  8512 ;; Defined at:
  8513 ;;		line 625 in file "main.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  w               2    1[COMMON] unsigned int 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;  second_B        1    4[COMMON] unsigned char 
  8518 ;;  first_B         1    3[COMMON] unsigned char 
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  1    wreg      void 
  8521 ;; Registers used:
  8522 ;;		wreg, status,2, status,0, pclath, cstack
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 300/100
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8528 ;;      Params:         2       0       0       0
  8529 ;;      Locals:         2       0       0       0
  8530 ;;      Temps:          0       0       0       0
  8531 ;;      Totals:         4       0       0       0
  8532 ;;Total ram usage:        4 bytes
  8533 ;; Hardware stack levels used: 1
  8534 ;; Hardware stack levels required when called: 1
  8535 ;; This function calls:
  8536 ;;		_spi_send_recv
  8537 ;; This function is called by:
  8538 ;;		_setAllDisplayPixels_Hard
  8539 ;;		_drawFastHLine_Hard
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543  0000'                    _SPI_WRITE16_Hard:	
  8544                           ;psect for function _SPI_WRITE16_Hard
  8545                           
  8546                           
  8547                           ;main.c: 626:     uint8_t first_B = ((w >> 8) & 0xFF) ;
  8548                           
  8549                           ;incstack = 0
  8550                           ; Regs used in _SPI_WRITE16_Hard: [wreg+status,2+status,0+pclath+cstack]
  8551  0000' 0802'              	movf	SPI_WRITE16_Hard@w+1,w
  8552  0001' 0083'              	movwf	SPI_WRITE16_Hard@first_B
  8553                           
  8554                           ;main.c: 627:     uint8_t second_B = w & 0xFF;
  8555  0002' 0801'              	movf	SPI_WRITE16_Hard@w,w
  8556  0003' 0084'              	movwf	SPI_WRITE16_Hard@second_B
  8557                           
  8558                           ;main.c: 628:     spi_send_recv(first_B);
  8559  0004' 0803'              	movf	SPI_WRITE16_Hard@first_B,w
  8560  0005' 118A' 2000' 118A'  	fcall	_spi_send_recv
  8561                           
  8562                           ;main.c: 629:     spi_send_recv(second_B);
  8563  0008' 0804'              	movf	SPI_WRITE16_Hard@second_B,w
  8564  0009' 118A' 2000'        	fcall	_spi_send_recv
  8565  000B' 0008               	return
  8566  000C'                    __end_of_SPI_WRITE16_Hard:
  8567                           
  8568                           	psect	text42
  8569  0000'                    __ptext42:	
  8570 ;; *************** function _spi_send_recv *****************
  8571 ;; Defined at:
  8572 ;;		line 620 in file "main.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;  data            1    wreg     unsigned char 
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;  data            1    0[COMMON] unsigned char 
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  1    wreg      void 
  8579 ;; Registers used:
  8580 ;;		wreg
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 300/100
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8586 ;;      Params:         0       0       0       0
  8587 ;;      Locals:         1       0       0       0
  8588 ;;      Temps:          0       0       0       0
  8589 ;;      Totals:         1       0       0       0
  8590 ;;Total ram usage:        1 bytes
  8591 ;; Hardware stack levels used: 1
  8592 ;; This function calls:
  8593 ;;		Nothing
  8594 ;; This function is called by:
  8595 ;;		_sendCommand_Hard
  8596 ;;		_writeCommand_Hard
  8597 ;;		_SPI_WRITE16_Hard
  8598 ;;		_my_setAddrWindow_Hard
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602  0000'                    _spi_send_recv:	
  8603                           ;psect for function _spi_send_recv
  8604                           
  8605                           
  8606                           ;incstack = 0
  8607                           ; Regs used in _spi_send_recv: [wreg]
  8608                           ;spi_send_recv@data stored from wreg
  8609  0000' 0080'              	movwf	spi_send_recv@data
  8610                           
  8611                           ;main.c: 621:     SSPBUF = data;
  8612  0001' 0800'              	movf	spi_send_recv@data,w
  8613  0002' 1283               	bcf	3,5	;RP0=0, select bank0
  8614  0003' 1303               	bcf	3,6	;RP1=0, select bank0
  8615  0004' 0093               	movwf	19	;volatile
  8616  0005'                    l179:	
  8617                           ;main.c: 622:     while(SSPSTATbits.BF == 1);
  8618                           
  8619  0005' 1683               	bsf	3,5	;RP0=1, select bank1
  8620  0006' 1C14               	btfss	20,0	;volatile
  8621  0007' 0008               	return
  8622  0008' 2800'              	goto	l179
  8623  0009'                    __end_of_spi_send_recv:
  8624                           
  8625                           	psect	text43
  8626  0000'                    __ptext43:	
  8627 ;; *************** function _SPI_CS_LOW *****************
  8628 ;; Defined at:
  8629 ;;		line 233 in file "main.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;		None
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;		None
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      void 
  8636 ;; Registers used:
  8637 ;;		None
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/200
  8640 ;;		On exit  : 300/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8643 ;;      Params:         0       0       0       0
  8644 ;;      Locals:         0       0       0       0
  8645 ;;      Temps:          0       0       0       0
  8646 ;;      Totals:         0       0       0       0
  8647 ;;Total ram usage:        0 bytes
  8648 ;; Hardware stack levels used: 1
  8649 ;; This function calls:
  8650 ;;		Nothing
  8651 ;; This function is called by:
  8652 ;;		_sendCommand
  8653 ;;		_sendCommand_and_8bit_Data
  8654 ;;		_sendCommand_Hard
  8655 ;;		_setAllDisplayPixels_Hard
  8656 ;;		_drawFastHLine_Hard
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660  0000'                    _SPI_CS_LOW:	
  8661                           ;psect for function _SPI_CS_LOW
  8662                           
  8663                           
  8664                           ;main.c: 234:     RB0 = 0;
  8665                           
  8666                           ;incstack = 0
  8667                           ; Regs used in _SPI_CS_LOW: []
  8668  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8669  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8670  0002' 1006               	bcf	6,0	;volatile
  8671  0003' 0008               	return
  8672  0004'                    __end_of_SPI_CS_LOW:
  8673                           
  8674                           	psect	text44
  8675  0000'                    __ptext44:	
  8676 ;; *************** function _SPI_CS_HIGH *****************
  8677 ;; Defined at:
  8678 ;;		line 236 in file "main.c"
  8679 ;; Parameters:    Size  Location     Type
  8680 ;;		None
  8681 ;; Auto vars:     Size  Location     Type
  8682 ;;		None
  8683 ;; Return value:  Size  Location     Type
  8684 ;;                  1    wreg      void 
  8685 ;; Registers used:
  8686 ;;		None
  8687 ;; Tracked objects:
  8688 ;;		On entry : 0/0
  8689 ;;		On exit  : 300/0
  8690 ;;		Unchanged: 0/0
  8691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8692 ;;      Params:         0       0       0       0
  8693 ;;      Locals:         0       0       0       0
  8694 ;;      Temps:          0       0       0       0
  8695 ;;      Totals:         0       0       0       0
  8696 ;;Total ram usage:        0 bytes
  8697 ;; Hardware stack levels used: 1
  8698 ;; This function calls:
  8699 ;;		Nothing
  8700 ;; This function is called by:
  8701 ;;		_sendCommand
  8702 ;;		_sendCommand_and_8bit_Data
  8703 ;;		_sendCommand_Hard
  8704 ;;		_setAllDisplayPixels_Hard
  8705 ;;		_drawFastHLine_Hard
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709  0000'                    _SPI_CS_HIGH:	
  8710                           ;psect for function _SPI_CS_HIGH
  8711                           
  8712                           
  8713                           ;main.c: 237:     RB0 = 1;
  8714                           
  8715                           ;incstack = 0
  8716                           ; Regs used in _SPI_CS_HIGH: []
  8717  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8718  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8719  0002' 1406               	bsf	6,0	;volatile
  8720  0003' 0008               	return
  8721  0004'                    __end_of_SPI_CS_HIGH:
  8722  007E                     btemp	set	126	;btemp
  8723  007E                     wtemp0	set	126
  8724                           
  8725                           	psect	idloc
  8726                           
  8727                           ;Config register IDLOC0 @ 0x2000
  8728                           ;	unspecified, using default values
  8729  2000                     	org	8192
  8730  2000  3FFF               	dw	16383
  8731                           
  8732                           ;Config register IDLOC1 @ 0x2001
  8733                           ;	unspecified, using default values
  8734  2001                     	org	8193
  8735  2001  3FFF               	dw	16383
  8736                           
  8737                           ;Config register IDLOC2 @ 0x2002
  8738                           ;	unspecified, using default values
  8739  2002                     	org	8194
  8740  2002  3FFF               	dw	16383
  8741                           
  8742                           ;Config register IDLOC3 @ 0x2003
  8743                           ;	unspecified, using default values
  8744  2003                     	org	8195
  8745  2003  3FFF               	dw	16383
  8746                           
  8747                           	psect	config
  8748                           
  8749                           ;Config register CONFIG @ 0x2007
  8750                           ;	Oscillator Selection bits
  8751                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT/T1OSO pin, I/O f
      +                          unction on RA7/OSC1/CLKIN/T1OSI
  8752                           ;	Watchdog Timer Enable bit
  8753                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8754                           ;	Power Up Timer Enable bit
  8755                           ;	PWRTE = ON, PWRT enabled
  8756                           ;	RE3/MCLR pin function select bit
  8757                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  8758                           ;	Code Protection bit
  8759                           ;	CP = OFF, Program memory code protection is disabled
  8760                           ;	Data Code Protection bit
  8761                           ;	CPD = OFF, Data memory code protection is disabled
  8762                           ;	Brown-out Reset Selection bits
  8763                           ;	BOREN = ON, BOR enabled
  8764                           ;	Internal External Switchover bit
  8765                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8766                           ;	Fail-Safe Clock Monitor Enabled bit
  8767                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8768                           ;	In-Circuit Debugger Mode bit
  8769                           ;	DEBUG = 0x1, unprogrammed default
  8770  2007                     	org	8199
  8771  2007  3FE4               	dw	16356

Data Sizes:
    Strings     0
    Constant    76
    Data        10
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     34      63

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_drawFastHLine_Hard
    _updateANDset_ball_position->_my_floor
    _pow->___xxtofl
    _log->___xxtofl
    _exp->___xxtofl
    _floor->___xxtofl
    ___fleq->___xxtofl
    ___xxtofl->___fltol
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    _my_floor->___fltol
    _setDisplayFillingMode->_sendCommand_and_8bit_Data
    _sendCommand_and_8bit_Data->_spiWrite
    _setAllDisplayPixels_Hard->_my_setAddrWindow_Hard
    _sendCommand_Hard->_spi_send_recv
    _sendCommand->_spiWrite
    _drawFastHLine_Hard->_my_setAddrWindow_Hard
    _my_setAddrWindow_Hard->_writeCommand_Hard
    _writeCommand_Hard->_spi_send_recv
    _SPI_WRITE16_Hard->_spi_send_recv

Critical Paths under _main in BANK0

    _log->_eval_poly
    _exp->_eval_poly
    _ldexp->_eval_poly
    _floor->___fladd
    _frexp->___fleq
    ___fleq->___xxtofl
    _eval_poly->___fladd
    ___flmul->_frexp
    ___flsub->___fladd
    ___fladd->___flmul

Critical Paths under _main in BANK1

    _vector_length->_sqrt
    _sqrt->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly

Critical Paths under _main in BANK2

    _main->_updateANDset_ball_position
    _updateANDset_ball_position->_normalized
    _normalized->_vector_length

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   93853
                                             31 BANK2      3     3      0
                 _drawFastHLine_Hard
                  _init_Hardwear_SPI
                  _init_Softwear_SPI
                        _sendCommand
                   _sendCommand_Hard
           _setAllDisplayPixels_Hard
              _setDisplayFillingMode
         _updateANDset_ball_position
              _update_ball_direction
 ---------------------------------------------------------------------------------
 (1) _updateANDset_ball_position                           3     3      0   89492
                                             28 BANK2      3     3      0
                           _my_floor
                         _normalized
              _update_ball_direction
 ---------------------------------------------------------------------------------
 (1) _update_ball_direction                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _normalized                                          12     4      8   88048
                                             16 BANK2     12     4      8
                            ___fldiv
                      _vector_length
 ---------------------------------------------------------------------------------
 (3) _vector_length                                       16     8      8   85518
                                              0 BANK2     16     8      8
                            ___fladd
                            ___flmul
                                _pow
                               _sqrt
 ---------------------------------------------------------------------------------
 (4) _sqrt                                                29    25      4    1403
                                             51 BANK1     29    25      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (4) _pow                                                 21    13      8   75387
                                             30 BANK1     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (5) _log                                                  6     2      4   24584
                                             11 BANK1      6     2      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _exp                                                 11     7      4   40206
                                             19 BANK1     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (6) _ldexp                                                8     2      6    3995
                                             11 BANK1      8     2      6
                             ___fleq
                             ___flge
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (6) _floor                                               10     6      4   10151
                                             75 BANK0      4     0      4
                                              0 BANK1      6     6      0
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                7     2      5    2252
                                             22 BANK0      7     2      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8    1570
                                             10 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     836
                                             10 COMMON     4     0      4
                                              0 BANK0     10    10      0
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1886
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) _eval_poly                                           16     9      7    9212
                                             75 BANK0      5     5      0
                                              0 BANK1     11     4      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    4396
                                             29 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     980
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4267
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    4022
                                             55 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2223
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) _my_floor                                             6     2      4     942
                                             10 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___fltol
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     697
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (1) _setDisplayFillingMode                                4     4      0     315
                                              5 COMMON     4     4      0
          _sendCommand_and_8bit_Data
 ---------------------------------------------------------------------------------
 (2) _sendCommand_and_8bit_Data                            2     1      1     266
                                              3 COMMON     2     1      1
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _setAllDisplayPixels_Hard                             6     4      2    1597
                                             10 COMMON     2     0      2
                                              0 BANK0      4     4      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                   _SPI_WRITE16_Hard
              _my_setAddrWindow_Hard
 ---------------------------------------------------------------------------------
 (1) _sendCommand_Hard                                     1     1      0      44
                                              1 COMMON     1     1      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                      _spi_send_recv
 ---------------------------------------------------------------------------------
 (1) _sendCommand                                          1     1      0      92
                                              3 COMMON     1     1      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             3     3      0      70
                                              0 COMMON     3     3      0
                      _SPI_MOSI_HIGH
                       _SPI_MOSI_LOW
                       _SPI_SCK_HIGH
                        _SPI_SCK_LOW
 ---------------------------------------------------------------------------------
 (4) _SPI_SCK_LOW                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SPI_SCK_HIGH                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SPI_MOSI_LOW                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SPI_MOSI_HIGH                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Softwear_SPI                                    2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_Hardwear_SPI                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawFastHLine_Hard                                  11     7      4    2313
                                             10 COMMON     4     0      4
                                              0 BANK0      7     7      0
                        _SPI_CS_HIGH
                         _SPI_CS_LOW
                   _SPI_WRITE16_Hard
              _my_setAddrWindow_Hard
 ---------------------------------------------------------------------------------
 (2) _my_setAddrWindow_Hard                                8     0      8    1014
                                              2 COMMON     8     0      8
                      _spi_send_recv
                  _writeCommand_Hard
 ---------------------------------------------------------------------------------
 (3) _writeCommand_Hard                                    1     1      0      44
                                              1 COMMON     1     1      0
                        _SPI_DC_HIGH
                         _SPI_DC_LOW
                      _spi_send_recv
 ---------------------------------------------------------------------------------
 (3) _SPI_DC_LOW                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SPI_DC_HIGH                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_WRITE16_Hard                                     4     2      2     391
                                              1 COMMON     4     2      2
                      _spi_send_recv
 ---------------------------------------------------------------------------------
 (4) _spi_send_recv                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_CS_LOW                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SPI_CS_HIGH                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _drawFastHLine_Hard
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_WRITE16_Hard
       _spi_send_recv
     _my_setAddrWindow_Hard
       _spi_send_recv
       _writeCommand_Hard
         _SPI_DC_HIGH
         _SPI_DC_LOW
         _spi_send_recv
   _init_Hardwear_SPI
   _init_Softwear_SPI
   _sendCommand
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_DC_HIGH
     _SPI_DC_LOW
     _spiWrite
       _SPI_MOSI_HIGH
       _SPI_MOSI_LOW
       _SPI_SCK_HIGH
       _SPI_SCK_LOW
   _sendCommand_Hard
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_DC_HIGH
     _SPI_DC_LOW
     _spi_send_recv
   _setAllDisplayPixels_Hard
     _SPI_CS_HIGH
     _SPI_CS_LOW
     _SPI_WRITE16_Hard
     _my_setAddrWindow_Hard
   _setDisplayFillingMode
     _sendCommand_and_8bit_Data
       _SPI_CS_HIGH
       _SPI_CS_LOW
       _SPI_DC_HIGH
       _SPI_DC_LOW
       _spiWrite
   _updateANDset_ball_position
     _my_floor
       ___fltol
     _normalized
       ___fldiv
       _vector_length
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
               ___fltol (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
           ___xxtofl (ARG)
           _frexp (ARG)
         ___flmul
         _pow
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___fltol
           ___xxtofl
           _exp
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
             _eval_poly
               ___fladd
               ___flmul
             _floor
               ___fladd
               ___flge
               ___fltol
               ___xxtofl
               _frexp
             _ldexp
               ___fleq
               ___flge
               _eval_poly (ARG)
             _log (ARG)
               ___fladd
               ___fleq
               ___flge
               ___flmul
               ___xxtofl
               _eval_poly
               _frexp
           _log
         _sqrt
           ___fladd (ARG)
           ___flmul (ARG)
           _pow (ARG)
     _update_ball_direction
   _update_ball_direction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50     22      3F       7       78.8%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     50      50       5      100.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       3      100.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      ED      10        0.0%
ABS                  0      0      ED       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Feb 27 17:55:13 2023

                                  ___fldiv@aexp 000C                                    ___fldiv@bexp 000B  
                                             pc 0002                                    ___fldiv@sign 0004  
                                   _SSPSTATbits 0094                                  ?_spi_send_recv 0000  
                                            _dx 000C                                              _dy 0008  
                                            fsr 0004                             __Umul8_16@word_mpld 0006  
                        sendCommand@commandByte 0003                    drawFastHLine_Hard@in_HLine_y 000B  
                                           l104 0005                                             l121 0008  
                                           l107 000E                                             l123 000C  
                                           l179 0005                                             l269 0042  
                                           l542 001A                                             l703 01F4  
                                           l561 0049                                             l545 0080  
                                           l537 001A                                             l538 0034  
                                           l741 0199                                             l717 0048  
                                           l661 0048                                             l821 001F  
                                           l665 00BD                                             l682 0174  
                                           l834 0073                                             l739 018D  
                                           l667 009D                                             l835 007D  
                                           l827 005D                                             l852 0039  
                                           l695 01DC                                             l776 0012  
                                           l769 02BA                                             l795 00FA  
                                           _RB0 0030                                             _RB1 0031  
                                           _RB2 0032                                             _RB4 0034  
                                           _RC4 003C                                             _RC6 003E  
                                           _RC7 003F                     ??_sendCommand_and_8bit_Data 0004  
                                           _exp 0000                                             _log 0000  
                                           _pow 0000                                             fsr0 0004  
                                           indf 0000                       setDisplayFillingMode@hORv 0007  
                                  ___flmul@aexp 002B                                    ___flmul@bexp 002C  
                                  ___flmul@sign 002A                                    ___flmul@temp 0035  
                                  ___flmul@prod 0031                                    ___fltol@exp1 0009  
                                          l4003 0173                                            l3135 000B  
                                          l3231 0013                                            l4015 0195  
                                          l4031 0030                                            l4103 0026  
                                          l3225 000A                                            l3233 002C  
                                          l3401 000A                                            l3227 000E  
                                          l4035 003A                                            l4131 004D  
                                          l3421 005A                                            l4045 009D  
                                          l4125 0026                                            l4109 0053  
                                          l4221 0025                                            l3271 001A  
                                          l4055 009B                                            l4143 00A5  
                                          l4231 003A                                            l3265 0016  
                                          l3433 0007                                            l3505 003D  
                                          l3417 0034                                            l4065 0026  
                                          l4161 017D                                            l4137 0074  
                                          l4225 002D                                            l3193 000B  
                                          l3515 0052                                            l4091 008E  
                                          l4075 0052                                            l4243 006F  
                                          l3453 0035                                            l3437 0010  
                                          l3621 019C                                            l3509 0040  
                                          l4181 006B                                            l4261 00AA  
                                          l4237 005A                                            l3463 0058  
                                          l3455 0045                                            l3615 0195  
                                          l3607 0186                                            l3623 019E  
                                          l4087 0084                                            l4175 0044  
                                          l4271 0121                                            l3297 0024  
                                          l3633 01A9                                            l3553 00A6  
                                          l3545 0070                                            l3481 0017  
                                          l3705 0052                                            l3393 0046  
                                          l4193 00E7                                            l3299 0044  
                                          l3651 01EC                                            l3571 00CB  
                                          l3555 00A8                                            l3563 00B7  
                                          l4283 0194                                            l4267 00EA  
                                          l4355 0054                                            l3629 01A7  
                                          l3581 00EC                                            l3485 001A  
                                          l3813 002E                                            l4189 00D0  
                                          l4269 00AB                                            l4391 001B  
                                          l3655 01F0                                            l3487 0022  
                                          l3807 0017                                            l3913 003D  
                                          l3841 009A                                            l3817 0030  
                                          l3579 00EA                                            l3675 0017  
                                          l3827 0071                                            l3819 0042  
                                          l3933 0073                                            l3917 0040  
                                          l3589 00FC                                            l3765 0244  
                                          l3757 0210                                            l3693 003A  
                                          l3677 0019                                            l3829 0062  
                                          l3853 0024                                            l3927 0067  
                                          l3599 0166                                            l3783 028E  
                                          l3759 022D                                            l3695 003C  
                                          l3679 0021                                            l3953 00C2  
                                          l3961 009E                                            l3769 0246  
                                          l3697 0044                                            l3963 00EC  
                                          l3779 0278                                            ?_exp 0013  
                                          l3893 0019                                            l3789 02A7  
                                          ?_log 000B                                            l3959 00E7  
                                          l3985 0126                                            l3977 00F2  
                                          l3897 001C                                            l3979 010F  
                                          l3899 0024                                            l3989 0128  
                                          l3999 015A                                            ?_pow 001E  
                               ??_vector_length 000E                                            u4115 0025  
                                          u4301 0045                                            u4302 0046  
                                          u4303 004B                                            u4304 004C  
                                          u5025 00F0                                            u4321 006B  
                                          u4305 0051                                            u4322 006C  
                                          u4306 0052                                            u4323 0071  
                                          u4235 0042                                            u4324 0072  
                                          u4165 0031                                            u5125 01FC  
                                          u4325 0077                                            u4326 0078  
                                          u4175 0044                                            u4415 004E  
                                          u4255 0013                                            u5135 0214  
                                          u5055 0141                                            u4185 0033  
                                          u5225 0263                                            u6105 0103  
                                          u4355 0019                                            u5235 0281  
                                          u5155 021F                                            u5315 0055  
                                          u6115 0115                                            u4540 0090  
                                          u5245 0299                                            u4550 0091  
                                          u4535 0084                                            u5095 01C5  
                                          u5335 006A                                            u6135 012A  
                                          u6055 007A                                            u4385 0036  
                                          u6145 014F                                            u6217 000F  
                                          u5515 00A7                                            u6075 00A3  
                                          u6227 0028                                            u5525 00B0  
                                          u6085 00C5                                            u6237 003A  
                                          u5615 0101                                            u4735 0188  
                                          u5375 0085                                            u5295 0039  
                                          u6175 017E                                            u6247 0048  
                                          u5705 017E                                            u5545 00BB  
                                          u4681 0127                                            u4673 010E  
                                          u4665 00F0                                            u4585 00AC  
                                          u6257 005C                                            u4690 013B  
                                          u4682 0128                                            u6267 0018  
                                          u5555 00D0                                            u4835 01C6  
                                          u4691 013C                                            u4683 012D  
                                          u4692 0141                                            u4684 012E  
                                          u6277 0026                                            u5565 00DA  
                                          u4693 0142                                            u4685 0133  
                                          u5566 00DB                                            u4686 0134  
                                          u6287 002F                                            u5567 00E0  
                                          u5815 005B                                            u5568 00E1  
                                          u5569 00E6                                            u5595 00F6  
                                          u5685 0145                                            u5765 0004  
                                          u5695 0163                                            u5775 003C  
                                          u5880 008C                                            u5890 008D  
updateANDset_ball_position@change_in_x_position 001D                    ??_updateANDset_ball_position 001C  
                       ??_my_setAddrWindow_Hard 000A                                            _main 0000  
                                          _mode 0012                                            btemp 007E  
                                          _sqrt 0000                                            exp@x 0013  
                                          log@x 000B  updateANDset_ball_position@change_in_y_position 001E  
                                          pow@x 001E                                            pow@y 0022  
                                          start 0000*                                ___fldiv@new_exp 0005  
                    ??_setAllDisplayPixels_Hard 000C                                           ??_exp 000E  
                                         ??_log 000E                                           ??_pow 000E  
                                 ___fltol@sign1 0008                                 __end_of___fladd 01FD  
                               ??_SPI_MOSI_HIGH 0000                                           ?_main 0000  
                               __end_of___fldiv 019F                                 __end_of___flneg 0009  
                               __end_of___flmul 02C7                                 __end_of___flsub 0033  
                               __end_of___fltol 0067                                           ?_sqrt 0033  
                             SPI_WRITE16_Hard@w 0001                                           _floor 0000  
                                         _ldexp 0000                                           _frexp 0000  
                                         _errno 0010                                           pclath 000A  
                                   ?_SPI_DC_LOW 0000                                           pow@yi 002F  
                                   ?_SPI_CS_LOW 0000                                           sqrt@a 0033  
                                         sqrt@i 003C                                           sqrt@p 0041  
                                         status 0003                                           wtemp0 007E  
                     _sendCommand_and_8bit_Data 0000                                     exp@exponent 001B  
                                   ldexp@newexp 000F                                 __initialization 0000  
                                   log@exponent 000F                                 ??_spi_send_recv 0000  
                                  __end_of_main 0090                                    __end_of_sqrt 01B6  
                              _ball_x_direction 0009                                    ?_sendCommand 0000  
                                        ??_main 001F                                          ??_sqrt 0037  
                              _ball_y_direction 0008                       setAllDisplayPixels_Hard@x 0000  
                     setAllDisplayPixels_Hard@y 0002                                          ?_floor 004B  
                                        ?_ldexp 000B                                          ?_frexp 0016  
                                        _TRISB0 0430                                          _TRISB1 0431  
                                        _TRISB2 0432                                          _TRISB4 0434  
                                        _TRISC4 043C                                          _TRISC6 043E  
                                        _TRISC7 043F                                          _SSPBUF 0013  
                              __end_of___xxtofl 00A3                                _sendCommand_Hard 0000  
                       ??_update_ball_direction 0000                                          ___flge 0000  
                                        ___fleq 0000                                       ??___fladd 003F  
                                     ??___fldiv 0008                                       ??___flneg 0004  
                                     ??___flmul 0025                                       ??___flsub 000E  
                                     ??___fltol 0004                                _ball_x_positions 0003  
           sendCommand_and_8bit_Data@first_byte 0003                                          floor@i 0000  
                                        floor@x 004B                                    ?_SPI_DC_HIGH 0000  
                              __end_of_my_floor 0015                                _ball_y_positions 0000  
                     drawFastHLine_Hard@start_x 0006                                __end_of_spiWrite 0028  
                       ??_setDisplayFillingMode 0005                                    ?_SPI_CS_HIGH 0000  
                                  ?_SPI_SCK_LOW 0000              __end_of_updateANDset_ball_position 0053  
                    _updateANDset_ball_position 0000                                      ___flge@ff1 0000  
                                    ___flge@ff2 0004                                    ___xxtofl@arg 0006  
                              __end_ofexp@coeff 002E                                    ___xxtofl@exp 0005  
                                  ___xxtofl@val 000A                                      ___fleq@ff1 000A  
                                    ___fleq@ff2 000E                                __end_oflog@coeff 0052  
                       __end_of__initialization 0011                                      ___flneg@f1 0000  
                                  eval_poly@res 0007                                      ___fltol@f1 0000  
                             _init_Softwear_SPI 0000                                  __pcstackCOMMON 0000  
                                  __pidataBANK2 0000                              ?_init_Softwear_SPI 0000  
              __end_of_setAllDisplayPixels_Hard 0049                                   __end_of_floor 00AE  
                                 __end_of_ldexp 00A7                                   __end_of_frexp 0052  
                           ??_init_Softwear_SPI 0000                     setDisplayFillingMode@madctl 0008  
                                       ??_floor 000E                                         ??_ldexp 0011  
                                       ??_frexp 001B                                      __pbssBANK2 0000  
                     __end_of_init_Softwear_SPI 0035                   __end_of_my_setAddrWindow_Hard 001C  
                             __end_of__Umul8_16 0023                                      __pmaintext 0000  
                                       ?___flge 0000                     sendCommand_Hard@commandByte 0001  
                                       ?___fleq 000A                              _vector_length$1244 0008  
                            _vector_length$1245 000C                                       ?___xxtofl 000A  
                                    __stringtab 0000                                    ??_SPI_DC_LOW 0000  
                                  ??_SPI_CS_LOW 0000                           __end_of_vector_length 00D5  
                                     ?_my_floor 000A                                       ?_spiWrite 0000  
                       drawFastHLine_Hard@color 000C                                         ___fladd 0000  
                                       ___fldiv 0000                                         ___flneg 0000  
                                       ___flmul 0000                                         ___flsub 0000  
                                       ___fltol 0000                               __end_of_eval_poly 00A4  
             __end_of_sendCommand_and_8bit_Data 0015                                         __ptext1 0000  
                                       __ptext2 0000                                         __ptext3 0000  
                                       __ptext4 0000                                         __ptext5 0000  
                                       __ptext6 0000                                         __ptext7 0000  
                                       __ptext8 0000                                         __ptext9 0000  
          drawFastHLine_Hard@x_colum_horizontal 0004                              __end_of_SPI_DC_LOW 0003  
                      __end_of_sendCommand_Hard 0011                              __end_of_SPI_CS_LOW 0004  
                         __end_of_SPI_MOSI_HIGH 0004                                      ??___xxtofl 0000  
                 setAllDisplayPixels_Hard@color 000A                        SPI_WRITE16_Hard@second_B 0004  
                                       clrloop0 0001                       ?_setAllDisplayPixels_Hard 000A  
                          end_of_initialization 0011                                         exp@sign 001D  
                              _SPI_WRITE16_Hard 0000                               _writeCommand_Hard 0000  
                            ?_writeCommand_Hard 0000                                     normalized@x 0010  
                                   normalized@y 0014                                         pow@sign 002E  
                                    ??_my_floor 000E                                      ??_spiWrite 0000  
                 __end_of_update_ball_direction 0015                                      _normalized 0000  
                           ??_writeCommand_Hard 0001                                         sqrt@grs 0042  
                                       sqrt@exp 0046                           __end_of_spi_send_recv 0009  
                                 ?_SPI_SCK_HIGH 0000                                   ?_SPI_MOSI_LOW 0000  
                                   ___fladd@grs 004A                                   ___xxtofl@sign 0004  
                                   ___fldiv@grs 0007                                     ___fldiv@rem 0000  
                 __end_of_setDisplayFillingMode 0037                                     spiWrite@bit 0001  
                     __end_of_writeCommand_Hard 000B                     ?_updateANDset_ball_position 0000  
                                   ___flmul@grs 002D                    my_setAddrWindow_Hard@x_start 0002  
                  my_setAddrWindow_Hard@y_start 0004                                  ??_SPI_SCK_HIGH 0000  
                                __end_of___flge 0093                                  __end_of___fleq 0048  
                                ??_SPI_MOSI_LOW 0000                                      floor@expon 0004  
                           start_initialization 0000                                      eval_poly@d 0004  
                                    eval_poly@n 0005                                      eval_poly@x 0000  
                                    ldexp@value 000B                                     __end_of_exp 019A  
                                   __end_of_log 0106                                     __end_of_pow 0155  
                                    frexp@value 0016                                        ??___flge 0008  
                                      ??___fleq 0012                                 _ball_x_position 0007  
                                   ?_normalized 0010                                      init_fetch0 0000  
                                     __Umul8_16 0000                                     __pdataBANK2 0000  
                    __end_of_drawFastHLine_Hard 0047                                 _ball_y_position 0006  
                                     ___fladd@a 003B                                       ___fladd@b 0037  
                                     ___fldiv@a 0000                                       ___fldiv@b 0004  
                                     ___flmul@a 0021                                       ___flmul@b 001D  
                                     ___flsub@a 0000                                       ___flsub@b 0004  
                                     ___latbits 0001                                   __pcstackBANK0 0000  
                                 __pcstackBANK1 0000                                   __pcstackBANK2 0000  
                 my_setAddrWindow_Hard@x_finish 0006                   my_setAddrWindow_Hard@y_finish 0008  
                             spi_send_recv@data 0000                           _my_setAddrWindow_Hard 0000  
                                      ?___fladd 0037                                        ?___fldiv 0000  
                                      ?___flneg 0000                                        ?___flmul 001D  
                                      ?___flsub 0000                                        ?___fltol 0000  
                                    ?__Umul8_16 0000                                   ??_sendCommand 0003  
                      __end_of_SPI_WRITE16_Hard 000C                                       __pstrings 0000  
                             _init_Hardwear_SPI 0000                               ?_sendCommand_Hard 0000  
                                     _eval_poly 0000                              ?_init_Hardwear_SPI 0000  
                            ??_sendCommand_Hard 0001                         SPI_WRITE16_Hard@first_B 0003  
                          __end_of_SPI_SCK_HIGH 0002                             ??_init_Hardwear_SPI 0000  
                          __end_of_SPI_MOSI_LOW 0004                                       clear_ram0 0000  
                     __end_of_init_Hardwear_SPI 000B                                     __stringbase 0005  
                    ?_sendCommand_and_8bit_Data 0003                                   ??_SPI_DC_HIGH 0000  
                                    ?_eval_poly 0000                             __end_of_sendCommand 0011  
                                 ??_SPI_CS_HIGH 0000                                   ??_SPI_SCK_LOW 0000  
                          writeCommand_Hard@cmd 0001                                normalized@length 0018  
                                     frexp@eptr 001A                                   _normalized_dx 0004  
                                 _normalized_dy 0000                          ?_my_setAddrWindow_Hard 0002  
                          drawFastHLine_Hard@x2 0003                                     ??__Umul8_16 0002  
                      drawFastHLine_Hard@length 000A                           _update_ball_direction 0000  
                            __end_of__stringtab 0006                                        _exp$1248 0017  
                                      ___xxtofl 0000                        _setAllDisplayPixels_Hard 0000  
                                      __ptext10 0000                                        __ptext11 0000  
                                      __ptext20 0000                                        __ptext12 0000  
                                      __ptext21 0000                                        __ptext13 0000  
                                      __ptext30 0000                                        __ptext22 0000  
                                      __ptext14 0000                                        __ptext31 0000  
                                      __ptext23 0000                                        __ptext15 0000  
                                      __ptext40 0000                                        __ptext32 0000  
                                      __ptext24 0000                                        __ptext16 0000  
                                      __ptext41 0000                                        __ptext33 0000  
                                      __ptext25 0000                                        __ptext17 0000  
                                      __ptext42 0000                                        __ptext34 0000  
                                      __ptext26 0000                                        __ptext18 0000  
                                      __ptext43 0000                                        __ptext35 0000  
                                      __ptext27 0000                                        __ptext19 0000  
                                      __ptext44 0000                                        __ptext36 0000  
                                      __ptext28 0000                                        __ptext37 0000  
                                      __ptext29 0000                                        __ptext38 0000  
                                      __ptext39 0000                             __end_of_SPI_DC_HIGH 0004  
                                      _pow$1246 0026                                        _pow$1247 002A  
                         _setDisplayFillingMode 0000                             __end_of_SPI_CS_HIGH 0004  
                                 _vector_length 0000                             __end_of_SPI_SCK_LOW 0002  
                                     my_floor@f 000A                                       my_floor@n 0000  
                                      _my_floor 0000                                        _spiWrite 0000  
                                  ??_normalized 000E                                       spiWrite@b 0000  
                                   _sendCommand 0000                                        exp@coeff 0006  
                                      log@coeff 002E                                     ??_eval_poly 004B  
                                 _SPI_MOSI_HIGH 0000                                        init_ram0 0004  
                            _drawFastHLine_Hard 0000                                       sqrt@tfrac 003D  
                            __end_of_normalized 0053                                  ?_vector_length 0000  
                           ?_drawFastHLine_Hard 000A                                       stringcode 0000  
                        ?_update_ball_direction 0000                                    _SPI_SCK_HIGH 0000  
                                 _spi_send_recv 0000                                    _SPI_MOSI_LOW 0000  
                             ?_SPI_WRITE16_Hard 0001                            ??_drawFastHLine_Hard 0000  
                                      sqrt@frac 004C                                        sqrt@sign 003B  
                                      sqrt@root 0048                          __Umul8_16@multiplicand 0000  
                            ??_SPI_WRITE16_Hard 0003                                  ?_SPI_MOSI_HIGH 0000  
                                   _SPI_DC_HIGH 0000                                  vector_length@x 0000  
                                vector_length@y 0004                                        stringdir 0000  
                                      stringtab 0000            sendCommand_and_8bit_Data@commandByte 0004  
                                   _SPI_CS_HIGH 0000                                   ___fladd@signs 0047  
                                   _SPI_SCK_LOW 0000                          ?_setDisplayFillingMode 0000  
                                    _SPI_DC_LOW 0000                                      _SPI_CS_LOW 0000  
                                  ___fladd@aexp 0048                                    ___fladd@bexp 0049  
                          __Umul8_16@multiplier 0008                                      _SSPCONbits 0014  
                             __Umul8_16@product 0004  
